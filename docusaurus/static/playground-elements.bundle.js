var g=Object.defineProperty,e=(e,I,t)=>I in e?g(e,I,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[I]=t,I=(g,I,t)=>e(g,"symbol"!=typeof I?I+"":I,t);let t=class extends Event{constructor(g,e,I){super("context-request",{bubbles:!0,composed:!0}),this.context=g,this.callback=e,this.subscribe=I??!1}},C=class{constructor(g,e,I,t){if(this.subscribe=!1,this.provided=!1,this.value=void 0,this.t=(g,e)=>{this.unsubscribe&&(this.unsubscribe!==e&&(this.provided=!1,this.unsubscribe()),this.subscribe||this.unsubscribe()),this.value=g,this.host.requestUpdate(),this.provided&&!this.subscribe||(this.provided=!0,this.callback&&this.callback(g,e)),this.unsubscribe=e},this.host=g,void 0!==e.context){const g=e;this.context=g.context,this.callback=g.callback,this.subscribe=g.subscribe??!1}else this.context=e,this.callback=I,this.subscribe=t??!1;this.host.addController(this)}hostConnected(){this.dispatchRequest()}hostDisconnected(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=void 0)}dispatchRequest(){this.host.dispatchEvent(new t(this.context,this.t,this.subscribe))}},i=class{get value(){return this.o}set value(g){this.setValue(g)}setValue(g,e=!1){const I=e||!Object.is(g,this.o);this.o=g,I&&this.updateObservers()}constructor(g){this.subscriptions=new Map,this.updateObservers=()=>{for(const[g,{disposer:e}]of this.subscriptions)g(this.o,e)},void 0!==g&&(this.value=g)}addCallback(g,e,I){if(!I)return void g(this.value);this.subscriptions.has(g)||this.subscriptions.set(g,{disposer:()=>{this.subscriptions.delete(g)},consumerHost:e});const{disposer:t}=this.subscriptions.get(g);g(this.value,t)}clearCallbacks(){this.subscriptions.clear()}},l=class extends Event{constructor(g){super("context-provider",{bubbles:!0,composed:!0}),this.context=g}},n=class extends i{constructor(g,e,I){var C,i;super(void 0!==e.context?e.initialValue:I),this.onContextRequest=g=>{const e=g.composedPath()[0];g.context===this.context&&e!==this.host&&(g.stopPropagation(),this.addCallback(g.callback,e,g.subscribe))},this.onProviderRequest=g=>{const e=g.composedPath()[0];if(g.context!==this.context||e===this.host)return;const I=new Set;for(const[g,{consumerHost:e}]of this.subscriptions)I.has(g)||(I.add(g),e.dispatchEvent(new t(this.context,g,!0)));g.stopPropagation()},this.host=g,void 0!==e.context?this.context=e.context:this.context=e,this.attachListeners(),null==(i=(C=this.host).addController)||i.call(C,this)}attachListeners(){this.host.addEventListener("context-request",this.onContextRequest),this.host.addEventListener("context-provider",this.onProviderRequest)}hostConnected(){this.host.dispatchEvent(new l(this.context))}};function A({context:g}){return(e,I)=>{const t=new WeakMap;if("object"==typeof I)return I.addInitializer((function(){t.set(this,new n(this,{context:g}))})),{get(){return e.get.call(this)},set(g){var I;return null==(I=t.get(this))||I.setValue(g),e.set.call(this,g)},init(g){var e;return null==(e=t.get(this))||e.setValue(g),g}};{e.constructor.addInitializer((e=>{t.set(e,new n(e,{context:g}))}));const C=Object.getOwnPropertyDescriptor(e,I);let i;if(void 0===C){const g=new WeakMap;i={get(){return g.get(this)},set(e){t.get(this).setValue(e),g.set(this,e)},configurable:!0,enumerable:!0}}else{const g=C.set;i={...C,set(e){t.get(this).setValue(e),null==g||g.call(this,e)}}}return void Object.defineProperty(e,I,i)}}}function d({context:g,subscribe:e}){return(I,t)=>{"object"==typeof t?t.addInitializer((function(){new C(this,{context:g,callback:g=>{I.set.call(this,g)},subscribe:e})})):I.constructor.addInitializer((I=>{new C(I,{context:g,callback:g=>{I[t]=g},subscribe:e})}))}}const o=globalThis,s=o.ShadowRoot&&(void 0===o.ShadyCSS||o.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,a=Symbol(),V=new WeakMap;let c=class{constructor(g,e,I){if(this._$cssResult$=!0,I!==a)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=g,this.t=e}get styleSheet(){let g=this.o;const e=this.t;if(s&&void 0===g){const I=void 0!==e&&1===e.length;I&&(g=V.get(e)),void 0===g&&((this.o=g=new CSSStyleSheet).replaceSync(this.cssText),I&&V.set(e,g))}return g}toString(){return this.cssText}};const r=g=>new c("string"==typeof g?g:g+"",void 0,a),h=(g,...e)=>{const I=1===g.length?g[0]:e.reduce(((e,I,t)=>e+(g=>{if(!0===g._$cssResult$)return g.cssText;if("number"==typeof g)return g;throw Error("Value passed to 'css' function must be a 'css' function result: "+g+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(I)+g[t+1]),g[0]);return new c(I,g,a)},U=(g,e)=>{if(s)g.adoptedStyleSheets=e.map((g=>g instanceof CSSStyleSheet?g:g.styleSheet));else for(const I of e){const e=document.createElement("style"),t=o.litNonce;void 0!==t&&e.setAttribute("nonce",t),e.textContent=I.cssText,g.appendChild(e)}},Z=s?g=>g:g=>g instanceof CSSStyleSheet?(g=>{let e="";for(const I of g.cssRules)e+=I.cssText;return r(e)})(g):g,{is:R,defineProperty:F,getOwnPropertyDescriptor:m,getOwnPropertyNames:B,getOwnPropertySymbols:W,getPrototypeOf:N}=Object,p=globalThis,S=p.trustedTypes,b=S?S.emptyScript:"",u=p.reactiveElementPolyfillSupport,T=(g,e)=>g,G={toAttribute(g,e){switch(e){case Boolean:g=g?b:null;break;case Object:case Array:g=null==g?g:JSON.stringify(g)}return g},fromAttribute(g,e){let I=g;switch(e){case Boolean:I=null!==g;break;case Number:I=null===g?null:Number(g);break;case Object:case Array:try{I=JSON.parse(g)}catch{I=null}}return I}},k=(g,e)=>!R(g,e),Q={attribute:!0,type:String,converter:G,reflect:!1,hasChanged:k};Symbol.metadata??(Symbol.metadata=Symbol("metadata")),p.litPropertyMetadata??(p.litPropertyMetadata=new WeakMap);class M extends HTMLElement{static addInitializer(g){this._$Ei(),(this.l??(this.l=[])).push(g)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(g,e=Q){if(e.state&&(e.attribute=!1),this._$Ei(),this.elementProperties.set(g,e),!e.noAccessor){const I=Symbol(),t=this.getPropertyDescriptor(g,I,e);void 0!==t&&F(this.prototype,g,t)}}static getPropertyDescriptor(g,e,I){const{get:t,set:C}=m(this.prototype,g)??{get(){return this[e]},set(g){this[e]=g}};return{get(){return null==t?void 0:t.call(this)},set(e){const i=null==t?void 0:t.call(this);C.call(this,e),this.requestUpdate(g,i,I)},configurable:!0,enumerable:!0}}static getPropertyOptions(g){return this.elementProperties.get(g)??Q}static _$Ei(){if(this.hasOwnProperty(T("elementProperties")))return;const g=N(this);g.finalize(),void 0!==g.l&&(this.l=[...g.l]),this.elementProperties=new Map(g.elementProperties)}static finalize(){if(this.hasOwnProperty(T("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(T("properties"))){const g=this.properties,e=[...B(g),...W(g)];for(const I of e)this.createProperty(I,g[I])}const g=this[Symbol.metadata];if(null!==g){const e=litPropertyMetadata.get(g);if(void 0!==e)for(const[g,I]of e)this.elementProperties.set(g,I)}this._$Eh=new Map;for(const[g,e]of this.elementProperties){const I=this._$Eu(g,e);void 0!==I&&this._$Eh.set(I,g)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(g){const e=[];if(Array.isArray(g)){const I=new Set(g.flat(1/0).reverse());for(const g of I)e.unshift(Z(g))}else void 0!==g&&e.push(Z(g));return e}static _$Eu(g,e){const I=e.attribute;return!1===I?void 0:"string"==typeof I?I:"string"==typeof g?g.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){var g;this._$ES=new Promise((g=>this.enableUpdating=g)),this._$AL=new Map,this._$E_(),this.requestUpdate(),null==(g=this.constructor.l)||g.forEach((g=>g(this)))}addController(g){var e;(this._$EO??(this._$EO=new Set)).add(g),void 0!==this.renderRoot&&this.isConnected&&(null==(e=g.hostConnected)||e.call(g))}removeController(g){var e;null==(e=this._$EO)||e.delete(g)}_$E_(){const g=new Map,e=this.constructor.elementProperties;for(const I of e.keys())this.hasOwnProperty(I)&&(g.set(I,this[I]),delete this[I]);g.size>0&&(this._$Ep=g)}createRenderRoot(){const g=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return U(g,this.constructor.elementStyles),g}connectedCallback(){var g;this.renderRoot??(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null==(g=this._$EO)||g.forEach((g=>{var e;return null==(e=g.hostConnected)?void 0:e.call(g)}))}enableUpdating(g){}disconnectedCallback(){var g;null==(g=this._$EO)||g.forEach((g=>{var e;return null==(e=g.hostDisconnected)?void 0:e.call(g)}))}attributeChangedCallback(g,e,I){this._$AK(g,I)}_$EC(g,e){var I;const t=this.constructor.elementProperties.get(g),C=this.constructor._$Eu(g,t);if(void 0!==C&&!0===t.reflect){const i=(void 0!==(null==(I=t.converter)?void 0:I.toAttribute)?t.converter:G).toAttribute(e,t.type);this._$Em=g,null==i?this.removeAttribute(C):this.setAttribute(C,i),this._$Em=null}}_$AK(g,e){var I;const t=this.constructor,C=t._$Eh.get(g);if(void 0!==C&&this._$Em!==C){const g=t.getPropertyOptions(C),i="function"==typeof g.converter?{fromAttribute:g.converter}:void 0!==(null==(I=g.converter)?void 0:I.fromAttribute)?g.converter:G;this._$Em=C,this[C]=i.fromAttribute(e,g.type),this._$Em=null}}requestUpdate(g,e,I){if(void 0!==g){if(I??(I=this.constructor.getPropertyOptions(g)),!(I.hasChanged??k)(this[g],e))return;this.P(g,e,I)}!1===this.isUpdatePending&&(this._$ES=this._$ET())}P(g,e,I){this._$AL.has(g)||this._$AL.set(g,e),!0===I.reflect&&this._$Em!==g&&(this._$Ej??(this._$Ej=new Set)).add(g)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(g){Promise.reject(g)}const g=this.scheduleUpdate();return null!=g&&await g,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var g;if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??(this.renderRoot=this.createRenderRoot()),this._$Ep){for(const[g,e]of this._$Ep)this[g]=e;this._$Ep=void 0}const g=this.constructor.elementProperties;if(g.size>0)for(const[e,I]of g)!0!==I.wrapped||this._$AL.has(e)||void 0===this[e]||this.P(e,this[e],I)}let e=!1;const I=this._$AL;try{e=this.shouldUpdate(I),e?(this.willUpdate(I),null==(g=this._$EO)||g.forEach((g=>{var e;return null==(e=g.hostUpdate)?void 0:e.call(g)})),this.update(I)):this._$EU()}catch(g){throw e=!1,this._$EU(),g}e&&this._$AE(I)}willUpdate(g){}_$AE(g){var e;null==(e=this._$EO)||e.forEach((g=>{var e;return null==(e=g.hostUpdated)?void 0:e.call(g)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(g)),this.updated(g)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(g){return!0}update(g){this._$Ej&&(this._$Ej=this._$Ej.forEach((g=>this._$EC(g,this[g])))),this._$EU()}updated(g){}firstUpdated(g){}}M.elementStyles=[],M.shadowRootOptions={mode:"open"},M[T("elementProperties")]=new Map,M[T("finalized")]=new Map,null==u||u({ReactiveElement:M}),(p.reactiveElementVersions??(p.reactiveElementVersions=[])).push("2.0.4");const Y=globalThis,E=Y.trustedTypes,y=E?E.createPolicy("lit-html",{createHTML:g=>g}):void 0,J="$lit$",H=`lit$${Math.random().toFixed(9).slice(2)}$`,w="?"+H,X=`<${w}>`,K=document,z=()=>K.createComment(""),D=g=>null===g||"object"!=typeof g&&"function"!=typeof g,v=Array.isArray,x=g=>v(g)||"function"==typeof(null==g?void 0:g[Symbol.iterator]),O="[ \t\n\f\r]",f=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,j=/-->/g,L=/>/g,P=RegExp(`>|${O}(?:([^\\s"'>=/]+)(${O}*=${O}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`,"g"),_=/'/g,q=/"/g,$=/^(?:script|style|textarea|title)$/i,gg=g=>(e,...I)=>({_$litType$:g,strings:e,values:I}),eg=gg(1),Ig=Symbol.for("lit-noChange"),tg=Symbol.for("lit-nothing"),Cg=new WeakMap,ig=K.createTreeWalker(K,129);function lg(g,e){if(!v(g)||!g.hasOwnProperty("raw"))throw Error("invalid template strings array");return void 0!==y?y.createHTML(e):e}const ng=(g,e)=>{const I=g.length-1,t=[];let C,i=2===e?"<svg>":3===e?"<math>":"",l=f;for(let e=0;e<I;e++){const I=g[e];let n,A,d=-1,o=0;for(;o<I.length&&(l.lastIndex=o,A=l.exec(I),null!==A);)o=l.lastIndex,l===f?"!--"===A[1]?l=j:void 0!==A[1]?l=L:void 0!==A[2]?($.test(A[2])&&(C=RegExp("</"+A[2],"g")),l=P):void 0!==A[3]&&(l=P):l===P?">"===A[0]?(l=C??f,d=-1):void 0===A[1]?d=-2:(d=l.lastIndex-A[2].length,n=A[1],l=void 0===A[3]?P:'"'===A[3]?q:_):l===q||l===_?l=P:l===j||l===L?l=f:(l=P,C=void 0);const s=l===P&&g[e+1].startsWith("/>")?" ":"";i+=l===f?I+X:d>=0?(t.push(n),I.slice(0,d)+J+I.slice(d)+H+s):I+H+(-2===d?e:s)}return[lg(g,i+(g[I]||"<?>")+(2===e?"</svg>":3===e?"</math>":"")),t]};class Ag{constructor({strings:g,_$litType$:e},I){let t;this.parts=[];let C=0,i=0;const l=g.length-1,n=this.parts,[A,d]=ng(g,e);if(this.el=Ag.createElement(A,I),ig.currentNode=this.el.content,2===e||3===e){const g=this.el.content.firstChild;g.replaceWith(...g.childNodes)}for(;null!==(t=ig.nextNode())&&n.length<l;){if(1===t.nodeType){if(t.hasAttributes())for(const g of t.getAttributeNames())if(g.endsWith(J)){const e=d[i++],I=t.getAttribute(g).split(H),l=/([.?@])?(.*)/.exec(e);n.push({type:1,index:C,name:l[2],strings:I,ctor:"."===l[1]?Vg:"?"===l[1]?cg:"@"===l[1]?rg:ag}),t.removeAttribute(g)}else g.startsWith(H)&&(n.push({type:6,index:C}),t.removeAttribute(g));if($.test(t.tagName)){const g=t.textContent.split(H),e=g.length-1;if(e>0){t.textContent=E?E.emptyScript:"";for(let I=0;I<e;I++)t.append(g[I],z()),ig.nextNode(),n.push({type:2,index:++C});t.append(g[e],z())}}}else if(8===t.nodeType)if(t.data===w)n.push({type:2,index:C});else{let g=-1;for(;-1!==(g=t.data.indexOf(H,g+1));)n.push({type:7,index:C}),g+=H.length-1}C++}}static createElement(g,e){const I=K.createElement("template");return I.innerHTML=g,I}}function dg(g,e,I=g,t){var C,i;if(e===Ig)return e;let l=void 0!==t?null==(C=I.o)?void 0:C[t]:I.l;const n=D(e)?void 0:e._$litDirective$;return(null==l?void 0:l.constructor)!==n&&(null==(i=null==l?void 0:l._$AO)||i.call(l,!1),void 0===n?l=void 0:(l=new n(g),l._$AT(g,I,t)),void 0!==t?(I.o??(I.o=[]))[t]=l:I.l=l),void 0!==l&&(e=dg(g,l._$AS(g,e.values),l,t)),e}class og{constructor(g,e){this._$AV=[],this._$AN=void 0,this._$AD=g,this._$AM=e}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(g){const{el:{content:e},parts:I}=this._$AD,t=((null==g?void 0:g.creationScope)??K).importNode(e,!0);ig.currentNode=t;let C=ig.nextNode(),i=0,l=0,n=I[0];for(;void 0!==n;){if(i===n.index){let e;2===n.type?e=new sg(C,C.nextSibling,this,g):1===n.type?e=new n.ctor(C,n.name,n.strings,this,g):6===n.type&&(e=new hg(C,this,g)),this._$AV.push(e),n=I[++l]}i!==(null==n?void 0:n.index)&&(C=ig.nextNode(),i++)}return ig.currentNode=K,t}p(g){let e=0;for(const I of this._$AV)void 0!==I&&(void 0!==I.strings?(I._$AI(g,I,e),e+=I.strings.length-2):I._$AI(g[e])),e++}}let sg=class g{get _$AU(){var g;return(null==(g=this._$AM)?void 0:g._$AU)??this.v}constructor(g,e,I,t){this.type=2,this._$AH=tg,this._$AN=void 0,this._$AA=g,this._$AB=e,this._$AM=I,this.options=t,this.v=(null==t?void 0:t.isConnected)??!0}get parentNode(){let g=this._$AA.parentNode;const e=this._$AM;return void 0!==e&&11===(null==g?void 0:g.nodeType)&&(g=e.parentNode),g}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(g,e=this){g=dg(this,g,e),D(g)?g===tg||null==g||""===g?(this._$AH!==tg&&this._$AR(),this._$AH=tg):g!==this._$AH&&g!==Ig&&this._(g):void 0!==g._$litType$?this.$(g):void 0!==g.nodeType?this.T(g):x(g)?this.k(g):this._(g)}O(g){return this._$AA.parentNode.insertBefore(g,this._$AB)}T(g){this._$AH!==g&&(this._$AR(),this._$AH=this.O(g))}_(g){this._$AH!==tg&&D(this._$AH)?this._$AA.nextSibling.data=g:this.T(K.createTextNode(g)),this._$AH=g}$(g){var e;const{values:I,_$litType$:t}=g,C="number"==typeof t?this._$AC(g):(void 0===t.el&&(t.el=Ag.createElement(lg(t.h,t.h[0]),this.options)),t);if((null==(e=this._$AH)?void 0:e._$AD)===C)this._$AH.p(I);else{const g=new og(C,this),e=g.u(this.options);g.p(I),this.T(e),this._$AH=g}}_$AC(g){let e=Cg.get(g.strings);return void 0===e&&Cg.set(g.strings,e=new Ag(g)),e}k(e){v(this._$AH)||(this._$AH=[],this._$AR());const I=this._$AH;let t,C=0;for(const i of e)C===I.length?I.push(t=new g(this.O(z()),this.O(z()),this,this.options)):t=I[C],t._$AI(i),C++;C<I.length&&(this._$AR(t&&t._$AB.nextSibling,C),I.length=C)}_$AR(g=this._$AA.nextSibling,e){var I;for(null==(I=this._$AP)||I.call(this,!1,!0,e);g&&g!==this._$AB;){const e=g.nextSibling;g.remove(),g=e}}setConnected(g){var e;void 0===this._$AM&&(this.v=g,null==(e=this._$AP)||e.call(this,g))}};class ag{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(g,e,I,t,C){this.type=1,this._$AH=tg,this._$AN=void 0,this.element=g,this.name=e,this._$AM=t,this.options=C,I.length>2||""!==I[0]||""!==I[1]?(this._$AH=Array(I.length-1).fill(new String),this.strings=I):this._$AH=tg}_$AI(g,e=this,I,t){const C=this.strings;let i=!1;if(void 0===C)g=dg(this,g,e,0),i=!D(g)||g!==this._$AH&&g!==Ig,i&&(this._$AH=g);else{const t=g;let l,n;for(g=C[0],l=0;l<C.length-1;l++)n=dg(this,t[I+l],e,l),n===Ig&&(n=this._$AH[l]),i||(i=!D(n)||n!==this._$AH[l]),n===tg?g=tg:g!==tg&&(g+=(n??"")+C[l+1]),this._$AH[l]=n}i&&!t&&this.j(g)}j(g){g===tg?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,g??"")}}class Vg extends ag{constructor(){super(...arguments),this.type=3}j(g){this.element[this.name]=g===tg?void 0:g}}let cg=class extends ag{constructor(){super(...arguments),this.type=4}j(g){this.element.toggleAttribute(this.name,!!g&&g!==tg)}};class rg extends ag{constructor(g,e,I,t,C){super(g,e,I,t,C),this.type=5}_$AI(g,e=this){if((g=dg(this,g,e,0)??tg)===Ig)return;const I=this._$AH,t=g===tg&&I!==tg||g.capture!==I.capture||g.once!==I.once||g.passive!==I.passive,C=g!==tg&&(I===tg||t);t&&this.element.removeEventListener(this.name,this,I),C&&this.element.addEventListener(this.name,this,g),this._$AH=g}handleEvent(g){var e;"function"==typeof this._$AH?this._$AH.call((null==(e=this.options)?void 0:e.host)??this.element,g):this._$AH.handleEvent(g)}}class hg{constructor(g,e,I){this.element=g,this.type=6,this._$AN=void 0,this._$AM=e,this.options=I}get _$AU(){return this._$AM._$AU}_$AI(g){dg(this,g)}}const Ug=Y.litHtmlPolyfillSupport;null==Ug||Ug(Ag,sg),(Y.litHtmlVersions??(Y.litHtmlVersions=[])).push("3.2.0");const Zg=(g,e,I)=>{const t=(null==I?void 0:I.renderBefore)??e;let C=t._$litPart$;if(void 0===C){const g=(null==I?void 0:I.renderBefore)??null;t._$litPart$=C=new sg(e.insertBefore(z(),g),g,void 0,I??{})}return C._$AI(g),C};class Rg extends M{constructor(){super(...arguments),this.renderOptions={host:this},this.o=void 0}createRenderRoot(){var g;const e=super.createRenderRoot();return(g=this.renderOptions).renderBefore??(g.renderBefore=e.firstChild),e}update(g){const e=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(g),this.o=Zg(e,this.renderRoot,this.renderOptions)}connectedCallback(){var g;super.connectedCallback(),null==(g=this.o)||g.setConnected(!0)}disconnectedCallback(){var g;super.disconnectedCallback(),null==(g=this.o)||g.setConnected(!1)}render(){return Ig}}var Fg;Rg._$litElement$=!0,Rg.finalized=!0,null==(Fg=globalThis.litElementHydrateSupport)||Fg.call(globalThis,{LitElement:Rg});const mg=globalThis.litElementPolyfillSupport;null==mg||mg({LitElement:Rg}),(globalThis.litElementVersions??(globalThis.litElementVersions=[])).push("4.1.0");const Bg=g=>(e,I)=>{void 0!==I?I.addInitializer((()=>{customElements.define(g,e)})):customElements.define(g,e)},Wg={attribute:!0,type:String,converter:G,reflect:!1,hasChanged:k},Ng=(g=Wg,e,I)=>{const{kind:t,metadata:C}=I;let i=globalThis.litPropertyMetadata.get(C);if(void 0===i&&globalThis.litPropertyMetadata.set(C,i=new Map),i.set(I.name,g),"accessor"===t){const{name:t}=I;return{set(I){const C=e.get.call(this);e.set.call(this,I),this.requestUpdate(t,C,g)},init(e){return void 0!==e&&this.P(t,void 0,g),e}}}if("setter"===t){const{name:t}=I;return function(I){const C=this[t];e.call(this,I),this.requestUpdate(t,C,g)}}throw Error("Unsupported decorator location: "+t)};function pg(g){return(e,I)=>"object"==typeof I?Ng(g,e,I):((g,e,I)=>{const t=e.hasOwnProperty(I);return e.constructor.createProperty(I,t?{...g,wrapped:!0}:g),t?Object.getOwnPropertyDescriptor(e,I):void 0})(g,e,I)}function Sg(g){return pg({...g,state:!0,attribute:!1})}const bg=(g,e,I)=>(I.configurable=!0,I.enumerable=!0,Reflect.decorate&&"object"!=typeof e&&Object.defineProperty(g,e,I),I);function ug(g,e){return(e,I,t)=>bg(e,I,{get(){return(null==(e=this.renderRoot)?void 0:e.querySelector(g))??null;var e}})}function Tg(g){return g&&g.__esModule&&Object.prototype.hasOwnProperty.call(g,"default")?g.default:g}var Gg,kg,Qg={exports:{}},Mg=Qg.exports={};function Yg(){throw new Error("setTimeout has not been defined")}function Eg(){throw new Error("clearTimeout has not been defined")}function yg(g){if(Gg===setTimeout)return setTimeout(g,0);if((Gg===Yg||!Gg)&&setTimeout)return Gg=setTimeout,setTimeout(g,0);try{return Gg(g,0)}catch{try{return Gg.call(null,g,0)}catch{return Gg.call(this,g,0)}}}function Jg(g){if(kg===clearTimeout)return clearTimeout(g);if((kg===Eg||!kg)&&clearTimeout)return kg=clearTimeout,clearTimeout(g);try{return kg(g)}catch{try{return kg.call(null,g)}catch{return kg.call(this,g)}}}!function(){try{Gg="function"==typeof setTimeout?setTimeout:Yg}catch{Gg=Yg}try{kg="function"==typeof clearTimeout?clearTimeout:Eg}catch{kg=Eg}}();var Hg,wg=[],Xg=!1,Kg=-1;function zg(){!Xg||!Hg||(Xg=!1,Hg.length?wg=Hg.concat(wg):Kg=-1,wg.length&&Dg())}function Dg(){if(!Xg){var g=yg(zg);Xg=!0;for(var e=wg.length;e;){for(Hg=wg,wg=[];++Kg<e;)Hg&&Hg[Kg].run();Kg=-1,e=wg.length}Hg=null,Xg=!1,Jg(g)}}function vg(g,e){this.fun=g,this.array=e}function xg(){}Mg.nextTick=function(g){var e=new Array(arguments.length-1);if(arguments.length>1)for(var I=1;I<arguments.length;I++)e[I-1]=arguments[I];wg.push(new vg(g,e)),1===wg.length&&!Xg&&yg(Dg)},vg.prototype.run=function(){this.fun.apply(null,this.array)},Mg.title="browser",Mg.browser=!0,Mg.env={},Mg.argv=[],Mg.version="",Mg.versions={},Mg.on=xg,Mg.addListener=xg,Mg.once=xg,Mg.off=xg,Mg.removeListener=xg,Mg.removeAllListeners=xg,Mg.emit=xg,Mg.prependListener=xg,Mg.prependOnceListener=xg,Mg.listeners=function(g){return[]},Mg.binding=function(g){throw new Error("process.binding is not supported")},Mg.cwd=function(){return"/"},Mg.chdir=function(g){throw new Error("process.chdir is not supported")},Mg.umask=function(){return 0};var Og=Qg.exports;const fg=Tg(Og),jg=globalThis||self;var Lg=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Pg(g){if(g.__esModule)return g;var e=g.default;if("function"==typeof e){var I=function g(){return this instanceof g?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};I.prototype=e.prototype}else I={};return Object.defineProperty(I,"__esModule",{value:!0}),Object.keys(g).forEach((function(e){var t=Object.getOwnPropertyDescriptor(g,e);Object.defineProperty(I,e,t.get?t:{enumerable:!0,get:function(){return g[e]}})})),I}function _g(){return _g=Object.assign?Object.assign.bind():function(g){for(var e=1;e<arguments.length;e++){var I=arguments[e];for(var t in I)Object.prototype.hasOwnProperty.call(I,t)&&(g[t]=I[t])}return g},_g.apply(this,arguments)}var qg=Uint8Array,$g=Uint16Array,ge=Int32Array,ee=new qg([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ie=new qg([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),te=new qg([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ce=function(g,e){for(var I=new $g(31),t=0;t<31;++t)I[t]=e+=1<<g[t-1];var C=new ge(I[30]);for(t=1;t<30;++t)for(var i=I[t];i<I[t+1];++i)C[i]=i-I[t]<<5|t;return{b:I,r:C}},ie=Ce(ee,2),le=ie.b,ne=ie.r;le[28]=258,ne[258]=28;for(var Ae=Ce(Ie,0),de=Ae.b,oe=Ae.r,se=new $g(32768),ae=0;ae<32768;++ae){var Ve=(43690&ae)>>1|(21845&ae)<<1;Ve=(61680&(Ve=(52428&Ve)>>2|(13107&Ve)<<2))>>4|(3855&Ve)<<4,se[ae]=((65280&Ve)>>8|(255&Ve)<<8)>>1}var ce=function(g,e,I){for(var t=g.length,C=0,i=new $g(e);C<t;++C)g[C]&&++i[g[C]-1];var l,n=new $g(e);for(C=1;C<e;++C)n[C]=n[C-1]+i[C-1]<<1;if(I){l=new $g(1<<e);var A=15-e;for(C=0;C<t;++C)if(g[C])for(var d=C<<4|g[C],o=e-g[C],s=n[g[C]-1]++<<o,a=s|(1<<o)-1;s<=a;++s)l[se[s]>>A]=d}else for(l=new $g(t),C=0;C<t;++C)g[C]&&(l[C]=se[n[g[C]-1]++]>>15-g[C]);return l},re=new qg(288);for(ae=0;ae<144;++ae)re[ae]=8;for(ae=144;ae<256;++ae)re[ae]=9;for(ae=256;ae<280;++ae)re[ae]=7;for(ae=280;ae<288;++ae)re[ae]=8;var he=new qg(32);for(ae=0;ae<32;++ae)he[ae]=5;var Ue=ce(re,9,0),Ze=ce(re,9,1),Re=ce(he,5,0),Fe=ce(he,5,1),me=function(g){for(var e=g[0],I=1;I<g.length;++I)g[I]>e&&(e=g[I]);return e},Be=function(g,e,I){var t=e/8|0;return(g[t]|g[t+1]<<8)>>(7&e)&I},We=function(g,e){var I=e/8|0;return(g[I]|g[I+1]<<8|g[I+2]<<16)>>(7&e)},Ne=function(g){return(g+7)/8|0},pe=function(g,e,I){return(null==e||e<0)&&(e=0),(null==I||I>g.length)&&(I=g.length),new qg(g.subarray(e,I))},Se=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],be=function(g,e,I){var t=new Error(e||Se[g]);if(t.code=g,Error.captureStackTrace&&Error.captureStackTrace(t,be),!I)throw t;return t},ue=function(g,e,I,t){var C=g.length;if(!C||e.f&&!e.l)return I||new qg(0);var i=!I,l=i||2!=e.i,n=e.i;i&&(I=new qg(3*C));var A=function(g){var e=I.length;if(g>e){var t=new qg(Math.max(2*e,g));t.set(I),I=t}},d=e.f||0,o=e.p||0,s=e.b||0,a=e.l,V=e.d,c=e.m,r=e.n,h=8*C;do{if(!a){d=Be(g,o,1);var U=Be(g,o+1,3);if(o+=3,!U){var Z=g[(T=Ne(o)+4)-4]|g[T-3]<<8,R=T+Z;if(R>C){n&&be(0);break}l&&A(s+Z),I.set(g.subarray(T,R),s),e.b=s+=Z,e.p=o=8*R,e.f=d;continue}if(1==U)a=Ze,V=Fe,c=9,r=5;else if(2==U){var F=Be(g,o,31)+257,m=Be(g,o+10,15)+4,B=F+Be(g,o+5,31)+1;o+=14;for(var W=new qg(B),N=new qg(19),p=0;p<m;++p)N[te[p]]=Be(g,o+3*p,7);o+=3*m;var S=me(N),b=(1<<S)-1,u=ce(N,S,1);for(p=0;p<B;){var T,G=u[Be(g,o,b)];if(o+=15&G,(T=G>>4)<16)W[p++]=T;else{var k=0,Q=0;for(16==T?(Q=3+Be(g,o,3),o+=2,k=W[p-1]):17==T?(Q=3+Be(g,o,7),o+=3):18==T&&(Q=11+Be(g,o,127),o+=7);Q--;)W[p++]=k}}var M=W.subarray(0,F),Y=W.subarray(F);c=me(M),r=me(Y),a=ce(M,c,1),V=ce(Y,r,1)}else be(1);if(o>h){n&&be(0);break}}l&&A(s+131072);for(var E=(1<<c)-1,y=(1<<r)-1,J=o;;J=o){var H=(k=a[We(g,o)&E])>>4;if((o+=15&k)>h){n&&be(0);break}if(k||be(2),H<256)I[s++]=H;else{if(256==H){J=o,a=null;break}var w=H-254;if(H>264){var X=ee[p=H-257];w=Be(g,o,(1<<X)-1)+le[p],o+=X}var K=V[We(g,o)&y],z=K>>4;if(K||be(3),o+=15&K,Y=de[z],z>3&&(X=Ie[z],Y+=We(g,o)&(1<<X)-1,o+=X),o>h){n&&be(0);break}l&&A(s+131072);var D=s+w;if(s<Y){var v=0-Y,x=Math.min(Y,D);for(v+s<0&&be(3);s<x;++s)I[s]=t[v+s]}for(;s<D;++s)I[s]=I[s-Y]}}e.l=a,e.p=J,e.b=s,e.f=d,a&&(d=1,e.m=c,e.d=V,e.n=r)}while(!d);return s!=I.length&&i?pe(I,0,s):I.subarray(0,s)},Te=function(g,e,I){I<<=7&e;var t=e/8|0;g[t]|=I,g[t+1]|=I>>8},Ge=function(g,e,I){I<<=7&e;var t=e/8|0;g[t]|=I,g[t+1]|=I>>8,g[t+2]|=I>>16},ke=function(g,e){for(var I=[],t=0;t<g.length;++t)g[t]&&I.push({s:t,f:g[t]});var C=I.length,i=I.slice();if(!C)return{t:He,l:0};if(1==C){var l=new qg(I[0].s+1);return l[I[0].s]=1,{t:l,l:1}}I.sort((function(g,e){return g.f-e.f})),I.push({s:-1,f:25001});var n=I[0],A=I[1],d=0,o=1,s=2;for(I[0]={s:-1,f:n.f+A.f,l:n,r:A};o!=C-1;)n=I[I[d].f<I[s].f?d++:s++],A=I[d!=o&&I[d].f<I[s].f?d++:s++],I[o++]={s:-1,f:n.f+A.f,l:n,r:A};var a=i[0].s;for(t=1;t<C;++t)i[t].s>a&&(a=i[t].s);var V=new $g(a+1),c=Qe(I[o-1],V,0);if(c>e){t=0;var r=0,h=c-e,U=1<<h;for(i.sort((function(g,e){return V[e.s]-V[g.s]||g.f-e.f}));t<C;++t){var Z=i[t].s;if(!(V[Z]>e))break;r+=U-(1<<c-V[Z]),V[Z]=e}for(r>>=h;r>0;){var R=i[t].s;V[R]<e?r-=1<<e-V[R]++-1:++t}for(;t>=0&&r;--t){var F=i[t].s;V[F]==e&&(--V[F],++r)}c=e}return{t:new qg(V),l:c}},Qe=function(g,e,I){return-1==g.s?Math.max(Qe(g.l,e,I+1),Qe(g.r,e,I+1)):e[g.s]=I},Me=function(g){for(var e=g.length;e&&!g[--e];);for(var I=new $g(++e),t=0,C=g[0],i=1,l=function(g){I[t++]=g},n=1;n<=e;++n)if(g[n]==C&&n!=e)++i;else{if(!C&&i>2){for(;i>138;i-=138)l(32754);i>2&&(l(i>10?i-11<<5|28690:i-3<<5|12305),i=0)}else if(i>3){for(l(C),--i;i>6;i-=6)l(8304);i>2&&(l(i-3<<5|8208),i=0)}for(;i--;)l(C);i=1,C=g[n]}return{c:I.subarray(0,t),n:e}},Ye=function(g,e){for(var I=0,t=0;t<e.length;++t)I+=g[t]*e[t];return I},Ee=function(g,e,I){var t=I.length,C=Ne(e+2);g[C]=255&t,g[C+1]=t>>8,g[C+2]=255^g[C],g[C+3]=255^g[C+1];for(var i=0;i<t;++i)g[C+i+4]=I[i];return 8*(C+4+t)},ye=function(g,e,I,t,C,i,l,n,A,d,o){Te(e,o++,I),++C[256];for(var s=ke(C,15),a=s.t,V=s.l,c=ke(i,15),r=c.t,h=c.l,U=Me(a),Z=U.c,R=U.n,F=Me(r),m=F.c,B=F.n,W=new $g(19),N=0;N<Z.length;++N)++W[31&Z[N]];for(N=0;N<m.length;++N)++W[31&m[N]];for(var p=ke(W,7),S=p.t,b=p.l,u=19;u>4&&!S[te[u-1]];--u);var T,G,k,Q,M=d+5<<3,Y=Ye(C,re)+Ye(i,he)+l,E=Ye(C,a)+Ye(i,r)+l+14+3*u+Ye(W,S)+2*W[16]+3*W[17]+7*W[18];if(A>=0&&M<=Y&&M<=E)return Ee(e,o,g.subarray(A,A+d));if(Te(e,o,1+(E<Y)),o+=2,E<Y){T=ce(a,V,0),G=a,k=ce(r,h,0),Q=r;var y=ce(S,b,0);for(Te(e,o,R-257),Te(e,o+5,B-1),Te(e,o+10,u-4),o+=14,N=0;N<u;++N)Te(e,o+3*N,S[te[N]]);o+=3*u;for(var J=[Z,m],H=0;H<2;++H){var w=J[H];for(N=0;N<w.length;++N){var X=31&w[N];Te(e,o,y[X]),o+=S[X],X>15&&(Te(e,o,w[N]>>5&127),o+=w[N]>>12)}}}else T=Ue,G=re,k=Re,Q=he;for(N=0;N<n;++N){var K=t[N];if(K>255){Ge(e,o,T[257+(X=K>>18&31)]),o+=G[X+257],X>7&&(Te(e,o,K>>23&31),o+=ee[X]);var z=31&K;Ge(e,o,k[z]),o+=Q[z],z>3&&(Ge(e,o,K>>5&8191),o+=Ie[z])}else Ge(e,o,T[K]),o+=G[K]}return Ge(e,o,T[256]),o+G[256]},Je=new ge([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),He=new qg(0),we=function(g,e,I,t,C,i){var l=i.z||g.length,n=new qg(t+l+5*(1+Math.ceil(l/7e3))+C),A=n.subarray(t,n.length-C),d=i.l,o=7&(i.r||0);if(e){o&&(A[0]=i.r>>3);for(var s=Je[e-1],a=s>>13,V=8191&s,c=(1<<I)-1,r=i.p||new $g(32768),h=i.h||new $g(c+1),U=Math.ceil(I/3),Z=2*U,R=function(e){return(g[e]^g[e+1]<<U^g[e+2]<<Z)&c},F=new ge(25e3),m=new $g(288),B=new $g(32),W=0,N=0,p=i.i||0,S=0,b=i.w||0,u=0;p+2<l;++p){var T=R(p),G=32767&p,k=h[T];if(r[G]=k,h[T]=G,b<=p){var Q=l-p;if((W>7e3||S>24576)&&(Q>423||!d)){o=ye(g,A,0,F,m,B,N,S,u,p-u,o),S=W=N=0,u=p;for(var M=0;M<286;++M)m[M]=0;for(M=0;M<30;++M)B[M]=0}var Y=2,E=0,y=V,J=G-k&32767;if(Q>2&&T==R(p-J))for(var H=Math.min(a,Q)-1,w=Math.min(32767,p),X=Math.min(258,Q);J<=w&&--y&&G!=k;){if(g[p+Y]==g[p+Y-J]){for(var K=0;K<X&&g[p+K]==g[p+K-J];++K);if(K>Y){if(Y=K,E=J,K>H)break;var z=Math.min(J,K-2),D=0;for(M=0;M<z;++M){var v=p-J+M&32767,x=v-r[v]&32767;x>D&&(D=x,k=v)}}}J+=(G=k)-(k=r[G])&32767}if(E){F[S++]=268435456|ne[Y]<<18|oe[E];var O=31&ne[Y],f=31&oe[E];N+=ee[O]+Ie[f],++m[257+O],++B[f],b=p+Y,++W}else F[S++]=g[p],++m[g[p]]}}for(p=Math.max(p,b);p<l;++p)F[S++]=g[p],++m[g[p]];o=ye(g,A,d,F,m,B,N,S,u,p-u,o),d||(i.r=7&o|A[o/8|0]<<3,o-=7,i.h=h,i.p=r,i.i=p,i.w=b)}else{for(p=i.w||0;p<l+d;p+=65535){var j=p+65535;j>=l&&(A[o/8|0]=d,j=l),o=Ee(A,o+1,g.subarray(p,j))}i.i=l}return pe(n,0,t+Ne(o)+C)},Xe=function(){var g=1,e=0;return{p:function(I){for(var t=g,C=e,i=0|I.length,l=0;l!=i;){for(var n=Math.min(l+2655,i);l<n;++l)C+=t+=I[l];t=(65535&t)+15*(t>>16),C=(65535&C)+15*(C>>16)}g=t,e=C},d:function(){return(255&(g%=65521))<<24|(65280&g)<<8|(255&(e%=65521))<<8|e>>8}}},Ke=function(g,e,I,t,C){if(!C&&(C={l:1},e.dictionary)){var i=e.dictionary.subarray(-32768),l=new qg(i.length+g.length);l.set(i),l.set(g,i.length),g=l,C.w=i.length}return we(g,null==e.level?6:e.level,null==e.mem?C.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(g.length)))):20:12+e.mem,I,t,C)},ze=function(g,e,I){for(;I;++e)g[e]=I,I>>>=8},De=function(g,e){var I=e.level,t=0==I?0:I<6?1:9==I?3:2;if(g[0]=120,g[1]=t<<6|(e.dictionary&&32),g[1]|=31-(g[0]<<8|g[1])%31,e.dictionary){var C=Xe();C.p(e.dictionary),ze(g,2,C.d())}},ve=function(g,e){return(8!=(15&g[0])||g[0]>>4>7||(g[0]<<8|g[1])%31)&&be(6,"invalid zlib data"),(g[1]>>5&1)==+!e&&be(6,"invalid zlib data: "+(32&g[1]?"need":"unexpected")+" dictionary"),2+(g[1]>>3&4)};function xe(g,e){e||(e={});var I=Xe();I.p(g);var t=Ke(g,e,e.dictionary?6:2,4);return De(t,e),ze(t,t.length-4,I.d()),t}function Oe(g,e){return ue(g.subarray(ve(g,e),-4),{i:2},e,e)}var fe=typeof TextEncoder<"u"&&new TextEncoder,je=typeof TextDecoder<"u"&&new TextDecoder,Le=0;try{je.decode(He,{stream:!0}),Le=1}catch{}var Pe=function(g){for(var e="",I=0;;){var t=g[I++],C=(t>127)+(t>223)+(t>239);if(I+C>g.length)return{s:e,r:pe(g,I-1)};C?3==C?(t=((15&t)<<18|(63&g[I++])<<12|(63&g[I++])<<6|63&g[I++])-65536,e+=String.fromCharCode(55296|t>>10,56320|1023&t)):e+=1&C?String.fromCharCode((31&t)<<6|63&g[I++]):String.fromCharCode((15&t)<<12|(63&g[I++])<<6|63&g[I++]):e+=String.fromCharCode(t)}};function _e(g,e){if(e){for(var I=new qg(g.length),t=0;t<g.length;++t)I[t]=g.charCodeAt(t);return I}if(fe)return fe.encode(g);var C=g.length,i=new qg(g.length+(g.length>>1)),l=0,n=function(g){i[l++]=g};for(t=0;t<C;++t){if(l+5>i.length){var A=new qg(l+8+(C-t<<1));A.set(i),i=A}var d=g.charCodeAt(t);d<128||e?n(d):d<2048?(n(192|d>>6),n(128|63&d)):d>55295&&d<57344?(n(240|(d=65536+(1047552&d)|1023&g.charCodeAt(++t))>>18),n(128|d>>12&63),n(128|d>>6&63),n(128|63&d)):(n(224|d>>12),n(128|d>>6&63),n(128|63&d))}return pe(i,0,l)}function qe(g,e){if(e){for(var I="",t=0;t<g.length;t+=16384)I+=String.fromCharCode.apply(null,g.subarray(t,t+16384));return I}if(je)return je.decode(g);var C=Pe(g),i=C.s;return(I=C.r).length&&be(8),i}function $e(g){const e=qe(xe(_e(g),{level:9}),!0);return btoa(e)}function gI(g){const e=atob(g);return eI(g)?qe(Oe(_e(e,!0))):decodeURIComponent(escape(e))}function eI(g){return atob(g).startsWith("xÚ")}const II={utoa:$e,atou:gI,isCompressed:eI};var tI,CI={exports:{}},iI="object"==typeof Reflect?Reflect:null,lI=iI&&"function"==typeof iI.apply?iI.apply:function(g,e,I){return Function.prototype.apply.call(g,e,I)};function nI(g){console&&console.warn}tI=iI&&"function"==typeof iI.ownKeys?iI.ownKeys:Object.getOwnPropertySymbols?function(g){return Object.getOwnPropertyNames(g).concat(Object.getOwnPropertySymbols(g))}:function(g){return Object.getOwnPropertyNames(g)};var AI=Number.isNaN||function(g){return g!=g};function dI(){dI.init.call(this)}CI.exports=dI,CI.exports.once=mI,dI.EventEmitter=dI,dI.prototype._events=void 0,dI.prototype._eventsCount=0,dI.prototype._maxListeners=void 0;var oI=10;function sI(g){if("function"!=typeof g)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof g)}function aI(g){return void 0===g._maxListeners?dI.defaultMaxListeners:g._maxListeners}function VI(g,e,I,t){var C,i,l;if(sI(I),void 0===(i=g._events)?(i=g._events=Object.create(null),g._eventsCount=0):(void 0!==i.newListener&&(g.emit("newListener",e,I.listener?I.listener:I),i=g._events),l=i[e]),void 0===l)l=i[e]=I,++g._eventsCount;else if("function"==typeof l?l=i[e]=t?[I,l]:[l,I]:t?l.unshift(I):l.push(I),(C=aI(g))>0&&l.length>C&&!l.warned){l.warned=!0;var n=new Error("Possible EventEmitter memory leak detected. "+l.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");n.name="MaxListenersExceededWarning",n.emitter=g,n.type=e,n.count=l.length,nI(n)}return g}function cI(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function rI(g,e,I){var t={fired:!1,wrapFn:void 0,target:g,type:e,listener:I},C=cI.bind(t);return C.listener=I,t.wrapFn=C,C}function hI(g,e,I){var t=g._events;if(void 0===t)return[];var C=t[e];return void 0===C?[]:"function"==typeof C?I?[C.listener||C]:[C]:I?FI(C):ZI(C,C.length)}function UI(g){var e=this._events;if(void 0!==e){var I=e[g];if("function"==typeof I)return 1;if(void 0!==I)return I.length}return 0}function ZI(g,e){for(var I=new Array(e),t=0;t<e;++t)I[t]=g[t];return I}function RI(g,e){for(;e+1<g.length;e++)g[e]=g[e+1];g.pop()}function FI(g){for(var e=new Array(g.length),I=0;I<e.length;++I)e[I]=g[I].listener||g[I];return e}function mI(g,e){return new Promise((function(I,t){function C(I){g.removeListener(e,i),t(I)}function i(){"function"==typeof g.removeListener&&g.removeListener("error",C),I([].slice.call(arguments))}WI(g,e,i,{once:!0}),"error"!==e&&BI(g,C,{once:!0})}))}function BI(g,e,I){"function"==typeof g.on&&WI(g,"error",e,I)}function WI(g,e,I,t){if("function"==typeof g.on)t.once?g.once(e,I):g.on(e,I);else{if("function"!=typeof g.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof g);g.addEventListener(e,(function C(i){t.once&&g.removeEventListener(e,C),I(i)}))}}Object.defineProperty(dI,"defaultMaxListeners",{enumerable:!0,get:function(){return oI},set:function(g){if("number"!=typeof g||g<0||AI(g))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+g+".");oI=g}}),dI.init=function(){(void 0===this._events||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},dI.prototype.setMaxListeners=function(g){if("number"!=typeof g||g<0||AI(g))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+g+".");return this._maxListeners=g,this},dI.prototype.getMaxListeners=function(){return aI(this)},dI.prototype.emit=function(g){for(var e=[],I=1;I<arguments.length;I++)e.push(arguments[I]);var t="error"===g,C=this._events;if(void 0!==C)t=t&&void 0===C.error;else if(!t)return!1;if(t){var i;if(e.length>0&&(i=e[0]),i instanceof Error)throw i;var l=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw l.context=i,l}var n=C[g];if(void 0===n)return!1;if("function"==typeof n)lI(n,this,e);else{var A=n.length,d=ZI(n,A);for(I=0;I<A;++I)lI(d[I],this,e)}return!0},dI.prototype.addListener=function(g,e){return VI(this,g,e,!1)},dI.prototype.on=dI.prototype.addListener,dI.prototype.prependListener=function(g,e){return VI(this,g,e,!0)},dI.prototype.once=function(g,e){return sI(e),this.on(g,rI(this,g,e)),this},dI.prototype.prependOnceListener=function(g,e){return sI(e),this.prependListener(g,rI(this,g,e)),this},dI.prototype.removeListener=function(g,e){var I,t,C,i,l;if(sI(e),void 0===(t=this._events))return this;if(void 0===(I=t[g]))return this;if(I===e||I.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete t[g],t.removeListener&&this.emit("removeListener",g,I.listener||e));else if("function"!=typeof I){for(C=-1,i=I.length-1;i>=0;i--)if(I[i]===e||I[i].listener===e){l=I[i].listener,C=i;break}if(C<0)return this;0===C?I.shift():RI(I,C),1===I.length&&(t[g]=I[0]),void 0!==t.removeListener&&this.emit("removeListener",g,l||e)}return this},dI.prototype.off=dI.prototype.removeListener,dI.prototype.removeAllListeners=function(g){var e,I,t;if(void 0===(I=this._events))return this;if(void 0===I.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==I[g]&&(0==--this._eventsCount?this._events=Object.create(null):delete I[g]),this;if(0===arguments.length){var C,i=Object.keys(I);for(t=0;t<i.length;++t)"removeListener"!==(C=i[t])&&this.removeAllListeners(C);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=I[g]))this.removeListener(g,e);else if(void 0!==e)for(t=e.length-1;t>=0;t--)this.removeListener(g,e[t]);return this},dI.prototype.listeners=function(g){return hI(this,g,!0)},dI.prototype.rawListeners=function(g){return hI(this,g,!1)},dI.listenerCount=function(g,e){return"function"==typeof g.listenerCount?g.listenerCount(e):UI.call(g,e)},dI.prototype.listenerCount=UI,dI.prototype.eventNames=function(){return this._eventsCount>0?tI(this._events):[]};var NI=CI.exports;let pI=class g{lineAt(g){if(g<0||g>this.length)throw new RangeError(`Invalid position ${g} in document of length ${this.length}`);return this.lineInner(g,!1,1,0)}line(g){if(g<1||g>this.lines)throw new RangeError(`Invalid line number ${g} in ${this.lines}-line document`);return this.lineInner(g,!0,1,0)}replace(g,e,I){[g,e]=EI(this,g,e);let t=[];return this.decompose(0,g,t,2),I.length&&I.decompose(0,I.length,t,3),this.decompose(e,this.length,t,1),bI.from(t,this.length-(e-g)+I.length)}append(g){return this.replace(this.length,this.length,g)}slice(g,e=this.length){[g,e]=EI(this,g,e);let I=[];return this.decompose(g,e,I,0),bI.from(I,e-g)}eq(g){if(g==this)return!0;if(g.length!=this.length||g.lines!=this.lines)return!1;let e=this.scanIdentical(g,1),I=this.length-this.scanIdentical(g,-1),t=new kI(this),C=new kI(g);for(let g=e,i=e;;){if(t.next(g),C.next(g),g=0,t.lineBreak!=C.lineBreak||t.done!=C.done||t.value!=C.value)return!1;if(i+=t.value.length,t.done||i>=I)return!0}}iter(g=1){return new kI(this,g)}iterRange(g,e=this.length){return new QI(this,g,e)}iterLines(g,e){let I;if(null==g)I=this.iter();else{null==e&&(e=this.lines+1);let t=this.line(g).from;I=this.iterRange(t,Math.max(t,e==this.lines+1?this.length:e<=1?0:this.line(e-1).to))}return new MI(I)}toString(){return this.sliceString(0)}toJSON(){let g=[];return this.flatten(g),g}constructor(){}static of(e){if(0==e.length)throw new RangeError("A document must have at least one line");return 1!=e.length||e[0]?e.length<=32?new SI(e):bI.from(SI.split(e,[])):g.empty}};class SI extends pI{constructor(g,e=uI(g)){super(),this.text=g,this.length=e}get lines(){return this.text.length}get children(){return null}lineInner(g,e,I,t){for(let C=0;;C++){let i=this.text[C],l=t+i.length;if((e?I:l)>=g)return new YI(t,l,I,i);t=l+1,I++}}decompose(g,e,I,t){let C=g<=0&&e>=this.length?this:new SI(GI(this.text,g,e),Math.min(e,this.length)-Math.max(0,g));if(1&t){let g=I.pop(),e=TI(C.text,g.text.slice(),0,C.length);if(e.length<=32)I.push(new SI(e,g.length+C.length));else{let g=e.length>>1;I.push(new SI(e.slice(0,g)),new SI(e.slice(g)))}}else I.push(C)}replace(g,e,I){if(!(I instanceof SI))return super.replace(g,e,I);[g,e]=EI(this,g,e);let t=TI(this.text,TI(I.text,GI(this.text,0,g)),e),C=this.length+I.length-(e-g);return t.length<=32?new SI(t,C):bI.from(SI.split(t,[]),C)}sliceString(g,e=this.length,I="\n"){[g,e]=EI(this,g,e);let t="";for(let C=0,i=0;C<=e&&i<this.text.length;i++){let l=this.text[i],n=C+l.length;C>g&&i&&(t+=I),g<n&&e>C&&(t+=l.slice(Math.max(0,g-C),e-C)),C=n+1}return t}flatten(g){for(let e of this.text)g.push(e)}scanIdentical(){return 0}static split(g,e){let I=[],t=-1;for(let C of g)I.push(C),t+=C.length+1,32==I.length&&(e.push(new SI(I,t)),I=[],t=-1);return t>-1&&e.push(new SI(I,t)),e}}class bI extends pI{constructor(g,e){super(),this.children=g,this.length=e,this.lines=0;for(let e of g)this.lines+=e.lines}lineInner(g,e,I,t){for(let C=0;;C++){let i=this.children[C],l=t+i.length,n=I+i.lines-1;if((e?n:l)>=g)return i.lineInner(g,e,I,t);t=l+1,I=n+1}}decompose(g,e,I,t){for(let C=0,i=0;i<=e&&C<this.children.length;C++){let l=this.children[C],n=i+l.length;if(g<=n&&e>=i){let C=t&((i<=g?1:0)|(n>=e?2:0));i>=g&&n<=e&&!C?I.push(l):l.decompose(g-i,e-i,I,C)}i=n+1}}replace(g,e,I){if([g,e]=EI(this,g,e),I.lines<this.lines)for(let t=0,C=0;t<this.children.length;t++){let i=this.children[t],l=C+i.length;if(g>=C&&e<=l){let n=i.replace(g-C,e-C,I),A=this.lines-i.lines+n.lines;if(n.lines<A>>4&&n.lines>A>>6){let C=this.children.slice();return C[t]=n,new bI(C,this.length-(e-g)+I.length)}return super.replace(C,l,n)}C=l+1}return super.replace(g,e,I)}sliceString(g,e=this.length,I="\n"){[g,e]=EI(this,g,e);let t="";for(let C=0,i=0;C<this.children.length&&i<=e;C++){let l=this.children[C],n=i+l.length;i>g&&C&&(t+=I),g<n&&e>i&&(t+=l.sliceString(g-i,e-i,I)),i=n+1}return t}flatten(g){for(let e of this.children)e.flatten(g)}scanIdentical(g,e){if(!(g instanceof bI))return 0;let I=0,[t,C,i,l]=e>0?[0,0,this.children.length,g.children.length]:[this.children.length-1,g.children.length-1,-1,-1];for(;;t+=e,C+=e){if(t==i||C==l)return I;let n=this.children[t],A=g.children[C];if(n!=A)return I+n.scanIdentical(A,e);I+=n.length+1}}static from(g,e=g.reduce(((g,e)=>g+e.length+1),-1)){let I=0;for(let e of g)I+=e.lines;if(I<32){let I=[];for(let e of g)e.flatten(I);return new SI(I,e)}let t=Math.max(32,I>>5),C=t<<1,i=t>>1,l=[],n=0,A=-1,d=[];function o(g){let e;if(g.lines>C&&g instanceof bI)for(let e of g.children)o(e);else g.lines>i&&(n>i||!n)?(s(),l.push(g)):g instanceof SI&&n&&(e=d[d.length-1])instanceof SI&&g.lines+e.lines<=32?(n+=g.lines,A+=g.length+1,d[d.length-1]=new SI(e.text.concat(g.text),e.length+1+g.length)):(n+g.lines>t&&s(),n+=g.lines,A+=g.length+1,d.push(g))}function s(){0!=n&&(l.push(1==d.length?d[0]:bI.from(d,A)),A=-1,n=d.length=0)}for(let e of g)o(e);return s(),1==l.length?l[0]:new bI(l,e)}}function uI(g){let e=-1;for(let I of g)e+=I.length+1;return e}function TI(g,e,I=0,t=1e9){for(let C=0,i=0,l=!0;i<g.length&&C<=t;i++){let n=g[i],A=C+n.length;A>=I&&(A>t&&(n=n.slice(0,t-C)),C<I&&(n=n.slice(I-C)),l?(e[e.length-1]+=n,l=!1):e.push(n)),C=A+1}return e}function GI(g,e,I){return TI(g,[""],e,I)}pI.empty=new SI([""],0);class kI{constructor(g,e=1){this.dir=e,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[g],this.offsets=[e>0?1:(g instanceof SI?g.text.length:g.children.length)<<1]}nextInner(g,e){for(this.done=this.lineBreak=!1;;){let I=this.nodes.length-1,t=this.nodes[I],C=this.offsets[I],i=C>>1,l=t instanceof SI?t.text.length:t.children.length;if(i==(e>0?l:0)){if(0==I)return this.done=!0,this.value="",this;e>0&&this.offsets[I-1]++,this.nodes.pop(),this.offsets.pop()}else if((1&C)==(e>0?0:1)){if(this.offsets[I]+=e,0==g)return this.lineBreak=!0,this.value="\n",this;g--}else if(t instanceof SI){let C=t.text[i+(e<0?-1:0)];if(this.offsets[I]+=e,C.length>Math.max(0,g))return this.value=0==g?C:e>0?C.slice(g):C.slice(0,C.length-g),this;g-=C.length}else{let C=t.children[i+(e<0?-1:0)];g>C.length?(g-=C.length,this.offsets[I]+=e):(e<0&&this.offsets[I]--,this.nodes.push(C),this.offsets.push(e>0?1:(C instanceof SI?C.text.length:C.children.length)<<1))}}}next(g=0){return g<0&&(this.nextInner(-g,-this.dir),g=this.value.length),this.nextInner(g,this.dir)}}class QI{constructor(g,e,I){this.value="",this.done=!1,this.cursor=new kI(g,e>I?-1:1),this.pos=e>I?g.length:0,this.from=Math.min(e,I),this.to=Math.max(e,I)}nextInner(g,e){if(e<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;g+=Math.max(0,e<0?this.pos-this.to:this.from-this.pos);let I=e<0?this.pos-this.from:this.to-this.pos;g>I&&(g=I),I-=g;let{value:t}=this.cursor.next(g);return this.pos+=(t.length+g)*e,this.value=t.length<=I?t:e<0?t.slice(t.length-I):t.slice(0,I),this.done=!this.value,this}next(g=0){return g<0?g=Math.max(g,this.from-this.pos):g>0&&(g=Math.min(g,this.to-this.pos)),this.nextInner(g,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&""!=this.value}}class MI{constructor(g){this.inner=g,this.afterBreak=!0,this.value="",this.done=!1}next(g=0){let{done:e,lineBreak:I,value:t}=this.inner.next(g);return e&&this.afterBreak?(this.value="",this.afterBreak=!1):e?(this.done=!0,this.value=""):I?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=t,this.afterBreak=!1),this}get lineBreak(){return!1}}typeof Symbol<"u"&&(pI.prototype[Symbol.iterator]=function(){return this.iter()},kI.prototype[Symbol.iterator]=QI.prototype[Symbol.iterator]=MI.prototype[Symbol.iterator]=function(){return this});class YI{constructor(g,e,I,t){this.from=g,this.to=e,this.number=I,this.text=t}get length(){return this.to-this.from}}function EI(g,e,I){return[e=Math.max(0,Math.min(g.length,e)),Math.max(e,Math.min(g.length,I))]}let yI="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((g=>g?parseInt(g,36):1));for(let g=1;g<yI.length;g++)yI[g]+=yI[g-1];function JI(g){for(let e=1;e<yI.length;e+=2)if(yI[e]>g)return yI[e-1]<=g;return!1}function HI(g){return g>=127462&&g<=127487}const wI=8205;function XI(g,e,I=!0,t=!0){return(I?KI:zI)(g,e,t)}function KI(g,e,I){if(e==g.length)return e;e&&DI(g.charCodeAt(e))&&vI(g.charCodeAt(e-1))&&e--;let t=xI(g,e);for(e+=fI(t);e<g.length;){let C=xI(g,e);if(t==wI||C==wI||I&&JI(C))e+=fI(C),t=C;else{if(!HI(C))break;{let I=0,t=e-2;for(;t>=0&&HI(xI(g,t));)I++,t-=2;if(I%2==0)break;e+=2}}}return e}function zI(g,e,I){for(;e>0;){let t=KI(g,e-2,I);if(t<e)return t;e--}return 0}function DI(g){return g>=56320&&g<57344}function vI(g){return g>=55296&&g<56320}function xI(g,e){let I=g.charCodeAt(e);if(!vI(I)||e+1==g.length)return I;let t=g.charCodeAt(e+1);return DI(t)?t-56320+(I-55296<<10)+65536:I}function OI(g){return g<=65535?String.fromCharCode(g):(g-=65536,String.fromCharCode(55296+(g>>10),56320+(1023&g)))}function fI(g){return g<65536?1:2}const jI=/\r\n?|\n/;var LI=function(g){return g[g.Simple=0]="Simple",g[g.TrackDel=1]="TrackDel",g[g.TrackBefore=2]="TrackBefore",g[g.TrackAfter=3]="TrackAfter",g}(LI||(LI={}));class PI{constructor(g){this.sections=g}get length(){let g=0;for(let e=0;e<this.sections.length;e+=2)g+=this.sections[e];return g}get newLength(){let g=0;for(let e=0;e<this.sections.length;e+=2){let I=this.sections[e+1];g+=I<0?this.sections[e]:I}return g}get empty(){return 0==this.sections.length||2==this.sections.length&&this.sections[1]<0}iterGaps(g){for(let e=0,I=0,t=0;e<this.sections.length;){let C=this.sections[e++],i=this.sections[e++];i<0?(g(I,t,C),t+=C):t+=i,I+=C}}iterChangedRanges(g,e=!1){gt(this,g,e)}get invertedDesc(){let g=[];for(let e=0;e<this.sections.length;){let I=this.sections[e++],t=this.sections[e++];t<0?g.push(I,t):g.push(t,I)}return new PI(g)}composeDesc(g){return this.empty?g:g.empty?this:It(this,g)}mapDesc(g,e=!1){return g.empty?this:et(this,g,e)}mapPos(g,e=-1,I=LI.Simple){let t=0,C=0;for(let i=0;i<this.sections.length;){let l=this.sections[i++],n=this.sections[i++],A=t+l;if(n<0){if(A>g)return C+(g-t);C+=l}else{if(I!=LI.Simple&&A>=g&&(I==LI.TrackDel&&t<g&&A>g||I==LI.TrackBefore&&t<g||I==LI.TrackAfter&&A>g))return null;if(A>g||A==g&&e<0&&!l)return g==t||e<0?C:C+n;C+=n}t=A}if(g>t)throw new RangeError(`Position ${g} is out of range for changeset of length ${t}`);return C}touchesRange(g,e=g){for(let I=0,t=0;I<this.sections.length&&t<=e;){let C=t+this.sections[I++];if(this.sections[I++]>=0&&t<=e&&C>=g)return!(t<g&&C>e)||"cover";t=C}return!1}toString(){let g="";for(let e=0;e<this.sections.length;){let I=this.sections[e++],t=this.sections[e++];g+=(g?" ":"")+I+(t>=0?":"+t:"")}return g}toJSON(){return this.sections}static fromJSON(g){if(!Array.isArray(g)||g.length%2||g.some((g=>"number"!=typeof g)))throw new RangeError("Invalid JSON representation of ChangeDesc");return new PI(g)}static create(g){return new PI(g)}}class _I extends PI{constructor(g,e){super(g),this.inserted=e}apply(g){if(this.length!=g.length)throw new RangeError("Applying change set to a document with the wrong length");return gt(this,((e,I,t,C,i)=>g=g.replace(t,t+(I-e),i)),!1),g}mapDesc(g,e=!1){return et(this,g,e,!0)}invert(g){let e=this.sections.slice(),I=[];for(let t=0,C=0;t<e.length;t+=2){let i=e[t],l=e[t+1];if(l>=0){e[t]=l,e[t+1]=i;let n=t>>1;for(;I.length<n;)I.push(pI.empty);I.push(i?g.slice(C,C+i):pI.empty)}C+=i}return new _I(e,I)}compose(g){return this.empty?g:g.empty?this:It(this,g,!0)}map(g,e=!1){return g.empty?this:et(this,g,e,!0)}iterChanges(g,e=!1){gt(this,g,e)}get desc(){return PI.create(this.sections)}filter(g){let e=[],I=[],t=[],C=new tt(this);g:for(let i=0,l=0;;){let n=i==g.length?1e9:g[i++];for(;l<n||l==n&&0==C.len;){if(C.done)break g;let g=Math.min(C.len,n-l);qI(t,g,-1);let i=-1==C.ins?-1:0==C.off?C.ins:0;qI(e,g,i),i>0&&$I(I,e,C.text),C.forward(g),l+=g}let A=g[i++];for(;l<A;){if(C.done)break g;let g=Math.min(C.len,A-l);qI(e,g,-1),qI(t,g,-1==C.ins?-1:0==C.off?C.ins:0),C.forward(g),l+=g}}return{changes:new _I(e,I),filtered:PI.create(t)}}toJSON(){let g=[];for(let e=0;e<this.sections.length;e+=2){let I=this.sections[e],t=this.sections[e+1];t<0?g.push(I):0==t?g.push([I]):g.push([I].concat(this.inserted[e>>1].toJSON()))}return g}static of(g,e,I){let t=[],C=[],i=0,l=null;function n(g=!1){if(!g&&!t.length)return;i<e&&qI(t,e-i,-1);let I=new _I(t,C);l=l?l.compose(I.map(l)):I,t=[],C=[],i=0}return function g(A){if(Array.isArray(A))for(let e of A)g(e);else if(A instanceof _I){if(A.length!=e)throw new RangeError(`Mismatched change set length (got ${A.length}, expected ${e})`);n(),l=l?l.compose(A.map(l)):A}else{let{from:g,to:l=g,insert:d}=A;if(g>l||g<0||l>e)throw new RangeError(`Invalid change range ${g} to ${l} (in doc of length ${e})`);let o=d?"string"==typeof d?pI.of(d.split(I||jI)):d:pI.empty,s=o.length;if(g==l&&0==s)return;g<i&&n(),g>i&&qI(t,g-i,-1),qI(t,l-g,s),$I(C,t,o),i=l}}(g),n(!l),l}static empty(g){return new _I(g?[g,-1]:[],[])}static fromJSON(g){if(!Array.isArray(g))throw new RangeError("Invalid JSON representation of ChangeSet");let e=[],I=[];for(let t=0;t<g.length;t++){let C=g[t];if("number"==typeof C)e.push(C,-1);else{if(!Array.isArray(C)||"number"!=typeof C[0]||C.some(((g,e)=>e&&"string"!=typeof g)))throw new RangeError("Invalid JSON representation of ChangeSet");if(1==C.length)e.push(C[0],0);else{for(;I.length<t;)I.push(pI.empty);I[t]=pI.of(C.slice(1)),e.push(C[0],I[t].length)}}}return new _I(e,I)}static createSet(g,e){return new _I(g,e)}}function qI(g,e,I,t=!1){if(0==e&&I<=0)return;let C=g.length-2;C>=0&&I<=0&&I==g[C+1]?g[C]+=e:0==e&&0==g[C]?g[C+1]+=I:t?(g[C]+=e,g[C+1]+=I):g.push(e,I)}function $I(g,e,I){if(0==I.length)return;let t=e.length-2>>1;if(t<g.length)g[g.length-1]=g[g.length-1].append(I);else{for(;g.length<t;)g.push(pI.empty);g.push(I)}}function gt(g,e,I){let t=g.inserted;for(let C=0,i=0,l=0;l<g.sections.length;){let n=g.sections[l++],A=g.sections[l++];if(A<0)C+=n,i+=n;else{let d=C,o=i,s=pI.empty;for(;d+=n,o+=A,A&&t&&(s=s.append(t[l-2>>1])),!(I||l==g.sections.length||g.sections[l+1]<0);)n=g.sections[l++],A=g.sections[l++];e(C,d,i,o,s),C=d,i=o}}}function et(g,e,I,t=!1){let C=[],i=t?[]:null,l=new tt(g),n=new tt(e);for(let g=-1;;)if(-1==l.ins&&-1==n.ins){let g=Math.min(l.len,n.len);qI(C,g,-1),l.forward(g),n.forward(g)}else if(n.ins>=0&&(l.ins<0||g==l.i||0==l.off&&(n.len<l.len||n.len==l.len&&!I))){let e=n.len;for(qI(C,n.ins,-1);e;){let I=Math.min(l.len,e);l.ins>=0&&g<l.i&&l.len<=I&&(qI(C,0,l.ins),i&&$I(i,C,l.text),g=l.i),l.forward(I),e-=I}n.next()}else{if(!(l.ins>=0)){if(l.done&&n.done)return i?_I.createSet(C,i):PI.create(C);throw new Error("Mismatched change set lengths")}{let e=0,I=l.len;for(;I;)if(-1==n.ins){let g=Math.min(I,n.len);e+=g,I-=g,n.forward(g)}else{if(!(0==n.ins&&n.len<I))break;I-=n.len,n.next()}qI(C,e,g<l.i?l.ins:0),i&&g<l.i&&$I(i,C,l.text),g=l.i,l.forward(l.len-I)}}}function It(g,e,I=!1){let t=[],C=I?[]:null,i=new tt(g),l=new tt(e);for(let g=!1;;){if(i.done&&l.done)return C?_I.createSet(t,C):PI.create(t);if(0==i.ins)qI(t,i.len,0,g),i.next();else if(0!=l.len||l.done){if(i.done||l.done)throw new Error("Mismatched change set lengths");{let e=Math.min(i.len2,l.len),I=t.length;if(-1==i.ins){let I=-1==l.ins?-1:l.off?0:l.ins;qI(t,e,I,g),C&&I&&$I(C,t,l.text)}else-1==l.ins?(qI(t,i.off?0:i.len,e,g),C&&$I(C,t,i.textBit(e))):(qI(t,i.off?0:i.len,l.off?0:l.ins,g),C&&!l.off&&$I(C,t,l.text));g=(i.ins>e||l.ins>=0&&l.len>e)&&(g||t.length>I),i.forward2(e),l.forward(e)}}else qI(t,0,l.ins,g),C&&$I(C,t,l.text),l.next()}}class tt{constructor(g){this.set=g,this.i=0,this.next()}next(){let{sections:g}=this.set;this.i<g.length?(this.len=g[this.i++],this.ins=g[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return-2==this.ins}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:g}=this.set,e=this.i-2>>1;return e>=g.length?pI.empty:g[e]}textBit(g){let{inserted:e}=this.set,I=this.i-2>>1;return I>=e.length&&!g?pI.empty:e[I].slice(this.off,null==g?void 0:this.off+g)}forward(g){g==this.len?this.next():(this.len-=g,this.off+=g)}forward2(g){-1==this.ins?this.forward(g):g==this.ins?this.next():(this.ins-=g,this.off+=g)}}let Ct=class g{constructor(g,e,I){this.from=g,this.to=e,this.flags=I}get anchor(){return 32&this.flags?this.to:this.from}get head(){return 32&this.flags?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return 8&this.flags?-1:16&this.flags?1:0}get bidiLevel(){let g=7&this.flags;return 7==g?null:g}get goalColumn(){let g=this.flags>>6;return 16777215==g?void 0:g}map(e,I=-1){let t,C;return this.empty?t=C=e.mapPos(this.from,I):(t=e.mapPos(this.from,1),C=e.mapPos(this.to,-1)),t==this.from&&C==this.to?this:new g(t,C,this.flags)}extend(g,e=g){if(g<=this.anchor&&e>=this.anchor)return it.range(g,e);let I=Math.abs(g-this.anchor)>Math.abs(e-this.anchor)?g:e;return it.range(this.anchor,I)}eq(g,e=!1){return!(this.anchor!=g.anchor||this.head!=g.head||e&&this.empty&&this.assoc!=g.assoc)}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(g){if(!g||"number"!=typeof g.anchor||"number"!=typeof g.head)throw new RangeError("Invalid JSON representation for SelectionRange");return it.range(g.anchor,g.head)}static create(e,I,t){return new g(e,I,t)}};class it{constructor(g,e){this.ranges=g,this.mainIndex=e}map(g,e=-1){return g.empty?this:it.create(this.ranges.map((I=>I.map(g,e))),this.mainIndex)}eq(g,e=!1){if(this.ranges.length!=g.ranges.length||this.mainIndex!=g.mainIndex)return!1;for(let I=0;I<this.ranges.length;I++)if(!this.ranges[I].eq(g.ranges[I],e))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return 1==this.ranges.length?this:new it([this.main],0)}addRange(g,e=!0){return it.create([g].concat(this.ranges),e?0:this.mainIndex+1)}replaceRange(g,e=this.mainIndex){let I=this.ranges.slice();return I[e]=g,it.create(I,this.mainIndex)}toJSON(){return{ranges:this.ranges.map((g=>g.toJSON())),main:this.mainIndex}}static fromJSON(g){if(!g||!Array.isArray(g.ranges)||"number"!=typeof g.main||g.main>=g.ranges.length)throw new RangeError("Invalid JSON representation for EditorSelection");return new it(g.ranges.map((g=>Ct.fromJSON(g))),g.main)}static single(g,e=g){return new it([it.range(g,e)],0)}static create(g,e=0){if(0==g.length)throw new RangeError("A selection needs at least one range");for(let I=0,t=0;t<g.length;t++){let C=g[t];if(C.empty?C.from<=I:C.from<I)return it.normalized(g.slice(),e);I=C.to}return new it(g,e)}static cursor(g,e=0,I,t){return Ct.create(g,g,(0==e?0:e<0?8:16)|(null==I?7:Math.min(6,I))|(t??16777215)<<6)}static range(g,e,I,t){let C=(I??16777215)<<6|(null==t?7:Math.min(6,t));return e<g?Ct.create(e,g,48|C):Ct.create(g,e,(e>g?8:0)|C)}static normalized(g,e=0){let I=g[e];g.sort(((g,e)=>g.from-e.from)),e=g.indexOf(I);for(let I=1;I<g.length;I++){let t=g[I],C=g[I-1];if(t.empty?t.from<=C.to:t.from<C.to){let i=C.from,l=Math.max(t.to,C.to);I<=e&&e--,g.splice(--I,2,t.anchor>t.head?it.range(l,i):it.range(i,l))}}return new it(g,e)}}function lt(g,e){for(let I of g.ranges)if(I.to>e)throw new RangeError("Selection points outside of document")}let nt=0;class At{constructor(g,e,I,t,C){this.combine=g,this.compareInput=e,this.compare=I,this.isStatic=t,this.id=nt++,this.default=g([]),this.extensions="function"==typeof C?C(this):C}get reader(){return this}static define(g={}){return new At(g.combine||(g=>g),g.compareInput||((g,e)=>g===e),g.compare||(g.combine?(g,e)=>g===e:dt),!!g.static,g.enables)}of(g){return new ot([],this,0,g)}compute(g,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new ot(g,this,1,e)}computeN(g,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new ot(g,this,2,e)}from(g,e){return e||(e=g=>g),this.compute([g],(I=>e(I.field(g))))}}function dt(g,e){return g==e||g.length==e.length&&g.every(((g,I)=>g===e[I]))}class ot{constructor(g,e,I,t){this.dependencies=g,this.facet=e,this.type=I,this.value=t,this.id=nt++}dynamicSlot(g){var e;let I=this.value,t=this.facet.compareInput,C=this.id,i=g[C]>>1,l=2==this.type,n=!1,A=!1,d=[];for(let I of this.dependencies)"doc"==I?n=!0:"selection"==I?A=!0:1&(null!==(e=g[I.id])&&void 0!==e?e:1)||d.push(g[I.id]);return{create:g=>(g.values[i]=I(g),1),update(g,e){if(n&&e.docChanged||A&&(e.docChanged||e.selection)||at(g,d)){let e=I(g);if(l?!st(e,g.values[i],t):!t(e,g.values[i]))return g.values[i]=e,1}return 0},reconfigure:(g,e)=>{let n,A=e.config.address[C];if(null!=A){let C=pt(e,A);if(this.dependencies.every((I=>I instanceof At?e.facet(I)===g.facet(I):!(I instanceof rt)||e.field(I,!1)==g.field(I,!1)))||(l?st(n=I(g),C,t):t(n=I(g),C)))return g.values[i]=C,0}else n=I(g);return g.values[i]=n,1}}}}function st(g,e,I){if(g.length!=e.length)return!1;for(let t=0;t<g.length;t++)if(!I(g[t],e[t]))return!1;return!0}function at(g,e){let I=!1;for(let t of e)1&Nt(g,t)&&(I=!0);return I}function Vt(g,e,I){let t=I.map((e=>g[e.id])),C=I.map((g=>g.type)),i=t.filter((g=>!(1&g))),l=g[e.id]>>1;function n(g){let I=[];for(let e=0;e<t.length;e++){let i=pt(g,t[e]);if(2==C[e])for(let g of i)I.push(g);else I.push(i)}return e.combine(I)}return{create(g){for(let e of t)Nt(g,e);return g.values[l]=n(g),1},update(g,I){if(!at(g,i))return 0;let t=n(g);return e.compare(t,g.values[l])?0:(g.values[l]=t,1)},reconfigure(g,C){let i=at(g,t),A=C.config.facets[e.id],d=C.facet(e);if(A&&!i&&dt(I,A))return g.values[l]=d,0;let o=n(g);return e.compare(o,d)?(g.values[l]=d,0):(g.values[l]=o,1)}}}const ct=At.define({static:!0});class rt{constructor(g,e,I,t,C){this.id=g,this.createF=e,this.updateF=I,this.compareF=t,this.spec=C,this.provides=void 0}static define(g){let e=new rt(nt++,g.create,g.update,g.compare||((g,e)=>g===e),g);return g.provide&&(e.provides=g.provide(e)),e}create(g){let e=g.facet(ct).find((g=>g.field==this));return((null==e?void 0:e.create)||this.createF)(g)}slot(g){let e=g[this.id]>>1;return{create:g=>(g.values[e]=this.create(g),1),update:(g,I)=>{let t=g.values[e],C=this.updateF(t,I);return this.compareF(t,C)?0:(g.values[e]=C,1)},reconfigure:(g,I)=>null!=I.config.address[this.id]?(g.values[e]=I.field(this),0):(g.values[e]=this.create(g),1)}}init(g){return[this,ct.of({field:this,create:g})]}get extension(){return this}}const ht={lowest:4,low:3,default:2,high:1,highest:0};function Ut(g){return e=>new Rt(e,g)}const Zt={highest:Ut(ht.highest),high:Ut(ht.high),default:Ut(ht.default),low:Ut(ht.low),lowest:Ut(ht.lowest)};class Rt{constructor(g,e){this.inner=g,this.prec=e}}class Ft{of(g){return new mt(this,g)}reconfigure(g){return Ft.reconfigure.of({compartment:this,extension:g})}get(g){return g.config.compartments.get(this)}}class mt{constructor(g,e){this.compartment=g,this.inner=e}}class Bt{constructor(g,e,I,t,C,i){for(this.base=g,this.compartments=e,this.dynamicSlots=I,this.address=t,this.staticValues=C,this.facets=i,this.statusTemplate=[];this.statusTemplate.length<I.length;)this.statusTemplate.push(0)}staticFacet(g){let e=this.address[g.id];return null==e?g.default:this.staticValues[e>>1]}static resolve(g,e,I){let t=[],C=Object.create(null),i=new Map;for(let I of Wt(g,e,i))I instanceof rt?t.push(I):(C[I.facet.id]||(C[I.facet.id]=[])).push(I);let l=Object.create(null),n=[],A=[];for(let g of t)l[g.id]=A.length<<1,A.push((e=>g.slot(e)));let d=null==I?void 0:I.config.facets;for(let g in C){let e=C[g],t=e[0].facet,i=d&&d[g]||[];if(e.every((g=>0==g.type)))if(l[t.id]=n.length<<1|1,dt(i,e))n.push(I.facet(t));else{let g=t.combine(e.map((g=>g.value)));n.push(I&&t.compare(g,I.facet(t))?I.facet(t):g)}else{for(let g of e)0==g.type?(l[g.id]=n.length<<1|1,n.push(g.value)):(l[g.id]=A.length<<1,A.push((e=>g.dynamicSlot(e))));l[t.id]=A.length<<1,A.push((g=>Vt(g,t,e)))}}let o=A.map((g=>g(l)));return new Bt(g,i,o,l,n,C)}}function Wt(g,e,I){let t=[[],[],[],[],[]],C=new Map;return function g(i,l){let n=C.get(i);if(null!=n){if(n<=l)return;let g=t[n].indexOf(i);g>-1&&t[n].splice(g,1),i instanceof mt&&I.delete(i.compartment)}if(C.set(i,l),Array.isArray(i))for(let e of i)g(e,l);else if(i instanceof mt){if(I.has(i.compartment))throw new RangeError("Duplicate use of compartment in extensions");let t=e.get(i.compartment)||i.inner;I.set(i.compartment,t),g(t,l)}else if(i instanceof Rt)g(i.inner,i.prec);else if(i instanceof rt)t[l].push(i),i.provides&&g(i.provides,l);else if(i instanceof ot)t[l].push(i),i.facet.extensions&&g(i.facet.extensions,ht.default);else{let e=i.extension;if(!e)throw new Error(`Unrecognized extension value in extension set (${i}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);g(e,l)}}(g,ht.default),t.reduce(((g,e)=>g.concat(e)))}function Nt(g,e){if(1&e)return 2;let I=e>>1,t=g.status[I];if(4==t)throw new Error("Cyclic dependency between fields and/or facets");if(2&t)return t;g.status[I]=4;let C=g.computeSlot(g,g.config.dynamicSlots[I]);return g.status[I]=2|C}function pt(g,e){return 1&e?g.config.staticValues[e>>1]:g.values[e>>1]}const St=At.define(),bt=At.define({combine:g=>g.some((g=>g)),static:!0}),ut=At.define({combine:g=>g.length?g[0]:void 0,static:!0}),Tt=At.define(),Gt=At.define(),kt=At.define(),Qt=At.define({combine:g=>!!g.length&&g[0]});class Mt{constructor(g,e){this.type=g,this.value=e}static define(){return new Yt}}class Yt{of(g){return new Mt(this,g)}}class Et{constructor(g){this.map=g}of(g){return new yt(this,g)}}class yt{constructor(g,e){this.type=g,this.value=e}map(g){let e=this.type.map(this.value,g);return void 0===e?void 0:e==this.value?this:new yt(this.type,e)}is(g){return this.type==g}static define(g={}){return new Et(g.map||(g=>g))}static mapEffects(g,e){if(!g.length)return g;let I=[];for(let t of g){let g=t.map(e);g&&I.push(g)}return I}}yt.reconfigure=yt.define(),yt.appendConfig=yt.define();class Jt{constructor(g,e,I,t,C,i){this.startState=g,this.changes=e,this.selection=I,this.effects=t,this.annotations=C,this.scrollIntoView=i,this._doc=null,this._state=null,I&&lt(I,e.newLength),C.some((g=>g.type==Jt.time))||(this.annotations=C.concat(Jt.time.of(Date.now())))}static create(g,e,I,t,C,i){return new Jt(g,e,I,t,C,i)}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(g){for(let e of this.annotations)if(e.type==g)return e.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(g){let e=this.annotation(Jt.userEvent);return!(!e||!(e==g||e.length>g.length&&e.slice(0,g.length)==g&&"."==e[g.length]))}}function Ht(g,e){let I=[];for(let t=0,C=0;;){let i,l;if(t<g.length&&(C==e.length||e[C]>=g[t]))i=g[t++],l=g[t++];else{if(!(C<e.length))return I;i=e[C++],l=e[C++]}!I.length||I[I.length-1]<i?I.push(i,l):I[I.length-1]<l&&(I[I.length-1]=l)}}function wt(g,e,I){var t;let C,i,l;return I?(C=e.changes,i=_I.empty(e.changes.length),l=g.changes.compose(e.changes)):(C=e.changes.map(g.changes),i=g.changes.mapDesc(e.changes,!0),l=g.changes.compose(C)),{changes:l,selection:e.selection?e.selection.map(i):null===(t=g.selection)||void 0===t?void 0:t.map(C),effects:yt.mapEffects(g.effects,C).concat(yt.mapEffects(e.effects,i)),annotations:g.annotations.length?g.annotations.concat(e.annotations):e.annotations,scrollIntoView:g.scrollIntoView||e.scrollIntoView}}function Xt(g,e,I){let t=e.selection,C=xt(e.annotations);return e.userEvent&&(C=C.concat(Jt.userEvent.of(e.userEvent))),{changes:e.changes instanceof _I?e.changes:_I.of(e.changes||[],I,g.facet(ut)),selection:t&&(t instanceof it?t:it.single(t.anchor,t.head)),effects:xt(e.effects),annotations:C,scrollIntoView:!!e.scrollIntoView}}function Kt(g,e,I){let t=Xt(g,e.length?e[0]:{},g.doc.length);e.length&&!1===e[0].filter&&(I=!1);for(let C=1;C<e.length;C++){!1===e[C].filter&&(I=!1);let i=!!e[C].sequential;t=wt(t,Xt(g,e[C],i?t.changes.newLength:g.doc.length),i)}let C=Jt.create(g,t.changes,t.selection,t.effects,t.annotations,t.scrollIntoView);return Dt(I?zt(C):C)}function zt(g){let e=g.startState,I=!0;for(let t of e.facet(Tt)){let e=t(g);if(!1===e){I=!1;break}Array.isArray(e)&&(I=!0===I?e:Ht(I,e))}if(!0!==I){let t,C;if(!1===I)C=g.changes.invertedDesc,t=_I.empty(e.doc.length);else{let e=g.changes.filter(I);t=e.changes,C=e.filtered.mapDesc(e.changes).invertedDesc}g=Jt.create(e,t,g.selection&&g.selection.map(C),yt.mapEffects(g.effects,C),g.annotations,g.scrollIntoView)}let t=e.facet(Gt);for(let I=t.length-1;I>=0;I--){let C=t[I](g);g=C instanceof Jt?C:Array.isArray(C)&&1==C.length&&C[0]instanceof Jt?C[0]:Kt(e,xt(C),!1)}return g}function Dt(g){let e=g.startState,I=e.facet(kt),t=g;for(let C=I.length-1;C>=0;C--){let i=I[C](g);i&&Object.keys(i).length&&(t=wt(t,Xt(e,i,g.changes.newLength),!0))}return t==g?g:Jt.create(e,g.changes,g.selection,t.effects,t.annotations,t.scrollIntoView)}Jt.time=Mt.define(),Jt.userEvent=Mt.define(),Jt.addToHistory=Mt.define(),Jt.remote=Mt.define();const vt=[];function xt(g){return null==g?vt:Array.isArray(g)?g:[g]}var Ot=function(g){return g[g.Word=0]="Word",g[g.Space=1]="Space",g[g.Other=2]="Other",g}(Ot||(Ot={}));const ft=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;let jt;try{jt=new RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch{}function Lt(g){if(jt)return jt.test(g);for(let e=0;e<g.length;e++){let I=g[e];if(/\w/.test(I)||I>""&&(I.toUpperCase()!=I.toLowerCase()||ft.test(I)))return!0}return!1}function Pt(g){return e=>{if(!/\S/.test(e))return Ot.Space;if(Lt(e))return Ot.Word;for(let I=0;I<g.length;I++)if(e.indexOf(g[I])>-1)return Ot.Word;return Ot.Other}}class _t{constructor(g,e,I,t,C,i){this.config=g,this.doc=e,this.selection=I,this.values=t,this.status=g.statusTemplate.slice(),this.computeSlot=C,i&&(i._state=this);for(let g=0;g<this.config.dynamicSlots.length;g++)Nt(this,g<<1);this.computeSlot=null}field(g,e=!0){let I=this.config.address[g.id];if(null!=I)return Nt(this,I),pt(this,I);if(e)throw new RangeError("Field is not present in this state")}update(...g){return Kt(this,g,!0)}applyTransaction(g){let e,I=this.config,{base:t,compartments:C}=I;for(let e of g.effects)e.is(Ft.reconfigure)?(I&&(C=new Map,I.compartments.forEach(((g,e)=>C.set(e,g))),I=null),C.set(e.value.compartment,e.value.extension)):e.is(yt.reconfigure)?(I=null,t=e.value):e.is(yt.appendConfig)&&(I=null,t=xt(t).concat(e.value));I?e=g.startState.values.slice():(I=Bt.resolve(t,C,this),e=new _t(I,this.doc,this.selection,I.dynamicSlots.map((()=>null)),((g,e)=>e.reconfigure(g,this)),null).values);let i=g.startState.facet(bt)?g.newSelection:g.newSelection.asSingle();new _t(I,g.newDoc,i,e,((e,I)=>I.update(e,g)),g)}replaceSelection(g){return"string"==typeof g&&(g=this.toText(g)),this.changeByRange((e=>({changes:{from:e.from,to:e.to,insert:g},range:it.cursor(e.from+g.length)})))}changeByRange(g){let e=this.selection,I=g(e.ranges[0]),t=this.changes(I.changes),C=[I.range],i=xt(I.effects);for(let I=1;I<e.ranges.length;I++){let l=g(e.ranges[I]),n=this.changes(l.changes),A=n.map(t);for(let g=0;g<I;g++)C[g]=C[g].map(A);let d=t.mapDesc(n,!0);C.push(l.range.map(d)),t=t.compose(A),i=yt.mapEffects(i,A).concat(yt.mapEffects(xt(l.effects),d))}return{changes:t,selection:it.create(C,e.mainIndex),effects:i}}changes(g=[]){return g instanceof _I?g:_I.of(g,this.doc.length,this.facet(_t.lineSeparator))}toText(g){return pI.of(g.split(this.facet(_t.lineSeparator)||jI))}sliceDoc(g=0,e=this.doc.length){return this.doc.sliceString(g,e,this.lineBreak)}facet(g){let e=this.config.address[g.id];return null==e?g.default:(Nt(this,e),pt(this,e))}toJSON(g){let e={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(g)for(let I in g){let t=g[I];t instanceof rt&&null!=this.config.address[t.id]&&(e[I]=t.spec.toJSON(this.field(g[I]),this))}return e}static fromJSON(g,e={},I){if(!g||"string"!=typeof g.doc)throw new RangeError("Invalid JSON representation for EditorState");let t=[];if(I)for(let e in I)if(Object.prototype.hasOwnProperty.call(g,e)){let C=I[e],i=g[e];t.push(C.init((g=>C.spec.fromJSON(i,g))))}return _t.create({doc:g.doc,selection:it.fromJSON(g.selection),extensions:e.extensions?t.concat([e.extensions]):t})}static create(g={}){let e=Bt.resolve(g.extensions||[],new Map),I=g.doc instanceof pI?g.doc:pI.of((g.doc||"").split(e.staticFacet(_t.lineSeparator)||jI)),t=g.selection?g.selection instanceof it?g.selection:it.single(g.selection.anchor,g.selection.head):it.single(0);return lt(t,I.length),e.staticFacet(bt)||(t=t.asSingle()),new _t(e,I,t,e.dynamicSlots.map((()=>null)),((g,e)=>e.create(g)),null)}get tabSize(){return this.facet(_t.tabSize)}get lineBreak(){return this.facet(_t.lineSeparator)||"\n"}get readOnly(){return this.facet(Qt)}phrase(g,...e){for(let e of this.facet(_t.phrases))if(Object.prototype.hasOwnProperty.call(e,g)){g=e[g];break}return e.length&&(g=g.replace(/\$(\$|\d*)/g,((g,I)=>{if("$"==I)return"$";let t=+(I||1);return!t||t>e.length?g:e[t-1]}))),g}languageDataAt(g,e,I=-1){let t=[];for(let C of this.facet(St))for(let i of C(this,e,I))Object.prototype.hasOwnProperty.call(i,g)&&t.push(i[g]);return t}charCategorizer(g){return Pt(this.languageDataAt("wordChars",g).join(""))}wordAt(g){let{text:e,from:I,length:t}=this.doc.lineAt(g),C=this.charCategorizer(g),i=g-I,l=g-I;for(;i>0;){let g=XI(e,i,!1);if(C(e.slice(g,i))!=Ot.Word)break;i=g}for(;l<t;){let g=XI(e,l);if(C(e.slice(l,g))!=Ot.Word)break;l=g}return i==l?null:it.range(i+I,l+I)}}function qt(g,e,I={}){let t={};for(let e of g)for(let g of Object.keys(e)){let C=e[g],i=t[g];if(void 0===i)t[g]=C;else if(i!==C&&void 0!==C){if(!Object.hasOwnProperty.call(I,g))throw new Error("Config merge conflict for field "+g);t[g]=I[g](i,C)}}for(let g in e)void 0===t[g]&&(t[g]=e[g]);return t}_t.allowMultipleSelections=bt,_t.tabSize=At.define({combine:g=>g.length?g[0]:4}),_t.lineSeparator=ut,_t.readOnly=Qt,_t.phrases=At.define({compare(g,e){let I=Object.keys(g),t=Object.keys(e);return I.length==t.length&&I.every((I=>g[I]==e[I]))}}),_t.languageData=St,_t.changeFilter=Tt,_t.transactionFilter=Gt,_t.transactionExtender=kt,Ft.reconfigure=yt.define();class $t{eq(g){return this==g}range(g,e=g){return gC.create(g,e,this)}}$t.prototype.startSide=$t.prototype.endSide=0,$t.prototype.point=!1,$t.prototype.mapMode=LI.TrackDel;let gC=class g{constructor(g,e,I){this.from=g,this.to=e,this.value=I}static create(e,I,t){return new g(e,I,t)}};function eC(g,e){return g.from-e.from||g.value.startSide-e.value.startSide}class IC{constructor(g,e,I,t){this.from=g,this.to=e,this.value=I,this.maxPoint=t}get length(){return this.to[this.to.length-1]}findIndex(g,e,I,t=0){let C=I?this.to:this.from;for(let i=t,l=C.length;;){if(i==l)return i;let t=i+l>>1,n=C[t]-g||(I?this.value[t].endSide:this.value[t].startSide)-e;if(t==i)return n>=0?i:l;n>=0?l=t:i=t+1}}between(g,e,I,t){for(let C=this.findIndex(e,-1e9,!0),i=this.findIndex(I,1e9,!1,C);C<i;C++)if(!1===t(this.from[C]+g,this.to[C]+g,this.value[C]))return!1}map(g,e){let I=[],t=[],C=[],i=-1,l=-1;for(let n=0;n<this.value.length;n++){let A,d,o=this.value[n],s=this.from[n]+g,a=this.to[n]+g;if(s==a){let g=e.mapPos(s,o.startSide,o.mapMode);if(null==g||(A=d=g,o.startSide!=o.endSide&&(d=e.mapPos(s,o.endSide),d<A)))continue}else if(A=e.mapPos(s,o.startSide),d=e.mapPos(a,o.endSide),A>d||A==d&&o.startSide>0&&o.endSide<=0)continue;(d-A||o.endSide-o.startSide)<0||(i<0&&(i=A),o.point&&(l=Math.max(l,d-A)),I.push(o),t.push(A-i),C.push(d-i))}return{mapped:I.length?new IC(t,C,I,l):null,pos:i}}}class tC{constructor(g,e,I,t){this.chunkPos=g,this.chunk=e,this.nextLayer=I,this.maxPoint=t}static create(g,e,I,t){return new tC(g,e,I,t)}get length(){let g=this.chunk.length-1;return g<0?0:Math.max(this.chunkEnd(g),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let g=this.nextLayer.size;for(let e of this.chunk)g+=e.value.length;return g}chunkEnd(g){return this.chunkPos[g]+this.chunk[g].length}update(g){let{add:e=[],sort:I=!1,filterFrom:t=0,filterTo:C=this.length}=g,i=g.filter;if(0==e.length&&!i)return this;if(I&&(e=e.slice().sort(eC)),this.isEmpty)return e.length?tC.of(e):this;let l=new nC(this,null,-1).goto(0),n=0,A=[],d=new iC;for(;l.value||n<e.length;)if(n<e.length&&(l.from-e[n].from||l.startSide-e[n].value.startSide)>=0){let g=e[n++];d.addInner(g.from,g.to,g.value)||A.push(g)}else 1==l.rangeIndex&&l.chunkIndex<this.chunk.length&&(n==e.length||this.chunkEnd(l.chunkIndex)<e[n].from)&&(!i||t>this.chunkEnd(l.chunkIndex)||C<this.chunkPos[l.chunkIndex])&&d.addChunk(this.chunkPos[l.chunkIndex],this.chunk[l.chunkIndex])?l.nextChunk():((!i||t>l.to||C<l.from||i(l.from,l.to,l.value))&&(d.addInner(l.from,l.to,l.value)||A.push(gC.create(l.from,l.to,l.value))),l.next());return d.finishInner(this.nextLayer.isEmpty&&!A.length?tC.empty:this.nextLayer.update({add:A,filter:i,filterFrom:t,filterTo:C}))}map(g){if(g.empty||this.isEmpty)return this;let e=[],I=[],t=-1;for(let C=0;C<this.chunk.length;C++){let i=this.chunkPos[C],l=this.chunk[C],n=g.touchesRange(i,i+l.length);if(!1===n)t=Math.max(t,l.maxPoint),e.push(l),I.push(g.mapPos(i));else if(!0===n){let{mapped:C,pos:n}=l.map(i,g);C&&(t=Math.max(t,C.maxPoint),e.push(C),I.push(n))}}let C=this.nextLayer.map(g);return 0==e.length?C:new tC(I,e,C||tC.empty,t)}between(g,e,I){if(!this.isEmpty){for(let t=0;t<this.chunk.length;t++){let C=this.chunkPos[t],i=this.chunk[t];if(e>=C&&g<=C+i.length&&!1===i.between(C,g-C,e-C,I))return}this.nextLayer.between(g,e,I)}}iter(g=0){return AC.from([this]).goto(g)}get isEmpty(){return this.nextLayer==this}static iter(g,e=0){return AC.from(g).goto(e)}static compare(g,e,I,t,C=-1){let i=g.filter((g=>g.maxPoint>0||!g.isEmpty&&g.maxPoint>=C)),l=e.filter((g=>g.maxPoint>0||!g.isEmpty&&g.maxPoint>=C)),n=lC(i,l,I),A=new oC(i,n,C),d=new oC(l,n,C);I.iterGaps(((g,e,I)=>sC(A,g,d,e,I,t))),I.empty&&0==I.length&&sC(A,0,d,0,0,t)}static eq(g,e,I=0,t){null==t&&(t=999999999);let C=g.filter((g=>!g.isEmpty&&e.indexOf(g)<0)),i=e.filter((e=>!e.isEmpty&&g.indexOf(e)<0));if(C.length!=i.length)return!1;if(!C.length)return!0;let l=lC(C,i),n=new oC(C,l,0).goto(I),A=new oC(i,l,0).goto(I);for(;;){if(n.to!=A.to||!aC(n.active,A.active)||n.point&&(!A.point||!n.point.eq(A.point)))return!1;if(n.to>t)return!0;n.next(),A.next()}}static spans(g,e,I,t,C=-1){let i=new oC(g,null,C).goto(e),l=e,n=i.openStart;for(;;){let g=Math.min(i.to,I);if(i.point){let I=i.activeForPoint(i.to),C=i.pointFrom<e?I.length+1:i.point.startSide<0?I.length:Math.min(I.length,n);t.point(l,g,i.point,I,C,i.pointRank),n=Math.min(i.openEnd(g),I.length)}else g>l&&(t.span(l,g,i.active,n),n=i.openEnd(g));if(i.to>I)return n+(i.point&&i.to>I?1:0);l=i.to,i.next()}}static of(g,e=!1){let I=new iC;for(let t of g instanceof gC?[g]:e?CC(g):g)I.add(t.from,t.to,t.value);return I.finish()}static join(g){if(!g.length)return tC.empty;let e=g[g.length-1];for(let I=g.length-2;I>=0;I--)for(let t=g[I];t!=tC.empty;t=t.nextLayer)e=new tC(t.chunkPos,t.chunk,e,Math.max(t.maxPoint,e.maxPoint));return e}}function CC(g){if(g.length>1)for(let e=g[0],I=1;I<g.length;I++){let t=g[I];if(eC(e,t)>0)return g.slice().sort(eC);e=t}return g}tC.empty=new tC([],[],null,-1),tC.empty.nextLayer=tC.empty;class iC{finishChunk(g){this.chunks.push(new IC(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,g&&(this.from=[],this.to=[],this.value=[])}constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}add(g,e,I){this.addInner(g,e,I)||(this.nextLayer||(this.nextLayer=new iC)).add(g,e,I)}addInner(g,e,I){let t=g-this.lastTo||I.startSide-this.last.endSide;if(t<=0&&(g-this.lastFrom||I.startSide-this.last.startSide)<0)throw new Error("Ranges must be added sorted by `from` position and `startSide`");return!(t<0||(250==this.from.length&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=g),this.from.push(g-this.chunkStart),this.to.push(e-this.chunkStart),this.last=I,this.lastFrom=g,this.lastTo=e,this.value.push(I),I.point&&(this.maxPoint=Math.max(this.maxPoint,e-g)),0))}addChunk(g,e){if((g-this.lastTo||e.value[0].startSide-this.last.endSide)<0)return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,e.maxPoint),this.chunks.push(e),this.chunkPos.push(g);let I=e.value.length-1;return this.last=e.value[I],this.lastFrom=e.from[I]+g,this.lastTo=e.to[I]+g,!0}finish(){return this.finishInner(tC.empty)}finishInner(g){if(this.from.length&&this.finishChunk(!1),0==this.chunks.length)return g;let e=tC.create(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(g):g,this.setMaxPoint);return this.from=null,e}}function lC(g,e,I){let t=new Map;for(let e of g)for(let g=0;g<e.chunk.length;g++)e.chunk[g].maxPoint<=0&&t.set(e.chunk[g],e.chunkPos[g]);let C=new Set;for(let g of e)for(let e=0;e<g.chunk.length;e++){let i=t.get(g.chunk[e]);null!=i&&(I?I.mapPos(i):i)==g.chunkPos[e]&&(null==I||!I.touchesRange(i,i+g.chunk[e].length))&&C.add(g.chunk[e])}return C}class nC{constructor(g,e,I,t=0){this.layer=g,this.skip=e,this.minPoint=I,this.rank=t}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(g,e=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(g,e,!1),this}gotoInner(g,e,I){for(;this.chunkIndex<this.layer.chunk.length;){let e=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(e)||this.layer.chunkEnd(this.chunkIndex)<g||e.maxPoint<this.minPoint))break;this.chunkIndex++,I=!1}if(this.chunkIndex<this.layer.chunk.length){let t=this.layer.chunk[this.chunkIndex].findIndex(g-this.layer.chunkPos[this.chunkIndex],e,!0);(!I||this.rangeIndex<t)&&this.setRangeIndex(t)}this.next()}forward(g,e){(this.to-g||this.endSide-e)<0&&this.gotoInner(g,e,!0)}next(){for(;;){if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}{let g=this.layer.chunkPos[this.chunkIndex],e=this.layer.chunk[this.chunkIndex],I=g+e.from[this.rangeIndex];if(this.from=I,this.to=g+e.to[this.rangeIndex],this.value=e.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}}setRangeIndex(g){if(g==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=g}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(g){return this.from-g.from||this.startSide-g.startSide||this.rank-g.rank||this.to-g.to||this.endSide-g.endSide}}class AC{constructor(g){this.heap=g}static from(g,e=null,I=-1){let t=[];for(let C=0;C<g.length;C++)for(let i=g[C];!i.isEmpty;i=i.nextLayer)i.maxPoint>=I&&t.push(new nC(i,e,I,C));return 1==t.length?t[0]:new AC(t)}get startSide(){return this.value?this.value.startSide:0}goto(g,e=-1e9){for(let I of this.heap)I.goto(g,e);for(let g=this.heap.length>>1;g>=0;g--)dC(this.heap,g);return this.next(),this}forward(g,e){for(let I of this.heap)I.forward(g,e);for(let g=this.heap.length>>1;g>=0;g--)dC(this.heap,g);(this.to-g||this.value.endSide-e)<0&&this.next()}next(){if(0==this.heap.length)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let g=this.heap[0];this.from=g.from,this.to=g.to,this.value=g.value,this.rank=g.rank,g.value&&g.next(),dC(this.heap,0)}}}function dC(g,e){for(let I=g[e];;){let t=1+(e<<1);if(t>=g.length)break;let C=g[t];if(t+1<g.length&&C.compare(g[t+1])>=0&&(C=g[t+1],t++),I.compare(C)<0)break;g[t]=I,g[e]=C,e=t}}class oC{constructor(g,e,I){this.minPoint=I,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=AC.from(g,e,I)}goto(g,e=-1e9){return this.cursor.goto(g,e),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=g,this.endSide=e,this.openStart=-1,this.next(),this}forward(g,e){for(;this.minActive>-1&&(this.activeTo[this.minActive]-g||this.active[this.minActive].endSide-e)<0;)this.removeActive(this.minActive);this.cursor.forward(g,e)}removeActive(g){VC(this.active,g),VC(this.activeTo,g),VC(this.activeRank,g),this.minActive=rC(this.active,this.activeTo)}addActive(g){let e=0,{value:I,to:t,rank:C}=this.cursor;for(;e<this.activeRank.length&&(C-this.activeRank[e]||t-this.activeTo[e])>0;)e++;cC(this.active,e,I),cC(this.activeTo,e,t),cC(this.activeRank,e,C),g&&cC(g,e,this.cursor.from),this.minActive=rC(this.active,this.activeTo)}next(){let g=this.to,e=this.point;this.point=null;let I=this.openStart<0?[]:null;for(;;){let t=this.minActive;if(t>-1&&(this.activeTo[t]-this.cursor.from||this.active[t].endSide-this.cursor.startSide)<0){if(this.activeTo[t]>g){this.to=this.activeTo[t],this.endSide=this.active[t].endSide;break}this.removeActive(t),I&&VC(I,t)}else{if(!this.cursor.value){this.to=this.endSide=1e9;break}if(this.cursor.from>g){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}{let g=this.cursor.value;if(g.point){if(!(e&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)){this.point=g,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=g.endSide,this.cursor.next(),this.forward(this.to,this.endSide);break}this.cursor.next()}else this.addActive(I),this.cursor.next()}}}if(I){this.openStart=0;for(let e=I.length-1;e>=0&&I[e]<g;e--)this.openStart++}}activeForPoint(g){if(!this.active.length)return this.active;let e=[];for(let I=this.active.length-1;I>=0&&!(this.activeRank[I]<this.pointRank);I--)(this.activeTo[I]>g||this.activeTo[I]==g&&this.active[I].endSide>=this.point.endSide)&&e.push(this.active[I]);return e.reverse()}openEnd(g){let e=0;for(let I=this.activeTo.length-1;I>=0&&this.activeTo[I]>g;I--)e++;return e}}function sC(g,e,I,t,C,i){g.goto(e),I.goto(t);let l=t+C,n=t,A=t-e;for(;;){let e=g.to+A-I.to||g.endSide-I.endSide,t=e<0?g.to+A:I.to,C=Math.min(t,l);if(g.point||I.point?g.point&&I.point&&(g.point==I.point||g.point.eq(I.point))&&aC(g.activeForPoint(g.to),I.activeForPoint(I.to))||i.comparePoint(n,C,g.point,I.point):C>n&&!aC(g.active,I.active)&&i.compareRange(n,C,g.active,I.active),t>l)break;n=t,e<=0&&g.next(),e>=0&&I.next()}}function aC(g,e){if(g.length!=e.length)return!1;for(let I=0;I<g.length;I++)if(g[I]!=e[I]&&!g[I].eq(e[I]))return!1;return!0}function VC(g,e){for(let I=e,t=g.length-1;I<t;I++)g[I]=g[I+1];g.pop()}function cC(g,e,I){for(let I=g.length-1;I>=e;I--)g[I+1]=g[I];g[e]=I}function rC(g,e){let I=-1,t=1e9;for(let C=0;C<e.length;C++)(e[C]-t||g[C].endSide-g[I].endSide)<0&&(I=C,t=e[C]);return I}function hC(g,e,I=g.length){let t=0;for(let C=0;C<I;)9==g.charCodeAt(C)?(t+=e-t%e,C++):(t++,C=XI(g,C));return t}function UC(g,e,I,t){for(let t=0,C=0;;){if(C>=e)return t;if(t==g.length)break;C+=9==g.charCodeAt(t)?I-C%I:1,t=XI(g,t)}return!0===t?-1:g.length}const ZC="ͼ",RC=typeof Symbol>"u"?"__ͼ":Symbol.for(ZC),FC=typeof Symbol>"u"?"__styleSet"+Math.floor(1e8*Math.random()):Symbol("styleSet"),mC=typeof globalThis<"u"?globalThis:typeof window<"u"?window:{};class BC{constructor(g,e){this.rules=[];let{finish:I}=e||{};function t(g){return/^@/.test(g)?[g]:g.split(/,\s*/)}function C(g,e,i,l){let n=[],A=/^@(\w+)\b/.exec(g[0]),d=A&&"keyframes"==A[1];if(A&&null==e)return i.push(g[0]+";");for(let I in e){let l=e[I];if(/&/.test(I))C(I.split(/,\s*/).map((e=>g.map((g=>e.replace(/&/,g))))).reduce(((g,e)=>g.concat(e))),l,i);else if(l&&"object"==typeof l){if(!A)throw new RangeError("The value of a property ("+I+") should be a primitive value.");C(t(I),l,n,d)}else null!=l&&n.push(I.replace(/_.*/,"").replace(/[A-Z]/g,(g=>"-"+g.toLowerCase()))+": "+l+";")}(n.length||d)&&i.push((!I||A||l?g:g.map(I)).join(", ")+" {"+n.join(" ")+"}")}for(let e in g)C(t(e),g[e],this.rules)}getRules(){return this.rules.join("\n")}static newName(){let g=mC[RC]||1;return mC[RC]=g+1,ZC+g.toString(36)}static mount(g,e,I){let t=g[FC],C=I&&I.nonce;t?C&&t.setNonce(C):t=new NC(g,C),t.mount(Array.isArray(e)?e:[e],g)}}let WC=new Map;class NC{constructor(g,e){let I=g.ownerDocument||g,t=I.defaultView;if(!g.head&&g.adoptedStyleSheets&&t.CSSStyleSheet){let e=WC.get(I);if(e)return g[FC]=e;this.sheet=new t.CSSStyleSheet,WC.set(I,this)}else this.styleTag=I.createElement("style"),e&&this.styleTag.setAttribute("nonce",e);this.modules=[],g[FC]=this}mount(g,e){let I=this.sheet,t=0,C=0;for(let e=0;e<g.length;e++){let i=g[e],l=this.modules.indexOf(i);if(l<C&&l>-1&&(this.modules.splice(l,1),C--,l=-1),-1==l){if(this.modules.splice(C++,0,i),I)for(let g=0;g<i.rules.length;g++)I.insertRule(i.rules[g],t++)}else{for(;C<l;)t+=this.modules[C++].rules.length;t+=i.rules.length,C++}}if(I)e.adoptedStyleSheets.indexOf(this.sheet)<0&&(e.adoptedStyleSheets=[this.sheet,...e.adoptedStyleSheets]);else{let g="";for(let e=0;e<this.modules.length;e++)g+=this.modules[e].getRules()+"\n";this.styleTag.textContent=g;let I=e.head||e;this.styleTag.parentNode!=I&&I.insertBefore(this.styleTag,I.firstChild)}}setNonce(g){this.styleTag&&this.styleTag.getAttribute("nonce")!=g&&this.styleTag.setAttribute("nonce",g)}}for(var pC={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},SC={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"'},bC=typeof navigator<"u"&&/Mac/.test(navigator.platform),uC=typeof navigator<"u"&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),TC=0;TC<10;TC++)pC[48+TC]=pC[96+TC]=String(TC);for(TC=1;TC<=24;TC++)pC[TC+111]="F"+TC;for(TC=65;TC<=90;TC++)pC[TC]=String.fromCharCode(TC+32),SC[TC]=String.fromCharCode(TC);for(var GC in pC)SC.hasOwnProperty(GC)||(SC[GC]=pC[GC]);function kC(g){var e=!(bC&&g.metaKey&&g.shiftKey&&!g.ctrlKey&&!g.altKey||uC&&g.shiftKey&&g.key&&1==g.key.length||"Unidentified"==g.key)&&g.key||(g.shiftKey?SC:pC)[g.keyCode]||g.key||"Unidentified";return"Esc"==e&&(e="Escape"),"Del"==e&&(e="Delete"),"Left"==e&&(e="ArrowLeft"),"Up"==e&&(e="ArrowUp"),"Right"==e&&(e="ArrowRight"),"Down"==e&&(e="ArrowDown"),e}function QC(g){let e;return e=11==g.nodeType?g.getSelection?g:g.ownerDocument:g,e.getSelection()}function MC(g,e){return!!e&&(g==e||g.contains(1!=e.nodeType?e.parentNode:e))}function YC(g){let e=g.activeElement;for(;e&&e.shadowRoot;)e=e.shadowRoot.activeElement;return e}function EC(g,e){if(!e.anchorNode)return!1;try{return MC(g,e.anchorNode)}catch{return!1}}function yC(g){return 3==g.nodeType?_C(g,0,g.nodeValue.length).getClientRects():1==g.nodeType?g.getClientRects():[]}function JC(g,e,I,t){return!!I&&(XC(g,e,I,t,-1)||XC(g,e,I,t,1))}function HC(g){for(var e=0;;e++)if(!(g=g.previousSibling))return e}function wC(g){return 1==g.nodeType&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(g.nodeName)}function XC(g,e,I,t,C){for(;;){if(g==I&&e==t)return!0;if(e==(C<0?0:KC(g))){if("DIV"==g.nodeName)return!1;let I=g.parentNode;if(!I||1!=I.nodeType)return!1;e=HC(g)+(C<0?0:1),g=I}else{if(1!=g.nodeType)return!1;if(1==(g=g.childNodes[e+(C<0?-1:0)]).nodeType&&"false"==g.contentEditable)return!1;e=C<0?KC(g):0}}}function KC(g){return 3==g.nodeType?g.nodeValue.length:g.childNodes.length}function zC(g,e){let I=e?g.left:g.right;return{left:I,right:I,top:g.top,bottom:g.bottom}}function DC(g){let e=g.visualViewport;return e?{left:0,right:e.width,top:0,bottom:e.height}:{left:0,right:g.innerWidth,top:0,bottom:g.innerHeight}}function vC(g,e){let I=e.width/g.offsetWidth,t=e.height/g.offsetHeight;return(I>.995&&I<1.005||!isFinite(I)||Math.abs(e.width-g.offsetWidth)<1)&&(I=1),(t>.995&&t<1.005||!isFinite(t)||Math.abs(e.height-g.offsetHeight)<1)&&(t=1),{scaleX:I,scaleY:t}}function xC(g,e,I,t,C,i,l,n){let A=g.ownerDocument,d=A.defaultView||window;for(let o=g,s=!1;o&&!s;)if(1==o.nodeType){let g,a=o==A.body,V=1,c=1;if(a)g=DC(d);else{if(/^(fixed|sticky)$/.test(getComputedStyle(o).position)&&(s=!0),o.scrollHeight<=o.clientHeight&&o.scrollWidth<=o.clientWidth){o=o.assignedSlot||o.parentNode;continue}let e=o.getBoundingClientRect();({scaleX:V,scaleY:c}=vC(o,e)),g={left:e.left,right:e.left+o.clientWidth*V,top:e.top,bottom:e.top+o.clientHeight*c}}let r=0,h=0;if("nearest"==C)e.top<g.top?(h=-(g.top-e.top+l),I>0&&e.bottom>g.bottom+h&&(h=e.bottom-g.bottom+h+l)):e.bottom>g.bottom&&(h=e.bottom-g.bottom+l,I<0&&e.top-h<g.top&&(h=-(g.top+h-e.top+l)));else{let t=e.bottom-e.top,i=g.bottom-g.top;h=("center"==C&&t<=i?e.top+t/2-i/2:"start"==C||"center"==C&&I<0?e.top-l:e.bottom-i+l)-g.top}if("nearest"==t?e.left<g.left?(r=-(g.left-e.left+i),I>0&&e.right>g.right+r&&(r=e.right-g.right+r+i)):e.right>g.right&&(r=e.right-g.right+i,I<0&&e.left<g.left+r&&(r=-(g.left+r-e.left+i))):r=("center"==t?e.left+(e.right-e.left)/2-(g.right-g.left)/2:"start"==t==n?e.left-i:e.right-(g.right-g.left)+i)-g.left,r||h)if(a)d.scrollBy(r,h);else{let g=0,I=0;if(h){let g=o.scrollTop;o.scrollTop+=h/c,I=(o.scrollTop-g)*c}if(r){let e=o.scrollLeft;o.scrollLeft+=r/V,g=(o.scrollLeft-e)*V}e={left:e.left-g,top:e.top-I,right:e.right-g,bottom:e.bottom-I},g&&Math.abs(g-r)<1&&(t="nearest"),I&&Math.abs(I-h)<1&&(C="nearest")}if(a)break;o=o.assignedSlot||o.parentNode}else{if(11!=o.nodeType)break;o=o.host}}function OC(g){let e=g.ownerDocument;for(let I=g.parentNode;I&&I!=e.body;)if(1==I.nodeType){if(I.scrollHeight>I.clientHeight||I.scrollWidth>I.clientWidth)return I;I=I.assignedSlot||I.parentNode}else{if(11!=I.nodeType)break;I=I.host}return null}class fC{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(g){return this.anchorNode==g.anchorNode&&this.anchorOffset==g.anchorOffset&&this.focusNode==g.focusNode&&this.focusOffset==g.focusOffset}setRange(g){let{anchorNode:e,focusNode:I}=g;this.set(e,Math.min(g.anchorOffset,e?KC(e):0),I,Math.min(g.focusOffset,I?KC(I):0))}set(g,e,I,t){this.anchorNode=g,this.anchorOffset=e,this.focusNode=I,this.focusOffset=t}}let jC,LC=null;function PC(g){if(g.setActive)return g.setActive();if(LC)return g.focus(LC);let e=[];for(let I=g;I&&(e.push(I,I.scrollTop,I.scrollLeft),I!=I.ownerDocument);I=I.parentNode);if(g.focus(null==LC?{get preventScroll(){return LC={preventScroll:!0},!0}}:void 0),!LC){LC=!1;for(let g=0;g<e.length;){let I=e[g++],t=e[g++],C=e[g++];I.scrollTop!=t&&(I.scrollTop=t),I.scrollLeft!=C&&(I.scrollLeft=C)}}}function _C(g,e,I=e){let t=jC||(jC=document.createRange());return t.setEnd(g,I),t.setStart(g,e),t}function qC(g,e,I,t){let C={key:e,code:e,keyCode:I,which:I,cancelable:!0};t&&({altKey:C.altKey,ctrlKey:C.ctrlKey,shiftKey:C.shiftKey,metaKey:C.metaKey}=t);let i=new KeyboardEvent("keydown",C);i.synthetic=!0,g.dispatchEvent(i);let l=new KeyboardEvent("keyup",C);return l.synthetic=!0,g.dispatchEvent(l),i.defaultPrevented||l.defaultPrevented}function $C(g){for(;g;){if(g&&(9==g.nodeType||11==g.nodeType&&g.host))return g;g=g.assignedSlot||g.parentNode}return null}function gi(g){for(;g.attributes.length;)g.removeAttributeNode(g.attributes[0])}function ei(g,e){let I=e.focusNode,t=e.focusOffset;if(!I||e.anchorNode!=I||e.anchorOffset!=t)return!1;for(t=Math.min(t,KC(I));;)if(t){if(1!=I.nodeType)return!1;let g=I.childNodes[t-1];"false"==g.contentEditable?t--:(I=g,t=KC(I))}else{if(I==g)return!0;t=HC(I),I=I.parentNode}}function Ii(g){return g.scrollTop>Math.max(1,g.scrollHeight-g.clientHeight-4)}function ti(g,e){for(let I=g,t=e;;){if(3==I.nodeType&&t>0)return{node:I,offset:t};if(1==I.nodeType&&t>0){if("false"==I.contentEditable)return null;I=I.childNodes[t-1],t=KC(I)}else{if(!I.parentNode||wC(I))return null;t=HC(I),I=I.parentNode}}}function Ci(g,e){for(let I=g,t=e;;){if(3==I.nodeType&&t<I.nodeValue.length)return{node:I,offset:t};if(1==I.nodeType&&t<I.childNodes.length){if("false"==I.contentEditable)return null;I=I.childNodes[t],t=0}else{if(!I.parentNode||wC(I))return null;t=HC(I)+1,I=I.parentNode}}}class ii{constructor(g,e,I=!0){this.node=g,this.offset=e,this.precise=I}static before(g,e){return new ii(g.parentNode,HC(g),e)}static after(g,e){return new ii(g.parentNode,HC(g)+1,e)}}const li=[];class ni{constructor(){this.parent=null,this.dom=null,this.flags=2}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(g){let e=this.posAtStart;for(let I of this.children){if(I==g)return e;e+=I.length+I.breakAfter}throw new RangeError("Invalid child in posBefore")}posAfter(g){return this.posBefore(g)+g.length}sync(g,e){if(2&this.flags){let I,t=this.dom,C=null;for(let i of this.children){if(7&i.flags){if(!i.dom&&(I=C?C.nextSibling:t.firstChild)){let g=ni.get(I);(!g||!g.parent&&g.canReuseDOM(i))&&i.reuseDOM(I)}i.sync(g,e),i.flags&=-8}if(I=C?C.nextSibling:t.firstChild,e&&!e.written&&e.node==t&&I!=i.dom&&(e.written=!0),i.dom.parentNode==t)for(;I&&I!=i.dom;)I=Ai(I);else t.insertBefore(i.dom,I);C=i.dom}for(I=C?C.nextSibling:t.firstChild,I&&e&&e.node==t&&(e.written=!0);I;)I=Ai(I)}else if(1&this.flags)for(let I of this.children)7&I.flags&&(I.sync(g,e),I.flags&=-8)}reuseDOM(g){}localPosFromDOM(g,e){let I;if(g==this.dom)I=this.dom.childNodes[e];else{let t=0==KC(g)?0:0==e?-1:1;for(;;){let e=g.parentNode;if(e==this.dom)break;0==t&&e.firstChild!=e.lastChild&&(t=g==e.firstChild?-1:1),g=e}I=t<0?g:g.nextSibling}if(I==this.dom.firstChild)return 0;for(;I&&!ni.get(I);)I=I.nextSibling;if(!I)return this.length;for(let g=0,e=0;;g++){let t=this.children[g];if(t.dom==I)return e;e+=t.length+t.breakAfter}}domBoundsAround(g,e,I=0){let t=-1,C=-1,i=-1,l=-1;for(let n=0,A=I,d=I;n<this.children.length;n++){let I=this.children[n],o=A+I.length;if(A<g&&o>e)return I.domBoundsAround(g,e,A);if(o>=g&&-1==t&&(t=n,C=A),A>e&&I.dom.parentNode==this.dom){i=n,l=d;break}d=o,A=o+I.breakAfter}return{from:C,to:l<0?I+this.length:l,startDOM:(t?this.children[t-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:i<this.children.length&&i>=0?this.children[i].dom:null}}markDirty(g=!1){this.flags|=2,this.markParentsDirty(g)}markParentsDirty(g){for(let e=this.parent;e;e=e.parent){if(g&&(e.flags|=2),1&e.flags)return;e.flags|=1,g=!1}}setParent(g){this.parent!=g&&(this.parent=g,7&this.flags&&this.markParentsDirty(!0))}setDOM(g){this.dom!=g&&(this.dom&&(this.dom.cmView=null),this.dom=g,g.cmView=this)}get rootView(){for(let g=this;;){let e=g.parent;if(!e)return g;g=e}}replaceChildren(g,e,I=li){this.markDirty();for(let t=g;t<e;t++){let g=this.children[t];g.parent==this&&I.indexOf(g)<0&&g.destroy()}this.children.splice(g,e-g,...I);for(let g=0;g<I.length;g++)I[g].setParent(this)}ignoreMutation(g){return!1}ignoreEvent(g){return!1}childCursor(g=this.length){return new di(this.children,g,this.children.length)}childPos(g,e=1){return this.childCursor().findPos(g,e)}toString(){let g=this.constructor.name.replace("View","");return g+(this.children.length?"("+this.children.join()+")":this.length?"["+("Text"==g?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(g){return g.cmView}get isEditable(){return!0}get isWidget(){return!1}get isHidden(){return!1}merge(g,e,I,t,C,i){return!1}become(g){return!1}canReuseDOM(g){return g.constructor==this.constructor&&!(8&(this.flags|g.flags))}getSide(){return 0}destroy(){for(let g of this.children)g.parent==this&&g.destroy();this.parent=null}}function Ai(g){let e=g.nextSibling;return g.parentNode.removeChild(g),e}ni.prototype.breakAfter=0;class di{constructor(g,e,I){this.children=g,this.pos=e,this.i=I,this.off=0}findPos(g,e=1){for(;;){if(g>this.pos||g==this.pos&&(e>0||0==this.i||this.children[this.i-1].breakAfter))return this.off=g-this.pos,this;let I=this.children[--this.i];this.pos-=I.length+I.breakAfter}}}function oi(g,e,I,t,C,i,l,n,A){let{children:d}=g,o=d.length?d[e]:null,s=i.length?i[i.length-1]:null,a=s?s.breakAfter:l;if(!(e==t&&o&&!l&&!a&&i.length<2&&o.merge(I,C,i.length?s:null,0==I,n,A))){if(t<d.length){let g=d[t];g&&(C<g.length||g.breakAfter&&null!=s&&s.breakAfter)?(e==t&&(g=g.split(C),C=0),!a&&s&&g.merge(0,C,s,!0,0,A)?i[i.length-1]=g:((C||g.children.length&&!g.children[0].length)&&g.merge(0,C,null,!1,0,A),i.push(g))):null!=g&&g.breakAfter&&(s?s.breakAfter=1:l=1),t++}for(o&&(o.breakAfter=l,I>0&&(!l&&i.length&&o.merge(I,o.length,i[0],!1,n,0)?o.breakAfter=i.shift().breakAfter:(I<o.length||o.children.length&&0==o.children[o.children.length-1].length)&&o.merge(I,o.length,null,!1,n,0),e++));e<t&&i.length;)if(d[t-1].become(i[i.length-1]))t--,i.pop(),A=i.length?0:n;else{if(!d[e].become(i[0]))break;e++,i.shift(),n=i.length?0:A}!i.length&&e&&t<d.length&&!d[e-1].breakAfter&&d[t].merge(0,0,d[e-1],!1,n,A)&&e--,(e<t||i.length)&&g.replaceChildren(e,t,i)}}function si(g,e,I,t,C,i){let l=g.childCursor(),{i:n,off:A}=l.findPos(I,1),{i:d,off:o}=l.findPos(e,-1),s=e-I;for(let g of t)s+=g.length;g.length+=s,oi(g,d,o,n,A,t,0,C,i)}let ai=typeof navigator<"u"?navigator:{userAgent:"",vendor:"",platform:""},Vi=typeof document<"u"?document:{documentElement:{style:{}}};const ci=/Edge\/(\d+)/.exec(ai.userAgent),ri=/MSIE \d/.test(ai.userAgent),hi=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(ai.userAgent),Ui=!!(ri||hi||ci),Zi=!Ui&&/gecko\/(\d+)/i.test(ai.userAgent),Ri=!Ui&&/Chrome\/(\d+)/.exec(ai.userAgent),Fi="webkitFontSmoothing"in Vi.documentElement.style,mi=!Ui&&/Apple Computer/.test(ai.vendor),Bi=mi&&(/Mobile\/\w+/.test(ai.userAgent)||ai.maxTouchPoints>2);var Wi={mac:Bi||/Mac/.test(ai.platform),windows:/Win/.test(ai.platform),linux:/Linux|X11/.test(ai.platform),ie:Ui,ie_version:ri?Vi.documentMode||6:hi?+hi[1]:ci?+ci[1]:0,gecko:Zi,gecko_version:Zi?+(/Firefox\/(\d+)/.exec(ai.userAgent)||[0,0])[1]:0,chrome:!!Ri,chrome_version:Ri?+Ri[1]:0,ios:Bi,android:/Android\b/.test(ai.userAgent),webkit:Fi,safari:mi,webkit_version:Fi?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:null!=Vi.documentElement.style.tabSize?"tab-size":"-moz-tab-size"};const Ni=256;class pi extends ni{constructor(g){super(),this.text=g}get length(){return this.text.length}createDOM(g){this.setDOM(g||document.createTextNode(this.text))}sync(g,e){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(e&&e.node==this.dom&&(e.written=!0),this.dom.nodeValue=this.text)}reuseDOM(g){3==g.nodeType&&this.createDOM(g)}merge(g,e,I){return!(8&this.flags||I&&(!(I instanceof pi)||this.length-(e-g)+I.length>Ni||8&I.flags)||(this.text=this.text.slice(0,g)+(I?I.text:"")+this.text.slice(e),this.markDirty(),0))}split(g){let e=new pi(this.text.slice(g));return this.text=this.text.slice(0,g),this.markDirty(),e.flags|=8&this.flags,e}localPosFromDOM(g,e){return g==this.dom?e:e?this.text.length:0}domAtPos(g){return new ii(this.dom,g)}domBoundsAround(g,e,I){return{from:I,to:I+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(g,e){return bi(this.dom,g,e)}}class Si extends ni{constructor(g,e=[],I=0){super(),this.mark=g,this.children=e,this.length=I;for(let g of e)g.setParent(this)}setAttrs(g){if(gi(g),this.mark.class&&(g.className=this.mark.class),this.mark.attrs)for(let e in this.mark.attrs)g.setAttribute(e,this.mark.attrs[e]);return g}canReuseDOM(g){return super.canReuseDOM(g)&&!(8&(this.flags|g.flags))}reuseDOM(g){g.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(g),this.flags|=6)}sync(g,e){this.dom?4&this.flags&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(g,e)}merge(g,e,I,t,C,i){return!(I&&(!(I instanceof Si&&I.mark.eq(this.mark))||g&&C<=0||e<this.length&&i<=0)||(si(this,g,e,I?I.children.slice():[],C-1,i-1),this.markDirty(),0))}split(g){let e=[],I=0,t=-1,C=0;for(let i of this.children){let l=I+i.length;l>g&&e.push(I<g?i.split(g-I):i),t<0&&I>=g&&(t=C),I=l,C++}let i=this.length-g;return this.length=g,t>-1&&(this.children.length=t,this.markDirty()),new Si(this.mark,e,i)}domAtPos(g){return Gi(this,g)}coordsAt(g,e){return Qi(this,g,e)}}function bi(g,e,I){let t=g.nodeValue.length;e>t&&(e=t);let C=e,i=e,l=0;0==e&&I<0||e==t&&I>=0?Wi.chrome||Wi.gecko||(e?(C--,l=1):i<t&&(i++,l=-1)):I<0?C--:i<t&&i++;let n=_C(g,C,i).getClientRects();if(!n.length)return null;let A=n[(l?l<0:I>=0)?0:n.length-1];return Wi.safari&&!l&&0==A.width&&(A=Array.prototype.find.call(n,(g=>g.width))||A),l?zC(A,l<0):A||null}class ui extends ni{static create(g,e,I){return new ui(g,e,I)}constructor(g,e,I){super(),this.widget=g,this.length=e,this.side=I,this.prevWidget=null}split(g){let e=ui.create(this.widget,this.length-g,this.side);return this.length-=g,e}sync(g){(!this.dom||!this.widget.updateDOM(this.dom,g))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(g)),this.widget.editable||(this.dom.contentEditable="false"))}getSide(){return this.side}merge(g,e,I,t,C,i){return!(I&&(!(I instanceof ui&&this.widget.compare(I.widget))||g>0&&C<=0||e<this.length&&i<=0)||(this.length=g+(I?I.length:0)+(this.length-e),0))}become(g){return g instanceof ui&&g.side==this.side&&this.widget.constructor==g.widget.constructor&&(this.widget.compare(g.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=g.widget,this.length=g.length,!0)}ignoreMutation(){return!0}ignoreEvent(g){return this.widget.ignoreEvent(g)}get overrideDOMText(){if(0==this.length)return pI.empty;let g=this;for(;g.parent;)g=g.parent;let{view:e}=g,I=e&&e.state.doc,t=this.posAtStart;return I?I.slice(t,t+this.length):pI.empty}domAtPos(g){return(this.length?0==g:this.side>0)?ii.before(this.dom):ii.after(this.dom,g==this.length)}domBoundsAround(){return null}coordsAt(g,e){let I=this.widget.coordsAt(this.dom,g,e);if(I)return I;let t=this.dom.getClientRects(),C=null;if(!t.length)return null;let i=this.side?this.side<0:g>0;for(let e=i?t.length-1:0;C=t[e],!(g>0?0==e:e==t.length-1||C.top<C.bottom);e+=i?-1:1);return zC(C,!i)}get isEditable(){return!1}get isWidget(){return!0}get isHidden(){return this.widget.isHidden}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class Ti extends ni{constructor(g){super(),this.side=g}get length(){return 0}merge(){return!1}become(g){return g instanceof Ti&&g.side==this.side}split(){return new Ti(this.side)}sync(){if(!this.dom){let g=document.createElement("img");g.className="cm-widgetBuffer",g.setAttribute("aria-hidden","true"),this.setDOM(g)}}getSide(){return this.side}domAtPos(g){return this.side>0?ii.before(this.dom):ii.after(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(g){return this.dom.getBoundingClientRect()}get overrideDOMText(){return pI.empty}get isHidden(){return!0}}function Gi(g,e){let I=g.dom,{children:t}=g,C=0;for(let g=0;C<t.length;C++){let i=t[C],l=g+i.length;if(!(l==g&&i.getSide()<=0)){if(e>g&&e<l&&i.dom.parentNode==I)return i.domAtPos(e-g);if(e<=g)break;g=l}}for(let g=C;g>0;g--){let e=t[g-1];if(e.dom.parentNode==I)return e.domAtPos(e.length)}for(let g=C;g<t.length;g++){let e=t[g];if(e.dom.parentNode==I)return e.domAtPos(0)}return new ii(I,0)}function ki(g,e,I){let t,{children:C}=g;I>0&&e instanceof Si&&C.length&&(t=C[C.length-1])instanceof Si&&t.mark.eq(e.mark)?ki(t,e.children[0],I-1):(C.push(e),e.setParent(g)),g.length+=e.length}function Qi(g,e,I){let t=null,C=-1,i=null,l=-1;!function g(e,n){for(let A=0,d=0;A<e.children.length&&d<=n;A++){let o=e.children[A],s=d+o.length;s>=n&&(o.children.length?g(o,n-d):(!i||i.isHidden&&I>0)&&(s>n||d==s&&o.getSide()>0)?(i=o,l=n-d):(d<n||d==s&&o.getSide()<0&&!o.isHidden)&&(t=o,C=n-d)),d=s}}(g,e);let n=(I<0?t:i)||t||i;return n?n.coordsAt(Math.max(0,n==t?C:l),I):Mi(g)}function Mi(g){let e=g.dom.lastChild;if(!e)return g.dom.getBoundingClientRect();let I=yC(e);return I[I.length-1]||null}function Yi(g,e){for(let I in g)"class"==I&&e.class?e.class+=" "+g.class:"style"==I&&e.style?e.style+=";"+g.style:e[I]=g[I];return e}pi.prototype.children=ui.prototype.children=Ti.prototype.children=li;const Ei=Object.create(null);function yi(g,e,I){if(g==e)return!0;g||(g=Ei),e||(e=Ei);let t=Object.keys(g),C=Object.keys(e);if(t.length-(I&&t.indexOf(I)>-1?1:0)!=C.length-(I&&C.indexOf(I)>-1?1:0))return!1;for(let i of t)if(i!=I&&(-1==C.indexOf(i)||g[i]!==e[i]))return!1;return!0}function Ji(g,e,I){let t=!1;if(e)for(let C in e)I&&C in I||(t=!0,"style"==C?g.style.cssText="":g.removeAttribute(C));if(I)for(let C in I)e&&e[C]==I[C]||(t=!0,"style"==C?g.style.cssText=I[C]:g.setAttribute(C,I[C]));return t}function Hi(g){let e=Object.create(null);for(let I=0;I<g.attributes.length;I++){let t=g.attributes[I];e[t.name]=t.value}return e}class wi extends ni{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(g,e,I,t,C,i){if(I){if(!(I instanceof wi))return!1;this.dom||I.transferDOM(this)}return t&&this.setDeco(I?I.attrs:null),si(this,g,e,I?I.children.slice():[],C,i),!0}split(g){let e=new wi;if(e.breakAfter=this.breakAfter,0==this.length)return e;let{i:I,off:t}=this.childPos(g);t&&(e.append(this.children[I].split(t),0),this.children[I].merge(t,this.children[I].length,null,!1,0,0),I++);for(let g=I;g<this.children.length;g++)e.append(this.children[g],0);for(;I>0&&0==this.children[I-1].length;)this.children[--I].destroy();return this.children.length=I,this.markDirty(),this.length=g,e}transferDOM(g){this.dom&&(this.markDirty(),g.setDOM(this.dom),g.prevAttrs=void 0===this.prevAttrs?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(g){yi(this.attrs,g)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=g)}append(g,e){ki(this,g,e)}addLineDeco(g){let e=g.spec.attributes,I=g.spec.class;e&&(this.attrs=Yi(e,this.attrs||{})),I&&(this.attrs=Yi({class:I},this.attrs||{}))}domAtPos(g){return Gi(this,g)}reuseDOM(g){"DIV"==g.nodeName&&(this.setDOM(g),this.flags|=6)}sync(g,e){var I;this.dom?4&this.flags&&(gi(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),void 0!==this.prevAttrs&&(Ji(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(g,e);let t=this.dom.lastChild;for(;t&&ni.get(t)instanceof Si;)t=t.lastChild;if(!(t&&this.length&&("BR"==t.nodeName||0!=(null===(I=ni.get(t))||void 0===I?void 0:I.isEditable)||Wi.ios&&this.children.some((g=>g instanceof pi))))){let g=document.createElement("BR");g.cmIgnore=!0,this.dom.appendChild(g)}}measureTextSize(){if(0==this.children.length||this.length>20)return null;let g,e=0;for(let I of this.children){if(!(I instanceof pi)||/[^ -~]/.test(I.text))return null;let t=yC(I.dom);if(1!=t.length)return null;e+=t[0].width,g=t[0].height}return e?{lineHeight:this.dom.getBoundingClientRect().height,charWidth:e/this.length,textHeight:g}:null}coordsAt(g,e){let I=Qi(this,g,e);if(!this.children.length&&I&&this.parent){let{heightOracle:g}=this.parent.view.viewState,e=I.bottom-I.top;if(Math.abs(e-g.lineHeight)<2&&g.textHeight<e){let t=(e-g.textHeight)/2;return{top:I.top+t,bottom:I.bottom-t,left:I.left,right:I.left}}}return I}become(g){return!1}covers(){return!0}static find(g,e){for(let I=0,t=0;I<g.children.length;I++){let C=g.children[I],i=t+C.length;if(i>=e){if(C instanceof wi)return C;if(i>e)break}t=i+C.breakAfter}return null}}class Xi extends ni{constructor(g,e,I){super(),this.widget=g,this.length=e,this.deco=I,this.breakAfter=0,this.prevWidget=null}merge(g,e,I,t,C,i){return!(I&&(!(I instanceof Xi&&this.widget.compare(I.widget))||g>0&&C<=0||e<this.length&&i<=0)||(this.length=g+(I?I.length:0)+(this.length-e),0))}domAtPos(g){return 0==g?ii.before(this.dom):ii.after(this.dom,g==this.length)}split(g){let e=this.length-g;this.length=g;let I=new Xi(this.widget,e,this.deco);return I.breakAfter=this.breakAfter,I}get children(){return li}sync(g){(!this.dom||!this.widget.updateDOM(this.dom,g))&&(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(g)),this.widget.editable||(this.dom.contentEditable="false"))}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):pI.empty}domBoundsAround(){return null}become(g){return g instanceof Xi&&g.widget.constructor==this.widget.constructor&&(g.widget.compare(this.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=g.widget,this.length=g.length,this.deco=g.deco,this.breakAfter=g.breakAfter,!0)}ignoreMutation(){return!0}ignoreEvent(g){return this.widget.ignoreEvent(g)}get isEditable(){return!1}get isWidget(){return!0}coordsAt(g,e){return this.widget.coordsAt(this.dom,g,e)}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}covers(g){let{startSide:e,endSide:I}=this.deco;return e!=I&&(g<0?e<0:I>0)}}class Ki{eq(g){return!1}updateDOM(g,e){return!1}compare(g){return this==g||this.constructor==g.constructor&&this.eq(g)}get estimatedHeight(){return-1}get lineBreaks(){return 0}ignoreEvent(g){return!0}coordsAt(g,e,I){return null}get isHidden(){return!1}get editable(){return!1}destroy(g){}}var zi=function(g){return g[g.Text=0]="Text",g[g.WidgetBefore=1]="WidgetBefore",g[g.WidgetAfter=2]="WidgetAfter",g[g.WidgetRange=3]="WidgetRange",g}(zi||(zi={}));class Di extends $t{constructor(g,e,I,t){super(),this.startSide=g,this.endSide=e,this.widget=I,this.spec=t}get heightRelevant(){return!1}static mark(g){return new vi(g)}static widget(g){let e=Math.max(-1e4,Math.min(1e4,g.side||0)),I=!!g.block;return e+=I&&!g.inlineOrder?e>0?3e8:-4e8:e>0?1e8:-1e8,new Oi(g,e,e,I,g.widget||null,!1)}static replace(g){let e,I,t=!!g.block;if(g.isBlockGap)e=-5e8,I=4e8;else{let{start:C,end:i}=fi(g,t);e=(C?t?-3e8:-1:5e8)-1,I=1+(i?t?2e8:1:-6e8)}return new Oi(g,e,I,t,g.widget||null,!0)}static line(g){return new xi(g)}static set(g,e=!1){return tC.of(g,e)}hasHeight(){return!!this.widget&&this.widget.estimatedHeight>-1}}Di.none=tC.empty;class vi extends Di{constructor(g){let{start:e,end:I}=fi(g);super(e?-1:5e8,I?1:-6e8,null,g),this.tagName=g.tagName||"span",this.class=g.class||"",this.attrs=g.attributes||null}eq(g){var e,I;return this==g||g instanceof vi&&this.tagName==g.tagName&&(this.class||(null===(e=this.attrs)||void 0===e?void 0:e.class))==(g.class||(null===(I=g.attrs)||void 0===I?void 0:I.class))&&yi(this.attrs,g.attrs,"class")}range(g,e=g){if(g>=e)throw new RangeError("Mark decorations may not be empty");return super.range(g,e)}}vi.prototype.point=!1;class xi extends Di{constructor(g){super(-2e8,-2e8,null,g)}eq(g){return g instanceof xi&&this.spec.class==g.spec.class&&yi(this.spec.attributes,g.spec.attributes)}range(g,e=g){if(e!=g)throw new RangeError("Line decoration ranges must be zero-length");return super.range(g,e)}}xi.prototype.mapMode=LI.TrackBefore,xi.prototype.point=!0;class Oi extends Di{constructor(g,e,I,t,C,i){super(e,I,C,g),this.block=t,this.isReplace=i,this.mapMode=t?e<=0?LI.TrackBefore:LI.TrackAfter:LI.TrackDel}get type(){return this.startSide!=this.endSide?zi.WidgetRange:this.startSide<=0?zi.WidgetBefore:zi.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&(this.widget.estimatedHeight>=5||this.widget.lineBreaks>0)}eq(g){return g instanceof Oi&&ji(this.widget,g.widget)&&this.block==g.block&&this.startSide==g.startSide&&this.endSide==g.endSide}range(g,e=g){if(this.isReplace&&(g>e||g==e&&this.startSide>0&&this.endSide<=0))throw new RangeError("Invalid range for replacement decoration");if(!this.isReplace&&e!=g)throw new RangeError("Widget decorations can only have zero-length ranges");return super.range(g,e)}}function fi(g,e=!1){let{inclusiveStart:I,inclusiveEnd:t}=g;return null==I&&(I=g.inclusive),null==t&&(t=g.inclusive),{start:I??e,end:t??e}}function ji(g,e){return g==e||!!(g&&e&&g.compare(e))}function Li(g,e,I,t=0){let C=I.length-1;C>=0&&I[C]+t>=g?I[C]=Math.max(I[C],e):I.push(g,e)}Oi.prototype.point=!0;class Pi{constructor(g,e,I,t){this.doc=g,this.pos=e,this.end=I,this.disallowBlockEffectsFor=t,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.bufferMarks=[],this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=g.iter(),this.skip=e}posCovered(){if(0==this.content.length)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let g=this.content[this.content.length-1];return!(g.breakAfter||g instanceof Xi&&g.deco.endSide<0)}getLine(){return this.curLine||(this.content.push(this.curLine=new wi),this.atCursorPos=!0),this.curLine}flushBuffer(g=this.bufferMarks){this.pendingBuffer&&(this.curLine.append(_i(new Ti(-1),g),g.length),this.pendingBuffer=0)}addBlockWidget(g){this.flushBuffer(),this.curLine=null,this.content.push(g)}finish(g){this.pendingBuffer&&g<=this.bufferMarks.length?this.flushBuffer():this.pendingBuffer=0,!this.posCovered()&&!(g&&this.content.length&&this.content[this.content.length-1]instanceof Xi)&&this.getLine()}buildText(g,e,I){for(;g>0;){if(this.textOff==this.text.length){let{value:e,lineBreak:I,done:t}=this.cursor.next(this.skip);if(this.skip=0,t)throw new Error("Ran out of text content when drawing inline views");if(I){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer(),this.curLine=null,this.atCursorPos=!0,g--;continue}this.text=e,this.textOff=0}let t=Math.min(this.text.length-this.textOff,g,512);this.flushBuffer(e.slice(e.length-I)),this.getLine().append(_i(new pi(this.text.slice(this.textOff,this.textOff+t)),e),I),this.atCursorPos=!0,this.textOff+=t,g-=t,I=0}}span(g,e,I,t){this.buildText(e-g,I,t),this.pos=e,this.openStart<0&&(this.openStart=t)}point(g,e,I,t,C,i){if(this.disallowBlockEffectsFor[i]&&I instanceof Oi){if(I.block)throw new RangeError("Block decorations may not be specified via plugins");if(e>this.doc.lineAt(this.pos).to)throw new RangeError("Decorations that replace line breaks may not be specified via plugins")}let l=e-g;if(I instanceof Oi)if(I.block)I.startSide>0&&!this.posCovered()&&this.getLine(),this.addBlockWidget(new Xi(I.widget||qi.block,l,I));else{let i=ui.create(I.widget||qi.inline,l,l?0:I.startSide),n=this.atCursorPos&&!i.isEditable&&C<=t.length&&(g<e||I.startSide>0),A=!i.isEditable&&(g<e||C>t.length||I.startSide<=0),d=this.getLine();2==this.pendingBuffer&&!n&&!i.isEditable&&(this.pendingBuffer=0),this.flushBuffer(t),n&&(d.append(_i(new Ti(1),t),C),C=t.length+Math.max(0,C-t.length)),d.append(_i(i,t),C),this.atCursorPos=A,this.pendingBuffer=A?g<e||C>t.length?1:2:0,this.pendingBuffer&&(this.bufferMarks=t.slice())}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(I);l&&(this.textOff+l<=this.text.length?this.textOff+=l:(this.skip+=l-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=e),this.openStart<0&&(this.openStart=C)}static build(g,e,I,t,C){let i=new Pi(g,e,I,C);return i.openEnd=tC.spans(t,e,I,i),i.openStart<0&&(i.openStart=i.openEnd),i.finish(i.openEnd),i}}function _i(g,e){for(let I of e)g=new Si(I,[g],g.length);return g}class qi extends Ki{constructor(g){super(),this.tag=g}eq(g){return g.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(g){return g.nodeName.toLowerCase()==this.tag}get isHidden(){return!0}}qi.inline=new qi("span"),qi.block=new qi("div");var $i=function(g){return g[g.LTR=0]="LTR",g[g.RTL=1]="RTL",g}($i||($i={}));const gl=$i.LTR,el=$i.RTL;function Il(g){let e=[];for(let I=0;I<g.length;I++)e.push(1<<+g[I]);return e}const tl=Il("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),Cl=Il("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),il=Object.create(null),ll=[];for(let g of["()","[]","{}"]){let e=g.charCodeAt(0),I=g.charCodeAt(1);il[e]=I,il[I]=-e}function nl(g){return g<=247?tl[g]:1424<=g&&g<=1524?2:1536<=g&&g<=1785?Cl[g-1536]:1774<=g&&g<=2220?4:8192<=g&&g<=8204?256:64336<=g&&g<=65023?4:1}const Al=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;class dl{get dir(){return this.level%2?el:gl}constructor(g,e,I){this.from=g,this.to=e,this.level=I}side(g,e){return this.dir==e==g?this.to:this.from}forward(g,e){return g==(this.dir==e)}static find(g,e,I,t){let C=-1;for(let i=0;i<g.length;i++){let l=g[i];if(l.from<=e&&l.to>=e){if(l.level==I)return i;(C<0||(0!=t?t<0?l.from<e:l.to>e:g[C].level>l.level))&&(C=i)}}if(C<0)throw new RangeError("Index out of range");return C}}function ol(g,e){if(g.length!=e.length)return!1;for(let I=0;I<g.length;I++){let t=g[I],C=e[I];if(t.from!=C.from||t.to!=C.to||t.direction!=C.direction||!ol(t.inner,C.inner))return!1}return!0}const sl=[];function al(g,e,I,t,C){for(let i=0;i<=t.length;i++){let l=i?t[i-1].to:e,n=i<t.length?t[i].from:I,A=i?256:C;for(let e=l,I=A,t=A;e<n;e++){let C=nl(g.charCodeAt(e));512==C?C=I:8==C&&4==t&&(C=16),sl[e]=4==C?2:C,7&C&&(t=C),I=C}for(let g=l,e=A,t=A;g<n;g++){let C=sl[g];if(128==C)g<n-1&&e==sl[g+1]&&24&e?C=sl[g]=e:sl[g]=256;else if(64==C){let C=g+1;for(;C<n&&64==sl[C];)C++;let i=g&&8==e||C<I&&8==sl[C]?1==t?1:8:256;for(let e=g;e<C;e++)sl[e]=i;g=C-1}else 8==C&&1==t&&(sl[g]=1);e=C,7&C&&(t=C)}}}function Vl(g,e,I,t,C){let i=1==C?2:1;for(let l=0,n=0,A=0;l<=t.length;l++){let d=l?t[l-1].to:e,o=l<t.length?t[l].from:I;for(let e,I,t,l=d;l<o;l++)if(I=il[e=g.charCodeAt(l)])if(I<0){for(let g=n-3;g>=0;g-=3)if(ll[g+1]==-I){let e=ll[g+2],I=2&e?C:4&e?1&e?i:C:0;I&&(sl[l]=sl[ll[g]]=I),n=g;break}}else{if(189==ll.length)break;ll[n++]=l,ll[n++]=e,ll[n++]=A}else if(2==(t=sl[l])||1==t){let g=t==C;A=g?0:1;for(let e=n-3;e>=0;e-=3){let I=ll[e+2];if(2&I)break;if(g)ll[e+2]|=2;else{if(4&I)break;ll[e+2]|=4}}}}}function cl(g,e,I,t){for(let C=0,i=t;C<=I.length;C++){let l=C?I[C-1].to:g,n=C<I.length?I[C].from:e;for(let A=l;A<n;){let l=sl[A];if(256==l){let l=A+1;for(;;)if(l==n){if(C==I.length)break;l=I[C++].to,n=C<I.length?I[C].from:e}else{if(256!=sl[l])break;l++}let d=1==i,o=d==(1==(l<e?sl[l]:t))?d?1:2:t;for(let e=l,t=C,i=t?I[t-1].to:g;e>A;)e==i&&(e=I[--t].from,i=t?I[t-1].to:g),sl[--e]=o;A=l}else i=l,A++}}}function rl(g,e,I,t,C,i,l){let n=t%2?2:1;if(t%2==C%2)for(let A=e,d=0;A<I;){let e=!0,o=!1;if(d==i.length||A<i[d].from){let g=sl[A];g!=n&&(e=!1,o=16==g)}let s=e||1!=n?null:[],a=e?t:t+1,V=A;g:for(;;)if(d<i.length&&V==i[d].from){if(o)break g;let c=i[d];if(!e)for(let g=c.to,e=d+1;;){if(g==I)break g;if(!(e<i.length&&i[e].from==g)){if(sl[g]==n)break g;break}g=i[e++].to}d++,s?s.push(c):(c.from>A&&l.push(new dl(A,c.from,a)),hl(g,c.direction==gl!=!(a%2)?t+1:t,C,c.inner,c.from,c.to,l),A=c.to),V=c.to}else{if(V==I||(e?sl[V]!=n:sl[V]==n))break;V++}s?rl(g,A,V,t+1,C,s,l):A<V&&l.push(new dl(A,V,a)),A=V}else for(let A=I,d=i.length;A>e;){let I=!0,o=!1;if(!d||A>i[d-1].to){let g=sl[A-1];g!=n&&(I=!1,o=16==g)}let s=I||1!=n?null:[],a=I?t:t+1,V=A;g:for(;;)if(d&&V==i[d-1].to){if(o)break g;let c=i[--d];if(!I)for(let g=c.from,I=d;;){if(g==e)break g;if(!I||i[I-1].to!=g){if(sl[g-1]==n)break g;break}g=i[--I].from}s?s.push(c):(c.to<A&&l.push(new dl(c.to,A,a)),hl(g,c.direction==gl!=!(a%2)?t+1:t,C,c.inner,c.from,c.to,l),A=c.from),V=c.from}else{if(V==e||(I?sl[V-1]!=n:sl[V-1]==n))break;V--}s?rl(g,V,A,t+1,C,s,l):V<A&&l.push(new dl(V,A,a)),A=V}}function hl(g,e,I,t,C,i,l){let n=e%2?2:1;al(g,C,i,t,n),Vl(g,C,i,t,n),cl(C,i,t,n),rl(g,C,i,e,I,t,l)}function Ul(g,e,I){if(!g)return[new dl(0,0,e==el?1:0)];if(e==gl&&!I.length&&!Al.test(g))return Zl(g.length);if(I.length)for(;g.length>sl.length;)sl[sl.length]=256;let t=[],C=e==gl?0:1;return hl(g,C,C,I,0,g.length,t),t}function Zl(g){return[new dl(0,g,0)]}let Rl="";function Fl(g,e,I,t,C){var i;let l=t.head-g.from,n=dl.find(e,l,null!==(i=t.bidiLevel)&&void 0!==i?i:-1,t.assoc),A=e[n],d=A.side(C,I);if(l==d){let g=n+=C?1:-1;if(g<0||g>=e.length)return null;A=e[n=g],l=A.side(!C,I),d=A.side(C,I)}let o=XI(g.text,l,A.forward(C,I));(o<A.from||o>A.to)&&(o=d),Rl=g.text.slice(Math.min(l,o),Math.max(l,o));let s=n==(C?e.length-1:0)?null:e[n+(C?1:-1)];return s&&o==d&&s.level+(C?0:1)<A.level?it.cursor(s.side(!C,I)+g.from,s.forward(C,I)?1:-1,s.level):it.cursor(o+g.from,A.forward(C,I)?-1:1,A.level)}function ml(g,e,I){for(let t=e;t<I;t++){let e=nl(g.charCodeAt(t));if(1==e)return gl;if(2==e||4==e)return el}return gl}const Bl=At.define(),Wl=At.define(),Nl=At.define(),pl=At.define(),Sl=At.define(),bl=At.define(),ul=At.define(),Tl=At.define({combine:g=>g.some((g=>g))}),Gl=At.define({combine:g=>g.some((g=>g))}),kl=At.define();class Ql{constructor(g,e="nearest",I="nearest",t=5,C=5,i=!1){this.range=g,this.y=e,this.x=I,this.yMargin=t,this.xMargin=C,this.isSnapshot=i}map(g){return g.empty?this:new Ql(this.range.map(g),this.y,this.x,this.yMargin,this.xMargin,this.isSnapshot)}clip(g){return this.range.to<=g.doc.length?this:new Ql(it.cursor(g.doc.length),this.y,this.x,this.yMargin,this.xMargin,this.isSnapshot)}}const Ml=yt.define({map:(g,e)=>g.map(e)});function Yl(g,e,I){let t=g.facet(pl);t.length?t[0](e):window.onerror&&window.onerror(String(e),I,void 0,void 0,e)}const El=At.define({combine:g=>!g.length||g[0]});let yl=0;const Jl=At.define();class Hl{constructor(g,e,I,t,C){this.id=g,this.create=e,this.domEventHandlers=I,this.domEventObservers=t,this.extension=C(this)}static define(g,e){const{eventHandlers:I,eventObservers:t,provide:C,decorations:i}=e||{};return new Hl(yl++,g,I,t,(g=>{let e=[Jl.of(g)];return i&&e.push(zl.of((e=>{let I=e.plugin(g);return I?i(I):Di.none}))),C&&e.push(C(g)),e}))}static fromClass(g,e){return Hl.define((e=>new g(e)),e)}}class wl{constructor(g){this.spec=g,this.mustUpdate=null,this.value=null}update(g){if(this.value){if(this.mustUpdate){let g=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(g)}catch(e){if(Yl(g.state,e,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch{}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(g)}catch(e){Yl(g.state,e,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(g){var e;if(null!==(e=this.value)&&void 0!==e&&e.destroy)try{this.value.destroy()}catch(e){Yl(g.state,e,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const Xl=At.define(),Kl=At.define(),zl=At.define(),Dl=At.define(),vl=At.define(),xl=At.define();function Ol(g,e){let I=g.state.facet(xl);if(!I.length)return I;let t=I.map((e=>e instanceof Function?e(g):e)),C=[];return tC.spans(t,e.from,e.to,{point(){},span(g,I,t,i){let l=g-e.from,n=I-e.from,A=C;for(let g=t.length-1;g>=0;g--,i--){let I,C=t[g].spec.bidiIsolate;if(null==C&&(C=ml(e.text,l,n)),i>0&&A.length&&(I=A[A.length-1]).to==l&&I.direction==C)I.to=n,A=I.inner;else{let g={from:l,to:n,direction:C,inner:[]};A.push(g),A=g.inner}}}}),C}const fl=At.define();function jl(g){let e=0,I=0,t=0,C=0;for(let i of g.state.facet(fl)){let l=i(g);l&&(null!=l.left&&(e=Math.max(e,l.left)),null!=l.right&&(I=Math.max(I,l.right)),null!=l.top&&(t=Math.max(t,l.top)),null!=l.bottom&&(C=Math.max(C,l.bottom)))}return{left:e,right:I,top:t,bottom:C}}const Ll=At.define();class Pl{constructor(g,e,I,t){this.fromA=g,this.toA=e,this.fromB=I,this.toB=t}join(g){return new Pl(Math.min(this.fromA,g.fromA),Math.max(this.toA,g.toA),Math.min(this.fromB,g.fromB),Math.max(this.toB,g.toB))}addToSet(g){let e=g.length,I=this;for(;e>0;e--){let t=g[e-1];if(!(t.fromA>I.toA)){if(t.toA<I.fromA)break;I=I.join(t),g.splice(e-1,1)}}return g.splice(e,0,I),g}static extendWithRanges(g,e){if(0==e.length)return g;let I=[];for(let t=0,C=0,i=0,l=0;;t++){let n=t==g.length?null:g[t],A=i-l,d=n?n.fromB:1e9;for(;C<e.length&&e[C]<d;){let g=e[C],t=e[C+1],i=Math.max(l,g),n=Math.min(d,t);if(i<=n&&new Pl(i+A,n+A,i,n).addToSet(I),t>d)break;C+=2}if(!n)return I;new Pl(n.fromA,n.toA,n.fromB,n.toB).addToSet(I),i=n.toA,l=n.toB}}}class _l{constructor(g,e,I){this.view=g,this.state=e,this.transactions=I,this.flags=0,this.startState=g.state,this.changes=_I.empty(this.startState.doc.length);for(let g of I)this.changes=this.changes.compose(g.changes);let t=[];this.changes.iterChangedRanges(((g,e,I,C)=>t.push(new Pl(g,e,I,C)))),this.changedRanges=t}static create(g,e,I){return new _l(g,e,I)}get viewportChanged(){return(4&this.flags)>0}get heightChanged(){return(2&this.flags)>0}get geometryChanged(){return this.docChanged||(10&this.flags)>0}get focusChanged(){return(1&this.flags)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some((g=>g.selection))}get empty(){return 0==this.flags&&0==this.transactions.length}}class ql extends ni{get length(){return this.view.state.doc.length}constructor(g){super(),this.view=g,this.decorations=[],this.dynamicDecorationMap=[],this.domChanged=null,this.hasComposition=null,this.markedForComposition=new Set,this.lastCompositionAfterCursor=!1,this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(g.contentDOM),this.children=[new wi],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new Pl(0,0,0,g.state.doc.length)],0,null)}update(g){var e;let I=g.changedRanges;this.minWidth>0&&I.length&&(I.every((({fromA:g,toA:e})=>e<this.minWidthFrom||g>this.minWidthTo))?(this.minWidthFrom=g.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=g.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0);let t=-1;this.view.inputState.composing>=0&&(null!==(e=this.domChanged)&&void 0!==e&&e.newSel?t=this.domChanged.newSel.head:!An(g.changes,this.hasComposition)&&!g.selectionSet&&(t=g.state.selection.main.head));let C=t>-1?In(this.view,g.changes,t):null;if(this.domChanged=null,this.hasComposition){this.markedForComposition.clear();let{from:e,to:t}=this.hasComposition;I=new Pl(e,t,g.changes.mapPos(e,-1),g.changes.mapPos(t,1)).addToSet(I.slice())}this.hasComposition=C?{from:C.range.fromB,to:C.range.toB}:null,(Wi.ie||Wi.chrome)&&!C&&g&&g.state.doc.lines!=g.startState.doc.lines&&(this.forceSelection=!0);let i=ln(this.decorations,this.updateDeco(),g.changes);return I=Pl.extendWithRanges(I,i),!!(7&this.flags||0!=I.length)&&(this.updateInner(I,g.startState.doc.length,C),g.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(g,e,I){this.view.viewState.mustMeasureContent=!0,this.updateChildren(g,e,I);let{observer:t}=this.view;t.ignore((()=>{this.dom.style.height=this.view.viewState.contentHeight/this.view.scaleY+"px",this.dom.style.flexBasis=this.minWidth?this.minWidth+"px":"";let g=Wi.chrome||Wi.ios?{node:t.selectionRange.focusNode,written:!1}:void 0;this.sync(this.view,g),this.flags&=-8,g&&(g.written||t.selectionRange.focusNode!=g.node)&&(this.forceSelection=!0),this.dom.style.height=""})),this.markedForComposition.forEach((g=>g.flags&=-9));let C=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let g of this.children)g instanceof Xi&&g.widget instanceof gn&&C.push(g.dom);t.updateGaps(C)}updateChildren(g,e,I){let t=I?I.range.addToSet(g.slice()):g,C=this.childCursor(e);for(let g=t.length-1;;g--){let e=g>=0?t[g]:null;if(!e)break;let i,l,n,A,{fromA:d,toA:o,fromB:s,toB:a}=e;if(I&&I.range.fromB<a&&I.range.toB>s){let g=Pi.build(this.view.state.doc,s,I.range.fromB,this.decorations,this.dynamicDecorationMap),e=Pi.build(this.view.state.doc,I.range.toB,a,this.decorations,this.dynamicDecorationMap);l=g.breakAtStart,n=g.openStart,A=e.openEnd;let t=this.compositionView(I);e.breakAtStart?t.breakAfter=1:e.content.length&&t.merge(t.length,t.length,e.content[0],!1,e.openStart,0)&&(t.breakAfter=e.content[0].breakAfter,e.content.shift()),g.content.length&&t.merge(0,0,g.content[g.content.length-1],!0,0,g.openEnd)&&g.content.pop(),i=g.content.concat(t).concat(e.content)}else({content:i,breakAtStart:l,openStart:n,openEnd:A}=Pi.build(this.view.state.doc,s,a,this.decorations,this.dynamicDecorationMap));let{i:V,off:c}=C.findPos(o,1),{i:r,off:h}=C.findPos(d,-1);oi(this,r,h,V,c,i,l,n,A)}I&&this.fixCompositionDOM(I)}compositionView(g){let e=new pi(g.text.nodeValue);e.flags|=8;for(let{deco:I}of g.marks)e=new Si(I,[e],e.length);let I=new wi;return I.append(e,0),I}fixCompositionDOM(g){let e=(g,e)=>{e.flags|=8|(e.children.some((g=>7&g.flags))?1:0),this.markedForComposition.add(e);let I=ni.get(g);I&&I!=e&&(I.dom=null),e.setDOM(g)},I=this.childPos(g.range.fromB,1),t=this.children[I.i];e(g.line,t);for(let C=g.marks.length-1;C>=-1;C--)I=t.childPos(I.off,1),t=t.children[I.i],e(C>=0?g.marks[C].node:g.text,t)}updateSelection(g=!1,e=!1){(g||!this.view.observer.selectionRange.focusNode)&&this.view.observer.readSelectionRange();let I=this.view.root.activeElement,t=I==this.dom,C=!t&&EC(this.dom,this.view.observer.selectionRange)&&!(I&&this.dom.contains(I));if(!(t||e||C))return;let i=this.forceSelection;this.forceSelection=!1;let l=this.view.state.selection.main,n=this.moveToLine(this.domAtPos(l.anchor)),A=l.empty?n:this.moveToLine(this.domAtPos(l.head));if(Wi.gecko&&l.empty&&!this.hasComposition&&$l(n)){let g=document.createTextNode("");this.view.observer.ignore((()=>n.node.insertBefore(g,n.node.childNodes[n.offset]||null))),n=A=new ii(g,0),i=!0}let d=this.view.observer.selectionRange;(i||!d.focusNode||(!JC(n.node,n.offset,d.anchorNode,d.anchorOffset)||!JC(A.node,A.offset,d.focusNode,d.focusOffset))&&!this.suppressWidgetCursorChange(d,l))&&(this.view.observer.ignore((()=>{Wi.android&&Wi.chrome&&this.dom.contains(d.focusNode)&&nn(d.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let g=QC(this.view.root);if(g)if(l.empty){if(Wi.gecko){let g=tn(n.node,n.offset);if(g&&3!=g){let e=(1==g?ti:Ci)(n.node,n.offset);e&&(n=new ii(e.node,e.offset))}}g.collapse(n.node,n.offset),null!=l.bidiLevel&&void 0!==g.caretBidiLevel&&(g.caretBidiLevel=l.bidiLevel)}else if(g.extend){g.collapse(n.node,n.offset);try{g.extend(A.node,A.offset)}catch{}}else{let e=document.createRange();l.anchor>l.head&&([n,A]=[A,n]),e.setEnd(A.node,A.offset),e.setStart(n.node,n.offset),g.removeAllRanges(),g.addRange(e)}C&&this.view.root.activeElement==this.dom&&(this.dom.blur(),I&&I.focus())})),this.view.observer.setSelectionRange(n,A)),this.impreciseAnchor=n.precise?null:new ii(d.anchorNode,d.anchorOffset),this.impreciseHead=A.precise?null:new ii(d.focusNode,d.focusOffset)}suppressWidgetCursorChange(g,e){return this.hasComposition&&e.empty&&JC(g.focusNode,g.focusOffset,g.anchorNode,g.anchorOffset)&&this.posFromDOM(g.focusNode,g.focusOffset)==e.head}enforceCursorAssoc(){if(this.hasComposition)return;let{view:g}=this,e=g.state.selection.main,I=QC(g.root),{anchorNode:t,anchorOffset:C}=g.observer.selectionRange;if(!(I&&e.empty&&e.assoc&&I.modify))return;let i=wi.find(this,e.head);if(!i)return;let l=i.posAtStart;if(e.head==l||e.head==l+i.length)return;let n=this.coordsAt(e.head,-1),A=this.coordsAt(e.head,1);if(!n||!A||n.bottom>A.top)return;let d=this.domAtPos(e.head+e.assoc);I.collapse(d.node,d.offset),I.modify("move",e.assoc<0?"forward":"backward","lineboundary"),g.observer.readSelectionRange();let o=g.observer.selectionRange;g.docView.posFromDOM(o.anchorNode,o.anchorOffset)!=e.from&&I.collapse(t,C)}moveToLine(g){let e,I=this.dom;if(g.node!=I)return g;for(let t=g.offset;!e&&t<I.childNodes.length;t++){let g=ni.get(I.childNodes[t]);g instanceof wi&&(e=g.domAtPos(0))}for(let t=g.offset-1;!e&&t>=0;t--){let g=ni.get(I.childNodes[t]);g instanceof wi&&(e=g.domAtPos(g.length))}return e?new ii(e.node,e.offset,!0):g}nearest(g){for(let e=g;e;){let g=ni.get(e);if(g&&g.rootView==this)return g;e=e.parentNode}return null}posFromDOM(g,e){let I=this.nearest(g);if(!I)throw new RangeError("Trying to find position for a DOM position outside of the document");return I.localPosFromDOM(g,e)+I.posAtStart}domAtPos(g){let{i:e,off:I}=this.childCursor().findPos(g,-1);for(;e<this.children.length-1;){let g=this.children[e];if(I<g.length||g instanceof wi)break;e++,I=0}return this.children[e].domAtPos(I)}coordsAt(g,e){let I=null,t=0;for(let C=this.length,i=this.children.length-1;i>=0;i--){let l=this.children[i],n=C-l.breakAfter,A=n-l.length;if(n<g)break;A<=g&&(A<g||l.covers(-1))&&(n>g||l.covers(1))&&(!I||l instanceof wi&&!(I instanceof wi&&e>=0))&&(I=l,t=A),C=A}return I?I.coordsAt(g-t,e):null}coordsForChar(g){let{i:e,off:I}=this.childPos(g,1),t=this.children[e];if(!(t instanceof wi))return null;for(;t.children.length;){let{i:g,off:e}=t.childPos(I,1);for(;;g++){if(g==t.children.length)return null;if((t=t.children[g]).length)break}I=e}if(!(t instanceof pi))return null;let C=XI(t.text,I);if(C==I)return null;let i=_C(t.dom,I,C).getClientRects();for(let g=0;g<i.length;g++){let e=i[g];if(g==i.length-1||e.top<e.bottom&&e.left<e.right)return e}return null}measureVisibleLineHeights(g){let e=[],{from:I,to:t}=g,C=this.view.contentDOM.clientWidth,i=C>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,l=-1,n=this.view.textDirection==$i.LTR;for(let g=0,A=0;A<this.children.length;A++){let d=this.children[A],o=g+d.length;if(o>t)break;if(g>=I){let I=d.dom.getBoundingClientRect();if(e.push(I.height),i){let e=d.dom.lastChild,t=e?yC(e):[];if(t.length){let e=t[t.length-1],i=n?e.right-I.left:I.right-e.left;i>l&&(l=i,this.minWidth=C,this.minWidthFrom=g,this.minWidthTo=o)}}}g=o+d.breakAfter}return e}textDirectionAt(g){let{i:e}=this.childPos(g,1);return"rtl"==getComputedStyle(this.children[e].dom).direction?$i.RTL:$i.LTR}measureTextSize(){for(let g of this.children)if(g instanceof wi){let e=g.measureTextSize();if(e)return e}let g,e,I,t=document.createElement("div");return t.className="cm-line",t.style.width="99999px",t.style.position="absolute",t.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore((()=>{this.dom.appendChild(t);let C=yC(t.firstChild)[0];g=t.getBoundingClientRect().height,e=C?C.width/27:7,I=C?C.height:g,t.remove()})),{lineHeight:g,charWidth:e,textHeight:I}}childCursor(g=this.length){let e=this.children.length;return e&&(g-=this.children[--e].length),new di(this.children,g,e)}computeBlockGapDeco(){let g=[],e=this.view.viewState;for(let I=0,t=0;;t++){let C=t==e.viewports.length?null:e.viewports[t],i=C?C.from-1:this.length;if(i>I){let t=(e.lineBlockAt(i).bottom-e.lineBlockAt(I).top)/this.view.scaleY;g.push(Di.replace({widget:new gn(t),block:!0,inclusive:!0,isBlockGap:!0}).range(I,i))}if(!C)break;I=C.to+1}return Di.set(g)}updateDeco(){let g=0,e=this.view.state.facet(zl).map((e=>(this.dynamicDecorationMap[g++]="function"==typeof e)?e(this.view):e)),I=!1,t=this.view.state.facet(Dl).map(((g,e)=>{let t="function"==typeof g;return t&&(I=!0),t?g(this.view):g}));for(t.length&&(this.dynamicDecorationMap[g++]=I,e.push(tC.join(t))),this.decorations=[...e,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco];g<this.decorations.length;)this.dynamicDecorationMap[g++]=!1;return this.decorations}scrollIntoView(g){if(g.isSnapshot){let e=this.view.viewState.lineBlockAt(g.range.head);return this.view.scrollDOM.scrollTop=e.top-g.yMargin,void(this.view.scrollDOM.scrollLeft=g.xMargin)}for(let e of this.view.state.facet(kl))try{if(e(this.view,g.range,g))return!0}catch(g){Yl(this.view.state,g,"scroll handler")}let e,{range:I}=g,t=this.coordsAt(I.head,I.empty?I.assoc:I.head>I.anchor?-1:1);if(!t)return;!I.empty&&(e=this.coordsAt(I.anchor,I.anchor>I.head?-1:1))&&(t={left:Math.min(t.left,e.left),top:Math.min(t.top,e.top),right:Math.max(t.right,e.right),bottom:Math.max(t.bottom,e.bottom)});let C=jl(this.view),i={left:t.left-C.left,top:t.top-C.top,right:t.right+C.right,bottom:t.bottom+C.bottom},{offsetWidth:l,offsetHeight:n}=this.view.scrollDOM;xC(this.view.scrollDOM,i,I.head<I.anchor?-1:1,g.x,g.y,Math.max(Math.min(g.xMargin,l),-l),Math.max(Math.min(g.yMargin,n),-n),this.view.textDirection==$i.LTR)}}function $l(g){return 1==g.node.nodeType&&g.node.firstChild&&(0==g.offset||"false"==g.node.childNodes[g.offset-1].contentEditable)&&(g.offset==g.node.childNodes.length||"false"==g.node.childNodes[g.offset].contentEditable)}class gn extends Ki{constructor(g){super(),this.height=g}toDOM(){let g=document.createElement("div");return g.className="cm-gap",this.updateDOM(g),g}eq(g){return g.height==this.height}updateDOM(g){return g.style.height=this.height+"px",!0}get editable(){return!0}get estimatedHeight(){return this.height}ignoreEvent(){return!1}}function en(g,e){let I=g.observer.selectionRange;if(!I.focusNode)return null;let t=ti(I.focusNode,I.focusOffset),C=Ci(I.focusNode,I.focusOffset),i=t||C;if(C&&t&&C.node!=t.node){let e=ni.get(C.node);if(!e||e instanceof pi&&e.text!=C.node.nodeValue)i=C;else if(g.docView.lastCompositionAfterCursor){let g=ni.get(t.node);!g||g instanceof pi&&g.text!=t.node.nodeValue||(i=C)}}if(g.docView.lastCompositionAfterCursor=i!=t,!i)return null;let l=e-i.offset;return{from:l,to:l+i.node.nodeValue.length,node:i.node}}function In(g,e,I){let t=en(g,I);if(!t)return null;let{node:C,from:i,to:l}=t,n=C.nodeValue;if(/[\n\r]/.test(n)||g.state.doc.sliceString(t.from,t.to)!=n)return null;let A=e.invertedDesc,d=new Pl(A.mapPos(i),A.mapPos(l),i,l),o=[];for(let e=C.parentNode;;e=e.parentNode){let I=ni.get(e);if(I instanceof Si)o.push({node:e,deco:I.mark});else{if(I instanceof wi||"DIV"==e.nodeName&&e.parentNode==g.contentDOM)return{range:d,text:C,marks:o,line:e};if(e==g.contentDOM)return null;o.push({node:e,deco:new vi({inclusive:!0,attributes:Hi(e),tagName:e.tagName.toLowerCase()})})}}}function tn(g,e){return 1!=g.nodeType?0:(e&&"false"==g.childNodes[e-1].contentEditable?1:0)|(e<g.childNodes.length&&"false"==g.childNodes[e].contentEditable?2:0)}let Cn=class{constructor(){this.changes=[]}compareRange(g,e){Li(g,e,this.changes)}comparePoint(g,e){Li(g,e,this.changes)}};function ln(g,e,I){let t=new Cn;return tC.compare(g,e,I,t),t.changes}function nn(g,e){for(let I=g;I&&I!=e;I=I.assignedSlot||I.parentNode)if(1==I.nodeType&&"false"==I.contentEditable)return!0;return!1}function An(g,e){let I=!1;return e&&g.iterChangedRanges(((g,t)=>{g<e.to&&t>e.from&&(I=!0)})),I}function dn(g,e,I=1){let t=g.charCategorizer(e),C=g.doc.lineAt(e),i=e-C.from;if(0==C.length)return it.cursor(e);0==i?I=1:i==C.length&&(I=-1);let l=i,n=i;I<0?l=XI(C.text,i,!1):n=XI(C.text,i);let A=t(C.text.slice(l,n));for(;l>0;){let g=XI(C.text,l,!1);if(t(C.text.slice(g,l))!=A)break;l=g}for(;n<C.length;){let g=XI(C.text,n);if(t(C.text.slice(n,g))!=A)break;n=g}return it.range(l+C.from,n+C.from)}function on(g,e){return e.left>g?e.left-g:Math.max(0,g-e.right)}function sn(g,e){return e.top>g?e.top-g:Math.max(0,g-e.bottom)}function an(g,e){return g.top<e.bottom-1&&g.bottom>e.top+1}function Vn(g,e){return e<g.top?{top:e,left:g.left,right:g.right,bottom:g.bottom}:g}function cn(g,e){return e>g.bottom?{top:g.top,left:g.left,right:g.right,bottom:e}:g}function rn(g,e,I){let t,C,i,l,n,A,d,o,s=!1;for(let a=g.firstChild;a;a=a.nextSibling){let g=yC(a);for(let V=0;V<g.length;V++){let c=g[V];C&&an(C,c)&&(c=Vn(cn(c,C.bottom),C.top));let r=on(e,c),h=sn(I,c);if(0==r&&0==h)return 3==a.nodeType?hn(a,e,I):rn(a,e,I);if(!t||l>h||l==h&&i>r){t=a,C=c,i=r,l=h;let n=h?I<c.top?-1:1:r?e<c.left?-1:1:0;s=!n||(n>0?V<g.length-1:V>0)}0==r?I>c.bottom&&(!d||d.bottom<c.bottom)?(n=a,d=c):I<c.top&&(!o||o.top>c.top)&&(A=a,o=c):d&&an(d,c)?d=cn(d,c.bottom):o&&an(o,c)&&(o=Vn(o,c.top))}}if(d&&d.bottom>=I?(t=n,C=d):o&&o.top<=I&&(t=A,C=o),!t)return{node:g,offset:0};let a=Math.max(C.left,Math.min(C.right,e));return 3==t.nodeType?hn(t,a,I):s&&"false"!=t.contentEditable?rn(t,a,I):{node:g,offset:Array.prototype.indexOf.call(g.childNodes,t)+(e>=(C.left+C.right)/2?1:0)}}function hn(g,e,I){let t=g.nodeValue.length,C=-1,i=1e9,l=0;for(let n=0;n<t;n++){let t=_C(g,n,n+1).getClientRects();for(let A=0;A<t.length;A++){let d=t[A];if(d.top==d.bottom)continue;l||(l=e-d.left);let o=(d.top>I?d.top-I:I-d.bottom)-1;if(d.left-1<=e&&d.right+1>=e&&o<i){let I=e>=(d.left+d.right)/2,t=I;if((Wi.chrome||Wi.gecko)&&_C(g,n).getBoundingClientRect().left==d.right&&(t=!I),o<=0)return{node:g,offset:n+(t?1:0)};C=n+(t?1:0),i=o}}}return{node:g,offset:C>-1?C:l>0?g.nodeValue.length:0}}function Un(g,e,I,t=-1){var C,i;let l,n=g.contentDOM.getBoundingClientRect(),A=n.top+g.viewState.paddingTop,{docHeight:d}=g.viewState,{x:o,y:s}=e,a=s-A;if(a<0)return 0;if(a>d)return g.state.doc.length;for(let e=g.viewState.heightOracle.textHeight/2,C=!1;l=g.elementAtHeight(a),l.type!=zi.Text;)for(;a=t>0?l.bottom+e:l.top-e,!(a>=0&&a<=d);){if(C)return I?null:0;C=!0,t=-t}s=A+a;let V=l.from;if(V<g.viewport.from)return 0==g.viewport.from?0:I?null:Zn(g,n,l,o,s);if(V>g.viewport.to)return g.viewport.to==g.state.doc.length?g.state.doc.length:I?null:Zn(g,n,l,o,s);let c=g.dom.ownerDocument,r=g.root.elementFromPoint?g.root:c,h=r.elementFromPoint(o,s);h&&!g.contentDOM.contains(h)&&(h=null),h||(o=Math.max(n.left+1,Math.min(n.right-1,o)),h=r.elementFromPoint(o,s),h&&!g.contentDOM.contains(h)&&(h=null));let U,Z=-1;if(h&&0!=(null===(C=g.docView.nearest(h))||void 0===C?void 0:C.isEditable))if(c.caretPositionFromPoint){let g=c.caretPositionFromPoint(o,s);g&&({offsetNode:U,offset:Z}=g)}else if(c.caretRangeFromPoint){let e=c.caretRangeFromPoint(o,s);e&&(({startContainer:U,startOffset:Z}=e),(!g.contentDOM.contains(U)||Wi.safari&&Rn(U,Z,o)||Wi.chrome&&Fn(U,Z,o))&&(U=void 0))}if(!U||!g.docView.dom.contains(U)){let e=wi.find(g.docView,V);if(!e)return a>l.top+l.height/2?l.to:l.from;({node:U,offset:Z}=rn(e.dom,o,s))}let R=g.docView.nearest(U);if(!R)return null;if(R.isWidget&&1==(null===(i=R.dom)||void 0===i?void 0:i.nodeType)){let g=R.dom.getBoundingClientRect();return e.y<g.top||e.y<=g.bottom&&e.x<=(g.left+g.right)/2?R.posAtStart:R.posAtEnd}return R.localPosFromDOM(U,Z)+R.posAtStart}function Zn(g,e,I,t,C){let i=Math.round((t-e.left)*g.defaultCharacterWidth);if(g.lineWrapping&&I.height>1.5*g.defaultLineHeight){let e=g.viewState.heightOracle.textHeight;i+=Math.floor((C-I.top-.5*(g.defaultLineHeight-e))/e)*g.viewState.heightOracle.lineLength}let l=g.state.sliceDoc(I.from,I.to);return I.from+UC(l,i,g.state.tabSize)}function Rn(g,e,I){let t;if(3!=g.nodeType||e!=(t=g.nodeValue.length))return!1;for(let e=g.nextSibling;e;e=e.nextSibling)if(1!=e.nodeType||"BR"!=e.nodeName)return!1;return _C(g,t-1,t).getBoundingClientRect().left>I}function Fn(g,e,I){if(0!=e)return!1;for(let e=g;;){let g=e.parentNode;if(!g||1!=g.nodeType||g.firstChild!=e)return!1;if(g.classList.contains("cm-line"))break;e=g}return I-(1==g.nodeType?g.getBoundingClientRect():_C(g,0,Math.max(g.nodeValue.length,1)).getBoundingClientRect()).left>5}function mn(g,e){let I=g.lineBlockAt(e);if(Array.isArray(I.type))for(let g of I.type)if(g.to>e||g.to==e&&(g.to==I.to||g.type==zi.Text))return g;return I}function Bn(g,e,I,t){let C=mn(g,e.head),i=t&&C.type==zi.Text&&(g.lineWrapping||C.widgetLineBreaks)?g.coordsAtPos(e.assoc<0&&e.head>C.from?e.head-1:e.head):null;if(i){let e=g.dom.getBoundingClientRect(),t=g.textDirectionAt(C.from),l=g.posAtCoords({x:I==(t==$i.LTR)?e.right-1:e.left+1,y:(i.top+i.bottom)/2});if(null!=l)return it.cursor(l,I?-1:1)}return it.cursor(I?C.to:C.from,I?-1:1)}function Wn(g,e,I,t){let C=g.state.doc.lineAt(e.head),i=g.bidiSpans(C),l=g.textDirectionAt(C.from);for(let n=e,A=null;;){let e=Fl(C,i,l,n,I),d=Rl;if(!e){if(C.number==(I?g.state.doc.lines:1))return n;d="\n",C=g.state.doc.line(C.number+(I?1:-1)),i=g.bidiSpans(C),e=g.visualLineSide(C,!I)}if(A){if(!A(d))return n}else{if(!t)return e;A=t(d)}n=e}}function Nn(g,e,I){let t=g.state.charCategorizer(e),C=t(I);return g=>{let e=t(g);return C==Ot.Space&&(C=e),C==e}}function pn(g,e,I,t){let C=e.head,i=I?1:-1;if(C==(I?g.state.doc.length:0))return it.cursor(C,e.assoc);let l,n=e.goalColumn,A=g.contentDOM.getBoundingClientRect(),d=g.coordsAtPos(C,e.assoc||-1),o=g.documentTop;if(d)null==n&&(n=d.left-A.left),l=i<0?d.top:d.bottom;else{let e=g.viewState.lineBlockAt(C);null==n&&(n=Math.min(A.right-A.left,g.defaultCharacterWidth*(C-e.from))),l=(i<0?e.top:e.bottom)+o}let s=A.left+n,a=t??g.viewState.heightOracle.textHeight>>1;for(let e=0;;e+=10){let I=l+(a+e)*i,t=Un(g,{x:s,y:I},!1,i);if(I<A.top||I>A.bottom||(i<0?t<C:t>C)){let e=g.docView.coordsForChar(t),C=!e||I<e.top?-1:1;return it.cursor(t,C,void 0,n)}}}function Sn(g,e,I){for(;;){let t=0;for(let C of g)C.between(e-1,e+1,((g,C,i)=>{if(e>g&&e<C){let i=t||I||(e-g<C-e?-1:1);e=i<0?g:C,t=i}}));if(!t)return e}}function bn(g,e,I){let t=Sn(g.state.facet(vl).map((e=>e(g))),I.from,e.head>I.from?-1:1);return t==I.from?I:it.cursor(t,t<I.from?1:-1)}class un{setSelectionOrigin(g){this.lastSelectionOrigin=g,this.lastSelectionTime=Date.now()}constructor(g){this.view=g,this.lastKeyCode=0,this.lastKeyTime=0,this.lastTouchTime=0,this.lastFocusTime=0,this.lastScrollTop=0,this.lastScrollLeft=0,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.handlers=Object.create(null),this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.compositionPendingKey=!1,this.compositionPendingChange=!1,this.mouseSelection=null,this.draggedContent=null,this.handleEvent=this.handleEvent.bind(this),this.notifiedFocused=g.hasFocus,Wi.safari&&g.contentDOM.addEventListener("input",(()=>null)),Wi.gecko&&VA(g.contentDOM.ownerDocument)}handleEvent(g){!Kn(this.view,g)||this.ignoreDuringComposition(g)||"keydown"==g.type&&this.keydown(g)||this.runHandlers(g.type,g)}runHandlers(g,e){let I=this.handlers[g];if(I){for(let g of I.observers)g(this.view,e);for(let g of I.handlers){if(e.defaultPrevented)break;if(g(this.view,e)){e.preventDefault();break}}}}ensureHandlers(g){let e=Gn(g),I=this.handlers,t=this.view.contentDOM;for(let g in e)if("scroll"!=g){let C=!e[g].handlers.length,i=I[g];i&&C!=!i.handlers.length&&(t.removeEventListener(g,this.handleEvent),i=null),i||t.addEventListener(g,this.handleEvent,{passive:C})}for(let g in I)"scroll"!=g&&!e[g]&&t.removeEventListener(g,this.handleEvent);this.handlers=e}keydown(g){if(this.lastKeyCode=g.keyCode,this.lastKeyTime=Date.now(),9==g.keyCode&&Date.now()<this.lastEscPress+2e3)return!0;if(27!=g.keyCode&&Mn.indexOf(g.keyCode)<0&&(this.view.inputState.lastEscPress=0),Wi.android&&Wi.chrome&&!g.synthetic&&(13==g.keyCode||8==g.keyCode))return this.view.observer.delayAndroidKey(g.key,g.keyCode),!0;let e;return!Wi.ios||g.synthetic||g.altKey||g.metaKey||!((e=kn.find((e=>e.keyCode==g.keyCode)))&&!g.ctrlKey||Qn.indexOf(g.key)>-1&&g.ctrlKey&&!g.shiftKey)?(229!=g.keyCode&&this.view.observer.forceFlush(),!1):(this.pendingIOSKey=e||g,setTimeout((()=>this.flushIOSKey()),250),!0)}flushIOSKey(g){let e=this.pendingIOSKey;return!(!e||"Enter"==e.key&&g&&g.from<g.to&&/^\S+$/.test(g.insert.toString()))&&(this.pendingIOSKey=void 0,qC(this.view.contentDOM,e.key,e.keyCode,e instanceof KeyboardEvent?e:void 0))}ignoreDuringComposition(g){return!!/^key/.test(g.type)&&(this.composing>0||!!(Wi.safari&&!Wi.ios&&this.compositionPendingKey&&Date.now()-this.compositionEndedAt<100)&&(this.compositionPendingKey=!1,!0))}startMouseSelection(g){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=g}update(g){this.mouseSelection&&this.mouseSelection.update(g),this.draggedContent&&g.docChanged&&(this.draggedContent=this.draggedContent.map(g.changes)),g.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}function Tn(g,e){return(I,t)=>{try{return e.call(g,t,I)}catch(g){Yl(I.state,g)}}}function Gn(g){let e=Object.create(null);function I(g){return e[g]||(e[g]={observers:[],handlers:[]})}for(let e of g){let g=e.spec;if(g&&g.domEventHandlers)for(let t in g.domEventHandlers){let C=g.domEventHandlers[t];C&&I(t).handlers.push(Tn(e.value,C))}if(g&&g.domEventObservers)for(let t in g.domEventObservers){let C=g.domEventObservers[t];C&&I(t).observers.push(Tn(e.value,C))}}for(let g in zn)I(g).handlers.push(zn[g]);for(let g in Dn)I(g).observers.push(Dn[g]);return e}const kn=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Enter",keyCode:13,inputType:"insertLineBreak"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],Qn="dthko",Mn=[16,17,18,20,91,92,224,225],Yn=6;function En(g){return.7*Math.max(0,g)+8}function yn(g,e){return Math.max(Math.abs(g.clientX-e.clientX),Math.abs(g.clientY-e.clientY))}class Jn{constructor(g,e,I,t){this.view=g,this.startEvent=e,this.style=I,this.mustSelect=t,this.scrollSpeed={x:0,y:0},this.scrolling=-1,this.lastEvent=e,this.scrollParent=OC(g.contentDOM),this.atoms=g.state.facet(vl).map((e=>e(g)));let C=g.contentDOM.ownerDocument;C.addEventListener("mousemove",this.move=this.move.bind(this)),C.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=e.shiftKey,this.multiple=g.state.facet(_t.allowMultipleSelections)&&Hn(g,e),this.dragging=!(!Xn(g,e)||1!=IA(e))&&null}start(g){!1===this.dragging&&this.select(g)}move(g){var e;if(0==g.buttons)return this.destroy();if(this.dragging||null==this.dragging&&yn(this.startEvent,g)<10)return;this.select(this.lastEvent=g);let I=0,t=0,C=(null===(e=this.scrollParent)||void 0===e?void 0:e.getBoundingClientRect())||{left:0,top:0,right:this.view.win.innerWidth,bottom:this.view.win.innerHeight},i=jl(this.view);g.clientX-i.left<=C.left+6?I=-En(C.left-g.clientX):g.clientX+i.right>=C.right-6&&(I=En(g.clientX-C.right)),g.clientY-i.top<=C.top+6?t=-En(C.top-g.clientY):g.clientY+i.bottom>=C.bottom-6&&(t=En(g.clientY-C.bottom)),this.setScrollSpeed(I,t)}up(g){null==this.dragging&&this.select(this.lastEvent),this.dragging||g.preventDefault(),this.destroy()}destroy(){this.setScrollSpeed(0,0);let g=this.view.contentDOM.ownerDocument;g.removeEventListener("mousemove",this.move),g.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=this.view.inputState.draggedContent=null}setScrollSpeed(g,e){this.scrollSpeed={x:g,y:e},g||e?this.scrolling<0&&(this.scrolling=setInterval((()=>this.scroll()),50)):this.scrolling>-1&&(clearInterval(this.scrolling),this.scrolling=-1)}scroll(){this.scrollParent?(this.scrollParent.scrollLeft+=this.scrollSpeed.x,this.scrollParent.scrollTop+=this.scrollSpeed.y):this.view.win.scrollBy(this.scrollSpeed.x,this.scrollSpeed.y),!1===this.dragging&&this.select(this.lastEvent)}skipAtoms(g){let e=null;for(let I=0;I<g.ranges.length;I++){let t=g.ranges[I],C=null;if(t.empty){let g=Sn(this.atoms,t.from,0);g!=t.from&&(C=it.cursor(g,-1))}else{let g=Sn(this.atoms,t.from,-1),e=Sn(this.atoms,t.to,1);(g!=t.from||e!=t.to)&&(C=it.range(t.from==t.anchor?g:e,t.from==t.head?g:e))}C&&(e||(e=g.ranges.slice()),e[I]=C)}return e?it.create(e,g.mainIndex):g}select(g){let{view:e}=this,I=this.skipAtoms(this.style.get(g,this.extend,this.multiple));(this.mustSelect||!I.eq(e.state.selection,!1===this.dragging))&&this.view.dispatch({selection:I,userEvent:"select.pointer"}),this.mustSelect=!1}update(g){this.style.update(g)&&setTimeout((()=>this.select(this.lastEvent)),20)}}function Hn(g,e){let I=g.state.facet(Bl);return I.length?I[0](e):Wi.mac?e.metaKey:e.ctrlKey}function wn(g,e){let I=g.state.facet(Wl);return I.length?I[0](e):Wi.mac?!e.altKey:!e.ctrlKey}function Xn(g,e){let{main:I}=g.state.selection;if(I.empty)return!1;let t=QC(g.root);if(!t||0==t.rangeCount)return!0;let C=t.getRangeAt(0).getClientRects();for(let g=0;g<C.length;g++){let I=C[g];if(I.left<=e.clientX&&I.right>=e.clientX&&I.top<=e.clientY&&I.bottom>=e.clientY)return!0}return!1}function Kn(g,e){if(!e.bubbles)return!0;if(e.defaultPrevented)return!1;for(let I,t=e.target;t!=g.contentDOM;t=t.parentNode)if(!t||11==t.nodeType||(I=ni.get(t))&&I.ignoreEvent(e))return!1;return!0}const zn=Object.create(null),Dn=Object.create(null),vn=Wi.ie&&Wi.ie_version<15||Wi.ios&&Wi.webkit_version<604;function xn(g){let e=g.dom.parentNode;if(!e)return;let I=e.appendChild(document.createElement("textarea"));I.style.cssText="position: fixed; left: -10000px; top: 10px",I.focus(),setTimeout((()=>{g.focus(),I.remove(),On(g,I.value)}),50)}function On(g,e){let I,{state:t}=g,C=1,i=t.toText(e),l=i.lines==t.selection.ranges.length;if(null!=AA&&t.selection.ranges.every((g=>g.empty))&&AA==i.toString()){let g=-1;I=t.changeByRange((I=>{let n=t.doc.lineAt(I.from);if(n.from==g)return{range:I};g=n.from;let A=t.toText((l?i.line(C++).text:e)+t.lineBreak);return{changes:{from:n.from,insert:A},range:it.cursor(I.from+A.length)}}))}else I=l?t.changeByRange((g=>{let e=i.line(C++);return{changes:{from:g.from,to:g.to,insert:e.text},range:it.cursor(g.from+e.length)}})):t.replaceSelection(i);g.dispatch(I,{userEvent:"input.paste",scrollIntoView:!0})}function fn(g,e,I,t){if(1==t)return it.cursor(e,I);if(2==t)return dn(g.state,e,I);{let I=wi.find(g.docView,e),t=g.state.doc.lineAt(I?I.posAtEnd:e),C=I?I.posAtStart:t.from,i=I?I.posAtEnd:t.to;return i<g.state.doc.length&&i==t.to&&i++,it.range(C,i)}}Dn.scroll=g=>{g.inputState.lastScrollTop=g.scrollDOM.scrollTop,g.inputState.lastScrollLeft=g.scrollDOM.scrollLeft},zn.keydown=(g,e)=>(g.inputState.setSelectionOrigin("select"),27==e.keyCode&&(g.inputState.lastEscPress=Date.now()),!1),Dn.touchstart=(g,e)=>{g.inputState.lastTouchTime=Date.now(),g.inputState.setSelectionOrigin("select.pointer")},Dn.touchmove=g=>{g.inputState.setSelectionOrigin("select.pointer")},zn.mousedown=(g,e)=>{if(g.observer.flush(),g.inputState.lastTouchTime>Date.now()-2e3)return!1;let I=null;for(let t of g.state.facet(Nl))if(I=t(g,e),I)break;if(!I&&0==e.button&&(I=tA(g,e)),I){let t=!g.hasFocus;g.inputState.startMouseSelection(new Jn(g,e,I,t)),t&&g.observer.ignore((()=>PC(g.contentDOM)));let C=g.inputState.mouseSelection;if(C)return C.start(e),!1===C.dragging}return!1};let jn=(g,e)=>g>=e.top&&g<=e.bottom,Ln=(g,e,I)=>jn(e,I)&&g>=I.left&&g<=I.right;function Pn(g,e,I,t){let C=wi.find(g.docView,e);if(!C)return 1;let i=e-C.posAtStart;if(0==i)return 1;if(i==C.length)return-1;let l=C.coordsAt(i,-1);if(l&&Ln(I,t,l))return-1;let n=C.coordsAt(i,1);return n&&Ln(I,t,n)?1:l&&jn(t,l)?-1:1}function _n(g,e){let I=g.posAtCoords({x:e.clientX,y:e.clientY},!1);return{pos:I,bias:Pn(g,I,e.clientX,e.clientY)}}const qn=Wi.ie&&Wi.ie_version<=11;let $n=null,gA=0,eA=0;function IA(g){if(!qn)return g.detail;let e=$n,I=eA;return $n=g,eA=Date.now(),gA=!e||I>Date.now()-400&&Math.abs(e.clientX-g.clientX)<2&&Math.abs(e.clientY-g.clientY)<2?(gA+1)%3:1}function tA(g,e){let I=_n(g,e),t=IA(e),C=g.state.selection;return{update(g){g.docChanged&&(I.pos=g.changes.mapPos(I.pos),C=C.map(g.changes))},get(e,i,l){let n,A=_n(g,e),d=fn(g,A.pos,A.bias,t);if(I.pos!=A.pos&&!i){let e=fn(g,I.pos,I.bias,t),C=Math.min(e.from,d.from),i=Math.max(e.to,d.to);d=C<d.from?it.range(C,i):it.range(i,C)}return i?C.replaceRange(C.main.extend(d.from,d.to)):l&&1==t&&C.ranges.length>1&&(n=CA(C,A.pos))?n:l?C.addRange(d):it.create([d])}}}function CA(g,e){for(let I=0;I<g.ranges.length;I++){let{from:t,to:C}=g.ranges[I];if(t<=e&&C>=e)return it.create(g.ranges.slice(0,I).concat(g.ranges.slice(I+1)),g.mainIndex==I?0:g.mainIndex-(g.mainIndex>I?1:0))}return null}function iA(g,e,I,t){if(!I)return;let C=g.posAtCoords({x:e.clientX,y:e.clientY},!1),{draggedContent:i}=g.inputState,l=t&&i&&wn(g,e)?{from:i.from,to:i.to}:null,n={from:C,insert:I},A=g.state.changes(l?[l,n]:n);g.focus(),g.dispatch({changes:A,selection:{anchor:A.mapPos(C,-1),head:A.mapPos(C,1)},userEvent:l?"move.drop":"input.drop"}),g.inputState.draggedContent=null}function lA(g,e){let I=g.dom.parentNode;if(!I)return;let t=I.appendChild(document.createElement("textarea"));t.style.cssText="position: fixed; left: -10000px; top: 10px",t.value=e,t.focus(),t.selectionEnd=e.length,t.selectionStart=0,setTimeout((()=>{t.remove(),g.focus()}),50)}function nA(g){let e=[],I=[],t=!1;for(let t of g.selection.ranges)t.empty||(e.push(g.sliceDoc(t.from,t.to)),I.push(t));if(!e.length){let C=-1;for(let{from:t}of g.selection.ranges){let i=g.doc.lineAt(t);i.number>C&&(e.push(i.text),I.push({from:i.from,to:Math.min(g.doc.length,i.to+1)})),C=i.number}t=!0}return{text:e.join(g.lineBreak),ranges:I,linewise:t}}zn.dragstart=(g,e)=>{let{selection:{main:I}}=g.state;if(e.target.draggable){let t=g.docView.nearest(e.target);if(t&&t.isWidget){let g=t.posAtStart,e=g+t.length;(g>=I.to||e<=I.from)&&(I=it.range(g,e))}}let{inputState:t}=g;return t.mouseSelection&&(t.mouseSelection.dragging=!0),t.draggedContent=I,e.dataTransfer&&(e.dataTransfer.setData("Text",g.state.sliceDoc(I.from,I.to)),e.dataTransfer.effectAllowed="copyMove"),!1},zn.dragend=g=>(g.inputState.draggedContent=null,!1),zn.drop=(g,e)=>{if(!e.dataTransfer)return!1;if(g.state.readOnly)return!0;let I=e.dataTransfer.files;if(I&&I.length){let t=Array(I.length),C=0,i=()=>{++C==I.length&&iA(g,e,t.filter((g=>null!=g)).join(g.state.lineBreak),!1)};for(let g=0;g<I.length;g++){let e=new FileReader;e.onerror=i,e.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(e.result)||(t[g]=e.result),i()},e.readAsText(I[g])}return!0}{let I=e.dataTransfer.getData("Text");if(I)return iA(g,e,I,!0),!0}return!1},zn.paste=(g,e)=>{if(g.state.readOnly)return!0;g.observer.flush();let I=vn?null:e.clipboardData;return I?(On(g,I.getData("text/plain")||I.getData("text/uri-list")),!0):(xn(g),!1)};let AA=null;zn.copy=zn.cut=(g,e)=>{let{text:I,ranges:t,linewise:C}=nA(g.state);if(!I&&!C)return!1;AA=C?I:null,"cut"==e.type&&!g.state.readOnly&&g.dispatch({changes:t,scrollIntoView:!0,userEvent:"delete.cut"});let i=vn?null:e.clipboardData;return i?(i.clearData(),i.setData("text/plain",I),!0):(lA(g,I),!1)};const dA=Mt.define();function oA(g,e){let I=[];for(let t of g.facet(ul)){let C=t(g,e);C&&I.push(C)}return I?g.update({effects:I,annotations:dA.of(!0)}):null}function sA(g){setTimeout((()=>{let e=g.hasFocus;if(e!=g.inputState.notifiedFocused){let I=oA(g.state,e);I?g.dispatch(I):g.update([])}}),10)}Dn.focus=g=>{g.inputState.lastFocusTime=Date.now(),!g.scrollDOM.scrollTop&&(g.inputState.lastScrollTop||g.inputState.lastScrollLeft)&&(g.scrollDOM.scrollTop=g.inputState.lastScrollTop,g.scrollDOM.scrollLeft=g.inputState.lastScrollLeft),sA(g)},Dn.blur=g=>{g.observer.clearSelectionRange(),sA(g)},Dn.compositionstart=Dn.compositionupdate=g=>{null==g.inputState.compositionFirstChange&&(g.inputState.compositionFirstChange=!0),g.inputState.composing<0&&(g.inputState.composing=0)},Dn.compositionend=g=>{g.inputState.composing=-1,g.inputState.compositionEndedAt=Date.now(),g.inputState.compositionPendingKey=!0,g.inputState.compositionPendingChange=g.observer.pendingRecords().length>0,g.inputState.compositionFirstChange=null,Wi.chrome&&Wi.android?g.observer.flushSoon():g.inputState.compositionPendingChange?Promise.resolve().then((()=>g.observer.flush())):setTimeout((()=>{g.inputState.composing<0&&g.docView.hasComposition&&g.update([])}),50)},Dn.contextmenu=g=>{g.inputState.lastContextMenu=Date.now()},zn.beforeinput=(g,e)=>{var I;let t;if(Wi.chrome&&Wi.android&&(t=kn.find((g=>g.inputType==e.inputType)))&&(g.observer.delayAndroidKey(t.key,t.keyCode),"Backspace"==t.key||"Delete"==t.key)){let e=(null===(I=window.visualViewport)||void 0===I?void 0:I.height)||0;setTimeout((()=>{var I;((null===(I=window.visualViewport)||void 0===I?void 0:I.height)||0)>e+10&&g.hasFocus&&(g.contentDOM.blur(),g.focus())}),100)}return Wi.ios&&"deleteContentForward"==e.inputType&&g.observer.flushSoon(),Wi.safari&&"insertText"==e.inputType&&g.inputState.composing>=0&&setTimeout((()=>Dn.compositionend(g,e)),20),!1};const aA=new Set;function VA(g){aA.has(g)||(aA.add(g),g.addEventListener("copy",(()=>{})),g.addEventListener("cut",(()=>{})))}const cA=["pre-wrap","normal","pre-line","break-spaces"];class rA{constructor(g){this.lineWrapping=g,this.doc=pI.empty,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.textHeight=14,this.lineLength=30,this.heightChanged=!1}heightForGap(g,e){let I=this.doc.lineAt(e).number-this.doc.lineAt(g).number+1;return this.lineWrapping&&(I+=Math.max(0,Math.ceil((e-g-I*this.lineLength*.5)/this.lineLength))),this.lineHeight*I}heightForLine(g){return this.lineWrapping?(1+Math.max(0,Math.ceil((g-this.lineLength)/(this.lineLength-5))))*this.lineHeight:this.lineHeight}setDoc(g){return this.doc=g,this}mustRefreshForWrapping(g){return cA.indexOf(g)>-1!=this.lineWrapping}mustRefreshForHeights(g){let e=!1;for(let I=0;I<g.length;I++){let t=g[I];t<0?I++:this.heightSamples[Math.floor(10*t)]||(e=!0,this.heightSamples[Math.floor(10*t)]=!0)}return e}refresh(g,e,I,t,C,i){let l=cA.indexOf(g)>-1,n=Math.round(e)!=Math.round(this.lineHeight)||this.lineWrapping!=l;if(this.lineWrapping=l,this.lineHeight=e,this.charWidth=I,this.textHeight=t,this.lineLength=C,n){this.heightSamples={};for(let g=0;g<i.length;g++){let e=i[g];e<0?g++:this.heightSamples[Math.floor(10*e)]=!0}}return n}}class hA{constructor(g,e){this.from=g,this.heights=e,this.index=0}get more(){return this.index<this.heights.length}}class UA{constructor(g,e,I,t,C){this.from=g,this.length=e,this.top=I,this.height=t,this._content=C}get type(){return"number"==typeof this._content?zi.Text:Array.isArray(this._content)?this._content:this._content.type}get to(){return this.from+this.length}get bottom(){return this.top+this.height}get widget(){return this._content instanceof Oi?this._content.widget:null}get widgetLineBreaks(){return"number"==typeof this._content?this._content:0}join(g){let e=(Array.isArray(this._content)?this._content:[this]).concat(Array.isArray(g._content)?g._content:[g]);return new UA(this.from,this.length+g.length,this.top,this.height+g.height,e)}}var ZA=function(g){return g[g.ByPos=0]="ByPos",g[g.ByHeight=1]="ByHeight",g[g.ByPosNoHeight=2]="ByPosNoHeight",g}(ZA||(ZA={}));const RA=.001;class FA{constructor(g,e,I=2){this.length=g,this.height=e,this.flags=I}get outdated(){return(2&this.flags)>0}set outdated(g){this.flags=(g?2:0)|-3&this.flags}setHeight(g,e){this.height!=e&&(Math.abs(this.height-e)>RA&&(g.heightChanged=!0),this.height=e)}replace(g,e,I){return FA.of(I)}decomposeLeft(g,e){e.push(this)}decomposeRight(g,e){e.push(this)}applyChanges(g,e,I,t){let C=this,i=I.doc;for(let l=t.length-1;l>=0;l--){let{fromA:n,toA:A,fromB:d,toB:o}=t[l],s=C.lineAt(n,ZA.ByPosNoHeight,I.setDoc(e),0,0),a=s.to>=A?s:C.lineAt(A,ZA.ByPosNoHeight,I,0,0);for(o+=a.to-A,A=a.to;l>0&&s.from<=t[l-1].toA;)n=t[l-1].fromA,d=t[l-1].fromB,l--,n<s.from&&(s=C.lineAt(n,ZA.ByPosNoHeight,I,0,0));d+=s.from-n,n=s.from;let V=bA.build(I.setDoc(i),g,d,o);C=C.replace(n,A,V)}return C.updateHeight(I,0)}static empty(){return new BA(0,0)}static of(g){if(1==g.length)return g[0];let e=0,I=g.length,t=0,C=0;for(;;)if(e==I)if(t>2*C){let C=g[e-1];C.break?g.splice(--e,1,C.left,null,C.right):g.splice(--e,1,C.left,C.right),I+=1+C.break,t-=C.size}else{if(!(C>2*t))break;{let e=g[I];e.break?g.splice(I,1,e.left,null,e.right):g.splice(I,1,e.left,e.right),I+=2+e.break,C-=e.size}}else if(t<C){let I=g[e++];I&&(t+=I.size)}else{let e=g[--I];e&&(C+=e.size)}let i=0;return null==g[e-1]?(i=1,e--):null==g[e]&&(i=1,I++),new NA(FA.of(g.slice(0,e)),i,FA.of(g.slice(I)))}}FA.prototype.size=1;class mA extends FA{constructor(g,e,I){super(g,e),this.deco=I}blockAt(g,e,I,t){return new UA(t,this.length,I,this.height,this.deco||0)}lineAt(g,e,I,t,C){return this.blockAt(0,I,t,C)}forEachLine(g,e,I,t,C,i){g<=C+this.length&&e>=C&&i(this.blockAt(0,I,t,C))}updateHeight(g,e=0,I=!1,t){return t&&t.from<=e&&t.more&&this.setHeight(g,t.heights[t.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class BA extends mA{constructor(g,e){super(g,e,null),this.collapsed=0,this.widgetHeight=0,this.breaks=0}blockAt(g,e,I,t){return new UA(t,this.length,I,this.height,this.breaks)}replace(g,e,I){let t=I[0];return 1==I.length&&(t instanceof BA||t instanceof WA&&4&t.flags)&&Math.abs(this.length-t.length)<10?(t instanceof WA?t=new BA(t.length,this.height):t.height=this.height,this.outdated||(t.outdated=!1),t):FA.of(I)}updateHeight(g,e=0,I=!1,t){return t&&t.from<=e&&t.more?this.setHeight(g,t.heights[t.index++]):(I||this.outdated)&&this.setHeight(g,Math.max(this.widgetHeight,g.heightForLine(this.length-this.collapsed))+this.breaks*g.lineHeight),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class WA extends FA{constructor(g){super(g,0)}heightMetrics(g,e){let I,t=g.doc.lineAt(e).number,C=g.doc.lineAt(e+this.length).number,i=C-t+1,l=0;if(g.lineWrapping){let e=Math.min(this.height,g.lineHeight*i);I=e/i,this.length>i+1&&(l=(this.height-e)/(this.length-i-1))}else I=this.height/i;return{firstLine:t,lastLine:C,perLine:I,perChar:l}}blockAt(g,e,I,t){let{firstLine:C,lastLine:i,perLine:l,perChar:n}=this.heightMetrics(e,t);if(e.lineWrapping){let C=t+(g<e.lineHeight?0:Math.round(Math.max(0,Math.min(1,(g-I)/this.height))*this.length)),i=e.doc.lineAt(C),A=l+i.length*n,d=Math.max(I,g-A/2);return new UA(i.from,i.length,d,A,0)}{let t=Math.max(0,Math.min(i-C,Math.floor((g-I)/l))),{from:n,length:A}=e.doc.line(C+t);return new UA(n,A,I+l*t,l,0)}}lineAt(g,e,I,t,C){if(e==ZA.ByHeight)return this.blockAt(g,I,t,C);if(e==ZA.ByPosNoHeight){let{from:e,to:t}=I.doc.lineAt(g);return new UA(e,t-e,0,0,0)}let{firstLine:i,perLine:l,perChar:n}=this.heightMetrics(I,C),A=I.doc.lineAt(g),d=l+A.length*n,o=A.number-i,s=t+l*o+n*(A.from-C-o);return new UA(A.from,A.length,Math.max(t,Math.min(s,t+this.height-d)),d,0)}forEachLine(g,e,I,t,C,i){g=Math.max(g,C),e=Math.min(e,C+this.length);let{firstLine:l,perLine:n,perChar:A}=this.heightMetrics(I,C);for(let d=g,o=t;d<=e;){let e=I.doc.lineAt(d);if(d==g){let I=e.number-l;o+=n*I+A*(g-C-I)}let t=n+A*e.length;i(new UA(e.from,e.length,o,t,0)),o+=t,d=e.to+1}}replace(g,e,I){let t=this.length-e;if(t>0){let g=I[I.length-1];g instanceof WA?I[I.length-1]=new WA(g.length+t):I.push(null,new WA(t-1))}if(g>0){let e=I[0];e instanceof WA?I[0]=new WA(g+e.length):I.unshift(new WA(g-1),null)}return FA.of(I)}decomposeLeft(g,e){e.push(new WA(g-1),null)}decomposeRight(g,e){e.push(null,new WA(this.length-g-1))}updateHeight(g,e=0,I=!1,t){let C=e+this.length;if(t&&t.from<=e+this.length&&t.more){let I=[],i=Math.max(e,t.from),l=-1;for(t.from>e&&I.push(new WA(t.from-e-1).updateHeight(g,e));i<=C&&t.more;){let e=g.doc.lineAt(i).length;I.length&&I.push(null);let C=t.heights[t.index++];-1==l?l=C:Math.abs(C-l)>=RA&&(l=-2);let n=new BA(e,C);n.outdated=!1,I.push(n),i+=e+1}i<=C&&I.push(null,new WA(C-i).updateHeight(g,i));let n=FA.of(I);return(l<0||Math.abs(n.height-this.height)>=RA||Math.abs(l-this.heightMetrics(g,e).perLine)>=RA)&&(g.heightChanged=!0),n}return(I||this.outdated)&&(this.setHeight(g,g.heightForGap(e,e+this.length)),this.outdated=!1),this}toString(){return`gap(${this.length})`}}class NA extends FA{constructor(g,e,I){super(g.length+e+I.length,g.height+I.height,e|(g.outdated||I.outdated?2:0)),this.left=g,this.right=I,this.size=g.size+I.size}get break(){return 1&this.flags}blockAt(g,e,I,t){let C=I+this.left.height;return g<C?this.left.blockAt(g,e,I,t):this.right.blockAt(g,e,C,t+this.left.length+this.break)}lineAt(g,e,I,t,C){let i=t+this.left.height,l=C+this.left.length+this.break,n=e==ZA.ByHeight?g<i:g<l,A=n?this.left.lineAt(g,e,I,t,C):this.right.lineAt(g,e,I,i,l);if(this.break||(n?A.to<l:A.from>l))return A;let d=e==ZA.ByPosNoHeight?ZA.ByPosNoHeight:ZA.ByPos;return n?A.join(this.right.lineAt(l,d,I,i,l)):this.left.lineAt(l,d,I,t,C).join(A)}forEachLine(g,e,I,t,C,i){let l=t+this.left.height,n=C+this.left.length+this.break;if(this.break)g<n&&this.left.forEachLine(g,e,I,t,C,i),e>=n&&this.right.forEachLine(g,e,I,l,n,i);else{let A=this.lineAt(n,ZA.ByPos,I,t,C);g<A.from&&this.left.forEachLine(g,A.from-1,I,t,C,i),A.to>=g&&A.from<=e&&i(A),e>A.to&&this.right.forEachLine(A.to+1,e,I,l,n,i)}}replace(g,e,I){let t=this.left.length+this.break;if(e<t)return this.balanced(this.left.replace(g,e,I),this.right);if(g>this.left.length)return this.balanced(this.left,this.right.replace(g-t,e-t,I));let C=[];g>0&&this.decomposeLeft(g,C);let i=C.length;for(let g of I)C.push(g);if(g>0&&pA(C,i-1),e<this.length){let g=C.length;this.decomposeRight(e,C),pA(C,g)}return FA.of(C)}decomposeLeft(g,e){let I=this.left.length;if(g<=I)return this.left.decomposeLeft(g,e);e.push(this.left),this.break&&(I++,g>=I&&e.push(null)),g>I&&this.right.decomposeLeft(g-I,e)}decomposeRight(g,e){let I=this.left.length,t=I+this.break;if(g>=t)return this.right.decomposeRight(g-t,e);g<I&&this.left.decomposeRight(g,e),this.break&&g<t&&e.push(null),e.push(this.right)}balanced(g,e){return g.size>2*e.size||e.size>2*g.size?FA.of(this.break?[g,null,e]:[g,e]):(this.left=g,this.right=e,this.height=g.height+e.height,this.outdated=g.outdated||e.outdated,this.size=g.size+e.size,this.length=g.length+this.break+e.length,this)}updateHeight(g,e=0,I=!1,t){let{left:C,right:i}=this,l=e+C.length+this.break,n=null;return t&&t.from<=e+C.length&&t.more?n=C=C.updateHeight(g,e,I,t):C.updateHeight(g,e,I),t&&t.from<=l+i.length&&t.more?n=i=i.updateHeight(g,l,I,t):i.updateHeight(g,l,I),n?this.balanced(C,i):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function pA(g,e){let I,t;null==g[e]&&(I=g[e-1])instanceof WA&&(t=g[e+1])instanceof WA&&g.splice(e-1,3,new WA(I.length+1+t.length))}const SA=5;class bA{constructor(g,e){this.pos=g,this.oracle=e,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=g}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(g,e){if(this.lineStart>-1){let g=Math.min(e,this.lineEnd),I=this.nodes[this.nodes.length-1];I instanceof BA?I.length+=g-this.pos:(g>this.pos||!this.isCovered)&&this.nodes.push(new BA(g-this.pos,-1)),this.writtenTo=g,e>g&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=e}point(g,e,I){if(g<e||I.heightRelevant){let t=I.widget?I.widget.estimatedHeight:0,C=I.widget?I.widget.lineBreaks:0;t<0&&(t=this.oracle.lineHeight);let i=e-g;I.block?this.addBlock(new mA(i,t,I)):(i||C||t>=5)&&this.addLineDeco(t,C,i)}else e>g&&this.span(g,e);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:g,to:e}=this.oracle.doc.lineAt(this.pos);this.lineStart=g,this.lineEnd=e,this.writtenTo<g&&((this.writtenTo<g-1||null==this.nodes[this.nodes.length-1])&&this.nodes.push(this.blankContent(this.writtenTo,g-1)),this.nodes.push(null)),this.pos>g&&this.nodes.push(new BA(this.pos-g,-1)),this.writtenTo=this.pos}blankContent(g,e){let I=new WA(e-g);return this.oracle.doc.lineAt(g).to==e&&(I.flags|=4),I}ensureLine(){this.enterLine();let g=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(g instanceof BA)return g;let e=new BA(0,-1);return this.nodes.push(e),e}addBlock(g){this.enterLine();let e=g.deco;e&&e.startSide>0&&!this.isCovered&&this.ensureLine(),this.nodes.push(g),this.writtenTo=this.pos=this.pos+g.length,e&&e.endSide>0&&(this.covering=g)}addLineDeco(g,e,I){let t=this.ensureLine();t.length+=I,t.collapsed+=I,t.widgetHeight=Math.max(t.widgetHeight,g),t.breaks+=e,this.writtenTo=this.pos=this.pos+I}finish(g){let e=0==this.nodes.length?null:this.nodes[this.nodes.length-1];!(this.lineStart>-1)||e instanceof BA||this.isCovered?(this.writtenTo<this.pos||null==e)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos)):this.nodes.push(new BA(0,-1));let I=g;for(let g of this.nodes)g instanceof BA&&g.updateHeight(this.oracle,I),I+=g?g.length:1;return this.nodes}static build(g,e,I,t){let C=new bA(I,g);return tC.spans(e,I,t,C,0),C.finish(I)}}function uA(g,e,I){let t=new TA;return tC.compare(g,e,I,t,0),t.changes}class TA{constructor(){this.changes=[]}compareRange(){}comparePoint(g,e,I,t){(g<e||I&&I.heightRelevant||t&&t.heightRelevant)&&Li(g,e,this.changes,5)}}function GA(g,e){let I=g.getBoundingClientRect(),t=g.ownerDocument,C=t.defaultView||window,i=Math.max(0,I.left),l=Math.min(C.innerWidth,I.right),n=Math.max(0,I.top),A=Math.min(C.innerHeight,I.bottom);for(let e=g.parentNode;e&&e!=t.body;)if(1==e.nodeType){let I=e,t=window.getComputedStyle(I);if((I.scrollHeight>I.clientHeight||I.scrollWidth>I.clientWidth)&&"visible"!=t.overflow){let t=I.getBoundingClientRect();i=Math.max(i,t.left),l=Math.min(l,t.right),n=Math.max(n,t.top),A=e==g.parentNode?t.bottom:Math.min(A,t.bottom)}e="absolute"==t.position||"fixed"==t.position?I.offsetParent:I.parentNode}else{if(11!=e.nodeType)break;e=e.host}return{left:i-I.left,right:Math.max(i,l)-I.left,top:n-(I.top+e),bottom:Math.max(n,A)-(I.top+e)}}function kA(g,e){let I=g.getBoundingClientRect();return{left:0,right:I.right-I.left,top:e,bottom:I.bottom-(I.top+e)}}class QA{constructor(g,e,I){this.from=g,this.to=e,this.size=I}static same(g,e){if(g.length!=e.length)return!1;for(let I=0;I<g.length;I++){let t=g[I],C=e[I];if(t.from!=C.from||t.to!=C.to||t.size!=C.size)return!1}return!0}draw(g,e){return Di.replace({widget:new MA(this.size*(e?g.scaleY:g.scaleX),e)}).range(this.from,this.to)}}class MA extends Ki{constructor(g,e){super(),this.size=g,this.vertical=e}eq(g){return g.size==this.size&&g.vertical==this.vertical}toDOM(){let g=document.createElement("div");return this.vertical?g.style.height=this.size+"px":(g.style.width=this.size+"px",g.style.height="2px",g.style.display="inline-block"),g}get estimatedHeight(){return this.vertical?this.size:-1}}class YA{constructor(g){this.state=g,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.scrollTop=0,this.scrolledToBottom=!1,this.scaleX=1,this.scaleY=1,this.scrollAnchorPos=0,this.scrollAnchorHeight=-1,this.scaler=XA,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.defaultTextDirection=$i.LTR,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1;let e=g.facet(Kl).some((g=>"function"!=typeof g&&"cm-lineWrapping"==g.class));this.heightOracle=new rA(e),this.stateDeco=g.facet(zl).filter((g=>"function"!=typeof g)),this.heightMap=FA.empty().applyChanges(this.stateDeco,pI.empty,this.heightOracle.setDoc(g.doc),[new Pl(0,0,0,g.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=Di.set(this.lineGaps.map((g=>g.draw(this,!1)))),this.computeVisibleRanges()}updateForViewport(){let g=[this.viewport],{main:e}=this.state.selection;for(let I=0;I<=1;I++){let t=I?e.head:e.anchor;if(!g.some((({from:g,to:e})=>t>=g&&t<=e))){let{from:e,to:I}=this.lineBlockAt(t);g.push(new EA(e,I))}}this.viewports=g.sort(((g,e)=>g.from-e.from)),this.scaler=this.heightMap.height<=7e6?XA:new KA(this.heightOracle,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.heightOracle.setDoc(this.state.doc),0,0,(g=>{this.viewportLines.push(1==this.scaler.scale?g:zA(g,this.scaler))}))}update(g,e=null){this.state=g.state;let I=this.stateDeco;this.stateDeco=this.state.facet(zl).filter((g=>"function"!=typeof g));let t=g.changedRanges,C=Pl.extendWithRanges(t,uA(I,this.stateDeco,g?g.changes:_I.empty(this.state.doc.length))),i=this.heightMap.height,l=this.scrolledToBottom?null:this.scrollAnchorAt(this.scrollTop);this.heightMap=this.heightMap.applyChanges(this.stateDeco,g.startState.doc,this.heightOracle.setDoc(this.state.doc),C),this.heightMap.height!=i&&(g.flags|=2),l?(this.scrollAnchorPos=g.changes.mapPos(l.from,-1),this.scrollAnchorHeight=l.top):(this.scrollAnchorPos=-1,this.scrollAnchorHeight=this.heightMap.height);let n=C.length?this.mapViewport(this.viewport,g.changes):this.viewport;(e&&(e.range.head<n.from||e.range.head>n.to)||!this.viewportIsAppropriate(n))&&(n=this.getViewport(0,e));let A=!g.changes.empty||2&g.flags||n.from!=this.viewport.from||n.to!=this.viewport.to;this.viewport=n,this.updateForViewport(),A&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,g.changes))),g.flags|=this.computeVisibleRanges(),e&&(this.scrollTarget=e),!this.mustEnforceCursorAssoc&&g.selectionSet&&g.view.lineWrapping&&g.state.selection.main.empty&&g.state.selection.main.assoc&&!g.state.facet(Gl)&&(this.mustEnforceCursorAssoc=!0)}measure(g){let e=g.contentDOM,I=window.getComputedStyle(e),t=this.heightOracle,C=I.whiteSpace;this.defaultTextDirection="rtl"==I.direction?$i.RTL:$i.LTR;let i=this.heightOracle.mustRefreshForWrapping(C),l=e.getBoundingClientRect(),n=i||this.mustMeasureContent||this.contentDOMHeight!=l.height;this.contentDOMHeight=l.height,this.mustMeasureContent=!1;let A=0,d=0;if(l.width&&l.height){let{scaleX:g,scaleY:I}=vC(e,l);(g>.005&&Math.abs(this.scaleX-g)>.005||I>.005&&Math.abs(this.scaleY-I)>.005)&&(this.scaleX=g,this.scaleY=I,A|=8,i=n=!0)}let o=(parseInt(I.paddingTop)||0)*this.scaleY,s=(parseInt(I.paddingBottom)||0)*this.scaleY;(this.paddingTop!=o||this.paddingBottom!=s)&&(this.paddingTop=o,this.paddingBottom=s,A|=10),this.editorWidth!=g.scrollDOM.clientWidth&&(t.lineWrapping&&(n=!0),this.editorWidth=g.scrollDOM.clientWidth,A|=8);let a=g.scrollDOM.scrollTop*this.scaleY;this.scrollTop!=a&&(this.scrollAnchorHeight=-1,this.scrollTop=a),this.scrolledToBottom=Ii(g.scrollDOM);let V=(this.printing?kA:GA)(e,this.paddingTop),c=V.top-this.pixelViewport.top,r=V.bottom-this.pixelViewport.bottom;this.pixelViewport=V;let h=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(h!=this.inView&&(this.inView=h,h&&(n=!0)),!this.inView&&!this.scrollTarget)return 0;let U=l.width;if((this.contentDOMWidth!=U||this.editorHeight!=g.scrollDOM.clientHeight)&&(this.contentDOMWidth=l.width,this.editorHeight=g.scrollDOM.clientHeight,A|=8),n){let e=g.docView.measureVisibleLineHeights(this.viewport);if(t.mustRefreshForHeights(e)&&(i=!0),i||t.lineWrapping&&Math.abs(U-this.contentDOMWidth)>t.charWidth){let{lineHeight:I,charWidth:l,textHeight:n}=g.docView.measureTextSize();i=I>0&&t.refresh(C,I,l,n,U/l,e),i&&(g.docView.minWidth=0,A|=8)}c>0&&r>0?d=Math.max(c,r):c<0&&r<0&&(d=Math.min(c,r)),t.heightChanged=!1;for(let I of this.viewports){let C=I.from==this.viewport.from?e:g.docView.measureVisibleLineHeights(I);this.heightMap=(i?FA.empty().applyChanges(this.stateDeco,pI.empty,this.heightOracle,[new Pl(0,0,0,g.state.doc.length)]):this.heightMap).updateHeight(t,0,i,new hA(I.from,C))}t.heightChanged&&(A|=2)}let Z=!this.viewportIsAppropriate(this.viewport,d)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return Z&&(this.viewport=this.getViewport(d,this.scrollTarget)),this.updateForViewport(),(2&A||Z)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(i?[]:this.lineGaps,g)),A|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,g.docView.enforceCursorAssoc()),A}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(g,e){let I=.5-Math.max(-.5,Math.min(.5,g/1e3/2)),t=this.heightMap,C=this.heightOracle,{visibleTop:i,visibleBottom:l}=this,n=new EA(t.lineAt(i-1e3*I,ZA.ByHeight,C,0,0).from,t.lineAt(l+1e3*(1-I),ZA.ByHeight,C,0,0).to);if(e){let{head:g}=e.range;if(g<n.from||g>n.to){let I,i=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),l=t.lineAt(g,ZA.ByPos,C,0,0);I="center"==e.y?(l.top+l.bottom)/2-i/2:"start"==e.y||"nearest"==e.y&&g<n.from?l.top:l.bottom-i,n=new EA(t.lineAt(I-500,ZA.ByHeight,C,0,0).from,t.lineAt(I+i+500,ZA.ByHeight,C,0,0).to)}}return n}mapViewport(g,e){let I=e.mapPos(g.from,-1),t=e.mapPos(g.to,1);return new EA(this.heightMap.lineAt(I,ZA.ByPos,this.heightOracle,0,0).from,this.heightMap.lineAt(t,ZA.ByPos,this.heightOracle,0,0).to)}viewportIsAppropriate({from:g,to:e},I=0){if(!this.inView)return!0;let{top:t}=this.heightMap.lineAt(g,ZA.ByPos,this.heightOracle,0,0),{bottom:C}=this.heightMap.lineAt(e,ZA.ByPos,this.heightOracle,0,0),{visibleTop:i,visibleBottom:l}=this;return(0==g||t<=i-Math.max(10,Math.min(-I,250)))&&(e==this.state.doc.length||C>=l+Math.max(10,Math.min(I,250)))&&t>i-2e3&&C<l+2e3}mapLineGaps(g,e){if(!g.length||e.empty)return g;let I=[];for(let t of g)e.touchesRange(t.from,t.to)||I.push(new QA(e.mapPos(t.from),e.mapPos(t.to),t.size));return I}ensureLineGaps(g,e){let I=this.heightOracle.lineWrapping,t=I?1e4:2e3,C=t>>1,i=t<<1;if(this.defaultTextDirection!=$i.LTR&&!I)return[];let l=[],n=(t,i,A,d)=>{if(i-t<C)return;let o=this.state.selection.main,s=[o.from];o.empty||s.push(o.to);for(let g of s)if(g>t&&g<i)return n(t,g-10,A,d),void n(g+10,i,A,d);let a=wA(g,(g=>g.from>=A.from&&g.to<=A.to&&Math.abs(g.from-t)<C&&Math.abs(g.to-i)<C&&!s.some((e=>g.from<e&&g.to>e))));if(!a){if(i<A.to&&e&&I&&e.visibleRanges.some((g=>g.from<=i&&g.to>=i))){let g=e.moveToLineBoundary(it.cursor(i),!1,!0).head;g>t&&(i=g)}a=new QA(t,i,this.gapSize(A,t,i,d))}l.push(a)};for(let g of this.viewportLines){if(g.length<i)continue;let e=yA(g.from,g.to,this.stateDeco);if(e.total<i)continue;let C,l,A=this.scrollTarget?this.scrollTarget.range.head:null;if(I){let I,i,n=t/this.heightOracle.lineLength*this.heightOracle.lineHeight;if(null!=A){let t=HA(e,A),C=((this.visibleBottom-this.visibleTop)/2+n)/g.height;I=t-C,i=t+C}else I=(this.visibleTop-g.top-n)/g.height,i=(this.visibleBottom-g.top+n)/g.height;C=JA(e,I),l=JA(e,i)}else{let g,I,i=e.total*this.heightOracle.charWidth,n=t*this.heightOracle.charWidth;if(null!=A){let t=HA(e,A),C=((this.pixelViewport.right-this.pixelViewport.left)/2+n)/i;g=t-C,I=t+C}else g=(this.pixelViewport.left-n)/i,I=(this.pixelViewport.right+n)/i;C=JA(e,g),l=JA(e,I)}C>g.from&&n(g.from,C,g,e),l<g.to&&n(l,g.to,g,e)}return l}gapSize(g,e,I,t){let C=HA(t,I)-HA(t,e);return this.heightOracle.lineWrapping?g.height*C:t.total*this.heightOracle.charWidth*C}updateLineGaps(g){QA.same(g,this.lineGaps)||(this.lineGaps=g,this.lineGapDeco=Di.set(g.map((g=>g.draw(this,this.heightOracle.lineWrapping)))))}computeVisibleRanges(){let g=this.stateDeco;this.lineGaps.length&&(g=g.concat(this.lineGapDeco));let e=[];tC.spans(g,this.viewport.from,this.viewport.to,{span(g,I){e.push({from:g,to:I})},point(){}},20);let I=e.length!=this.visibleRanges.length||this.visibleRanges.some(((g,I)=>g.from!=e[I].from||g.to!=e[I].to));return this.visibleRanges=e,I?4:0}lineBlockAt(g){return g>=this.viewport.from&&g<=this.viewport.to&&this.viewportLines.find((e=>e.from<=g&&e.to>=g))||zA(this.heightMap.lineAt(g,ZA.ByPos,this.heightOracle,0,0),this.scaler)}lineBlockAtHeight(g){return zA(this.heightMap.lineAt(this.scaler.fromDOM(g),ZA.ByHeight,this.heightOracle,0,0),this.scaler)}scrollAnchorAt(g){let e=this.lineBlockAtHeight(g+8);return e.from>=this.viewport.from||this.viewportLines[0].top-g>200?e:this.viewportLines[0]}elementAtHeight(g){return zA(this.heightMap.blockAt(this.scaler.fromDOM(g),this.heightOracle,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class EA{constructor(g,e){this.from=g,this.to=e}}function yA(g,e,I){let t=[],C=g,i=0;return tC.spans(I,g,e,{span(){},point(g,e){g>C&&(t.push({from:C,to:g}),i+=g-C),C=e}},20),C<e&&(t.push({from:C,to:e}),i+=e-C),{total:i,ranges:t}}function JA({total:g,ranges:e},I){if(I<=0)return e[0].from;if(I>=1)return e[e.length-1].to;let t=Math.floor(g*I);for(let g=0;;g++){let{from:I,to:C}=e[g],i=C-I;if(t<=i)return I+t;t-=i}}function HA(g,e){let I=0;for(let{from:t,to:C}of g.ranges){if(e<=C){I+=e-t;break}I+=C-t}return I/g.total}function wA(g,e){for(let I of g)if(e(I))return I}const XA={toDOM:g=>g,fromDOM:g=>g,scale:1};class KA{constructor(g,e,I){let t=0,C=0,i=0;this.viewports=I.map((({from:I,to:C})=>{let i=e.lineAt(I,ZA.ByPos,g,0,0).top,l=e.lineAt(C,ZA.ByPos,g,0,0).bottom;return t+=l-i,{from:I,to:C,top:i,bottom:l,domTop:0,domBottom:0}})),this.scale=(7e6-t)/(e.height-t);for(let g of this.viewports)g.domTop=i+(g.top-C)*this.scale,i=g.domBottom=g.domTop+(g.bottom-g.top),C=g.bottom}toDOM(g){for(let e=0,I=0,t=0;;e++){let C=e<this.viewports.length?this.viewports[e]:null;if(!C||g<C.top)return t+(g-I)*this.scale;if(g<=C.bottom)return C.domTop+(g-C.top);I=C.bottom,t=C.domBottom}}fromDOM(g){for(let e=0,I=0,t=0;;e++){let C=e<this.viewports.length?this.viewports[e]:null;if(!C||g<C.domTop)return I+(g-t)/this.scale;if(g<=C.domBottom)return C.top+(g-C.domTop);I=C.bottom,t=C.domBottom}}}function zA(g,e){if(1==e.scale)return g;let I=e.toDOM(g.top),t=e.toDOM(g.bottom);return new UA(g.from,g.length,I,t-I,Array.isArray(g._content)?g._content.map((g=>zA(g,e))):g._content)}const DA=At.define({combine:g=>g.join(" ")}),vA=At.define({combine:g=>g.indexOf(!0)>-1}),xA=BC.newName(),OA=BC.newName(),fA=BC.newName(),jA={"&light":"."+OA,"&dark":"."+fA};function LA(g,e,I){return new BC(e,{finish:e=>/&/.test(e)?e.replace(/&\w*/,(e=>{if("&"==e)return g;if(!I||!I[e])throw new RangeError(`Unsupported selector: ${e}`);return I[e]})):g+" "+e})}const PA=LA("."+xA,{"&":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,flexShrink:0,display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",minHeight:"100%",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere",flexShrink:1},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 6px"},".cm-layer":{position:"absolute",left:0,top:0,contain:"size style","& > *":{position:"absolute"}},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{pointerEvents:"none"},"&.cm-focused > .cm-scroller > .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{opacity:0},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{opacity:0},"100%":{}},".cm-cursor, .cm-dropCursor":{borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},".cm-dropCursor":{position:"absolute"},"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor":{display:"block"},".cm-iso":{unicodeBidi:"isolate"},".cm-announced":{position:"fixed",top:"-10000px"},"@media print":{".cm-announced":{display:"none"}},"&light .cm-activeLine":{backgroundColor:"#cceeff44"},"&dark .cm-activeLine":{backgroundColor:"#99eeff33"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-gutters":{flexShrink:0,display:"flex",height:"100%",boxSizing:"border-box",insetInlineStart:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#6c6c6c",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"},".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-top",height:"1em",width:0,display:"inline"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-highlightSpace:before":{content:"attr(data-display)",position:"absolute",pointerEvents:"none",color:"#888"},".cm-highlightTab":{backgroundImage:'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')',backgroundSize:"auto 100%",backgroundPosition:"right 90%",backgroundRepeat:"no-repeat"},".cm-trailingSpace":{backgroundColor:"#ff332255"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},jA),_A="￿";class qA{constructor(g,e){this.points=g,this.text="",this.lineSeparator=e.facet(_t.lineSeparator)}append(g){this.text+=g}lineBreak(){this.text+=_A}readRange(g,e){if(!g)return this;let I=g.parentNode;for(let t=g;;){this.findPointBefore(I,t);let g=this.text.length;this.readNode(t);let C=t.nextSibling;if(C==e)break;let i=ni.get(t),l=ni.get(C);(i&&l?i.breakAfter:(i?i.breakAfter:wC(t))||wC(C)&&("BR"!=t.nodeName||t.cmIgnore)&&this.text.length>g)&&this.lineBreak(),t=C}return this.findPointBefore(I,e),this}readTextNode(g){let e=g.nodeValue;for(let I of this.points)I.node==g&&(I.pos=this.text.length+Math.min(I.offset,e.length));for(let I=0,t=this.lineSeparator?null:/\r\n?|\n/g;;){let C,i=-1,l=1;if(this.lineSeparator?(i=e.indexOf(this.lineSeparator,I),l=this.lineSeparator.length):(C=t.exec(e))&&(i=C.index,l=C[0].length),this.append(e.slice(I,i<0?e.length:i)),i<0)break;if(this.lineBreak(),l>1)for(let e of this.points)e.node==g&&e.pos>this.text.length&&(e.pos-=l-1);I=i+l}}readNode(g){if(g.cmIgnore)return;let e=ni.get(g),I=e&&e.overrideDOMText;if(null!=I){this.findPointInside(g,I.length);for(let g=I.iter();!g.next().done;)g.lineBreak?this.lineBreak():this.append(g.value)}else 3==g.nodeType?this.readTextNode(g):"BR"==g.nodeName?g.nextSibling&&this.lineBreak():1==g.nodeType&&this.readRange(g.firstChild,null)}findPointBefore(g,e){for(let I of this.points)I.node==g&&g.childNodes[I.offset]==e&&(I.pos=this.text.length)}findPointInside(g,e){for(let I of this.points)(3==g.nodeType?I.node==g:g.contains(I.node))&&(I.pos=this.text.length+($A(g,I.node,I.offset)?e:0))}}function $A(g,e,I){for(;;){if(!e||I<KC(e))return!1;if(e==g)return!0;I=HC(e)+1,e=e.parentNode}}class gd{constructor(g,e){this.node=g,this.offset=e,this.pos=-1}}class ed{constructor(g,e,I,t){this.typeOver=t,this.bounds=null,this.text="";let{impreciseHead:C,impreciseAnchor:i}=g.docView;if(g.state.readOnly&&e>-1)this.newSel=null;else if(e>-1&&(this.bounds=g.docView.domBoundsAround(e,I,0))){let e=C||i?[]:id(g),I=new qA(e,g.state);I.readRange(this.bounds.startDOM,this.bounds.endDOM),this.text=I.text,this.newSel=ld(e,this.bounds.from)}else{let e=g.observer.selectionRange,I=C&&C.node==e.focusNode&&C.offset==e.focusOffset||!MC(g.contentDOM,e.focusNode)?g.state.selection.main.head:g.docView.posFromDOM(e.focusNode,e.focusOffset),t=i&&i.node==e.anchorNode&&i.offset==e.anchorOffset||!MC(g.contentDOM,e.anchorNode)?g.state.selection.main.anchor:g.docView.posFromDOM(e.anchorNode,e.anchorOffset),l=g.viewport;if((Wi.ios||Wi.chrome)&&g.state.selection.main.empty&&I!=t&&(l.from>0||l.to<g.state.doc.length)){let e=Math.min(I,t),C=Math.max(I,t),i=l.from-e,n=l.to-C;(0==i||1==i||0==e)&&(0==n||-1==n||C==g.state.doc.length)&&(I=0,t=g.state.doc.length)}this.newSel=it.single(t,I)}}}function Id(g,e){let I,{newSel:t}=e,C=g.state.selection.main,i=g.inputState.lastKeyTime>Date.now()-100?g.inputState.lastKeyCode:-1;if(e.bounds){let{from:t,to:l}=e.bounds,n=C.from,A=null;(8===i||Wi.android&&e.text.length<l-t)&&(n=C.to,A="end");let d=Cd(g.state.doc.sliceString(t,l,_A),e.text,n-t,A);d&&(Wi.chrome&&13==i&&d.toB==d.from+2&&e.text.slice(d.from,d.toB)==_A+_A&&d.toB--,I={from:t+d.from,to:t+d.toA,insert:pI.of(e.text.slice(d.from,d.toB).split(_A))})}else t&&(!g.hasFocus&&g.state.facet(El)||t.main.eq(C))&&(t=null);if(!I&&!t)return!1;if(!I&&e.typeOver&&!C.empty&&t&&t.main.empty?I={from:C.from,to:C.to,insert:g.state.doc.slice(C.from,C.to)}:I&&I.from>=C.from&&I.to<=C.to&&(I.from!=C.from||I.to!=C.to)&&C.to-C.from-(I.to-I.from)<=4?I={from:C.from,to:C.to,insert:g.state.doc.slice(C.from,I.from).append(I.insert).append(g.state.doc.slice(I.to,C.to))}:(Wi.mac||Wi.android)&&I&&I.from==I.to&&I.from==C.head-1&&/^\. ?$/.test(I.insert.toString())&&"off"==g.contentDOM.getAttribute("autocorrect")?(t&&2==I.insert.length&&(t=it.single(t.main.anchor-1,t.main.head-1)),I={from:C.from,to:C.to,insert:pI.of([" "])}):Wi.chrome&&I&&I.from==I.to&&I.from==C.head&&"\n "==I.insert.toString()&&g.lineWrapping&&(t&&(t=it.single(t.main.anchor-1,t.main.head-1)),I={from:C.from,to:C.to,insert:pI.of([" "])}),I){if(Wi.ios&&g.inputState.flushIOSKey(I)||Wi.android&&(I.to==C.to&&(I.from==C.from||I.from==C.from-1&&" "==g.state.sliceDoc(I.from,C.from))&&1==I.insert.length&&2==I.insert.lines&&qC(g.contentDOM,"Enter",13)||(I.from==C.from-1&&I.to==C.to&&0==I.insert.length||8==i&&I.insert.length<I.to-I.from&&I.to>C.head)&&qC(g.contentDOM,"Backspace",8)||I.from==C.from&&I.to==C.to+1&&0==I.insert.length&&qC(g.contentDOM,"Delete",46)))return!0;let e=I.insert.toString();g.inputState.composing>=0&&g.inputState.composing++;let l,n=()=>l||(l=td(g,I,t));return g.state.facet(bl).some((t=>t(g,I.from,I.to,e,n)))||g.dispatch(n()),!0}if(t&&!t.main.eq(C)){let e=!1,I="select";return g.inputState.lastSelectionTime>Date.now()-50&&("select"==g.inputState.lastSelectionOrigin&&(e=!0),I=g.inputState.lastSelectionOrigin),g.dispatch({selection:t,scrollIntoView:e,userEvent:I}),!0}return!1}function td(g,e,I){let t,C=g.state,i=C.selection.main;if(e.from>=i.from&&e.to<=i.to&&e.to-e.from>=(i.to-i.from)/3&&(!I||I.main.empty&&I.main.from==e.from+e.insert.length)&&g.inputState.composing<0){let I=i.from<e.from?C.sliceDoc(i.from,e.from):"",l=i.to>e.to?C.sliceDoc(e.to,i.to):"";t=C.replaceSelection(g.state.toText(I+e.insert.sliceString(0,void 0,g.state.lineBreak)+l))}else{let l=C.changes(e),n=I&&I.main.to<=l.newLength?I.main:void 0;if(C.selection.ranges.length>1&&g.inputState.composing>=0&&e.to<=i.to&&e.to>=i.to-10){let A,d=g.state.sliceDoc(e.from,e.to),o=I&&en(g,I.main.head);if(o){let g=e.insert.length-(e.to-e.from);A={from:o.from,to:o.to-g}}else A=g.state.doc.lineAt(i.head);let s=i.to-e.to,a=i.to-i.from;t=C.changeByRange((I=>{if(I.from==i.from&&I.to==i.to)return{changes:l,range:n||I.map(l)};let t=I.to-s,o=t-d.length;if(I.to-I.from!=a||g.state.sliceDoc(o,t)!=d||I.to>=A.from&&I.from<=A.to)return{range:I};let V=C.changes({from:o,to:t,insert:e.insert}),c=I.to-i.to;return{changes:V,range:n?it.range(Math.max(0,n.anchor+c),Math.max(0,n.head+c)):I.map(V)}}))}else t={changes:l,selection:n&&C.selection.replaceRange(n)}}let l="input.type";return(g.composing||g.inputState.compositionPendingChange&&g.inputState.compositionEndedAt>Date.now()-50)&&(g.inputState.compositionPendingChange=!1,l+=".compose",g.inputState.compositionFirstChange&&(l+=".start",g.inputState.compositionFirstChange=!1)),C.update(t,{userEvent:l,scrollIntoView:!0})}function Cd(g,e,I,t){let C=Math.min(g.length,e.length),i=0;for(;i<C&&g.charCodeAt(i)==e.charCodeAt(i);)i++;if(i==C&&g.length==e.length)return null;let l=g.length,n=e.length;for(;l>0&&n>0&&g.charCodeAt(l-1)==e.charCodeAt(n-1);)l--,n--;return"end"==t&&(I-=l+Math.max(0,i-Math.min(l,n))-i),l<i&&g.length<e.length?(i-=I<=i&&I>=l?i-I:0,n=i+(n-l),l=i):n<i&&(i-=I<=i&&I>=n?i-I:0,l=i+(l-n),n=i),{from:i,toA:l,toB:n}}function id(g){let e=[];if(g.root.activeElement!=g.contentDOM)return e;let{anchorNode:I,anchorOffset:t,focusNode:C,focusOffset:i}=g.observer.selectionRange;return I&&(e.push(new gd(I,t)),(C!=I||i!=t)&&e.push(new gd(C,i))),e}function ld(g,e){if(0==g.length)return null;let I=g[0].pos,t=2==g.length?g[1].pos:I;return I>-1&&t>-1?it.single(I+e,t+e):null}const nd={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},Ad=Wi.ie&&Wi.ie_version<=11;class dd{constructor(g){this.view=g,this.active=!1,this.selectionRange=new fC,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.flushingAndroidKey=-1,this.lastChange=0,this.scrollTargets=[],this.intersection=null,this.resizeScroll=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.printQuery=null,this.parentCheck=-1,this.dom=g.contentDOM,this.observer=new MutationObserver((e=>{for(let g of e)this.queue.push(g);(Wi.ie&&Wi.ie_version<=11||Wi.ios&&g.composing)&&e.some((g=>"childList"==g.type&&g.removedNodes.length||"characterData"==g.type&&g.oldValue.length>g.target.nodeValue.length))?this.flushSoon():this.flush()})),Ad&&(this.onCharData=g=>{this.queue.push({target:g.target,type:"characterData",oldValue:g.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),this.onResize=this.onResize.bind(this),this.onPrint=this.onPrint.bind(this),this.onScroll=this.onScroll.bind(this),window.matchMedia&&(this.printQuery=window.matchMedia("print")),"function"==typeof ResizeObserver&&(this.resizeScroll=new ResizeObserver((()=>{var g;(null===(g=this.view.docView)||void 0===g?void 0:g.lastUpdate)<Date.now()-75&&this.onResize()})),this.resizeScroll.observe(g.scrollDOM)),this.addWindowListeners(this.win=g.win),this.start(),"function"==typeof IntersectionObserver&&(this.intersection=new IntersectionObserver((g=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),g.length>0&&g[g.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))}),{threshold:[0,.001]}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver((g=>{g.length>0&&g[g.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))}),{})),this.listenForScroll(),this.readSelectionRange()}onScrollChanged(g){this.view.inputState.runHandlers("scroll",g),this.intersecting&&this.view.measure()}onScroll(g){this.intersecting&&this.flush(!1),this.onScrollChanged(g)}onResize(){this.resizeTimeout<0&&(this.resizeTimeout=setTimeout((()=>{this.resizeTimeout=-1,this.view.requestMeasure()}),50))}onPrint(g){"change"==g.type&&!g.matches||(this.view.viewState.printing=!0,this.view.measure(),setTimeout((()=>{this.view.viewState.printing=!1,this.view.requestMeasure()}),500))}updateGaps(g){if(this.gapIntersection&&(g.length!=this.gaps.length||this.gaps.some(((e,I)=>e!=g[I])))){this.gapIntersection.disconnect();for(let e of g)this.gapIntersection.observe(e);this.gaps=g}}onSelectionChange(g){let e=this.selectionChanged;if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:I}=this,t=this.selectionRange;if(I.state.facet(El)?I.root.activeElement!=this.dom:!EC(I.dom,t))return;let C=t.anchorNode&&I.docView.nearest(t.anchorNode);C&&C.ignoreEvent(g)?e||(this.selectionChanged=!1):(Wi.ie&&Wi.ie_version<=11||Wi.android&&Wi.chrome)&&!I.state.selection.main.empty&&t.focusNode&&JC(t.focusNode,t.focusOffset,t.anchorNode,t.anchorOffset)?this.flushSoon():this.flush(!1)}readSelectionRange(){let{view:g}=this,e=QC(g.root);if(!e)return!1;let I=Wi.safari&&11==g.root.nodeType&&YC(this.dom.ownerDocument)==this.dom&&ad(this.view,e)||e;if(!I||this.selectionRange.eq(I))return!1;let t=EC(this.dom,I);return t&&!this.selectionChanged&&g.inputState.lastFocusTime>Date.now()-200&&g.inputState.lastTouchTime<Date.now()-300&&ei(this.dom,I)?(this.view.inputState.lastFocusTime=0,g.docView.updateSelection(),!1):(this.selectionRange.setRange(I),t&&(this.selectionChanged=!0),!0)}setSelectionRange(g,e){this.selectionRange.set(g.node,g.offset,e.node,e.offset),this.selectionChanged=!1}clearSelectionRange(){this.selectionRange.set(null,0,null,0)}listenForScroll(){this.parentCheck=-1;let g=0,e=null;for(let I=this.dom;I;)if(1==I.nodeType)!e&&g<this.scrollTargets.length&&this.scrollTargets[g]==I?g++:e||(e=this.scrollTargets.slice(0,g)),e&&e.push(I),I=I.assignedSlot||I.parentNode;else{if(11!=I.nodeType)break;I=I.host}if(g<this.scrollTargets.length&&!e&&(e=this.scrollTargets.slice(0,g)),e){for(let g of this.scrollTargets)g.removeEventListener("scroll",this.onScroll);for(let g of this.scrollTargets=e)g.addEventListener("scroll",this.onScroll)}}ignore(g){if(!this.active)return g();try{return this.stop(),g()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,nd),Ad&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){this.active&&(this.active=!1,this.observer.disconnect(),Ad&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(g,e){var I;if(!this.delayedAndroidKey){let g=()=>{let g=this.delayedAndroidKey;g&&(this.clearDelayedAndroidKey(),this.view.inputState.lastKeyCode=g.keyCode,this.view.inputState.lastKeyTime=Date.now(),!this.flush()&&g.force&&qC(this.dom,g.key,g.keyCode))};this.flushingAndroidKey=this.view.win.requestAnimationFrame(g)}(!this.delayedAndroidKey||"Enter"==g)&&(this.delayedAndroidKey={key:g,keyCode:e,force:this.lastChange<Date.now()-50||!(null===(I=this.delayedAndroidKey)||void 0===I||!I.force)})}clearDelayedAndroidKey(){this.win.cancelAnimationFrame(this.flushingAndroidKey),this.delayedAndroidKey=null,this.flushingAndroidKey=-1}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=this.view.win.requestAnimationFrame((()=>{this.delayedFlush=-1,this.flush()})))}forceFlush(){this.delayedFlush>=0&&(this.view.win.cancelAnimationFrame(this.delayedFlush),this.delayedFlush=-1),this.flush()}pendingRecords(){for(let g of this.observer.takeRecords())this.queue.push(g);return this.queue}processRecords(){let g=this.pendingRecords();g.length&&(this.queue=[]);let e=-1,I=-1,t=!1;for(let C of g){let g=this.readMutation(C);g&&(g.typeOver&&(t=!0),-1==e?({from:e,to:I}=g):(e=Math.min(g.from,e),I=Math.max(g.to,I)))}return{from:e,to:I,typeOver:t}}readChange(){let{from:g,to:e,typeOver:I}=this.processRecords(),t=this.selectionChanged&&EC(this.dom,this.selectionRange);if(g<0&&!t)return null;g>-1&&(this.lastChange=Date.now()),this.view.inputState.lastFocusTime=0,this.selectionChanged=!1;let C=new ed(this.view,g,e,I);return this.view.docView.domChanged={newSel:C.newSel?C.newSel.main:null},C}flush(g=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return!1;g&&this.readSelectionRange();let e=this.readChange();if(!e)return this.view.requestMeasure(),!1;let I=this.view.state,t=Id(this.view,e);return this.view.state==I&&this.view.update([]),t}readMutation(g){let e=this.view.docView.nearest(g.target);if(!e||e.ignoreMutation(g))return null;if(e.markDirty("attributes"==g.type),"attributes"==g.type&&(e.flags|=4),"childList"==g.type){let I=od(e,g.previousSibling||g.target.previousSibling,-1),t=od(e,g.nextSibling||g.target.nextSibling,1);return{from:I?e.posAfter(I):e.posAtStart,to:t?e.posBefore(t):e.posAtEnd,typeOver:!1}}return"characterData"==g.type?{from:e.posAtStart,to:e.posAtEnd,typeOver:g.target.nodeValue==g.oldValue}:null}setWindow(g){g!=this.win&&(this.removeWindowListeners(this.win),this.win=g,this.addWindowListeners(this.win))}addWindowListeners(g){g.addEventListener("resize",this.onResize),this.printQuery?this.printQuery.addEventListener("change",this.onPrint):g.addEventListener("beforeprint",this.onPrint),g.addEventListener("scroll",this.onScroll),g.document.addEventListener("selectionchange",this.onSelectionChange)}removeWindowListeners(g){g.removeEventListener("scroll",this.onScroll),g.removeEventListener("resize",this.onResize),this.printQuery?this.printQuery.removeEventListener("change",this.onPrint):g.removeEventListener("beforeprint",this.onPrint),g.document.removeEventListener("selectionchange",this.onSelectionChange)}destroy(){var g,e,I;this.stop(),null===(g=this.intersection)||void 0===g||g.disconnect(),null===(e=this.gapIntersection)||void 0===e||e.disconnect(),null===(I=this.resizeScroll)||void 0===I||I.disconnect();for(let g of this.scrollTargets)g.removeEventListener("scroll",this.onScroll);this.removeWindowListeners(this.win),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout),this.win.cancelAnimationFrame(this.delayedFlush),this.win.cancelAnimationFrame(this.flushingAndroidKey)}}function od(g,e,I){for(;e;){let t=ni.get(e);if(t&&t.parent==g)return t;let C=e.parentNode;e=C!=g.dom?C:I>0?e.nextSibling:e.previousSibling}return null}function sd(g,e){let I=e.startContainer,t=e.startOffset,C=e.endContainer,i=e.endOffset,l=g.docView.domAtPos(g.state.selection.main.anchor);return JC(l.node,l.offset,C,i)&&([I,t,C,i]=[C,i,I,t]),{anchorNode:I,anchorOffset:t,focusNode:C,focusOffset:i}}function ad(g,e){if(e.getComposedRanges){let I=e.getComposedRanges(g.root)[0];if(I)return sd(g,I)}let I=null;function t(g){g.preventDefault(),g.stopImmediatePropagation(),I=g.getTargetRanges()[0]}return g.contentDOM.addEventListener("beforeinput",t,!0),g.dom.ownerDocument.execCommand("indent"),g.contentDOM.removeEventListener("beforeinput",t,!0),I?sd(g,I):null}class Vd{get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}get root(){return this._root}get win(){return this.dom.ownerDocument.defaultView||window}constructor(g={}){this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.className="cm-announced",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),g.parent&&g.parent.appendChild(this.dom);let{dispatch:e}=g;this.dispatchTransactions=g.dispatchTransactions||e&&(g=>g.forEach((g=>e(g,this))))||(g=>this.update(g)),this.dispatch=this.dispatch.bind(this),this._root=g.root||$C(g.parent)||document,this.viewState=new YA(g.state||_t.create(g)),g.scrollTo&&g.scrollTo.is(Ml)&&(this.viewState.scrollTarget=g.scrollTo.value.clip(this.viewState.state)),this.plugins=this.state.facet(Jl).map((g=>new wl(g)));for(let g of this.plugins)g.update(this);this.observer=new dd(this),this.inputState=new un(this),this.inputState.ensureHandlers(this.plugins),this.docView=new ql(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,this.requestMeasure()}dispatch(...g){let e=1==g.length&&g[0]instanceof Jt?g:1==g.length&&Array.isArray(g[0])?g[0]:[this.state.update(...g)];this.dispatchTransactions(e,this)}update(g){if(0!=this.updateState)throw new Error("Calls to EditorView.update are not allowed while an update is in progress");let e,I=!1,t=!1,C=this.state;for(let e of g){if(e.startState!=C)throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");C=e.state}if(this.destroyed)return void(this.viewState.state=C);let i=this.hasFocus,l=0,n=null;g.some((g=>g.annotation(dA)))?(this.inputState.notifiedFocused=i,l=1):i!=this.inputState.notifiedFocused&&(this.inputState.notifiedFocused=i,n=oA(C,i),n||(l=1));let A=this.observer.delayedAndroidKey,d=null;if(A?(this.observer.clearDelayedAndroidKey(),d=this.observer.readChange(),(d&&!this.state.doc.eq(C.doc)||!this.state.selection.eq(C.selection))&&(d=null)):this.observer.clear(),C.facet(_t.phrases)!=this.state.facet(_t.phrases))return this.setState(C);e=_l.create(this,C,g),e.flags|=l;let o=this.viewState.scrollTarget;try{this.updateState=2;for(let e of g){if(o&&(o=o.map(e.changes)),e.scrollIntoView){let{main:g}=e.state.selection;o=new Ql(g.empty?g:it.cursor(g.head,g.head>g.anchor?-1:1))}for(let g of e.effects)g.is(Ml)&&(o=g.value.clip(this.state))}this.viewState.update(e,o),this.bidiCache=hd.update(this.bidiCache,e.changes),e.empty||(this.updatePlugins(e),this.inputState.update(e)),I=this.docView.update(e),this.state.facet(Ll)!=this.styleModules&&this.mountStyles(),t=this.updateAttrs(),this.showAnnouncements(g),this.docView.updateSelection(I,g.some((g=>g.isUserEvent("select.pointer"))))}finally{this.updateState=0}if(e.startState.facet(DA)!=e.state.facet(DA)&&(this.viewState.mustMeasureContent=!0),(I||t||o||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),I&&this.docViewUpdate(),!e.empty)for(let g of this.state.facet(Sl))try{g(e)}catch(g){Yl(this.state,g,"update listener")}(n||d)&&Promise.resolve().then((()=>{n&&this.state==n.startState&&this.dispatch(n),d&&!Id(this,d)&&A.force&&qC(this.contentDOM,A.key,A.keyCode)}))}setState(g){if(0!=this.updateState)throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed)return void(this.viewState.state=g);this.updateState=2;let e=this.hasFocus;try{for(let g of this.plugins)g.destroy(this);this.viewState=new YA(g),this.plugins=g.facet(Jl).map((g=>new wl(g))),this.pluginMap.clear();for(let g of this.plugins)g.update(this);this.docView.destroy(),this.docView=new ql(this),this.inputState.ensureHandlers(this.plugins),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}e&&this.focus(),this.requestMeasure()}updatePlugins(g){let e=g.startState.facet(Jl),I=g.state.facet(Jl);if(e!=I){let t=[];for(let C of I){let I=e.indexOf(C);if(I<0)t.push(new wl(C));else{let e=this.plugins[I];e.mustUpdate=g,t.push(e)}}for(let e of this.plugins)e.mustUpdate!=g&&e.destroy(this);this.plugins=t,this.pluginMap.clear()}else for(let e of this.plugins)e.mustUpdate=g;for(let g=0;g<this.plugins.length;g++)this.plugins[g].update(this);e!=I&&this.inputState.ensureHandlers(this.plugins)}docViewUpdate(){for(let g of this.plugins){let e=g.value;if(e&&e.docViewUpdate)try{e.docViewUpdate(this)}catch(g){Yl(this.state,g,"doc view update listener")}}}measure(g=!0){if(this.destroyed)return;if(this.measureScheduled>-1&&this.win.cancelAnimationFrame(this.measureScheduled),this.observer.delayedAndroidKey)return this.measureScheduled=-1,void this.requestMeasure();this.measureScheduled=0,g&&this.observer.forceFlush();let e=null,I=this.scrollDOM,t=I.scrollTop*this.scaleY,{scrollAnchorPos:C,scrollAnchorHeight:i}=this.viewState;Math.abs(t-this.viewState.scrollTop)>1&&(i=-1),this.viewState.scrollAnchorHeight=-1;try{for(let g=0;;g++){if(i<0)if(Ii(I))C=-1,i=this.viewState.heightMap.height;else{let g=this.viewState.scrollAnchorAt(t);C=g.from,i=g.top}this.updateState=1;let l=this.viewState.measure(this);if(!l&&!this.measureRequests.length&&null==this.viewState.scrollTarget)break;if(g>5)break;let n=[];4&l||([this.measureRequests,n]=[n,this.measureRequests]);let A=n.map((g=>{try{return g.read(this)}catch(g){return Yl(this.state,g),rd}})),d=_l.create(this,this.state,[]),o=!1;d.flags|=l,e?e.flags|=l:e=d,this.updateState=2,d.empty||(this.updatePlugins(d),this.inputState.update(d),this.updateAttrs(),o=this.docView.update(d),o&&this.docViewUpdate());for(let g=0;g<n.length;g++)if(A[g]!=rd)try{let e=n[g];e.write&&e.write(A[g],this)}catch(g){Yl(this.state,g)}if(o&&this.docView.updateSelection(!0),!d.viewportChanged&&0==this.measureRequests.length){if(this.viewState.editorHeight){if(this.viewState.scrollTarget){this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,i=-1;continue}{let g=(C<0?this.viewState.heightMap.height:this.viewState.lineBlockAt(C).top)-i;if(g>1||g<-1){t+=g,I.scrollTop=t/this.scaleY,i=-1;continue}}}break}}}finally{this.updateState=0,this.measureScheduled=-1}if(e&&!e.empty)for(let g of this.state.facet(Sl))g(e)}get themeClasses(){return xA+" "+(this.state.facet(vA)?fA:OA)+" "+this.state.facet(DA)}updateAttrs(){let g=Ud(this,Xl,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),e={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(El)?"true":"false",class:"cm-content",style:`${Wi.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(e["aria-readonly"]="true"),Ud(this,Kl,e);let I=this.observer.ignore((()=>{let I=Ji(this.contentDOM,this.contentAttrs,e),t=Ji(this.dom,this.editorAttrs,g);return I||t}));return this.editorAttrs=g,this.contentAttrs=e,I}showAnnouncements(g){let e=!0;for(let I of g)for(let g of I.effects)g.is(Vd.announce)&&(e&&(this.announceDOM.textContent=""),e=!1,this.announceDOM.appendChild(document.createElement("div")).textContent=g.value)}mountStyles(){this.styleModules=this.state.facet(Ll);let g=this.state.facet(Vd.cspNonce);BC.mount(this.root,this.styleModules.concat(PA).reverse(),g?{nonce:g}:void 0)}readMeasured(){if(2==this.updateState)throw new Error("Reading the editor layout isn't allowed during an update");0==this.updateState&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(g){if(this.measureScheduled<0&&(this.measureScheduled=this.win.requestAnimationFrame((()=>this.measure()))),g){if(this.measureRequests.indexOf(g)>-1)return;if(null!=g.key)for(let e=0;e<this.measureRequests.length;e++)if(this.measureRequests[e].key===g.key)return void(this.measureRequests[e]=g);this.measureRequests.push(g)}}plugin(g){let e=this.pluginMap.get(g);return(void 0===e||e&&e.spec!=g)&&this.pluginMap.set(g,e=this.plugins.find((e=>e.spec==g))||null),e&&e.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}get scaleX(){return this.viewState.scaleX}get scaleY(){return this.viewState.scaleY}elementAtHeight(g){return this.readMeasured(),this.viewState.elementAtHeight(g)}lineBlockAtHeight(g){return this.readMeasured(),this.viewState.lineBlockAtHeight(g)}get viewportLineBlocks(){return this.viewState.viewportLines}lineBlockAt(g){return this.viewState.lineBlockAt(g)}get contentHeight(){return this.viewState.contentHeight}moveByChar(g,e,I){return bn(this,g,Wn(this,g,e,I))}moveByGroup(g,e){return bn(this,g,Wn(this,g,e,(e=>Nn(this,g.head,e))))}visualLineSide(g,e){let I=this.bidiSpans(g),t=this.textDirectionAt(g.from),C=I[e?I.length-1:0];return it.cursor(C.side(e,t)+g.from,C.forward(!e,t)?1:-1)}moveToLineBoundary(g,e,I=!0){return Bn(this,g,e,I)}moveVertically(g,e,I){return bn(this,g,pn(this,g,e,I))}domAtPos(g){return this.docView.domAtPos(g)}posAtDOM(g,e=0){return this.docView.posFromDOM(g,e)}posAtCoords(g,e=!0){return this.readMeasured(),Un(this,g,e)}coordsAtPos(g,e=1){this.readMeasured();let I=this.docView.coordsAt(g,e);if(!I||I.left==I.right)return I;let t=this.state.doc.lineAt(g),C=this.bidiSpans(t);return zC(I,C[dl.find(C,g-t.from,-1,e)].dir==$i.LTR==e>0)}coordsForChar(g){return this.readMeasured(),this.docView.coordsForChar(g)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.defaultTextDirection}textDirectionAt(g){return!this.state.facet(Tl)||g<this.viewport.from||g>this.viewport.to?this.textDirection:(this.readMeasured(),this.docView.textDirectionAt(g))}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(g){if(g.length>cd)return Zl(g.length);let e,I=this.textDirectionAt(g.from);for(let t of this.bidiCache)if(t.from==g.from&&t.dir==I&&(t.fresh||ol(t.isolates,e=Ol(this,g))))return t.order;e||(e=Ol(this,g));let t=Ul(g.text,I,e);return this.bidiCache.push(new hd(g.from,g.to,I,e,!0,t)),t}get hasFocus(){var g;return(this.dom.ownerDocument.hasFocus()||Wi.safari&&(null===(g=this.inputState)||void 0===g?void 0:g.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore((()=>{PC(this.contentDOM),this.docView.updateSelection()}))}setRoot(g){this._root!=g&&(this._root=g,this.observer.setWindow((9==g.nodeType?g:g.ownerDocument).defaultView||window),this.mountStyles())}destroy(){for(let g of this.plugins)g.destroy(this);this.plugins=[],this.inputState.destroy(),this.docView.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&this.win.cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(g,e={}){return Ml.of(new Ql("number"==typeof g?it.cursor(g):g,e.y,e.x,e.yMargin,e.xMargin))}scrollSnapshot(){let{scrollTop:g,scrollLeft:e}=this.scrollDOM,I=this.viewState.scrollAnchorAt(g);return Ml.of(new Ql(it.cursor(I.from),"start","start",I.top-g,e,!0))}static domEventHandlers(g){return Hl.define((()=>({})),{eventHandlers:g})}static domEventObservers(g){return Hl.define((()=>({})),{eventObservers:g})}static theme(g,e){let I=BC.newName(),t=[DA.of(I),Ll.of(LA(`.${I}`,g))];return e&&e.dark&&t.push(vA.of(!0)),t}static baseTheme(g){return Zt.lowest(Ll.of(LA("."+xA,g,jA)))}static findFromDOM(g){var e;let I=g.querySelector(".cm-content"),t=I&&ni.get(I)||ni.get(g);return(null===(e=null==t?void 0:t.rootView)||void 0===e?void 0:e.view)||null}}Vd.styleModule=Ll,Vd.inputHandler=bl,Vd.scrollHandler=kl,Vd.focusChangeEffect=ul,Vd.perLineTextDirection=Tl,Vd.exceptionSink=pl,Vd.updateListener=Sl,Vd.editable=El,Vd.mouseSelectionStyle=Nl,Vd.dragMovesSelection=Wl,Vd.clickAddsSelectionRange=Bl,Vd.decorations=zl,Vd.outerDecorations=Dl,Vd.atomicRanges=vl,Vd.bidiIsolatedRanges=xl,Vd.scrollMargins=fl,Vd.darkTheme=vA,Vd.cspNonce=At.define({combine:g=>g.length?g[0]:""}),Vd.contentAttributes=Kl,Vd.editorAttributes=Xl,Vd.lineWrapping=Vd.contentAttributes.of({class:"cm-lineWrapping"}),Vd.announce=yt.define();const cd=4096,rd={};class hd{constructor(g,e,I,t,C,i){this.from=g,this.to=e,this.dir=I,this.isolates=t,this.fresh=C,this.order=i}static update(g,e){if(e.empty&&!g.some((g=>g.fresh)))return g;let I=[],t=g.length?g[g.length-1].dir:$i.LTR;for(let C=Math.max(0,g.length-10);C<g.length;C++){let i=g[C];i.dir==t&&!e.touchesRange(i.from,i.to)&&I.push(new hd(e.mapPos(i.from,1),e.mapPos(i.to,-1),i.dir,i.isolates,!1,i.order))}return I}}function Ud(g,e,I){for(let t=g.state.facet(e),C=t.length-1;C>=0;C--){let e=t[C],i="function"==typeof e?e(g):e;i&&Yi(i,I)}return I}const Zd=Wi.mac?"mac":Wi.windows?"win":Wi.linux?"linux":"key";function Rd(g,e){const I=g.split(/-(?!$)/);let t,C,i,l,n=I[I.length-1];"Space"==n&&(n=" ");for(let g=0;g<I.length-1;++g){const n=I[g];if(/^(cmd|meta|m)$/i.test(n))l=!0;else if(/^a(lt)?$/i.test(n))t=!0;else if(/^(c|ctrl|control)$/i.test(n))C=!0;else if(/^s(hift)?$/i.test(n))i=!0;else{if(!/^mod$/i.test(n))throw new Error("Unrecognized modifier name: "+n);"mac"==e?l=!0:C=!0}}return t&&(n="Alt-"+n),C&&(n="Ctrl-"+n),l&&(n="Meta-"+n),i&&(n="Shift-"+n),n}function Fd(g,e,I){return e.altKey&&(g="Alt-"+g),e.ctrlKey&&(g="Ctrl-"+g),e.metaKey&&(g="Meta-"+g),!1!==I&&e.shiftKey&&(g="Shift-"+g),g}const md=Zt.default(Vd.domEventHandlers({keydown:(g,e)=>Td(Nd(e.state),g,e,"editor")})),Bd=At.define({enables:md}),Wd=new WeakMap;function Nd(g){let e=g.facet(Bd),I=Wd.get(e);return I||Wd.set(e,I=ud(e.reduce(((g,e)=>g.concat(e)),[]))),I}function pd(g,e,I){return Td(Nd(g.state),e,g,I)}let Sd=null;const bd=4e3;function ud(g,e=Zd){let I=Object.create(null),t=Object.create(null),C=(g,e)=>{let I=t[g];if(null==I)t[g]=e;else if(I!=e)throw new Error("Key binding "+g+" is used both as a regular binding and as a multi-stroke prefix")},i=(g,t,i,l,n)=>{var A,d;let o=I[g]||(I[g]=Object.create(null)),s=t.split(/ (?!$)/).map((g=>Rd(g,e)));for(let e=1;e<s.length;e++){let I=s.slice(0,e).join(" ");C(I,!0),o[I]||(o[I]={preventDefault:!0,stopPropagation:!1,run:[e=>{let t=Sd={view:e,prefix:I,scope:g};return setTimeout((()=>{Sd==t&&(Sd=null)}),bd),!0}]})}let a=s.join(" ");C(a,!1);let V=o[a]||(o[a]={preventDefault:!1,stopPropagation:!1,run:(null===(d=null===(A=o._any)||void 0===A?void 0:A.run)||void 0===d?void 0:d.slice())||[]});i&&V.run.push(i),l&&(V.preventDefault=!0),n&&(V.stopPropagation=!0)};for(let t of g){let g=t.scope?t.scope.split(" "):["editor"];if(t.any)for(let e of g){let g=I[e]||(I[e]=Object.create(null));g._any||(g._any={preventDefault:!1,stopPropagation:!1,run:[]});for(let e in g)g[e].run.push(t.any)}let C=t[e]||t.key;if(C)for(let e of g)i(e,C,t.run,t.preventDefault,t.stopPropagation),t.shift&&i(e,"Shift-"+C,t.shift,t.preventDefault,t.stopPropagation)}return I}function Td(g,e,I,t){let C=kC(e),i=fI(xI(C,0))==C.length&&" "!=C,l="",n=!1,A=!1,d=!1;Sd&&Sd.view==I&&Sd.scope==t&&(l=Sd.prefix+" ",Mn.indexOf(e.keyCode)<0&&(A=!0,Sd=null));let o,s,a=new Set,V=g=>{if(g){for(let t of g.run)if(!a.has(t)&&(a.add(t),t(I,e)))return g.stopPropagation&&(d=!0),!0;g.preventDefault&&(g.stopPropagation&&(d=!0),A=!0)}return!1},c=g[t];return c&&(V(c[l+Fd(C,e,!i)])?n=!0:i&&(e.altKey||e.metaKey||e.ctrlKey)&&!(Wi.windows&&e.ctrlKey&&e.altKey)&&(o=pC[e.keyCode])&&o!=C?(V(c[l+Fd(o,e,!0)])||e.shiftKey&&(s=SC[e.keyCode])!=C&&s!=o&&V(c[l+Fd(s,e,!1)]))&&(n=!0):i&&e.shiftKey&&V(c[l+Fd(C,e,!0)])&&(n=!0),!n&&V(c._any)&&(n=!0)),A&&(n=!0),n&&d&&e.stopPropagation(),n}class Gd{constructor(g,e,I,t,C){this.className=g,this.left=e,this.top=I,this.width=t,this.height=C}draw(){let g=document.createElement("div");return g.className=this.className,this.adjust(g),g}update(g,e){return e.className==this.className&&(this.adjust(g),!0)}adjust(g){g.style.left=this.left+"px",g.style.top=this.top+"px",null!=this.width&&(g.style.width=this.width+"px"),g.style.height=this.height+"px"}eq(g){return this.left==g.left&&this.top==g.top&&this.width==g.width&&this.height==g.height&&this.className==g.className}static forRange(g,e,I){if(I.empty){let t=g.coordsAtPos(I.head,I.assoc||1);if(!t)return[];let C=kd(g);return[new Gd(e,t.left-C.left,t.top-C.top,null,t.bottom-t.top)]}return Md(g,e,I)}}function kd(g){let e=g.scrollDOM.getBoundingClientRect();return{left:(g.textDirection==$i.LTR?e.left:e.right-g.scrollDOM.clientWidth*g.scaleX)-g.scrollDOM.scrollLeft*g.scaleX,top:e.top-g.scrollDOM.scrollTop*g.scaleY}}function Qd(g,e,I){let t=it.cursor(e);return{from:Math.max(I.from,g.moveToLineBoundary(t,!1,!0).from),to:Math.min(I.to,g.moveToLineBoundary(t,!0,!0).from),type:zi.Text}}function Md(g,e,I){if(I.to<=g.viewport.from||I.from>=g.viewport.to)return[];let t=Math.max(I.from,g.viewport.from),C=Math.min(I.to,g.viewport.to),i=g.textDirection==$i.LTR,l=g.contentDOM,n=l.getBoundingClientRect(),A=kd(g),d=l.querySelector(".cm-line"),o=d&&window.getComputedStyle(d),s=n.left+(o?parseInt(o.paddingLeft)+Math.min(0,parseInt(o.textIndent)):0),a=n.right-(o?parseInt(o.paddingRight):0),V=mn(g,t),c=mn(g,C),r=V.type==zi.Text?V:null,h=c.type==zi.Text?c:null;if(r&&(g.lineWrapping||V.widgetLineBreaks)&&(r=Qd(g,t,r)),h&&(g.lineWrapping||c.widgetLineBreaks)&&(h=Qd(g,C,h)),r&&h&&r.from==h.from)return Z(R(I.from,I.to,r));{let e=r?R(I.from,null,r):F(V,!1),t=h?R(null,I.to,h):F(c,!0),C=[];return(r||V).to<(h||c).from-(r&&h?1:0)||V.widgetLineBreaks>1&&e.bottom+g.defaultLineHeight/2<t.top?C.push(U(s,e.bottom,a,t.top)):e.bottom<t.top&&g.elementAtHeight((e.bottom+t.top)/2).type==zi.Text&&(e.bottom=t.top=(e.bottom+t.top)/2),Z(e).concat(C).concat(Z(t))}function U(g,I,t,C){return new Gd(e,g-A.left,I-A.top-.01,t-g,C-I+.01)}function Z({top:g,bottom:e,horizontal:I}){let t=[];for(let C=0;C<I.length;C+=2)t.push(U(I[C],g,I[C+1],e));return t}function R(e,I,t){let C=1e9,l=-1e9,n=[];function A(e,I,A,d,o){let V=g.coordsAtPos(e,e==t.to?-2:2),c=g.coordsAtPos(A,A==t.from?2:-2);!V||!c||(C=Math.min(V.top,c.top,C),l=Math.max(V.bottom,c.bottom,l),o==$i.LTR?n.push(i&&I?s:V.left,i&&d?a:c.right):n.push(!i&&d?s:c.left,!i&&I?a:V.right))}let d=e??t.from,o=I??t.to;for(let t of g.visibleRanges)if(t.to>d&&t.from<o)for(let C=Math.max(t.from,d),i=Math.min(t.to,o);;){let t=g.state.doc.lineAt(C);for(let l of g.bidiSpans(t)){let g=l.from+t.from,n=l.to+t.from;if(g>=i)break;n>C&&A(Math.max(g,C),null==e&&g<=d,Math.min(n,i),null==I&&n>=o,l.dir)}if(C=t.to+1,C>=i)break}return 0==n.length&&A(d,null==e,o,null==I,g.textDirection),{top:C,bottom:l,horizontal:n}}function F(g,e){let I=n.top+(e?g.top:g.bottom);return{top:I,bottom:I,horizontal:[]}}}function Yd(g,e){return g.constructor==e.constructor&&g.eq(e)}class Ed{constructor(g,e){this.view=g,this.layer=e,this.drawn=[],this.scaleX=1,this.scaleY=1,this.measureReq={read:this.measure.bind(this),write:this.draw.bind(this)},this.dom=g.scrollDOM.appendChild(document.createElement("div")),this.dom.classList.add("cm-layer"),e.above&&this.dom.classList.add("cm-layer-above"),e.class&&this.dom.classList.add(e.class),this.scale(),this.dom.setAttribute("aria-hidden","true"),this.setOrder(g.state),g.requestMeasure(this.measureReq),e.mount&&e.mount(this.dom,g)}update(g){g.startState.facet(yd)!=g.state.facet(yd)&&this.setOrder(g.state),(this.layer.update(g,this.dom)||g.geometryChanged)&&(this.scale(),g.view.requestMeasure(this.measureReq))}docViewUpdate(g){!1!==this.layer.updateOnDocViewUpdate&&g.requestMeasure(this.measureReq)}setOrder(g){let e=0,I=g.facet(yd);for(;e<I.length&&I[e]!=this.layer;)e++;this.dom.style.zIndex=String((this.layer.above?150:-1)-e)}measure(){return this.layer.markers(this.view)}scale(){let{scaleX:g,scaleY:e}=this.view;(g!=this.scaleX||e!=this.scaleY)&&(this.scaleX=g,this.scaleY=e,this.dom.style.transform=`scale(${1/g}, ${1/e})`)}draw(g){if(g.length!=this.drawn.length||g.some(((g,e)=>!Yd(g,this.drawn[e])))){let e=this.dom.firstChild,I=0;for(let t of g)t.update&&e&&t.constructor&&this.drawn[I].constructor&&t.update(e,this.drawn[I])?(e=e.nextSibling,I++):this.dom.insertBefore(t.draw(),e);for(;e;){let g=e.nextSibling;e.remove(),e=g}this.drawn=g}}destroy(){this.layer.destroy&&this.layer.destroy(this.dom,this.view),this.dom.remove()}}const yd=At.define();function Jd(g){return[Hl.define((e=>new Ed(e,g))),yd.of(g)]}const Hd=!Wi.ios,wd=At.define({combine:g=>qt(g,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(g,e)=>Math.min(g,e),drawRangeCursor:(g,e)=>g||e})});function Xd(g={}){return[wd.of(g),Dd,xd,fd,Gl.of(!0)]}function Kd(g){return g.facet(wd)}function zd(g){return g.startState.facet(wd)!=g.state.facet(wd)}const Dd=Jd({above:!0,markers(g){let{state:e}=g,I=e.facet(wd),t=[];for(let C of e.selection.ranges){let i=C==e.selection.main;if(C.empty?!i||Hd:I.drawRangeCursor){let e=i?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary",I=C.empty?C:it.cursor(C.head,C.head>C.anchor?-1:1);for(let C of Gd.forRange(g,e,I))t.push(C)}}return t},update(g,e){g.transactions.some((g=>g.selection))&&(e.style.animationName="cm-blink"==e.style.animationName?"cm-blink2":"cm-blink");let I=zd(g);return I&&vd(g.state,e),g.docChanged||g.selectionSet||I},mount(g,e){vd(e.state,g)},class:"cm-cursorLayer"});function vd(g,e){e.style.animationDuration=g.facet(wd).cursorBlinkRate+"ms"}const xd=Jd({above:!1,markers:g=>g.state.selection.ranges.map((e=>e.empty?[]:Gd.forRange(g,"cm-selectionBackground",e))).reduce(((g,e)=>g.concat(e))),update:(g,e)=>g.docChanged||g.selectionSet||g.viewportChanged||zd(g),class:"cm-selectionLayer"}),Od={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};Hd&&(Od[".cm-line"].caretColor="transparent !important",Od[".cm-content"]={caretColor:"transparent !important"});const fd=Zt.highest(Vd.theme(Od)),jd=yt.define({map:(g,e)=>null==g?null:e.mapPos(g)}),Ld=rt.define({create:()=>null,update:(g,e)=>(null!=g&&(g=e.changes.mapPos(g)),e.effects.reduce(((g,e)=>e.is(jd)?e.value:g),g))}),Pd=Hl.fromClass(class{constructor(g){this.view=g,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(g){var e;let I=g.state.field(Ld);null==I?null!=this.cursor&&(null===(e=this.cursor)||void 0===e||e.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(g.startState.field(Ld)!=I||g.docChanged||g.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let{view:g}=this,e=g.state.field(Ld),I=null!=e&&g.coordsAtPos(e);if(!I)return null;let t=g.scrollDOM.getBoundingClientRect();return{left:I.left-t.left+g.scrollDOM.scrollLeft*g.scaleX,top:I.top-t.top+g.scrollDOM.scrollTop*g.scaleY,height:I.bottom-I.top}}drawCursor(g){if(this.cursor){let{scaleX:e,scaleY:I}=this.view;g?(this.cursor.style.left=g.left/e+"px",this.cursor.style.top=g.top/I+"px",this.cursor.style.height=g.height/I+"px"):this.cursor.style.left="-100000px"}}destroy(){this.cursor&&this.cursor.remove()}setDropPos(g){this.view.state.field(Ld)!=g&&this.view.dispatch({effects:jd.of(g)})}},{eventObservers:{dragover(g){this.setDropPos(this.view.posAtCoords({x:g.clientX,y:g.clientY}))},dragleave(g){(g.target==this.view.contentDOM||!this.view.contentDOM.contains(g.relatedTarget))&&this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function _d(){return[Ld,Pd]}function qd(g,e,I,t,C){e.lastIndex=0;for(let i,l=g.iterRange(I,t),n=I;!l.next().done;n+=l.value.length)if(!l.lineBreak)for(;i=e.exec(l.value);)C(n+i.index,i)}function $d(g,e){let I=g.visibleRanges;if(1==I.length&&I[0].from==g.viewport.from&&I[0].to==g.viewport.to)return I;let t=[];for(let{from:C,to:i}of I)C=Math.max(g.state.doc.lineAt(C).from,C-e),i=Math.min(g.state.doc.lineAt(i).to,i+e),t.length&&t[t.length-1].to>=C?t[t.length-1].to=i:t.push({from:C,to:i});return t}class go{constructor(g){const{regexp:e,decoration:I,decorate:t,boundary:C,maxLength:i=1e3}=g;if(!e.global)throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");if(this.regexp=e,t)this.addMatch=(g,e,I,C)=>t(C,I,I+g[0].length,g,e);else if("function"==typeof I)this.addMatch=(g,e,t,C)=>{let i=I(g,e,t);i&&C(t,t+g[0].length,i)};else{if(!I)throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");this.addMatch=(g,e,t,C)=>C(t,t+g[0].length,I)}this.boundary=C,this.maxLength=i}createDeco(g){let e=new iC,I=e.add.bind(e);for(let{from:e,to:t}of $d(g,this.maxLength))qd(g.state.doc,this.regexp,e,t,((e,t)=>this.addMatch(t,g,e,I)));return e.finish()}updateDeco(g,e){let I=1e9,t=-1;return g.docChanged&&g.changes.iterChanges(((e,C,i,l)=>{l>g.view.viewport.from&&i<g.view.viewport.to&&(I=Math.min(i,I),t=Math.max(l,t))})),g.viewportChanged||t-I>1e3?this.createDeco(g.view):t>-1?this.updateRange(g.view,e.map(g.changes),I,t):e}updateRange(g,e,I,t){for(let C of g.visibleRanges){let i=Math.max(C.from,I),l=Math.min(C.to,t);if(l>i){let I=g.state.doc.lineAt(i),t=I.to<l?g.state.doc.lineAt(l):I,n=Math.max(C.from,I.from),A=Math.min(C.to,t.to);if(this.boundary){for(;i>I.from;i--)if(this.boundary.test(I.text[i-1-I.from])){n=i;break}for(;l<t.to;l++)if(this.boundary.test(t.text[l-t.from])){A=l;break}}let d,o=[],s=(g,e,I)=>o.push(I.range(g,e));if(I==t)for(this.regexp.lastIndex=n-I.from;(d=this.regexp.exec(I.text))&&d.index<A-I.from;)this.addMatch(d,g,d.index+I.from,s);else qd(g.state.doc,this.regexp,n,A,((e,I)=>this.addMatch(I,g,e,s)));e=e.update({filterFrom:n,filterTo:A,filter:(g,e)=>g<n||e>A,add:o})}}return e}}const eo=null!=/x/.unicode?"gu":"g",Io=new RegExp("[\0-\b\n--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\ufeff￹-￼]",eo),to={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8294:"left-to-right isolate",8295:"right-to-left isolate",8297:"pop directional isolate",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let Co=null;function io(){var g;if(null==Co&&typeof document<"u"&&document.body){let e=document.body.style;Co=null!=(null!==(g=e.tabSize)&&void 0!==g?g:e.MozTabSize)}return Co||!1}const lo=At.define({combine(g){let e=qt(g,{render:null,specialChars:Io,addSpecialChars:null});return(e.replaceTabs=!io())&&(e.specialChars=new RegExp("\t|"+e.specialChars.source,eo)),e.addSpecialChars&&(e.specialChars=new RegExp(e.specialChars.source+"|"+e.addSpecialChars.source,eo)),e}});function no(g={}){return[lo.of(g),oo()]}let Ao=null;function oo(){return Ao||(Ao=Hl.fromClass(class{constructor(g){this.view=g,this.decorations=Di.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(g.state.facet(lo)),this.decorations=this.decorator.createDeco(g)}makeDecorator(g){return new go({regexp:g.specialChars,decoration:(e,I,t)=>{let{doc:C}=I.state,i=xI(e[0],0);if(9==i){let g=C.lineAt(t),e=I.state.tabSize,i=hC(g.text,e,t-g.from);return Di.replace({widget:new co((e-i%e)*this.view.defaultCharacterWidth/this.view.scaleX)})}return this.decorationCache[i]||(this.decorationCache[i]=Di.replace({widget:new Vo(g,i)}))},boundary:g.replaceTabs?void 0:/[^]/})}update(g){let e=g.state.facet(lo);g.startState.facet(lo)!=e?(this.decorator=this.makeDecorator(e),this.decorations=this.decorator.createDeco(g.view)):this.decorations=this.decorator.updateDeco(g,this.decorations)}},{decorations:g=>g.decorations}))}const so="•";function ao(g){return g>=32?so:10==g?"␤":String.fromCharCode(9216+g)}class Vo extends Ki{constructor(g,e){super(),this.options=g,this.code=e}eq(g){return g.code==this.code}toDOM(g){let e=ao(this.code),I=g.state.phrase("Control character")+" "+(to[this.code]||"0x"+this.code.toString(16)),t=this.options.render&&this.options.render(this.code,I,e);if(t)return t;let C=document.createElement("span");return C.textContent=e,C.title=I,C.setAttribute("aria-label",I),C.className="cm-specialChar",C}ignoreEvent(){return!1}}class co extends Ki{constructor(g){super(),this.width=g}eq(g){return g.width==this.width}toDOM(){let g=document.createElement("span");return g.textContent="\t",g.className="cm-tab",g.style.width=this.width+"px",g}ignoreEvent(){return!1}}function ro(){return Uo}const ho=Di.line({class:"cm-activeLine"}),Uo=Hl.fromClass(class{constructor(g){this.decorations=this.getDeco(g)}update(g){(g.docChanged||g.selectionSet)&&(this.decorations=this.getDeco(g.view))}getDeco(g){let e=-1,I=[];for(let t of g.state.selection.ranges){let C=g.lineBlockAt(t.head);C.from>e&&(I.push(ho.range(C.from)),e=C.from)}return Di.set(I)}},{decorations:g=>g.decorations}),Zo=2e3;function Ro(g,e,I){let t=Math.min(e.line,I.line),C=Math.max(e.line,I.line),i=[];if(e.off>Zo||I.off>Zo||e.col<0||I.col<0){let l=Math.min(e.off,I.off),n=Math.max(e.off,I.off);for(let e=t;e<=C;e++){let I=g.doc.line(e);I.length<=n&&i.push(it.range(I.from+l,I.to+n))}}else{let l=Math.min(e.col,I.col),n=Math.max(e.col,I.col);for(let e=t;e<=C;e++){let I=g.doc.line(e),t=UC(I.text,l,g.tabSize,!0);if(t<0)i.push(it.cursor(I.to));else{let e=UC(I.text,n,g.tabSize);i.push(it.range(I.from+t,I.from+e))}}}return i}function Fo(g,e){let I=g.coordsAtPos(g.viewport.from);return I?Math.round(Math.abs((I.left-e)/g.defaultCharacterWidth)):-1}function mo(g,e){let I=g.posAtCoords({x:e.clientX,y:e.clientY},!1),t=g.state.doc.lineAt(I),C=I-t.from,i=C>Zo?-1:C==t.length?Fo(g,e.clientX):hC(t.text,g.state.tabSize,I-t.from);return{line:t.number,col:i,off:C}}function Bo(g,e){let I=mo(g,e),t=g.state.selection;return I?{update(g){if(g.docChanged){let e=g.changes.mapPos(g.startState.doc.line(I.line).from),C=g.state.doc.lineAt(e);I={line:C.number,col:I.col,off:Math.min(I.off,C.length)},t=t.map(g.changes)}},get(e,C,i){let l=mo(g,e);if(!l)return t;let n=Ro(g.state,I,l);return n.length?i?it.create(n.concat(t.ranges)):it.create(n):t}}:null}function Wo(g){return Vd.mouseSelectionStyle.of(((g,e)=>(g=>g.altKey&&0==g.button)(e)?Bo(g,e):null))}const No={Alt:[18,g=>!!g.altKey],Control:[17,g=>!!g.ctrlKey],Shift:[16,g=>!!g.shiftKey],Meta:[91,g=>!!g.metaKey]},po={style:"cursor: crosshair"};function So(g={}){let[e,I]=No[g.key||"Alt"],t=Hl.fromClass(class{constructor(g){this.view=g,this.isDown=!1}set(g){this.isDown!=g&&(this.isDown=g,this.view.update([]))}},{eventObservers:{keydown(g){this.set(g.keyCode==e||I(g))},keyup(g){(g.keyCode==e||!I(g))&&this.set(!1)},mousemove(g){this.set(I(g))}}});return[t,Vd.contentAttributes.of((g=>{var e;return null!==(e=g.plugin(t))&&void 0!==e&&e.isDown?po:null}))]}const bo="-10000px";class uo{constructor(g,e,I,t){this.facet=e,this.createTooltipView=I,this.removeTooltipView=t,this.input=g.state.facet(e),this.tooltips=this.input.filter((g=>g));let C=null;this.tooltipViews=this.tooltips.map((g=>C=I(g,C)))}update(g,e){var I;let t=g.state.facet(this.facet),C=t.filter((g=>g));if(t===this.input){for(let e of this.tooltipViews)e.update&&e.update(g);return!1}let i=[],l=e?[]:null;for(let I=0;I<C.length;I++){let t=C[I],n=-1;if(t){for(let g=0;g<this.tooltips.length;g++){let e=this.tooltips[g];e&&e.create==t.create&&(n=g)}if(n<0)i[I]=this.createTooltipView(t,I?i[I-1]:null),l&&(l[I]=!!t.above);else{let t=i[I]=this.tooltipViews[n];l&&(l[I]=e[n]),t.update&&t.update(g)}}}for(let g of this.tooltipViews)i.indexOf(g)<0&&(this.removeTooltipView(g),null===(I=g.destroy)||void 0===I||I.call(g));return e&&(l.forEach(((g,I)=>e[I]=g)),e.length=l.length),this.input=t,this.tooltips=C,this.tooltipViews=i,!0}}function To(g){let{win:e}=g;return{top:0,left:0,bottom:e.innerHeight,right:e.innerWidth}}const Go=At.define({combine:g=>{var e,I,t;return{position:Wi.ios?"absolute":(null===(e=g.find((g=>g.position)))||void 0===e?void 0:e.position)||"fixed",parent:(null===(I=g.find((g=>g.parent)))||void 0===I?void 0:I.parent)||null,tooltipSpace:(null===(t=g.find((g=>g.tooltipSpace)))||void 0===t?void 0:t.tooltipSpace)||To}}}),ko=new WeakMap,Qo=Hl.fromClass(class{constructor(g){this.view=g,this.above=[],this.inView=!0,this.madeAbsolute=!1,this.lastTransaction=0,this.measureTimeout=-1;let e=g.state.facet(Go);this.position=e.position,this.parent=e.parent,this.classes=g.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.resizeObserver="function"==typeof ResizeObserver?new ResizeObserver((()=>this.measureSoon())):null,this.manager=new uo(g,Eo,((g,e)=>this.createTooltip(g,e)),(g=>{this.resizeObserver&&this.resizeObserver.unobserve(g.dom),g.dom.remove()})),this.above=this.manager.tooltips.map((g=>!!g.above)),this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver((g=>{Date.now()>this.lastTransaction-50&&g.length>0&&g[g.length-1].intersectionRatio<1&&this.measureSoon()}),{threshold:[1]}):null,this.observeIntersection(),g.win.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let g of this.manager.tooltipViews)this.intersectionObserver.observe(g.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout((()=>{this.measureTimeout=-1,this.maybeMeasure()}),50))}update(g){g.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(g,this.above);e&&this.observeIntersection();let I=e||g.geometryChanged,t=g.state.facet(Go);if(t.position!=this.position&&!this.madeAbsolute){this.position=t.position;for(let g of this.manager.tooltipViews)g.dom.style.position=this.position;I=!0}if(t.parent!=this.parent){this.parent&&this.container.remove(),this.parent=t.parent,this.createContainer();for(let g of this.manager.tooltipViews)this.container.appendChild(g.dom);I=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);I&&this.maybeMeasure()}createTooltip(g,e){let I=g.create(this.view),t=e?e.dom:null;if(I.dom.classList.add("cm-tooltip"),g.arrow&&!I.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let g=document.createElement("div");g.className="cm-tooltip-arrow",I.dom.appendChild(g)}return I.dom.style.position=this.position,I.dom.style.top=bo,I.dom.style.left="0px",this.container.insertBefore(I.dom,t),I.mount&&I.mount(this.view),this.resizeObserver&&this.resizeObserver.observe(I.dom),I}destroy(){var g,e,I;this.view.win.removeEventListener("resize",this.measureSoon);for(let e of this.manager.tooltipViews)e.dom.remove(),null===(g=e.destroy)||void 0===g||g.call(e);this.parent&&this.container.remove(),null===(e=this.resizeObserver)||void 0===e||e.disconnect(),null===(I=this.intersectionObserver)||void 0===I||I.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let g=this.view.dom.getBoundingClientRect(),e=1,I=1,t=!1;if("fixed"==this.position&&this.manager.tooltipViews.length){let{dom:g}=this.manager.tooltipViews[0];if(Wi.gecko)t=g.offsetParent!=this.container.ownerDocument.body;else if(g.style.top==bo&&"0px"==g.style.left){let e=g.getBoundingClientRect();t=Math.abs(e.top+1e4)>1||Math.abs(e.left)>1}}if(t||"absolute"==this.position)if(this.parent){let g=this.parent.getBoundingClientRect();g.width&&g.height&&(e=g.width/this.parent.offsetWidth,I=g.height/this.parent.offsetHeight)}else({scaleX:e,scaleY:I}=this.view.viewState);return{editor:g,parent:this.parent?this.container.getBoundingClientRect():g,pos:this.manager.tooltips.map(((g,e)=>{let I=this.manager.tooltipViews[e];return I.getCoords?I.getCoords(g.pos):this.view.coordsAtPos(g.pos)})),size:this.manager.tooltipViews.map((({dom:g})=>g.getBoundingClientRect())),space:this.view.state.facet(Go).tooltipSpace(this.view),scaleX:e,scaleY:I,makeAbsolute:t}}writeMeasure(g){var e;if(g.makeAbsolute){this.madeAbsolute=!0,this.position="absolute";for(let g of this.manager.tooltipViews)g.dom.style.position="absolute"}let{editor:I,space:t,scaleX:C,scaleY:i}=g,l=[];for(let n=0;n<this.manager.tooltips.length;n++){let A=this.manager.tooltips[n],d=this.manager.tooltipViews[n],{dom:o}=d,s=g.pos[n],a=g.size[n];if(!s||s.bottom<=Math.max(I.top,t.top)||s.top>=Math.min(I.bottom,t.bottom)||s.right<Math.max(I.left,t.left)-.1||s.left>Math.min(I.right,t.right)+.1){o.style.top=bo;continue}let V=A.arrow?d.dom.querySelector(".cm-tooltip-arrow"):null,c=V?7:0,r=a.right-a.left,h=null!==(e=ko.get(d))&&void 0!==e?e:a.bottom-a.top,U=d.offset||Yo,Z=this.view.textDirection==$i.LTR,R=a.width>t.right-t.left?Z?t.left:t.right-a.width:Z?Math.min(s.left-(V?14:0)+U.x,t.right-r):Math.max(t.left,s.left-r+(V?14:0)-U.x),F=this.above[n];!A.strictSide&&(F?s.top-(a.bottom-a.top)-U.y<t.top:s.bottom+(a.bottom-a.top)+U.y>t.bottom)&&F==t.bottom-s.bottom>s.top-t.top&&(F=this.above[n]=!F);let m=(F?s.top-t.top:t.bottom-s.bottom)-c;if(m<h&&!1!==d.resize){if(m<this.view.defaultLineHeight){o.style.top=bo;continue}ko.set(d,h),o.style.height=(h=m)/i+"px"}else o.style.height&&(o.style.height="");let B=F?s.top-h-c-U.y:s.bottom+c+U.y,W=R+r;if(!0!==d.overlap)for(let g of l)g.left<W&&g.right>R&&g.top<B+h&&g.bottom>B&&(B=F?g.top-h-2-c:g.bottom+c+2);if("absolute"==this.position?(o.style.top=(B-g.parent.top)/i+"px",o.style.left=(R-g.parent.left)/C+"px"):(o.style.top=B/i+"px",o.style.left=R/C+"px"),V){let g=s.left+(Z?U.x:-U.x)-(R+14-7);V.style.left=g/C+"px"}!0!==d.overlap&&l.push({left:R,top:B,right:W,bottom:B+h}),o.classList.toggle("cm-tooltip-above",F),o.classList.toggle("cm-tooltip-below",!F),d.positioned&&d.positioned(g.space)}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let g of this.manager.tooltipViews)g.dom.style.top=bo}},{eventObservers:{scroll(){this.maybeMeasure()}}}),Mo=Vd.baseTheme({".cm-tooltip":{zIndex:100,boxSizing:"border-box"},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above &":{bottom:"-7px","&:before":{borderTop:"7px solid #bbb"},"&:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below &":{top:"-7px","&:before":{borderBottom:"7px solid #bbb"},"&:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),Yo={x:0,y:0},Eo=At.define({enables:[Qo,Mo]}),yo=At.define({combine:g=>g.reduce(((g,e)=>g.concat(e)),[])});class Jo{static create(g){return new Jo(g)}constructor(g){this.view=g,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new uo(g,yo,((g,e)=>this.createHostedView(g,e)),(g=>g.dom.remove()))}createHostedView(g,e){let I=g.create(this.view);return I.dom.classList.add("cm-tooltip-section"),this.dom.insertBefore(I.dom,e?e.dom.nextSibling:this.dom.firstChild),this.mounted&&I.mount&&I.mount(this.view),I}mount(g){for(let e of this.manager.tooltipViews)e.mount&&e.mount(g);this.mounted=!0}positioned(g){for(let e of this.manager.tooltipViews)e.positioned&&e.positioned(g)}update(g){this.manager.update(g)}destroy(){var g;for(let e of this.manager.tooltipViews)null===(g=e.destroy)||void 0===g||g.call(e)}passProp(g){let e;for(let I of this.manager.tooltipViews){let t=I[g];if(void 0!==t)if(void 0===e)e=t;else if(e!==t)return}return e}get offset(){return this.passProp("offset")}get getCoords(){return this.passProp("getCoords")}get overlap(){return this.passProp("overlap")}get resize(){return this.passProp("resize")}}const Ho=Eo.compute([yo],(g=>{let e=g.facet(yo);return 0===e.length?null:{pos:Math.min(...e.map((g=>g.pos))),end:Math.max(...e.map((g=>{var e;return null!==(e=g.end)&&void 0!==e?e:g.pos}))),create:Jo.create,above:e[0].above,arrow:e.some((g=>g.arrow))}}));class wo{constructor(g,e,I,t,C){this.view=g,this.source=e,this.field=I,this.setHover=t,this.hoverTime=C,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:g.dom,time:0},this.checkHover=this.checkHover.bind(this),g.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),g.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout((()=>this.startHover()),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active.length)return;let g=Date.now()-this.lastMove.time;g<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-g):this.startHover()}startHover(){clearTimeout(this.restartTimeout);let{view:g,lastMove:e}=this,I=g.docView.nearest(e.target);if(!I)return;let t,C=1;if(I instanceof ui)t=I.posAtStart;else{if(t=g.posAtCoords(e),null==t)return;let I=g.coordsAtPos(t);if(!I||e.y<I.top||e.y>I.bottom||e.x<I.left-g.defaultCharacterWidth||e.x>I.right+g.defaultCharacterWidth)return;let i=g.bidiSpans(g.state.doc.lineAt(t)).find((g=>g.from<=t&&g.to>=t)),l=i&&i.dir==$i.RTL?-1:1;C=e.x<I.left?-l:l}let i=this.source(g,t,C);if(null!=i&&i.then){let e=this.pending={pos:t};i.then((I=>{this.pending==e&&(this.pending=null,I&&(!Array.isArray(I)||I.length)&&g.dispatch({effects:this.setHover.of(Array.isArray(I)?I:[I])}))}),(e=>Yl(g.state,e,"hover tooltip")))}else i&&(!Array.isArray(i)||i.length)&&g.dispatch({effects:this.setHover.of(Array.isArray(i)?i:[i])})}get tooltip(){let g=this.view.plugin(Qo),e=g?g.manager.tooltips.findIndex((g=>g.create==Jo.create)):-1;return e>-1?g.manager.tooltipViews[e]:null}mousemove(g){var e,I;this.lastMove={x:g.clientX,y:g.clientY,target:g.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let{active:t,tooltip:C}=this;if(t.length&&C&&!Ko(C.dom,g)||this.pending){let{pos:C}=t[0]||this.pending,i=null!==(I=null===(e=t[0])||void 0===e?void 0:e.end)&&void 0!==I?I:C;(C==i?this.view.posAtCoords(this.lastMove)!=C:!zo(this.view,C,i,g.clientX,g.clientY))&&(this.view.dispatch({effects:this.setHover.of([])}),this.pending=null)}}mouseleave(g){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1;let{active:e}=this;if(e.length){let{tooltip:e}=this;e&&e.dom.contains(g.relatedTarget)?this.watchTooltipLeave(e.dom):this.view.dispatch({effects:this.setHover.of([])})}}watchTooltipLeave(g){let e=I=>{g.removeEventListener("mouseleave",e),this.active.length&&!this.view.dom.contains(I.relatedTarget)&&this.view.dispatch({effects:this.setHover.of([])})};g.addEventListener("mouseleave",e)}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}const Xo=4;function Ko(g,e){let I=g.getBoundingClientRect();return e.clientX>=I.left-Xo&&e.clientX<=I.right+Xo&&e.clientY>=I.top-Xo&&e.clientY<=I.bottom+Xo}function zo(g,e,I,t,C,i){let l=g.scrollDOM.getBoundingClientRect(),n=g.documentTop+g.documentPadding.top+g.contentHeight;if(l.left>t||l.right<t||l.top>C||Math.min(l.bottom,n)<C)return!1;let A=g.posAtCoords({x:t,y:C},!1);return A>=e&&A<=I}function Do(g,e={}){let I=yt.define(),t=rt.define({create:()=>[],update(g,t){if(g.length&&(e.hideOnChange&&(t.docChanged||t.selection)?g=[]:e.hideOn&&(g=g.filter((g=>!e.hideOn(t,g)))),t.docChanged)){let e=[];for(let I of g){let g=t.changes.mapPos(I.pos,-1,LI.TrackDel);if(null!=g){let C=Object.assign(Object.create(null),I);C.pos=g,null!=C.end&&(C.end=t.changes.mapPos(C.end)),e.push(C)}}g=e}for(let e of t.effects)e.is(I)&&(g=e.value),e.is(xo)&&(g=[]);return g},provide:g=>yo.from(g)});return[t,Hl.define((C=>new wo(C,g,t,I,e.hoverTime||300))),Ho]}function vo(g,e){let I=g.plugin(Qo);if(!I)return null;let t=I.manager.tooltips.indexOf(e);return t<0?null:I.manager.tooltipViews[t]}const xo=yt.define(),Oo=At.define({combine(g){let e,I;for(let t of g)e=e||t.topContainer,I=I||t.bottomContainer;return{topContainer:e,bottomContainer:I}}});function fo(g,e){let I=g.plugin(jo),t=I?I.specs.indexOf(e):-1;return t>-1?I.panels[t]:null}const jo=Hl.fromClass(class{constructor(g){this.input=g.state.facet(_o),this.specs=this.input.filter((g=>g)),this.panels=this.specs.map((e=>e(g)));let e=g.state.facet(Oo);this.top=new Lo(g,!0,e.topContainer),this.bottom=new Lo(g,!1,e.bottomContainer),this.top.sync(this.panels.filter((g=>g.top))),this.bottom.sync(this.panels.filter((g=>!g.top)));for(let g of this.panels)g.dom.classList.add("cm-panel"),g.mount&&g.mount()}update(g){let e=g.state.facet(Oo);this.top.container!=e.topContainer&&(this.top.sync([]),this.top=new Lo(g.view,!0,e.topContainer)),this.bottom.container!=e.bottomContainer&&(this.bottom.sync([]),this.bottom=new Lo(g.view,!1,e.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let I=g.state.facet(_o);if(I!=this.input){let e=I.filter((g=>g)),t=[],C=[],i=[],l=[];for(let I of e){let e,n=this.specs.indexOf(I);n<0?(e=I(g.view),l.push(e)):(e=this.panels[n],e.update&&e.update(g)),t.push(e),(e.top?C:i).push(e)}this.specs=e,this.panels=t,this.top.sync(C),this.bottom.sync(i);for(let g of l)g.dom.classList.add("cm-panel"),g.mount&&g.mount()}else for(let e of this.panels)e.update&&e.update(g)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:g=>Vd.scrollMargins.of((e=>{let I=e.plugin(g);return I&&{top:I.top.scrollMargin(),bottom:I.bottom.scrollMargin()}}))});class Lo{constructor(g,e,I){this.view=g,this.top=e,this.container=I,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(g){for(let e of this.panels)e.destroy&&g.indexOf(e)<0&&e.destroy();this.panels=g,this.syncDOM()}syncDOM(){if(0==this.panels.length)return void(this.dom&&(this.dom.remove(),this.dom=void 0));if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let g=this.container||this.view.dom;g.insertBefore(this.dom,this.top?g.firstChild:null)}let g=this.dom.firstChild;for(let e of this.panels)if(e.dom.parentNode==this.dom){for(;g!=e.dom;)g=Po(g);g=g.nextSibling}else this.dom.insertBefore(e.dom,g);for(;g;)g=Po(g)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(this.container&&this.classes!=this.view.themeClasses){for(let g of this.classes.split(" "))g&&this.container.classList.remove(g);for(let g of(this.classes=this.view.themeClasses).split(" "))g&&this.container.classList.add(g)}}}function Po(g){let e=g.nextSibling;return g.remove(),e}const _o=At.define({enables:jo});class qo extends $t{compare(g){return this==g||this.constructor==g.constructor&&this.eq(g)}eq(g){return!1}destroy(g){}}qo.prototype.elementClass="",qo.prototype.toDOM=void 0,qo.prototype.mapMode=LI.TrackBefore,qo.prototype.startSide=qo.prototype.endSide=-1,qo.prototype.point=!0;const $o=At.define(),gs={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>tC.empty,lineMarker:()=>null,widgetMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},es=At.define();function Is(g){return[Cs(),es.of(Object.assign(Object.assign({},gs),g))]}const ts=At.define({combine:g=>g.some((g=>g))});function Cs(g){return[is]}const is=Hl.fromClass(class{constructor(g){this.view=g,this.prevViewport=g.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight/this.view.scaleY+"px",this.gutters=g.state.facet(es).map((e=>new ds(g,e)));for(let g of this.gutters)this.dom.appendChild(g.dom);this.fixed=!g.state.facet(ts),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),g.scrollDOM.insertBefore(this.dom,g.contentDOM)}update(g){if(this.updateGutters(g)){let e=this.prevViewport,I=g.view.viewport,t=Math.min(e.to,I.to)-Math.max(e.from,I.from);this.syncGutters(t<.8*(I.to-I.from))}g.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight/this.view.scaleY+"px"),this.view.state.facet(ts)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=g.view.viewport}syncGutters(g){let e=this.dom.nextSibling;g&&this.dom.remove();let I=tC.iter(this.view.state.facet($o),this.view.viewport.from),t=[],C=this.gutters.map((g=>new As(g,this.view.viewport,-this.view.documentPadding.top)));for(let g of this.view.viewportLineBlocks)if(t.length&&(t=[]),Array.isArray(g.type)){let e=!0;for(let i of g.type)if(i.type==zi.Text&&e){ns(I,t,i.from);for(let g of C)g.line(this.view,i,t);e=!1}else if(i.widget)for(let g of C)g.widget(this.view,i)}else if(g.type==zi.Text){ns(I,t,g.from);for(let e of C)e.line(this.view,g,t)}else if(g.widget)for(let e of C)e.widget(this.view,g);for(let g of C)g.finish();g&&this.view.scrollDOM.insertBefore(this.dom,e)}updateGutters(g){let e=g.startState.facet(es),I=g.state.facet(es),t=g.docChanged||g.heightChanged||g.viewportChanged||!tC.eq(g.startState.facet($o),g.state.facet($o),g.view.viewport.from,g.view.viewport.to);if(e==I)for(let e of this.gutters)e.update(g)&&(t=!0);else{t=!0;let C=[];for(let t of I){let I=e.indexOf(t);I<0?C.push(new ds(this.view,t)):(this.gutters[I].update(g),C.push(this.gutters[I]))}for(let g of this.gutters)g.dom.remove(),C.indexOf(g)<0&&g.destroy();for(let g of C)this.dom.appendChild(g.dom);this.gutters=C}return t}destroy(){for(let g of this.gutters)g.destroy();this.dom.remove()}},{provide:g=>Vd.scrollMargins.of((e=>{let I=e.plugin(g);return I&&0!=I.gutters.length&&I.fixed?e.textDirection==$i.LTR?{left:I.dom.offsetWidth*e.scaleX}:{right:I.dom.offsetWidth*e.scaleX}:null}))});function ls(g){return Array.isArray(g)?g:[g]}function ns(g,e,I){for(;g.value&&g.from<=I;)g.from==I&&e.push(g.value),g.next()}class As{constructor(g,e,I){this.gutter=g,this.height=I,this.i=0,this.cursor=tC.iter(g.markers,e.from)}addElement(g,e,I){let{gutter:t}=this,C=(e.top-this.height)/g.scaleY,i=e.height/g.scaleY;if(this.i==t.elements.length){let e=new os(g,i,C,I);t.elements.push(e),t.dom.appendChild(e.dom)}else t.elements[this.i].update(g,i,C,I);this.height=e.bottom,this.i++}line(g,e,I){let t=[];ns(this.cursor,t,e.from),I.length&&(t=t.concat(I));let C=this.gutter.config.lineMarker(g,e,t);C&&t.unshift(C);let i=this.gutter;0==t.length&&!i.config.renderEmptyElements||this.addElement(g,e,t)}widget(g,e){let I=this.gutter.config.widgetMarker(g,e.widget,e);I&&this.addElement(g,e,[I])}finish(){let g=this.gutter;for(;g.elements.length>this.i;){let e=g.elements.pop();g.dom.removeChild(e.dom),e.destroy()}}}class ds{constructor(g,e){this.view=g,this.config=e,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:"");for(let I in e.domEventHandlers)this.dom.addEventListener(I,(t=>{let C,i=t.target;if(i!=this.dom&&this.dom.contains(i)){for(;i.parentNode!=this.dom;)i=i.parentNode;let g=i.getBoundingClientRect();C=(g.top+g.bottom)/2}else C=t.clientY;let l=g.lineBlockAtHeight(C-g.documentTop);e.domEventHandlers[I](g,l,t)&&t.preventDefault()}));this.markers=ls(e.markers(g)),e.initialSpacer&&(this.spacer=new os(g,0,0,[e.initialSpacer(g)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(g){let e=this.markers;if(this.markers=ls(this.config.markers(g.view)),this.spacer&&this.config.updateSpacer){let e=this.config.updateSpacer(this.spacer.markers[0],g);e!=this.spacer.markers[0]&&this.spacer.update(g.view,0,0,[e])}let I=g.view.viewport;return!tC.eq(this.markers,e,I.from,I.to)||!!this.config.lineMarkerChange&&this.config.lineMarkerChange(g)}destroy(){for(let g of this.elements)g.destroy()}}class os{constructor(g,e,I,t){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.dom.className="cm-gutterElement",this.update(g,e,I,t)}update(g,e,I,t){this.height!=e&&(this.height=e,this.dom.style.height=e+"px"),this.above!=I&&(this.dom.style.marginTop=(this.above=I)?I+"px":""),ss(this.markers,t)||this.setMarkers(g,t)}setMarkers(g,e){let I="cm-gutterElement",t=this.dom.firstChild;for(let C=0,i=0;;){let l=i,n=C<e.length?e[C++]:null,A=!1;if(n){let g=n.elementClass;g&&(I+=" "+g);for(let g=i;g<this.markers.length;g++)if(this.markers[g].compare(n)){l=g,A=!0;break}}else l=this.markers.length;for(;i<l;){let g=this.markers[i++];if(g.toDOM){g.destroy(t);let e=t.nextSibling;t.remove(),t=e}}if(!n)break;n.toDOM&&(A?t=t.nextSibling:this.dom.insertBefore(n.toDOM(g),t)),A&&i++}this.dom.className=I,this.markers=e}destroy(){this.setMarkers(null,[])}}function ss(g,e){if(g.length!=e.length)return!1;for(let I=0;I<g.length;I++)if(!g[I].compare(e[I]))return!1;return!0}const as=At.define(),Vs=At.define({combine:g=>qt(g,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(g,e){let I=Object.assign({},g);for(let g in e){let t=I[g],C=e[g];I[g]=t?(g,e,I)=>t(g,e,I)||C(g,e,I):C}return I}})});class cs extends qo{constructor(g){super(),this.number=g}eq(g){return this.number==g.number}toDOM(){return document.createTextNode(this.number)}}function rs(g,e){return g.state.facet(Vs).formatNumber(e,g.state)}const hs=es.compute([Vs],(g=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers:g=>g.state.facet(as),lineMarker:(g,e,I)=>I.some((g=>g.toDOM))?null:new cs(rs(g,g.state.doc.lineAt(e.from).number)),widgetMarker:()=>null,lineMarkerChange:g=>g.startState.facet(Vs)!=g.state.facet(Vs),initialSpacer:g=>new cs(rs(g,Zs(g.state.doc.lines))),updateSpacer(g,e){let I=rs(e.view,Zs(e.view.state.doc.lines));return I==g.number?g:new cs(I)},domEventHandlers:g.facet(Vs).domEventHandlers})));function Us(g={}){return[Vs.of(g),Cs(),hs]}function Zs(g){let e=9;for(;e<g;)e=10*e+9;return e}const Rs=new class extends qo{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},Fs=$o.compute(["selection"],(g=>{let e=[],I=-1;for(let t of g.selection.ranges){let C=g.doc.lineAt(t.head).from;C>I&&(I=C,e.push(Rs.range(C)))}return tC.of(e)}));function ms(){return Fs}const Bs=1024;let Ws=0,Ns=class{constructor(g,e){this.from=g,this.to=e}};class ps{constructor(g={}){this.id=Ws++,this.perNode=!!g.perNode,this.deserialize=g.deserialize||(()=>{throw new Error("This node type doesn't define a deserialize function")})}add(g){if(this.perNode)throw new RangeError("Can't add per-node props to node types");return"function"!=typeof g&&(g=us.match(g)),e=>{let I=g(e);return void 0===I?null:[this,I]}}}ps.closedBy=new ps({deserialize:g=>g.split(" ")}),ps.openedBy=new ps({deserialize:g=>g.split(" ")}),ps.group=new ps({deserialize:g=>g.split(" ")}),ps.isolate=new ps({deserialize:g=>{if(g&&"rtl"!=g&&"ltr"!=g&&"auto"!=g)throw new RangeError("Invalid value for isolate: "+g);return g||"auto"}}),ps.contextHash=new ps({perNode:!0}),ps.lookAhead=new ps({perNode:!0}),ps.mounted=new ps({perNode:!0});class Ss{constructor(g,e,I){this.tree=g,this.overlay=e,this.parser=I}static get(g){return g&&g.props&&g.props[ps.mounted.id]}}const bs=Object.create(null);class us{constructor(g,e,I,t=0){this.name=g,this.props=e,this.id=I,this.flags=t}static define(g){let e=g.props&&g.props.length?Object.create(null):bs,I=(g.top?1:0)|(g.skipped?2:0)|(g.error?4:0)|(null==g.name?8:0),t=new us(g.name||"",e,g.id,I);if(g.props)for(let I of g.props)if(Array.isArray(I)||(I=I(t)),I){if(I[0].perNode)throw new RangeError("Can't store a per-node prop on a node type");e[I[0].id]=I[1]}return t}prop(g){return this.props[g.id]}get isTop(){return(1&this.flags)>0}get isSkipped(){return(2&this.flags)>0}get isError(){return(4&this.flags)>0}get isAnonymous(){return(8&this.flags)>0}is(g){if("string"==typeof g){if(this.name==g)return!0;let e=this.prop(ps.group);return!!e&&e.indexOf(g)>-1}return this.id==g}static match(g){let e=Object.create(null);for(let I in g)for(let t of I.split(" "))e[t]=g[I];return g=>{for(let I=g.prop(ps.group),t=-1;t<(I?I.length:0);t++){let C=e[t<0?g.name:I[t]];if(C)return C}}}}us.none=new us("",Object.create(null),0,8);class Ts{constructor(g){this.types=g;for(let e=0;e<g.length;e++)if(g[e].id!=e)throw new RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...g){let e=[];for(let I of this.types){let t=null;for(let e of g){let g=e(I);g&&(t||(t=Object.assign({},I.props)),t[g[0].id]=g[1])}e.push(t?new us(I.name,t,I.id,I.flags):I)}return new Ts(e)}}const Gs=new WeakMap,ks=new WeakMap;var Qs;!function(g){g[g.ExcludeBuffers=1]="ExcludeBuffers",g[g.IncludeAnonymous=2]="IncludeAnonymous",g[g.IgnoreMounts=4]="IgnoreMounts",g[g.IgnoreOverlays=8]="IgnoreOverlays"}(Qs||(Qs={}));class Ms{constructor(g,e,I,t,C){if(this.type=g,this.children=e,this.positions=I,this.length=t,this.props=null,C&&C.length){this.props=Object.create(null);for(let[g,e]of C)this.props["number"==typeof g?g:g.id]=e}}toString(){let g=Ss.get(this);if(g&&!g.overlay)return g.tree.toString();let e="";for(let g of this.children){let I=g.toString();I&&(e&&(e+=","),e+=I)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(e.length?"("+e+")":""):e}cursor(g=0){return new fs(this.topNode,g)}cursorAt(g,e=0,I=0){let t=Gs.get(this)||this.topNode,C=new fs(t);return C.moveTo(g,e),Gs.set(this,C._tree),C}get topNode(){return new ws(this,0,0,null)}resolve(g,e=0){let I=Js(Gs.get(this)||this.topNode,g,e,!1);return Gs.set(this,I),I}resolveInner(g,e=0){let I=Js(ks.get(this)||this.topNode,g,e,!0);return ks.set(this,I),I}resolveStack(g,e=0){return Os(this,g,e)}iterate(g){let{enter:e,leave:I,from:t=0,to:C=this.length}=g,i=g.mode||0,l=(i&Qs.IncludeAnonymous)>0;for(let g=this.cursor(i|Qs.IncludeAnonymous);;){let i=!1;if(g.from<=C&&g.to>=t&&(!l&&g.type.isAnonymous||!1!==e(g))){if(g.firstChild())continue;i=!0}for(;i&&I&&(l||!g.type.isAnonymous)&&I(g),!g.nextSibling();){if(!g.parent())return;i=!0}}}prop(g){return g.perNode?this.props?this.props[g.id]:void 0:this.type.prop(g)}get propValues(){let g=[];if(this.props)for(let e in this.props)g.push([+e,this.props[e]]);return g}balance(g={}){return this.children.length<=8?this:qs(us.none,this.children,this.positions,0,this.children.length,0,this.length,((g,e,I)=>new Ms(this.type,g,e,I,this.propValues)),g.makeTree||((g,e,I)=>new Ms(us.none,g,e,I)))}static build(g){return Ls(g)}}Ms.empty=new Ms(us.none,[],[],0);class Ys{constructor(g,e){this.buffer=g,this.index=e}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new Ys(this.buffer,this.index)}}class Es{constructor(g,e,I){this.buffer=g,this.length=e,this.set=I}get type(){return us.none}toString(){let g=[];for(let e=0;e<this.buffer.length;)g.push(this.childString(e)),e=this.buffer[e+3];return g.join(",")}childString(g){let e=this.buffer[g],I=this.buffer[g+3],t=this.set.types[e],C=t.name;if(/\W/.test(C)&&!t.isError&&(C=JSON.stringify(C)),I==(g+=4))return C;let i=[];for(;g<I;)i.push(this.childString(g)),g=this.buffer[g+3];return C+"("+i.join(",")+")"}findChild(g,e,I,t,C){let{buffer:i}=this,l=-1;for(let n=g;n!=e&&!(ys(C,t,i[n+1],i[n+2])&&(l=n,I>0));n=i[n+3]);return l}slice(g,e,I){let t=this.buffer,C=new Uint16Array(e-g),i=0;for(let l=g,n=0;l<e;){C[n++]=t[l++],C[n++]=t[l++]-I;let e=C[n++]=t[l++]-I;C[n++]=t[l++]-g,i=Math.max(i,e)}return new Es(C,i,this.set)}}function ys(g,e,I,t){switch(g){case-2:return I<e;case-1:return t>=e&&I<e;case 0:return I<e&&t>e;case 1:return I<=e&&t>e;case 2:return t>e;case 4:return!0}}function Js(g,e,I,t){for(var C;g.from==g.to||(I<1?g.from>=e:g.from>e)||(I>-1?g.to<=e:g.to<e);){let e=!t&&g instanceof ws&&g.index<0?null:g.parent;if(!e)return g;g=e}let i=t?0:Qs.IgnoreOverlays;if(t)for(let t=g,l=t.parent;l;t=l,l=t.parent)t instanceof ws&&t.index<0&&(null===(C=l.enter(e,I,i))||void 0===C?void 0:C.from)!=t.from&&(g=l);for(;;){let t=g.enter(e,I,i);if(!t)return g;g=t}}class Hs{cursor(g=0){return new fs(this,g)}getChild(g,e=null,I=null){let t=Xs(this,g,e,I);return t.length?t[0]:null}getChildren(g,e=null,I=null){return Xs(this,g,e,I)}resolve(g,e=0){return Js(this,g,e,!1)}resolveInner(g,e=0){return Js(this,g,e,!0)}matchContext(g){return Ks(this,g)}enterUnfinishedNodesBefore(g){let e=this.childBefore(g),I=this;for(;e;){let g=e.lastChild;if(!g||g.to!=e.to)break;g.type.isError&&g.from==g.to?(I=e,e=g.prevSibling):e=g}return I}get node(){return this}get next(){return this.parent}}class ws extends Hs{constructor(g,e,I,t){super(),this._tree=g,this.from=e,this.index=I,this._parent=t}get type(){return this._tree.type}get name(){return this._tree.type.name}get to(){return this.from+this._tree.length}nextChild(g,e,I,t,C=0){for(let i=this;;){for(let{children:l,positions:n}=i._tree,A=e>0?l.length:-1;g!=A;g+=e){let A=l[g],d=n[g]+i.from;if(ys(t,I,d,d+A.length))if(A instanceof Es){if(C&Qs.ExcludeBuffers)continue;let l=A.findChild(0,A.buffer.length,e,I-d,t);if(l>-1)return new Ds(new zs(i,A,g,d),null,l)}else if(C&Qs.IncludeAnonymous||!A.type.isAnonymous||js(A)){let l;if(!(C&Qs.IgnoreMounts)&&(l=Ss.get(A))&&!l.overlay)return new ws(l.tree,d,g,i);let n=new ws(A,d,g,i);return C&Qs.IncludeAnonymous||!n.type.isAnonymous?n:n.nextChild(e<0?A.children.length-1:0,e,I,t)}}if(C&Qs.IncludeAnonymous||!i.type.isAnonymous||(g=i.index>=0?i.index+e:e<0?-1:i._parent._tree.children.length,i=i._parent,!i))return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this._tree.children.length-1,-1,0,4)}childAfter(g){return this.nextChild(0,1,g,2)}childBefore(g){return this.nextChild(this._tree.children.length-1,-1,g,-2)}enter(g,e,I=0){let t;if(!(I&Qs.IgnoreOverlays)&&(t=Ss.get(this._tree))&&t.overlay){let I=g-this.from;for(let{from:g,to:C}of t.overlay)if((e>0?g<=I:g<I)&&(e<0?C>=I:C>I))return new ws(t.tree,t.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,g,e,I)}nextSignificantParent(){let g=this;for(;g.type.isAnonymous&&g._parent;)g=g._parent;return g}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}get tree(){return this._tree}toTree(){return this._tree}toString(){return this._tree.toString()}}function Xs(g,e,I,t){let C=g.cursor(),i=[];if(!C.firstChild())return i;if(null!=I)for(let g=!1;!g;)if(g=C.type.is(I),!C.nextSibling())return i;for(;;){if(null!=t&&C.type.is(t))return i;if(C.type.is(e)&&i.push(C.node),!C.nextSibling())return null==t?i:[]}}function Ks(g,e,I=e.length-1){for(let t=g.parent;I>=0;t=t.parent){if(!t)return!1;if(!t.type.isAnonymous){if(e[I]&&e[I]!=t.name)return!1;I--}}return!0}class zs{constructor(g,e,I,t){this.parent=g,this.buffer=e,this.index=I,this.start=t}}class Ds extends Hs{get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}constructor(g,e,I){super(),this.context=g,this._parent=e,this.index=I,this.type=g.buffer.set.types[g.buffer.buffer[I]]}child(g,e,I){let{buffer:t}=this.context,C=t.findChild(this.index+4,t.buffer[this.index+3],g,e-this.context.start,I);return C<0?null:new Ds(this.context,this,C)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(g){return this.child(1,g,2)}childBefore(g){return this.child(-1,g,-2)}enter(g,e,I=0){if(I&Qs.ExcludeBuffers)return null;let{buffer:t}=this.context,C=t.findChild(this.index+4,t.buffer[this.index+3],e>0?1:-1,g-this.context.start,e);return C<0?null:new Ds(this.context,this,C)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(g){return this._parent?null:this.context.parent.nextChild(this.context.index+g,g,0,4)}get nextSibling(){let{buffer:g}=this.context,e=g.buffer[this.index+3];return e<(this._parent?g.buffer[this._parent.index+3]:g.buffer.length)?new Ds(this.context,this._parent,e):this.externalSibling(1)}get prevSibling(){let{buffer:g}=this.context,e=this._parent?this._parent.index+4:0;return this.index==e?this.externalSibling(-1):new Ds(this.context,this._parent,g.findChild(e,this.index,-1,0,4))}get tree(){return null}toTree(){let g=[],e=[],{buffer:I}=this.context,t=this.index+4,C=I.buffer[this.index+3];if(C>t){let i=I.buffer[this.index+1];g.push(I.slice(t,C,i)),e.push(0)}return new Ms(this.type,g,e,this.to-this.from)}toString(){return this.context.buffer.childString(this.index)}}function vs(g){if(!g.length)return null;let e=0,I=g[0];for(let t=1;t<g.length;t++){let C=g[t];(C.from>I.from||C.to<I.to)&&(I=C,e=t)}let t=I instanceof ws&&I.index<0?null:I.parent,C=g.slice();return t?C[e]=t:C.splice(e,1),new xs(C,I)}class xs{constructor(g,e){this.heads=g,this.node=e}get next(){return vs(this.heads)}}function Os(g,e,I){let t=g.resolveInner(e,I),C=null;for(let g=t instanceof ws?t:t.context.parent;g;g=g.parent)if(g.index<0){let i=g.parent;(C||(C=[t])).push(i.resolve(e,I)),g=i}else{let i=Ss.get(g.tree);if(i&&i.overlay&&i.overlay[0].from<=e&&i.overlay[i.overlay.length-1].to>=e){let l=new ws(i.tree,i.overlay[0].from+g.from,-1,g);(C||(C=[t])).push(Js(l,e,I,!1))}}return C?vs(C):t}class fs{get name(){return this.type.name}constructor(g,e=0){if(this.mode=e,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,g instanceof ws)this.yieldNode(g);else{this._tree=g.context.parent,this.buffer=g.context;for(let e=g._parent;e;e=e._parent)this.stack.unshift(e.index);this.bufferNode=g,this.yieldBuf(g.index)}}yieldNode(g){return!!g&&(this._tree=g,this.type=g.type,this.from=g.from,this.to=g.to,!0)}yieldBuf(g,e){this.index=g;let{start:I,buffer:t}=this.buffer;return this.type=e||t.set.types[t.buffer[g]],this.from=I+t.buffer[g+1],this.to=I+t.buffer[g+2],!0}yield(g){return!!g&&(g instanceof ws?(this.buffer=null,this.yieldNode(g)):(this.buffer=g.context,this.yieldBuf(g.index,g.type)))}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(g,e,I){if(!this.buffer)return this.yield(this._tree.nextChild(g<0?this._tree._tree.children.length-1:0,g,e,I,this.mode));let{buffer:t}=this.buffer,C=t.findChild(this.index+4,t.buffer[this.index+3],g,e-this.buffer.start,I);return!(C<0)&&(this.stack.push(this.index),this.yieldBuf(C))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(g){return this.enterChild(1,g,2)}childBefore(g){return this.enterChild(-1,g,-2)}enter(g,e,I=this.mode){return this.buffer?!(I&Qs.ExcludeBuffers)&&this.enterChild(1,g,e):this.yield(this._tree.enter(g,e,I))}parent(){if(!this.buffer)return this.yieldNode(this.mode&Qs.IncludeAnonymous?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let g=this.mode&Qs.IncludeAnonymous?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(g)}sibling(g){if(!this.buffer)return!!this._tree._parent&&this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+g,g,0,4,this.mode));let{buffer:e}=this.buffer,I=this.stack.length-1;if(g<0){let g=I<0?0:this.stack[I]+4;if(this.index!=g)return this.yieldBuf(e.findChild(g,this.index,-1,0,4))}else{let g=e.buffer[this.index+3];if(g<(I<0?e.buffer.length:e.buffer[this.stack[I]+3]))return this.yieldBuf(g)}return I<0&&this.yield(this.buffer.parent.nextChild(this.buffer.index+g,g,0,4,this.mode))}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(g){let e,I,{buffer:t}=this;if(t){if(g>0){if(this.index<t.buffer.buffer.length)return!1}else for(let g=0;g<this.index;g++)if(t.buffer.buffer[g+3]<this.index)return!1;({index:e,parent:I}=t)}else({index:e,_parent:I}=this._tree);for(;I;({index:e,_parent:I}=I))if(e>-1)for(let t=e+g,C=g<0?-1:I._tree.children.length;t!=C;t+=g){let g=I._tree.children[t];if(this.mode&Qs.IncludeAnonymous||g instanceof Es||!g.type.isAnonymous||js(g))return!1}return!0}move(g,e){if(e&&this.enterChild(g,0,4))return!0;for(;;){if(this.sibling(g))return!0;if(this.atLastNode(g)||!this.parent())return!1}}next(g=!0){return this.move(1,g)}prev(g=!0){return this.move(-1,g)}moveTo(g,e=0){for(;(this.from==this.to||(e<1?this.from>=g:this.from>g)||(e>-1?this.to<=g:this.to<g))&&this.parent(););for(;this.enterChild(1,g,e););return this}get node(){if(!this.buffer)return this._tree;let g=this.bufferNode,e=null,I=0;if(g&&g.context==this.buffer)g:for(let t=this.index,C=this.stack.length;C>=0;){for(let i=g;i;i=i._parent)if(i.index==t){if(t==this.index)return i;e=i,I=C+1;break g}t=this.stack[--C]}for(let g=I;g<this.stack.length;g++)e=new Ds(this.buffer,e,this.stack[g]);return this.bufferNode=new Ds(this.buffer,e,this.index)}get tree(){return this.buffer?null:this._tree._tree}iterate(g,e){for(let I=0;;){let t=!1;if(this.type.isAnonymous||!1!==g(this)){if(this.firstChild()){I++;continue}this.type.isAnonymous||(t=!0)}for(;t&&e&&e(this),t=this.type.isAnonymous,!this.nextSibling();){if(!I)return;this.parent(),I--,t=!0}}}matchContext(g){if(!this.buffer)return Ks(this.node,g);let{buffer:e}=this.buffer,{types:I}=e.set;for(let t=g.length-1,C=this.stack.length-1;t>=0;C--){if(C<0)return Ks(this.node,g,t);let i=I[e.buffer[this.stack[C]]];if(!i.isAnonymous){if(g[t]&&g[t]!=i.name)return!1;t--}}return!0}}function js(g){return g.children.some((g=>g instanceof Es||!g.type.isAnonymous||js(g)))}function Ls(g){var e;let{buffer:I,nodeSet:t,maxBufferLength:C=Bs,reused:i=[],minRepeatType:l=t.types.length}=g,n=Array.isArray(I)?new Ys(I,I.length):I,A=t.types,d=0,o=0;function s(g,e,I,h,U,Z){let{id:R,start:F,end:m,size:B}=n,W=o;for(;B<0;){if(n.next(),-1==B){let e=i[R];return I.push(e),void h.push(F-g)}if(-3==B)return void(d=R);if(-4==B)return void(o=R);throw new RangeError(`Unrecognized record size: ${B}`)}let N,p,S=A[R],b=F-g;if(m-F<=C&&(p=function(g,e){let I=n.fork(),t=0,i=0,A=0,d=I.end-C,o={size:0,start:0,skip:0};g:for(let C=I.pos-g;I.pos>C;){let g=I.size;if(I.id==e&&g>=0){o.size=t,o.start=i,o.skip=A,A+=4,t+=4,I.next();continue}let n=I.pos-g;if(g<0||n<C||I.start<d)break;let s=I.id>=l?4:0,a=I.start;for(I.next();I.pos>n;){if(I.size<0){if(-3!=I.size)break g;s+=4}else I.id>=l&&(s+=4);I.next()}i=a,t+=g,A+=s}return(e<0||t==g)&&(o.size=t,o.start=i,o.skip=A),o.size>4?o:void 0}(n.pos-e,U))){let e=new Uint16Array(p.size-p.skip),I=n.pos-p.size,C=e.length;for(;n.pos>I;)C=r(p.start,e,C);N=new Es(e,m-p.start,t),b=p.start-g}else{let g=n.pos-B;n.next();let e=[],I=[],t=R>=l?R:-1,i=0,A=m;for(;n.pos>g;)t>=0&&n.id==t&&n.size>=0?(n.end<=A-C&&(V(e,I,F,i,n.end,A,t,W),i=e.length,A=n.end),n.next()):Z>2500?a(F,g,e,I):s(F,g,e,I,t,Z+1);if(t>=0&&i>0&&i<e.length&&V(e,I,F,i,F,A,t,W),e.reverse(),I.reverse(),t>-1&&i>0){let g=function(g){return(e,I,t)=>{let C,i,l=0,n=e.length-1;if(n>=0&&(C=e[n])instanceof Ms){if(!n&&C.type==g&&C.length==t)return C;(i=C.prop(ps.lookAhead))&&(l=I[n]+C.length+i)}return c(g,e,I,t,l)}}(S);N=qs(S,e,I,0,e.length,0,m-F,g,g)}else N=c(S,e,I,m-F,W-m)}I.push(N),h.push(b)}function a(g,e,I,i){let l=[],A=0,d=-1;for(;n.pos>e;){let{id:g,start:e,end:I,size:t}=n;if(t>4)n.next();else{if(d>-1&&e<d)break;d<0&&(d=I-C),l.push(g,e,I),A++,n.next()}}if(A){let e=new Uint16Array(4*A),C=l[l.length-2];for(let g=l.length-3,I=0;g>=0;g-=3)e[I++]=l[g],e[I++]=l[g+1]-C,e[I++]=l[g+2]-C,e[I++]=I;I.push(new Es(e,l[2]-C,t)),i.push(C-g)}}function V(g,e,I,C,i,l,n,A){let d=[],o=[];for(;g.length>C;)d.push(g.pop()),o.push(e.pop()+I-i);g.push(c(t.types[n],d,o,l-i,A-l)),e.push(i-I)}function c(g,e,I,t,C=0,i){if(d){let g=[ps.contextHash,d];i=i?[g].concat(i):[g]}if(C>25){let g=[ps.lookAhead,C];i=i?[g].concat(i):[g]}return new Ms(g,e,I,t,i)}function r(g,e,I){let{id:t,start:C,end:i,size:A}=n;if(n.next(),A>=0&&t<l){let l=I;if(A>4){let t=n.pos-(A-4);for(;n.pos>t;)I=r(g,e,I)}e[--I]=l,e[--I]=i-g,e[--I]=C-g,e[--I]=t}else-3==A?d=t:-4==A&&(o=t);return I}let h=[],U=[];for(;n.pos>0;)s(g.start||0,g.bufferStart||0,h,U,-1,0);let Z=null!==(e=g.length)&&void 0!==e?e:h.length?U[0]+h[0].length:0;return new Ms(A[g.topID],h.reverse(),U.reverse(),Z)}const Ps=new WeakMap;function _s(g,e){if(!g.isAnonymous||e instanceof Es||e.type!=g)return 1;let I=Ps.get(e);if(null==I){I=1;for(let t of e.children){if(t.type!=g||!(t instanceof Ms)){I=1;break}I+=_s(g,t)}Ps.set(e,I)}return I}function qs(g,e,I,t,C,i,l,n,A){let d=0;for(let I=t;I<C;I++)d+=_s(g,e[I]);let o=Math.ceil(1.5*d/8),s=[],a=[];return function e(I,t,C,l,n){for(let d=C;d<l;){let C=d,V=t[d],c=_s(g,I[d]);for(d++;d<l;d++){let e=_s(g,I[d]);if(c+e>=o)break;c+=e}if(d==C+1){if(c>o){let g=I[C];e(g.children,g.positions,0,g.children.length,t[C]+n);continue}s.push(I[C])}else{let e=t[d-1]+I[d-1].length-V;s.push(qs(g,I,t,C,d,V,e,null,A))}a.push(V+n-i)}}(e,I,t,C,0),(n||A)(s,a,l)}class $s{constructor(){this.map=new WeakMap}setBuffer(g,e,I){let t=this.map.get(g);t||this.map.set(g,t=new Map),t.set(e,I)}getBuffer(g,e){let I=this.map.get(g);return I&&I.get(e)}set(g,e){g instanceof Ds?this.setBuffer(g.context.buffer,g.index,e):g instanceof ws&&this.map.set(g.tree,e)}get(g){return g instanceof Ds?this.getBuffer(g.context.buffer,g.index):g instanceof ws?this.map.get(g.tree):void 0}cursorSet(g,e){g.buffer?this.setBuffer(g.buffer.buffer,g.index,e):this.map.set(g.tree,e)}cursorGet(g){return g.buffer?this.getBuffer(g.buffer.buffer,g.index):this.map.get(g.tree)}}class ga{constructor(g,e,I,t,C=!1,i=!1){this.from=g,this.to=e,this.tree=I,this.offset=t,this.open=(C?1:0)|(i?2:0)}get openStart(){return(1&this.open)>0}get openEnd(){return(2&this.open)>0}static addTree(g,e=[],I=!1){let t=[new ga(0,g.length,g,0,!1,I)];for(let I of e)I.to>g.length&&t.push(I);return t}static applyChanges(g,e,I=128){if(!e.length)return g;let t=[],C=1,i=g.length?g[0]:null;for(let l=0,n=0,A=0;;l++){let d=l<e.length?e[l]:null,o=d?d.fromA:1e9;if(o-n>=I)for(;i&&i.from<o;){let e=i;if(n>=e.from||o<=e.to||A){let g=Math.max(e.from,n)-A,I=Math.min(e.to,o)-A;e=g>=I?null:new ga(g,I,e.tree,e.offset+A,l>0,!!d)}if(e&&t.push(e),i.to>o)break;i=C<g.length?g[C++]:null}if(!d)break;n=d.toA,A=d.toA-d.toB}return t}}class ea{startParse(g,e,I){return"string"==typeof g&&(g=new Ia(g)),I=I?I.length?I.map((g=>new Ns(g.from,g.to))):[new Ns(0,0)]:[new Ns(0,g.length)],this.createParse(g,e||[],I)}parse(g,e,I){let t=this.startParse(g,e,I);for(;;){let g=t.advance();if(g)return g}}}class Ia{constructor(g){this.string=g}get length(){return this.string.length}chunk(g){return this.string.slice(g)}get lineChunks(){return!1}read(g,e){return this.string.slice(g,e)}}new ps({perNode:!0});let ta=0;class Ca{constructor(g,e,I){this.set=g,this.base=e,this.modified=I,this.id=ta++}static define(g){if(null!=g&&g.base)throw new Error("Can not derive from a modified tag");let e=new Ca([],null,[]);if(e.set.push(e),g)for(let I of g.set)e.set.push(I);return e}static defineModifier(){let g=new la;return e=>e.modified.indexOf(g)>-1?e:la.get(e.base||e,e.modified.concat(g).sort(((g,e)=>g.id-e.id)))}}let ia=0;class la{constructor(){this.instances=[],this.id=ia++}static get(g,e){if(!e.length)return g;let I=e[0].instances.find((I=>I.base==g&&na(e,I.modified)));if(I)return I;let t=[],C=new Ca(t,g,e);for(let g of e)g.instances.push(C);let i=Aa(e);for(let e of g.set)if(!e.modified.length)for(let g of i)t.push(la.get(e,g));return C}}function na(g,e){return g.length==e.length&&g.every(((g,I)=>g==e[I]))}function Aa(g){let e=[[]];for(let I=0;I<g.length;I++)for(let t=0,C=e.length;t<C;t++)e.push(e[t].concat(g[I]));return e.sort(((g,e)=>e.length-g.length))}function da(g){let e=Object.create(null);for(let I in g){let t=g[I];Array.isArray(t)||(t=[t]);for(let g of I.split(" "))if(g){let I=[],C=2,i=g;for(let e=0;;){if("..."==i&&e>0&&e+3==g.length){C=1;break}let t=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(i);if(!t)throw new RangeError("Invalid path: "+g);if(I.push("*"==t[0]?"":'"'==t[0][0]?JSON.parse(t[0]):t[0]),e+=t[0].length,e==g.length)break;let l=g[e++];if(e==g.length&&"!"==l){C=0;break}if("/"!=l)throw new RangeError("Invalid path: "+g);i=g.slice(e)}let l=I.length-1,n=I[l];if(!n)throw new RangeError("Invalid path: "+g);let A=new sa(t,C,l>0?I.slice(0,l):null);e[n]=A.sort(e[n])}}return oa.add(e)}const oa=new ps;class sa{constructor(g,e,I,t){this.tags=g,this.mode=e,this.context=I,this.next=t}get opaque(){return 0==this.mode}get inherit(){return 1==this.mode}sort(g){return!g||g.depth<this.depth?(this.next=g,this):(g.next=this.sort(g.next),g)}get depth(){return this.context?this.context.length:0}}function aa(g,e){let I=Object.create(null);for(let e of g)if(Array.isArray(e.tag))for(let g of e.tag)I[g.id]=e.class;else I[e.tag.id]=e.class;let{scope:t,all:C=null}=e||{};return{style:g=>{let e=C;for(let t of g)for(let g of t.set){let t=I[g.id];if(t){e=e?e+" "+t:t;break}}return e},scope:t}}function Va(g,e){let I=null;for(let t of g){let g=t.style(e);g&&(I=I?I+" "+g:g)}return I}function ca(g,e,I,t=0,C=g.length){let i=new ra(t,Array.isArray(e)?e:[e],I);i.highlightRange(g.cursor(),t,C,"",i.highlighters),i.flush(C)}sa.empty=new sa([],2,null);class ra{constructor(g,e,I){this.at=g,this.highlighters=e,this.span=I,this.class=""}startSpan(g,e){e!=this.class&&(this.flush(g),g>this.at&&(this.at=g),this.class=e)}flush(g){g>this.at&&this.class&&this.span(this.at,g,this.class)}highlightRange(g,e,I,t,C){let{type:i,from:l,to:n}=g;if(l>=I||n<=e)return;i.isTop&&(C=this.highlighters.filter((g=>!g.scope||g.scope(i))));let A=t,d=ha(g)||sa.empty,o=Va(C,d.tags);if(o&&(A&&(A+=" "),A+=o,1==d.mode&&(t+=(t?" ":"")+o)),this.startSpan(Math.max(e,l),A),d.opaque)return;let s=g.tree&&g.tree.prop(ps.mounted);if(s&&s.overlay){let i=g.node.enter(s.overlay[0].from+l,1),d=this.highlighters.filter((g=>!g.scope||g.scope(s.tree.type))),o=g.firstChild();for(let a=0,V=l;;a++){let c=a<s.overlay.length?s.overlay[a]:null,r=c?c.from+l:n,h=Math.max(e,V),U=Math.min(I,r);if(h<U&&o)for(;g.from<U&&(this.highlightRange(g,h,U,t,C),this.startSpan(Math.min(U,g.to),A),!(g.to>=r)&&g.nextSibling()););if(!c||r>I)break;V=c.to+l,V>e&&(this.highlightRange(i.cursor(),Math.max(e,c.from+l),Math.min(I,V),"",d),this.startSpan(Math.min(I,V),A))}o&&g.parent()}else if(g.firstChild()){s&&(t="");do{if(!(g.to<=e)){if(g.from>=I)break;this.highlightRange(g,e,I,t,C),this.startSpan(Math.min(I,g.to),A)}}while(g.nextSibling());g.parent()}}}function ha(g){let e=g.type.prop(oa);for(;e&&e.context&&!g.matchContext(e.context);)e=e.next;return e||null}const Ua=Ca.define,Za=Ua(),Ra=Ua(),Fa=Ua(Ra),ma=Ua(Ra),Ba=Ua(),Wa=Ua(Ba),Na=Ua(Ba),pa=Ua(),Sa=Ua(pa),ba=Ua(),ua=Ua(),Ta=Ua(),Ga=Ua(Ta),ka=Ua(),Qa={comment:Za,lineComment:Ua(Za),blockComment:Ua(Za),docComment:Ua(Za),name:Ra,variableName:Ua(Ra),typeName:Fa,tagName:Ua(Fa),propertyName:ma,attributeName:Ua(ma),className:Ua(Ra),labelName:Ua(Ra),namespace:Ua(Ra),macroName:Ua(Ra),literal:Ba,string:Wa,docString:Ua(Wa),character:Ua(Wa),attributeValue:Ua(Wa),number:Na,integer:Ua(Na),float:Ua(Na),bool:Ua(Ba),regexp:Ua(Ba),escape:Ua(Ba),color:Ua(Ba),url:Ua(Ba),keyword:ba,self:Ua(ba),null:Ua(ba),atom:Ua(ba),unit:Ua(ba),modifier:Ua(ba),operatorKeyword:Ua(ba),controlKeyword:Ua(ba),definitionKeyword:Ua(ba),moduleKeyword:Ua(ba),operator:ua,derefOperator:Ua(ua),arithmeticOperator:Ua(ua),logicOperator:Ua(ua),bitwiseOperator:Ua(ua),compareOperator:Ua(ua),updateOperator:Ua(ua),definitionOperator:Ua(ua),typeOperator:Ua(ua),controlOperator:Ua(ua),punctuation:Ta,separator:Ua(Ta),bracket:Ga,angleBracket:Ua(Ga),squareBracket:Ua(Ga),paren:Ua(Ga),brace:Ua(Ga),content:pa,heading:Sa,heading1:Ua(Sa),heading2:Ua(Sa),heading3:Ua(Sa),heading4:Ua(Sa),heading5:Ua(Sa),heading6:Ua(Sa),contentSeparator:Ua(pa),list:Ua(pa),quote:Ua(pa),emphasis:Ua(pa),strong:Ua(pa),link:Ua(pa),monospace:Ua(pa),strikethrough:Ua(pa),inserted:Ua(),deleted:Ua(),changed:Ua(),invalid:Ua(),meta:ka,documentMeta:Ua(ka),annotation:Ua(ka),processingInstruction:Ua(ka),definition:Ca.defineModifier(),constant:Ca.defineModifier(),function:Ca.defineModifier(),standard:Ca.defineModifier(),local:Ca.defineModifier(),special:Ca.defineModifier()};var Ma;aa([{tag:Qa.link,class:"tok-link"},{tag:Qa.heading,class:"tok-heading"},{tag:Qa.emphasis,class:"tok-emphasis"},{tag:Qa.strong,class:"tok-strong"},{tag:Qa.keyword,class:"tok-keyword"},{tag:Qa.atom,class:"tok-atom"},{tag:Qa.bool,class:"tok-bool"},{tag:Qa.url,class:"tok-url"},{tag:Qa.labelName,class:"tok-labelName"},{tag:Qa.inserted,class:"tok-inserted"},{tag:Qa.deleted,class:"tok-deleted"},{tag:Qa.literal,class:"tok-literal"},{tag:Qa.string,class:"tok-string"},{tag:Qa.number,class:"tok-number"},{tag:[Qa.regexp,Qa.escape,Qa.special(Qa.string)],class:"tok-string2"},{tag:Qa.variableName,class:"tok-variableName"},{tag:Qa.local(Qa.variableName),class:"tok-variableName tok-local"},{tag:Qa.definition(Qa.variableName),class:"tok-variableName tok-definition"},{tag:Qa.special(Qa.variableName),class:"tok-variableName2"},{tag:Qa.definition(Qa.propertyName),class:"tok-propertyName tok-definition"},{tag:Qa.typeName,class:"tok-typeName"},{tag:Qa.namespace,class:"tok-namespace"},{tag:Qa.className,class:"tok-className"},{tag:Qa.macroName,class:"tok-macroName"},{tag:Qa.propertyName,class:"tok-propertyName"},{tag:Qa.operator,class:"tok-operator"},{tag:Qa.comment,class:"tok-comment"},{tag:Qa.meta,class:"tok-meta"},{tag:Qa.invalid,class:"tok-invalid"},{tag:Qa.punctuation,class:"tok-punctuation"}]);const Ya=new ps;function Ea(g){return At.define({combine:g?e=>e.concat(g):void 0})}const ya=new ps;class Ja{constructor(g,e,I=[],t=""){this.data=g,this.name=t,_t.prototype.hasOwnProperty("tree")||Object.defineProperty(_t.prototype,"tree",{get(){return Xa(this)}}),this.parser=e,this.extension=[Pa.of(this),_t.languageData.of(((g,e,I)=>{let t=Ha(g,e,I),C=t.type.prop(Ya);if(!C)return[];let i=g.facet(C),l=t.type.prop(ya);if(l){let C=t.resolve(e-t.from,I);for(let e of l)if(e.test(C,g)){let I=g.facet(e.facet);return"replace"==e.type?I:I.concat(i)}}return i}))].concat(I)}isActiveAt(g,e,I=-1){return Ha(g,e,I).type.prop(Ya)==this.data}findRegions(g){let e=g.facet(Pa);if((null==e?void 0:e.data)==this.data)return[{from:0,to:g.doc.length}];if(!e||!e.allowsNesting)return[];let I=[],t=(g,e)=>{if(g.prop(Ya)==this.data)return void I.push({from:e,to:e+g.length});let C=g.prop(ps.mounted);if(C){if(C.tree.prop(Ya)==this.data){if(C.overlay)for(let g of C.overlay)I.push({from:g.from+e,to:g.to+e});else I.push({from:e,to:e+g.length});return}if(C.overlay){let g=I.length;if(t(C.tree,C.overlay[0].from+e),I.length>g)return}}for(let I=0;I<g.children.length;I++){let C=g.children[I];C instanceof Ms&&t(C,g.positions[I]+e)}};return t(Xa(g),0),I}get allowsNesting(){return!0}}function Ha(g,e,I){let t=g.facet(Pa),C=Xa(g).topNode;if(!t||t.allowsNesting)for(let g=C;g;g=g.enter(e,I,Qs.ExcludeBuffers))g.type.isTop&&(C=g);return C}Ja.setState=yt.define();class wa extends Ja{constructor(g,e,I){super(g,e,[],I),this.parser=e}static define(g){let e=Ea(g.languageData);return new wa(e,g.parser.configure({props:[Ya.add((g=>g.isTop?e:void 0))]}),g.name)}configure(g,e){return new wa(this.data,this.parser.configure(g),e||this.name)}get allowsNesting(){return this.parser.hasWrappers()}}function Xa(g){let e=g.field(Ja.state,!1);return e?e.tree:Ms.empty}function Ka(g,e,I=50){var t;let C=null===(t=g.field(Ja.state,!1))||void 0===t?void 0:t.context;if(!C)return null;let i=C.viewport;C.updateViewport({from:0,to:e});let l=C.isDone(e)||C.work(I,e)?C.tree:null;return C.updateViewport(i),l}class za{constructor(g){this.doc=g,this.cursorPos=0,this.string="",this.cursor=g.iter()}get length(){return this.doc.length}syncTo(g){return this.string=this.cursor.next(g-this.cursorPos).value,this.cursorPos=g+this.string.length,this.cursorPos-this.string.length}chunk(g){return this.syncTo(g),this.string}get lineChunks(){return!0}read(g,e){let I=this.cursorPos-this.string.length;return g<I||e>=this.cursorPos?this.doc.sliceString(g,e):this.string.slice(g-I,e-I)}}let Da=null;class va{constructor(g,e,I=[],t,C,i,l,n){this.parser=g,this.state=e,this.fragments=I,this.tree=t,this.treeLen=C,this.viewport=i,this.skipped=l,this.scheduleOn=n,this.parse=null,this.tempSkipped=[]}static create(g,e,I){return new va(g,e,[],Ms.empty,0,I,[],null)}startParse(){return this.parser.startParse(new za(this.state.doc),this.fragments)}work(g,e){return null!=e&&e>=this.state.doc.length&&(e=void 0),this.tree!=Ms.empty&&this.isDone(e??this.state.doc.length)?(this.takeTree(),!0):this.withContext((()=>{var I;if("number"==typeof g){let e=Date.now()+g;g=()=>Date.now()>e}for(this.parse||(this.parse=this.startParse()),null!=e&&(null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&e<this.state.doc.length&&this.parse.stopAt(e);;){let t=this.parse.advance();if(t){if(this.fragments=this.withoutTempSkipped(ga.addTree(t,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(I=this.parse.stoppedAt)&&void 0!==I?I:this.state.doc.length,this.tree=t,this.parse=null,!(this.treeLen<(e??this.state.doc.length)))return!0;this.parse=this.startParse()}if(g())return!1}}))}takeTree(){let g,e;this.parse&&(g=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>g)&&this.parse.stopAt(g),this.withContext((()=>{for(;!(e=this.parse.advance()););})),this.treeLen=g,this.tree=e,this.fragments=this.withoutTempSkipped(ga.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(g){let e=Da;Da=this;try{return g()}finally{Da=e}}withoutTempSkipped(g){for(let e;e=this.tempSkipped.pop();)g=xa(g,e.from,e.to);return g}changes(g,e){let{fragments:I,tree:t,treeLen:C,viewport:i,skipped:l}=this;if(this.takeTree(),!g.empty){let e=[];if(g.iterChangedRanges(((g,I,t,C)=>e.push({fromA:g,toA:I,fromB:t,toB:C}))),I=ga.applyChanges(I,e),t=Ms.empty,C=0,i={from:g.mapPos(i.from,-1),to:g.mapPos(i.to,1)},this.skipped.length){l=[];for(let e of this.skipped){let I=g.mapPos(e.from,1),t=g.mapPos(e.to,-1);I<t&&l.push({from:I,to:t})}}}return new va(this.parser,e,I,t,C,i,l,this.scheduleOn)}updateViewport(g){if(this.viewport.from==g.from&&this.viewport.to==g.to)return!1;this.viewport=g;let e=this.skipped.length;for(let e=0;e<this.skipped.length;e++){let{from:I,to:t}=this.skipped[e];I<g.to&&t>g.from&&(this.fragments=xa(this.fragments,I,t),this.skipped.splice(e--,1))}return!(this.skipped.length>=e||(this.reset(),0))}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(g,e){this.skipped.push({from:g,to:e})}static getSkippingParser(g){return new class extends ea{createParse(e,I,t){let C=t[0].from,i=t[t.length-1].to;return{parsedPos:C,advance(){let e=Da;if(e){for(let g of t)e.tempSkipped.push(g);g&&(e.scheduleOn=e.scheduleOn?Promise.all([e.scheduleOn,g]):g)}return this.parsedPos=i,new Ms(us.none,[],[],i-C)},stoppedAt:null,stopAt(){}}}}}isDone(g){g=Math.min(g,this.state.doc.length);let e=this.fragments;return this.treeLen>=g&&e.length&&0==e[0].from&&e[0].to>=g}static get(){return Da}}function xa(g,e,I){return ga.applyChanges(g,[{fromA:e,toA:I,fromB:e,toB:I}])}class Oa{constructor(g){this.context=g,this.tree=g.tree}apply(g){if(!g.docChanged&&this.tree==this.context.tree)return this;let e=this.context.changes(g.changes,g.state),I=this.context.treeLen==g.startState.doc.length?void 0:Math.max(g.changes.mapPos(this.context.treeLen),e.viewport.to);return e.work(20,I)||e.takeTree(),new Oa(e)}static init(g){let e=Math.min(3e3,g.doc.length),I=va.create(g.facet(Pa).parser,g,{from:0,to:e});return I.work(20,e)||I.takeTree(),new Oa(I)}}Ja.state=rt.define({create:Oa.init,update(g,e){for(let g of e.effects)if(g.is(Ja.setState))return g.value;return e.startState.facet(Pa)!=e.state.facet(Pa)?Oa.init(e.state):g.apply(e)}});let fa=g=>{let e=setTimeout((()=>g()),500);return()=>clearTimeout(e)};typeof requestIdleCallback<"u"&&(fa=g=>{let e=-1,I=setTimeout((()=>{e=requestIdleCallback(g,{timeout:400})}),100);return()=>e<0?clearTimeout(I):cancelIdleCallback(e)});const ja=typeof navigator<"u"&&null!==(Ma=navigator.scheduling)&&void 0!==Ma&&Ma.isInputPending?()=>navigator.scheduling.isInputPending():null,La=Hl.fromClass(class{constructor(g){this.view=g,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(g){let e=this.view.state.field(Ja.state).context;(e.updateViewport(g.view.viewport)||this.view.viewport.to>e.treeLen)&&this.scheduleWork(),(g.docChanged||g.selectionSet)&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(e)}scheduleWork(){if(this.working)return;let{state:g}=this.view,e=g.field(Ja.state);(e.tree!=e.context.tree||!e.context.isDone(g.doc.length))&&(this.working=fa(this.work))}work(g){this.working=null;let e=Date.now();if(this.chunkEnd<e&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=e+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:I,viewport:{to:t}}=this.view,C=I.field(Ja.state);if(C.tree==C.context.tree&&C.context.isDone(t+1e5))return;let i=Date.now()+Math.min(this.chunkBudget,100,g&&!ja?Math.max(25,g.timeRemaining()-5):1e9),l=C.context.treeLen<t&&I.doc.length>t+1e3,n=C.context.work((()=>ja&&ja()||Date.now()>i),t+(l?0:1e5));this.chunkBudget-=Date.now()-e,(n||this.chunkBudget<=0)&&(C.context.takeTree(),this.view.dispatch({effects:Ja.setState.of(new Oa(C.context))})),this.chunkBudget>0&&!(n&&!l)&&this.scheduleWork(),this.checkAsyncSchedule(C.context)}checkAsyncSchedule(g){g.scheduleOn&&(this.workScheduled++,g.scheduleOn.then((()=>this.scheduleWork())).catch((g=>Yl(this.view.state,g))).then((()=>this.workScheduled--)),g.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),Pa=At.define({combine:g=>g.length?g[0]:null,enables:g=>[Ja.state,La,Vd.contentAttributes.compute([g],(e=>{let I=e.facet(g);return I&&I.name?{"data-language":I.name}:{}}))]});class _a{constructor(g,e=[]){this.language=g,this.support=e,this.extension=[g,e]}}const qa=At.define(),$a=At.define({combine:g=>{if(!g.length)return"  ";let e=g[0];if(!e||/\S/.test(e)||Array.from(e).some((g=>g!=e[0])))throw new Error("Invalid indent unit: "+JSON.stringify(g[0]));return e}});function gV(g){let e=g.facet($a);return 9==e.charCodeAt(0)?g.tabSize*e.length:e.length}function eV(g,e){let I="",t=g.tabSize,C=g.facet($a)[0];if("\t"==C){for(;e>=t;)I+="\t",e-=t;C=" "}for(let g=0;g<e;g++)I+=C;return I}function IV(g,e){g instanceof _t&&(g=new tV(g));for(let I of g.state.facet(qa)){let t=I(g,e);if(void 0!==t)return t}let I=Xa(g.state);return I.length>=e?iV(g,I,e):null}class tV{constructor(g,e={}){this.state=g,this.options=e,this.unit=gV(g)}lineAt(g,e=1){let I=this.state.doc.lineAt(g),{simulateBreak:t,simulateDoubleBreak:C}=this.options;return null!=t&&t>=I.from&&t<=I.to?C&&t==g?{text:"",from:g}:(e<0?t<g:t<=g)?{text:I.text.slice(t-I.from),from:t}:{text:I.text.slice(0,t-I.from),from:I.from}:I}textAfterPos(g,e=1){if(this.options.simulateDoubleBreak&&g==this.options.simulateBreak)return"";let{text:I,from:t}=this.lineAt(g,e);return I.slice(g-t,Math.min(I.length,g+100-t))}column(g,e=1){let{text:I,from:t}=this.lineAt(g,e),C=this.countColumn(I,g-t),i=this.options.overrideIndentation?this.options.overrideIndentation(t):-1;return i>-1&&(C+=i-this.countColumn(I,I.search(/\S|$/))),C}countColumn(g,e=g.length){return hC(g,this.state.tabSize,e)}lineIndent(g,e=1){let{text:I,from:t}=this.lineAt(g,e),C=this.options.overrideIndentation;if(C){let g=C(t);if(g>-1)return g}return this.countColumn(I,I.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const CV=new ps;function iV(g,e,I){let t=e.resolveStack(I),C=t.node.enterUnfinishedNodesBefore(I);if(C!=t.node){let g=[];for(let e=C;e!=t.node;e=e.parent)g.push(e);for(let e=g.length-1;e>=0;e--)t={node:g[e],next:t}}return lV(t,g,I)}function lV(g,e,I){for(let t=g;t;t=t.next){let g=AV(t.node);if(g)return g(oV.create(e,I,t))}return 0}function nV(g){return g.pos==g.options.simulateBreak&&g.options.simulateDoubleBreak}function AV(g){let e=g.type.prop(CV);if(e)return e;let I,t=g.firstChild;if(t&&(I=t.type.prop(ps.closedBy))){let e=g.lastChild,t=e&&I.indexOf(e.name)>-1;return g=>cV(g,!0,1,void 0,t&&!nV(g)?e.from:void 0)}return null==g.parent?dV:null}function dV(){return 0}class oV extends tV{constructor(g,e,I){super(g.state,g.options),this.base=g,this.pos=e,this.context=I}get node(){return this.context.node}static create(g,e,I){return new oV(g,e,I)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){return this.baseIndentFor(this.node)}baseIndentFor(g){let e=this.state.doc.lineAt(g.from);for(;;){let I=g.resolve(e.from);for(;I.parent&&I.parent.from==I.from;)I=I.parent;if(sV(I,g))break;e=this.state.doc.lineAt(I.from)}return this.lineIndent(e.from)}continue(){return lV(this.context.next,this.base,this.pos)}}function sV(g,e){for(let I=e;I;I=I.parent)if(g==I)return!0;return!1}function aV(g){let e=g.node,I=e.childAfter(e.from),t=e.lastChild;if(!I)return null;let C=g.options.simulateBreak,i=g.state.doc.lineAt(I.from),l=null==C||C<=i.from?i.to:Math.min(i.to,C);for(let g=I.to;;){let C=e.childAfter(g);if(!C||C==t)return null;if(!C.type.isSkipped)return C.from<l?I:null;g=C.to}}function VV({closing:g,align:e=!0,units:I=1}){return t=>cV(t,e,I,g)}function cV(g,e,I,t,C){let i=g.textAfter,l=i.match(/^\s*/)[0].length,n=t&&i.slice(l,l+t.length)==t||C==g.pos+l,A=e?aV(g):null;return A?n?g.column(A.from):g.column(A.to):g.baseIndent+(n?0:g.unit*I)}const rV=g=>g.baseIndent;function hV({except:g,units:e=1}={}){return I=>{let t=g&&g.test(I.textAfter);return I.baseIndent+(t?0:e*I.unit)}}const UV=200;function ZV(){return _t.transactionFilter.of((g=>{if(!g.docChanged||!g.isUserEvent("input.type")&&!g.isUserEvent("input.complete"))return g;let e=g.startState.languageDataAt("indentOnInput",g.startState.selection.main.head);if(!e.length)return g;let I=g.newDoc,{head:t}=g.newSelection.main,C=I.lineAt(t);if(t>C.from+UV)return g;let i=I.sliceString(C.from,t);if(!e.some((g=>g.test(i))))return g;let{state:l}=g,n=-1,A=[];for(let{head:g}of l.selection.ranges){let e=l.doc.lineAt(g);if(e.from==n)continue;n=e.from;let I=IV(l,e.from);if(null==I)continue;let t=/^\s*/.exec(e.text)[0],C=eV(l,I);t!=C&&A.push({from:e.from,to:e.from+t.length,insert:C})}return A.length?[g,{changes:A,sequential:!0}]:g}))}const RV=At.define(),FV=new ps;function mV(g){let e=g.firstChild,I=g.lastChild;return e&&e.to<I.from?{from:e.to,to:I.type.isError?g.to:I.from}:null}function BV(g,e,I){let t=Xa(g);if(t.length<I)return null;let C=null;for(let i=t.resolveStack(I,1);i;i=i.next){let l=i.node;if(l.to<=I||l.from>I)continue;if(C&&l.from<e)break;let n=l.type.prop(FV);if(n&&(l.to<t.length-50||t.length==g.doc.length||!WV(l))){let t=n(l,g);t&&t.from<=I&&t.from>=e&&t.to>I&&(C=t)}}return C}function WV(g){let e=g.lastChild;return e&&e.to==g.to&&e.type.isError}function NV(g,e,I){for(let t of g.facet(RV)){let C=t(g,e,I);if(C)return C}return BV(g,e,I)}function pV(g,e){let I=e.mapPos(g.from,1),t=e.mapPos(g.to,-1);return I>=t?void 0:{from:I,to:t}}const SV=yt.define({map:pV}),bV=yt.define({map:pV});function uV(g){let e=[];for(let{head:I}of g.state.selection.ranges)e.some((g=>g.from<=I&&g.to>=I))||e.push(g.lineBlockAt(I));return e}const TV=rt.define({create:()=>Di.none,update(g,e){g=g.map(e.changes);for(let I of e.effects)if(I.is(SV)&&!kV(g,I.value.from,I.value.to)){let{preparePlaceholder:t}=e.state.facet(XV),C=t?Di.replace({widget:new vV(t(e.state,I.value))}):DV;g=g.update({add:[C.range(I.value.from,I.value.to)]})}else I.is(bV)&&(g=g.update({filter:(g,e)=>I.value.from!=g||I.value.to!=e,filterFrom:I.value.from,filterTo:I.value.to}));if(e.selection){let I=!1,{head:t}=e.selection.main;g.between(t,t,((g,e)=>{g<t&&e>t&&(I=!0)})),I&&(g=g.update({filterFrom:t,filterTo:t,filter:(g,e)=>e<=t||g>=t}))}return g},provide:g=>Vd.decorations.from(g),toJSON(g,e){let I=[];return g.between(0,e.doc.length,((g,e)=>{I.push(g,e)})),I},fromJSON(g){if(!Array.isArray(g)||g.length%2)throw new RangeError("Invalid JSON for fold state");let e=[];for(let I=0;I<g.length;){let t=g[I++],C=g[I++];if("number"!=typeof t||"number"!=typeof C)throw new RangeError("Invalid JSON for fold state");e.push(DV.range(t,C))}return Di.set(e,!0)}});function GV(g,e,I){var t;let C=null;return null===(t=g.field(TV,!1))||void 0===t||t.between(e,I,((g,e)=>{(!C||C.from>g)&&(C={from:g,to:e})})),C}function kV(g,e,I){let t=!1;return g.between(e,e,((g,C)=>{g==e&&C==I&&(t=!0)})),t}function QV(g,e){return g.field(TV,!1)?e:e.concat(yt.appendConfig.of(KV()))}const MV=g=>{for(let e of uV(g)){let I=NV(g.state,e.from,e.to);if(I)return g.dispatch({effects:QV(g.state,[SV.of(I),EV(g,I)])}),!0}return!1},YV=g=>{if(!g.state.field(TV,!1))return!1;let e=[];for(let I of uV(g)){let t=GV(g.state,I.from,I.to);t&&e.push(bV.of(t),EV(g,t,!1))}return e.length&&g.dispatch({effects:e}),e.length>0};function EV(g,e,I=!0){let t=g.state.doc.lineAt(e.from).number,C=g.state.doc.lineAt(e.to).number;return Vd.announce.of(`${g.state.phrase(I?"Folded lines":"Unfolded lines")} ${t} ${g.state.phrase("to")} ${C}.`)}const yV=g=>{let{state:e}=g,I=[];for(let t=0;t<e.doc.length;){let C=g.lineBlockAt(t),i=NV(e,C.from,C.to);i&&I.push(SV.of(i)),t=(i?g.lineBlockAt(i.to):C).to+1}return I.length&&g.dispatch({effects:QV(g.state,I)}),!!I.length},JV=g=>{let e=g.state.field(TV,!1);if(!e||!e.size)return!1;let I=[];return e.between(0,g.state.doc.length,((g,e)=>{I.push(bV.of({from:g,to:e}))})),g.dispatch({effects:I}),!0},HV=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:MV},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:YV},{key:"Ctrl-Alt-[",run:yV},{key:"Ctrl-Alt-]",run:JV}],wV={placeholderDOM:null,preparePlaceholder:null,placeholderText:"…"},XV=At.define({combine:g=>qt(g,wV)});function KV(g){return[TV,jV]}function zV(g,e){let{state:I}=g,t=I.facet(XV),C=e=>{let I=g.lineBlockAt(g.posAtDOM(e.target)),t=GV(g.state,I.from,I.to);t&&g.dispatch({effects:bV.of(t)}),e.preventDefault()};if(t.placeholderDOM)return t.placeholderDOM(g,C,e);let i=document.createElement("span");return i.textContent=t.placeholderText,i.setAttribute("aria-label",I.phrase("folded code")),i.title=I.phrase("unfold"),i.className="cm-foldPlaceholder",i.onclick=C,i}const DV=Di.replace({widget:new class extends Ki{toDOM(g){return zV(g,null)}}});class vV extends Ki{constructor(g){super(),this.value=g}eq(g){return this.value==g.value}toDOM(g){return zV(g,this.value)}}const xV={openText:"⌄",closedText:"›",markerDOM:null,domEventHandlers:{},foldingChanged:()=>!1};class OV extends qo{constructor(g,e){super(),this.config=g,this.open=e}eq(g){return this.config==g.config&&this.open==g.open}toDOM(g){if(this.config.markerDOM)return this.config.markerDOM(this.open);let e=document.createElement("span");return e.textContent=this.open?this.config.openText:this.config.closedText,e.title=g.state.phrase(this.open?"Fold line":"Unfold line"),e}}function fV(g={}){let e=Object.assign(Object.assign({},xV),g),I=new OV(e,!0),t=new OV(e,!1),C=Hl.fromClass(class{constructor(g){this.from=g.viewport.from,this.markers=this.buildMarkers(g)}update(g){(g.docChanged||g.viewportChanged||g.startState.facet(Pa)!=g.state.facet(Pa)||g.startState.field(TV,!1)!=g.state.field(TV,!1)||Xa(g.startState)!=Xa(g.state)||e.foldingChanged(g))&&(this.markers=this.buildMarkers(g.view))}buildMarkers(g){let e=new iC;for(let C of g.viewportLineBlocks){let i=GV(g.state,C.from,C.to)?t:NV(g.state,C.from,C.to)?I:null;i&&e.add(C.from,C.from,i)}return e.finish()}}),{domEventHandlers:i}=e;return[C,Is({class:"cm-foldGutter",markers(g){var e;return(null===(e=g.plugin(C))||void 0===e?void 0:e.markers)||tC.empty},initialSpacer:()=>new OV(e,!1),domEventHandlers:Object.assign(Object.assign({},i),{click:(g,e,I)=>{if(i.click&&i.click(g,e,I))return!0;let t=GV(g.state,e.from,e.to);if(t)return g.dispatch({effects:bV.of(t)}),!0;let C=NV(g.state,e.from,e.to);return!!C&&(g.dispatch({effects:SV.of(C)}),!0)}})}),KV()]}const jV=Vd.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}});class LV{constructor(g,e){let I;function t(g){let e=BC.newName();return(I||(I=Object.create(null)))["."+e]=g,e}this.specs=g;const C="string"==typeof e.all?e.all:e.all?t(e.all):void 0,i=e.scope;this.scope=i instanceof Ja?g=>g.prop(Ya)==i.data:i?g=>g==i:void 0,this.style=aa(g.map((g=>({tag:g.tag,class:g.class||t(Object.assign({},g,{tag:null}))}))),{all:C}).style,this.module=I?new BC(I):null,this.themeType=e.themeType}static define(g,e){return new LV(g,e||{})}}const PV=At.define(),_V=At.define({combine:g=>g.length?[g[0]]:null});function qV(g){let e=g.facet(PV);return e.length?e:g.facet(_V)}function $V(g,e){let I,t=[ec];return g instanceof LV&&(g.module&&t.push(Vd.styleModule.of(g.module)),I=g.themeType),null!=e&&e.fallback?t.push(_V.of(g)):I?t.push(PV.computeN([Vd.darkTheme],(e=>e.facet(Vd.darkTheme)==("dark"==I)?[g]:[]))):t.push(PV.of(g)),t}class gc{constructor(g){this.markCache=Object.create(null),this.tree=Xa(g.state),this.decorations=this.buildDeco(g,qV(g.state)),this.decoratedTo=g.viewport.to}update(g){let e=Xa(g.state),I=qV(g.state),t=I!=qV(g.startState),{viewport:C}=g.view,i=g.changes.mapPos(this.decoratedTo,1);e.length<C.to&&!t&&e.type==this.tree.type&&i>=C.to?(this.decorations=this.decorations.map(g.changes),this.decoratedTo=i):(e!=this.tree||g.viewportChanged||t)&&(this.tree=e,this.decorations=this.buildDeco(g.view,I),this.decoratedTo=C.to)}buildDeco(g,e){if(!e||!this.tree.length)return Di.none;let I=new iC;for(let{from:t,to:C}of g.visibleRanges)ca(this.tree,e,((g,e,t)=>{I.add(g,e,this.markCache[t]||(this.markCache[t]=Di.mark({class:t})))}),t,C);return I.finish()}}const ec=Zt.high(Hl.fromClass(gc,{decorations:g=>g.decorations})),Ic=LV.define([{tag:Qa.meta,color:"#404740"},{tag:Qa.link,textDecoration:"underline"},{tag:Qa.heading,textDecoration:"underline",fontWeight:"bold"},{tag:Qa.emphasis,fontStyle:"italic"},{tag:Qa.strong,fontWeight:"bold"},{tag:Qa.strikethrough,textDecoration:"line-through"},{tag:Qa.keyword,color:"#708"},{tag:[Qa.atom,Qa.bool,Qa.url,Qa.contentSeparator,Qa.labelName],color:"#219"},{tag:[Qa.literal,Qa.inserted],color:"#164"},{tag:[Qa.string,Qa.deleted],color:"#a11"},{tag:[Qa.regexp,Qa.escape,Qa.special(Qa.string)],color:"#e40"},{tag:Qa.definition(Qa.variableName),color:"#00f"},{tag:Qa.local(Qa.variableName),color:"#30a"},{tag:[Qa.typeName,Qa.namespace],color:"#085"},{tag:Qa.className,color:"#167"},{tag:[Qa.special(Qa.variableName),Qa.macroName],color:"#256"},{tag:Qa.definition(Qa.propertyName),color:"#00c"},{tag:Qa.comment,color:"#940"},{tag:Qa.invalid,color:"#f00"}]),tc=Vd.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),Cc=1e4,ic="()[]{}",lc=At.define({combine:g=>qt(g,{afterCursor:!0,brackets:ic,maxScanDistance:Cc,renderMatch:dc})}),nc=Di.mark({class:"cm-matchingBracket"}),Ac=Di.mark({class:"cm-nonmatchingBracket"});function dc(g){let e=[],I=g.matched?nc:Ac;return e.push(I.range(g.start.from,g.start.to)),g.end&&e.push(I.range(g.end.from,g.end.to)),e}const oc=rt.define({create:()=>Di.none,update(g,e){if(!e.docChanged&&!e.selection)return g;let I=[],t=e.state.facet(lc);for(let g of e.state.selection.ranges){if(!g.empty)continue;let C=hc(e.state,g.head,-1,t)||g.head>0&&hc(e.state,g.head-1,1,t)||t.afterCursor&&(hc(e.state,g.head,1,t)||g.head<e.state.doc.length&&hc(e.state,g.head+1,-1,t));C&&(I=I.concat(t.renderMatch(C,e.state)))}return Di.set(I,!0)},provide:g=>Vd.decorations.from(g)}),sc=[oc,tc];function ac(g={}){return[lc.of(g),sc]}const Vc=new ps;function cc(g,e,I){let t=g.prop(e<0?ps.openedBy:ps.closedBy);if(t)return t;if(1==g.name.length){let t=I.indexOf(g.name);if(t>-1&&t%2==(e<0?1:0))return[I[t+e]]}return null}function rc(g){let e=g.type.prop(Vc);return e?e(g.node):g}function hc(g,e,I,t={}){let C=t.maxScanDistance||Cc,i=t.brackets||ic,l=Xa(g),n=l.resolveInner(e,I);for(let t=n;t;t=t.parent){let C=cc(t.type,I,i);if(C&&t.from<t.to){let l=rc(t);if(l&&(I>0?e>=l.from&&e<l.to:e>l.from&&e<=l.to))return Uc(g,e,I,t,l,C,i)}}return Zc(g,e,I,l,n.type,C,i)}function Uc(g,e,I,t,C,i,l){let n=t.parent,A={from:C.from,to:C.to},d=0,o=null==n?void 0:n.cursor();if(o&&(I<0?o.childBefore(t.from):o.childAfter(t.to)))do{if(I<0?o.to<=t.from:o.from>=t.to){if(0==d&&i.indexOf(o.type.name)>-1&&o.from<o.to){let g=rc(o);return{start:A,end:g?{from:g.from,to:g.to}:void 0,matched:!0}}if(cc(o.type,I,l))d++;else if(cc(o.type,-I,l)){if(0==d){let g=rc(o);return{start:A,end:g&&g.from<g.to?{from:g.from,to:g.to}:void 0,matched:!1}}d--}}}while(I<0?o.prevSibling():o.nextSibling());return{start:A,matched:!1}}function Zc(g,e,I,t,C,i,l){let n=I<0?g.sliceDoc(e-1,e):g.sliceDoc(e,e+1),A=l.indexOf(n);if(A<0||A%2==0!=I>0)return null;let d={from:I<0?e-1:e,to:I>0?e+1:e},o=g.doc.iterRange(e,I>0?g.doc.length:0),s=0;for(let g=0;!o.next().done&&g<=i;){let i=o.value;I<0&&(g+=i.length);let n=e+g*I;for(let g=I>0?0:i.length-1,e=I>0?i.length:-1;g!=e;g+=I){let e=l.indexOf(i[g]);if(!(e<0||t.resolveInner(n+g,1).type!=C))if(e%2==0==I>0)s++;else{if(1==s)return{start:d,end:{from:n+g,to:n+g+1},matched:e>>1==A>>1};s--}}I>0&&(g+=i.length)}return o.done?{start:d,matched:!1}:null}function Rc(g,e,I,t=0,C=0){null==e&&-1==(e=g.search(/[^\s\u00a0]/))&&(e=g.length);let i=C;for(let C=t;C<e;C++)9==g.charCodeAt(C)?i+=I-i%I:i++;return i}class Fc{constructor(g,e,I,t){this.string=g,this.tabSize=e,this.indentUnit=I,this.overrideIndent=t,this.pos=0,this.start=0,this.lastColumnPos=0,this.lastColumnValue=0}eol(){return this.pos>=this.string.length}sol(){return 0==this.pos}peek(){return this.string.charAt(this.pos)||void 0}next(){if(this.pos<this.string.length)return this.string.charAt(this.pos++)}eat(g){let e,I=this.string.charAt(this.pos);if(e="string"==typeof g?I==g:I&&(g instanceof RegExp?g.test(I):g(I)),e)return++this.pos,I}eatWhile(g){let e=this.pos;for(;this.eat(g););return this.pos>e}eatSpace(){let g=this.pos;for(;/[\s\u00a0]/.test(this.string.charAt(this.pos));)++this.pos;return this.pos>g}skipToEnd(){this.pos=this.string.length}skipTo(g){let e=this.string.indexOf(g,this.pos);if(e>-1)return this.pos=e,!0}backUp(g){this.pos-=g}column(){return this.lastColumnPos<this.start&&(this.lastColumnValue=Rc(this.string,this.start,this.tabSize,this.lastColumnPos,this.lastColumnValue),this.lastColumnPos=this.start),this.lastColumnValue}indentation(){var g;return null!==(g=this.overrideIndent)&&void 0!==g?g:Rc(this.string,null,this.tabSize)}match(g,e,I){if("string"==typeof g){let t=g=>I?g.toLowerCase():g;return t(this.string.substr(this.pos,g.length))==t(g)?(!1!==e&&(this.pos+=g.length),!0):null}{let I=this.string.slice(this.pos).match(g);return I&&I.index>0?null:(I&&!1!==e&&(this.pos+=I[0].length),I)}}current(){return this.string.slice(this.start,this.pos)}}function mc(g){return{name:g.name||"",token:g.token,blankLine:g.blankLine||(()=>{}),startState:g.startState||(()=>!0),copyState:g.copyState||Bc,indent:g.indent||(()=>null),languageData:g.languageData||{},tokenTable:g.tokenTable||Gc}}function Bc(g){if("object"!=typeof g)return g;let e={};for(let I in g){let t=g[I];e[I]=t instanceof Array?t.slice():t}return e}const Wc=new WeakMap;class Nc extends Ja{constructor(g){let e,I=Ea(g.languageData),t=mc(g);super(I,new class extends ea{createParse(g,I,t){return new uc(e,g,I,t)}},[qa.of(((g,e)=>this.getIndent(g,e)))],g.name),this.topNode=Xc(I),e=this,this.streamParser=t,this.stateAfter=new ps({perNode:!0}),this.tokenTable=g.tokenTable?new yc(t.tokenTable):Jc}static define(g){return new Nc(g)}getIndent(g,e){let I=Xa(g.state),t=I.resolve(e);for(;t&&t.type!=this.topNode;)t=t.parent;if(!t)return null;let C,{overrideIndentation:i}=g.options;i&&(C=Wc.get(g.state),null!=C&&C<e-1e4&&(C=void 0));let l,n,A=pc(this,I,0,t.from,C??e);if(A?(n=A.state,l=A.pos+1):(n=this.streamParser.startState(g.unit),l=0),e-l>1e4)return null;for(;l<e;){let I=g.state.doc.lineAt(l),t=Math.min(e,I.to);if(I.length){let e=i?i(I.from):-1,C=new Fc(I.text,g.state.tabSize,g.unit,e<0?void 0:e);for(;C.pos<t-I.from;)Tc(this.streamParser.token,C,n)}else this.streamParser.blankLine(n,g.unit);if(t==e)break;l=I.to+1}let d=g.lineAt(e);return i&&null==C&&Wc.set(g.state,d.from),this.streamParser.indent(n,/^\s*(.*)/.exec(d.text)[1],g)}get allowsNesting(){return!1}}function pc(g,e,I,t,C){let i=I>=t&&I+e.length<=C&&e.prop(g.stateAfter);if(i)return{state:g.streamParser.copyState(i),pos:I+e.length};for(let i=e.children.length-1;i>=0;i--){let l=e.children[i],n=I+e.positions[i],A=l instanceof Ms&&n<C&&pc(g,l,n,t,C);if(A)return A}return null}function Sc(g,e,I,t,C){if(C&&I<=0&&t>=e.length)return e;!C&&e.type==g.topNode&&(C=!0);for(let i=e.children.length-1;i>=0;i--){let l,n=e.positions[i],A=e.children[i];if(n<t&&A instanceof Ms){if(!(l=Sc(g,A,I-n,t-n,C)))break;return C?new Ms(e.type,e.children.slice(0,i).concat(l),e.positions.slice(0,i+1),n+l.length):l}}return null}function bc(g,e,I,t){for(let t of e){let e,C=t.from+(t.openStart?25:0),i=t.to-(t.openEnd?25:0),l=C<=I&&i>I&&pc(g,t.tree,0-t.offset,I,i);if(l&&(e=Sc(g,t.tree,I+t.offset,l.pos+t.offset,!1)))return{state:l.state,tree:e}}return{state:g.streamParser.startState(t?gV(t):4),tree:Ms.empty}}let uc=class{constructor(g,e,I,t){this.lang=g,this.input=e,this.fragments=I,this.ranges=t,this.stoppedAt=null,this.chunks=[],this.chunkPos=[],this.chunk=[],this.chunkReused=void 0,this.rangeIndex=0,this.to=t[t.length-1].to;let C=va.get(),i=t[0].from,{state:l,tree:n}=bc(g,I,i,null==C?void 0:C.state);this.state=l,this.parsedPos=this.chunkStart=i+n.length;for(let g=0;g<n.children.length;g++)this.chunks.push(n.children[g]),this.chunkPos.push(n.positions[g]);C&&this.parsedPos<C.viewport.from-1e5&&(this.state=this.lang.streamParser.startState(gV(C.state)),C.skipUntilInView(this.parsedPos,C.viewport.from),this.parsedPos=C.viewport.from),this.moveRangeIndex()}advance(){let g=va.get(),e=null==this.stoppedAt?this.to:Math.min(this.to,this.stoppedAt),I=Math.min(e,this.chunkStart+2048);for(g&&(I=Math.min(I,g.viewport.to));this.parsedPos<I;)this.parseLine(g);return this.chunkStart<this.parsedPos&&this.finishChunk(),this.parsedPos>=e?this.finish():g&&this.parsedPos>=g.viewport.to?(g.skipUntilInView(this.parsedPos,e),this.finish()):null}stopAt(g){this.stoppedAt=g}lineAfter(g){let e=this.input.chunk(g);if(this.input.lineChunks)"\n"==e&&(e="");else{let g=e.indexOf("\n");g>-1&&(e=e.slice(0,g))}return g+e.length<=this.to?e:e.slice(0,this.to-g)}nextLine(){let g=this.parsedPos,e=this.lineAfter(g),I=g+e.length;for(let g=this.rangeIndex;;){let t=this.ranges[g].to;if(t>=I||(e=e.slice(0,t-(I-e.length)),g++,g==this.ranges.length))break;let C=this.ranges[g].from,i=this.lineAfter(C);e+=i,I=C+i.length}return{line:e,end:I}}skipGapsTo(g,e,I){for(;;){let t=this.ranges[this.rangeIndex].to,C=g+e;if(I>0?t>C:t>=C)break;e+=this.ranges[++this.rangeIndex].from-t}return e}moveRangeIndex(){for(;this.ranges[this.rangeIndex].to<this.parsedPos;)this.rangeIndex++}emitToken(g,e,I,t,C){if(this.ranges.length>1){e+=C=this.skipGapsTo(e,C,1);let g=this.chunk.length;I+=C=this.skipGapsTo(I,C,-1),t+=this.chunk.length-g}return this.chunk.push(g,e,I,t),C}parseLine(g){let{line:e,end:I}=this.nextLine(),t=0,{streamParser:C}=this.lang,i=new Fc(e,g?g.state.tabSize:4,g?gV(g.state):2);if(i.eol())C.blankLine(this.state,i.indentUnit);else for(;!i.eol();){let g=Tc(C.token,i,this.state);if(g&&(t=this.emitToken(this.lang.tokenTable.resolve(g),this.parsedPos+i.start,this.parsedPos+i.pos,4,t)),i.start>1e4)break}this.parsedPos=I,this.moveRangeIndex(),this.parsedPos<this.to&&this.parsedPos++}finishChunk(){let g=Ms.build({buffer:this.chunk,start:this.chunkStart,length:this.parsedPos-this.chunkStart,nodeSet:Qc,topID:0,maxBufferLength:2048,reused:this.chunkReused});g=new Ms(g.type,g.children,g.positions,g.length,[[this.lang.stateAfter,this.lang.streamParser.copyState(this.state)]]),this.chunks.push(g),this.chunkPos.push(this.chunkStart-this.ranges[0].from),this.chunk=[],this.chunkReused=void 0,this.chunkStart=this.parsedPos}finish(){return new Ms(this.lang.topNode,this.chunks,this.chunkPos,this.parsedPos-this.ranges[0].from).balance()}};function Tc(g,e,I){e.start=e.pos;for(let t=0;t<10;t++){let t=g(e,I);if(e.pos>e.start)return t}throw new Error("Stream parser failed to advance stream.")}const Gc=Object.create(null),kc=[us.none],Qc=new Ts(kc),Mc=[],Yc=Object.create(null),Ec=Object.create(null);for(let[g,e]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])Ec[g]=wc(Gc,e);class yc{constructor(g){this.extra=g,this.table=Object.assign(Object.create(null),Ec)}resolve(g){return g?this.table[g]||(this.table[g]=wc(this.extra,g)):0}}const Jc=new yc(Gc);function Hc(g,e){Mc.indexOf(g)>-1||Mc.push(g)}function wc(g,e){let I=[];for(let t of e.split(" ")){let e=[];for(let I of t.split(".")){let t=g[I]||Qa[I];t?"function"==typeof t?e.length?e=e.map(t):Hc(I,`Modifier ${I} used at start of tag`):e.length?Hc(I,`Tag ${I} used as modifier`):e=Array.isArray(t)?t:[t]:Hc(I,`Unknown highlighting tag ${I}`)}for(let g of e)I.push(g)}if(!I.length)return 0;let t=e.replace(/ /g,"_"),C=t+" "+I.map((g=>g.id)),i=Yc[C];if(i)return i.id;let l=Yc[C]=us.define({id:kc.length,name:t,props:[da({[t]:I})]});return kc.push(l),l.id}function Xc(g){let e=us.define({id:kc.length,name:"Document",props:[Ya.add((()=>g))],top:!0});return kc.push(e),e}$i.RTL,$i.LTR;class Kc{constructor(g,e,I){this.state=g,this.pos=e,this.explicit=I,this.abortListeners=[]}tokenBefore(g){let e=Xa(this.state).resolveInner(this.pos,-1);for(;e&&g.indexOf(e.name)<0;)e=e.parent;return e?{from:e.from,to:this.pos,text:this.state.sliceDoc(e.from,this.pos),type:e.type}:null}matchBefore(g){let e=this.state.doc.lineAt(this.pos),I=Math.max(e.from,this.pos-250),t=e.text.slice(I-e.from,this.pos-e.from),C=t.search(jc(g,!1));return C<0?null:{from:I+C,to:this.pos,text:t.slice(C)}}get aborted(){return null==this.abortListeners}addEventListener(g,e){"abort"==g&&this.abortListeners&&this.abortListeners.push(e)}}function zc(g){let e=Object.keys(g).join(""),I=/\w/.test(e);return I&&(e=e.replace(/\w/g,"")),`[${I?"\\w":""}${e.replace(/[^\w\s]/g,"\\$&")}]`}function Dc(g){let e=Object.create(null),I=Object.create(null);for(let{label:t}of g){e[t[0]]=!0;for(let g=1;g<t.length;g++)I[t[g]]=!0}let t=zc(e)+zc(I)+"*$";return[new RegExp("^"+t),new RegExp(t)]}function vc(g){let e=g.map((g=>"string"==typeof g?{label:g}:g)),[I,t]=e.every((g=>/^\w+$/.test(g.label)))?[/\w*$/,/\w+$/]:Dc(e);return g=>{let C=g.matchBefore(t);return C||g.explicit?{from:C?C.from:g.pos,options:e,validFor:I}:null}}function xc(g,e){return I=>{for(let e=Xa(I.state).resolveInner(I.pos,-1);e;e=e.parent){if(g.indexOf(e.name)>-1)return null;if(e.type.isTop)break}return e(I)}}class Oc{constructor(g,e,I,t){this.completion=g,this.source=e,this.match=I,this.score=t}}function fc(g){return g.selection.main.from}function jc(g,e){var I;let{source:t}=g,C=e&&"^"!=t[0],i="$"!=t[t.length-1];return C||i?new RegExp(`${C?"^":""}(?:${t})${i?"$":""}`,null!==(I=g.flags)&&void 0!==I?I:g.ignoreCase?"i":""):g}const Lc=Mt.define();function Pc(g,e,I,t){let{main:C}=g.selection,i=I-C.from,l=t-C.from;return Object.assign(Object.assign({},g.changeByRange((n=>n!=C&&I!=t&&g.sliceDoc(n.from+i,n.from+l)!=g.sliceDoc(I,t)?{range:n}:{changes:{from:n.from+i,to:t==C.from?n.to:n.from+l,insert:e},range:it.cursor(n.from+i+e.length)}))),{scrollIntoView:!0,userEvent:"input.complete"})}const _c=new WeakMap;function qc(g){if(!Array.isArray(g))return g;let e=_c.get(g);return e||_c.set(g,e=vc(g)),e}const $c=yt.define(),gr=yt.define();class er{constructor(g){this.pattern=g,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[],this.score=0,this.matched=[];for(let e=0;e<g.length;){let I=xI(g,e),t=fI(I);this.chars.push(I);let C=g.slice(e,e+t),i=C.toUpperCase();this.folded.push(xI(i==C?C.toLowerCase():i,0)),e+=t}this.astral=g.length!=this.chars.length}ret(g,e){return this.score=g,this.matched=e,this}match(g){if(0==this.pattern.length)return this.ret(-100,[]);if(g.length<this.pattern.length)return null;let{chars:e,folded:I,any:t,precise:C,byWord:i}=this;if(1==e.length){let t=xI(g,0),C=fI(t),i=C==g.length?0:-100;if(t!=e[0]){if(t!=I[0])return null;i+=-200}return this.ret(i,[0,C])}let l=g.indexOf(this.pattern);if(0==l)return this.ret(g.length==this.pattern.length?0:-100,[0,this.pattern.length]);let n=e.length,A=0;if(l<0){for(let C=0,i=Math.min(g.length,200);C<i&&A<n;){let i=xI(g,C);(i==e[A]||i==I[A])&&(t[A++]=C),C+=fI(i)}if(A<n)return null}let d=0,o=0,s=!1,a=0,V=-1,c=-1,r=/[a-z]/.test(g),h=!0;for(let t=0,A=Math.min(g.length,200),U=0;t<A&&o<n;){let A=xI(g,t);l<0&&(d<n&&A==e[d]&&(C[d++]=t),a<n&&(A==e[a]||A==I[a]?(0==a&&(V=t),c=t+1,a++):a=0));let Z,R=A<255?A>=48&&A<=57||A>=97&&A<=122?2:A>=65&&A<=90?1:0:(Z=OI(A))!=Z.toLowerCase()?1:Z!=Z.toUpperCase()?2:0;(!t||1==R&&r||0==U&&0!=R)&&(e[o]==A||I[o]==A&&(s=!0)?i[o++]=t:i.length&&(h=!1)),U=R,t+=fI(A)}return o==n&&0==i[0]&&h?this.result((s?-200:0)-100,i,g):a==n&&0==V?this.ret(-200-g.length+(c==g.length?0:-100),[0,c]):l>-1?this.ret(-700-g.length,[l,l+this.pattern.length]):a==n?this.ret(-900-g.length,[V,c]):o==n?this.result((s?-200:0)-100-700+(h?0:-1100),i,g):2==e.length?null:this.result((t[0]?-700:0)-200-1100,t,g)}result(g,e,I){let t=[],C=0;for(let g of e){let e=g+(this.astral?fI(xI(I,g)):1);C&&t[C-1]==g?t[C-1]=e:(t[C++]=g,t[C++]=e)}return this.ret(g-I.length,t)}}class Ir{constructor(g){this.pattern=g,this.matched=[],this.score=0,this.folded=g.toLowerCase()}match(g){if(g.length<this.pattern.length)return null;let e=g.slice(0,this.pattern.length),I=e==this.pattern?0:e.toLowerCase()==this.folded?-200:null;return null==I?null:(this.matched=[0,e.length],this.score=I+(g.length==this.pattern.length?0:-100),this)}}const tr=At.define({combine:g=>qt(g,{activateOnTyping:!0,activateOnCompletion:()=>!1,activateOnTypingDelay:100,selectOnOpen:!0,override:null,closeOnBlur:!0,maxRenderedOptions:100,defaultKeymap:!0,tooltipClass:()=>"",optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[],positionInfo:ir,filterStrict:!1,compareCompletions:(g,e)=>g.label.localeCompare(e.label),interactionDelay:75,updateSyncTime:100},{defaultKeymap:(g,e)=>g&&e,closeOnBlur:(g,e)=>g&&e,icons:(g,e)=>g&&e,tooltipClass:(g,e)=>I=>Cr(g(I),e(I)),optionClass:(g,e)=>I=>Cr(g(I),e(I)),addToOptions:(g,e)=>g.concat(e),filterStrict:(g,e)=>g||e})});function Cr(g,e){return g?e?g+" "+e:g:e}function ir(g,e,I,t,C,i){let l,n,A=g.textDirection==$i.RTL,d=A,o=!1,s="top",a=e.left-C.left,V=C.right-e.right,c=t.right-t.left,r=t.bottom-t.top;if(d&&a<Math.min(c,V)?d=!1:!d&&V<Math.min(c,a)&&(d=!0),c<=(d?a:V))l=Math.max(C.top,Math.min(I.top,C.bottom-r))-e.top,n=Math.min(400,d?a:V);else{o=!0,n=Math.min(400,(A?e.right:C.right-e.left)-30);let g=C.bottom-e.bottom;g>=r||g>e.top?l=I.bottom-e.top:(s="bottom",l=e.bottom-I.top)}return{style:`${s}: ${l/((e.bottom-e.top)/i.offsetHeight)}px; max-width: ${n/((e.right-e.left)/i.offsetWidth)}px`,class:"cm-completionInfo-"+(o?A?"left-narrow":"right-narrow":d?"left":"right")}}function lr(g){let e=g.addToOptions.slice();return g.icons&&e.push({render(g){let e=document.createElement("div");return e.classList.add("cm-completionIcon"),g.type&&e.classList.add(...g.type.split(/\s+/g).map((g=>"cm-completionIcon-"+g))),e.setAttribute("aria-hidden","true"),e},position:20}),e.push({render(g,e,I,t){let C=document.createElement("span");C.className="cm-completionLabel";let i=g.displayLabel||g.label,l=0;for(let g=0;g<t.length;){let e=t[g++],I=t[g++];e>l&&C.appendChild(document.createTextNode(i.slice(l,e)));let n=C.appendChild(document.createElement("span"));n.appendChild(document.createTextNode(i.slice(e,I))),n.className="cm-completionMatchedText",l=I}return l<i.length&&C.appendChild(document.createTextNode(i.slice(l))),C},position:50},{render(g){if(!g.detail)return null;let e=document.createElement("span");return e.className="cm-completionDetail",e.textContent=g.detail,e},position:80}),e.sort(((g,e)=>g.position-e.position)).map((g=>g.render))}function nr(g,e,I){if(g<=I)return{from:0,to:g};if(e<0&&(e=0),e<=g>>1){let g=Math.floor(e/I);return{from:g*I,to:(g+1)*I}}let t=Math.floor((g-e)/I);return{from:g-(t+1)*I,to:g-t*I}}class Ar{constructor(g,e,I){this.view=g,this.stateField=e,this.applyCompletion=I,this.info=null,this.infoDestroy=null,this.placeInfoReq={read:()=>this.measureInfo(),write:g=>this.placeInfo(g),key:this},this.space=null,this.currentClass="";let t=g.state.field(e),{options:C,selected:i}=t.open,l=g.state.facet(tr);this.optionContent=lr(l),this.optionClass=l.optionClass,this.tooltipClass=l.tooltipClass,this.range=nr(C.length,i,l.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.updateTooltipClass(g.state),this.dom.addEventListener("mousedown",(I=>{let{options:t}=g.state.field(e).open;for(let e,C=I.target;C&&C!=this.dom;C=C.parentNode)if("LI"==C.nodeName&&(e=/-(\d+)$/.exec(C.id))&&+e[1]<t.length)return this.applyCompletion(g,t[+e[1]]),void I.preventDefault()})),this.dom.addEventListener("focusout",(e=>{let I=g.state.field(this.stateField,!1);I&&I.tooltip&&g.state.facet(tr).closeOnBlur&&e.relatedTarget!=g.contentDOM&&g.dispatch({effects:gr.of(null)})})),this.showOptions(C,t.id)}mount(){this.updateSel()}showOptions(g,e){this.list&&this.list.remove(),this.list=this.dom.appendChild(this.createListBox(g,e,this.range)),this.list.addEventListener("scroll",(()=>{this.info&&this.view.requestMeasure(this.placeInfoReq)}))}update(g){var e;let I=g.state.field(this.stateField),t=g.startState.field(this.stateField);if(this.updateTooltipClass(g.state),I!=t){let{options:C,selected:i,disabled:l}=I.open;(!t.open||t.open.options!=C)&&(this.range=nr(C.length,i,g.state.facet(tr).maxRenderedOptions),this.showOptions(C,I.id)),this.updateSel(),l!=(null===(e=t.open)||void 0===e?void 0:e.disabled)&&this.dom.classList.toggle("cm-tooltip-autocomplete-disabled",!!l)}}updateTooltipClass(g){let e=this.tooltipClass(g);if(e!=this.currentClass){for(let g of this.currentClass.split(" "))g&&this.dom.classList.remove(g);for(let g of e.split(" "))g&&this.dom.classList.add(g);this.currentClass=e}}positioned(g){this.space=g,this.info&&this.view.requestMeasure(this.placeInfoReq)}updateSel(){let g=this.view.state.field(this.stateField),e=g.open;if((e.selected>-1&&e.selected<this.range.from||e.selected>=this.range.to)&&(this.range=nr(e.options.length,e.selected,this.view.state.facet(tr).maxRenderedOptions),this.showOptions(e.options,g.id)),this.updateSelectedOption(e.selected)){this.destroyInfo();let{completion:I}=e.options[e.selected],{info:t}=I;if(!t)return;let C="string"==typeof t?document.createTextNode(t):t(I);if(!C)return;"then"in C?C.then((e=>{e&&this.view.state.field(this.stateField,!1)==g&&this.addInfoPane(e,I)})).catch((g=>Yl(this.view.state,g,"completion info"))):this.addInfoPane(C,I)}}addInfoPane(g,e){this.destroyInfo();let I=this.info=document.createElement("div");if(I.className="cm-tooltip cm-completionInfo",null!=g.nodeType)I.appendChild(g),this.infoDestroy=null;else{let{dom:e,destroy:t}=g;I.appendChild(e),this.infoDestroy=t||null}this.dom.appendChild(I),this.view.requestMeasure(this.placeInfoReq)}updateSelectedOption(g){let e=null;for(let I=this.list.firstChild,t=this.range.from;I;I=I.nextSibling,t++)"LI"==I.nodeName&&I.id?t==g?I.hasAttribute("aria-selected")||(I.setAttribute("aria-selected","true"),e=I):I.hasAttribute("aria-selected")&&I.removeAttribute("aria-selected"):t--;return e&&or(this.list,e),e}measureInfo(){let g=this.dom.querySelector("[aria-selected]");if(!g||!this.info)return null;let e=this.dom.getBoundingClientRect(),I=this.info.getBoundingClientRect(),t=g.getBoundingClientRect(),C=this.space;if(!C){let g=this.dom.ownerDocument.defaultView||window;C={left:0,top:0,right:g.innerWidth,bottom:g.innerHeight}}return t.top>Math.min(C.bottom,e.bottom)-10||t.bottom<Math.max(C.top,e.top)+10?null:this.view.state.facet(tr).positionInfo(this.view,e,t,I,C,this.dom)}placeInfo(g){this.info&&(g?(g.style&&(this.info.style.cssText=g.style),this.info.className="cm-tooltip cm-completionInfo "+(g.class||"")):this.info.style.cssText="top: -1e6px")}createListBox(g,e,I){const t=document.createElement("ul");t.id=e,t.setAttribute("role","listbox"),t.setAttribute("aria-expanded","true"),t.setAttribute("aria-label",this.view.state.phrase("Completions"));let C=null;for(let i=I.from;i<I.to;i++){let{completion:l,match:n}=g[i],{section:A}=l;if(A){let g="string"==typeof A?A:A.name;g!=C&&(i>I.from||0==I.from)&&(C=g,"string"!=typeof A&&A.header?t.appendChild(A.header(A)):t.appendChild(document.createElement("completion-section")).textContent=g)}const d=t.appendChild(document.createElement("li"));d.id=e+"-"+i,d.setAttribute("role","option");let o=this.optionClass(l);o&&(d.className=o);for(let g of this.optionContent){let e=g(l,this.view.state,this.view,n);e&&d.appendChild(e)}}return I.from&&t.classList.add("cm-completionListIncompleteTop"),I.to<g.length&&t.classList.add("cm-completionListIncompleteBottom"),t}destroyInfo(){this.info&&(this.infoDestroy&&this.infoDestroy(),this.info.remove(),this.info=null)}destroy(){this.destroyInfo()}}function dr(g,e){return I=>new Ar(I,g,e)}function or(g,e){let I=g.getBoundingClientRect(),t=e.getBoundingClientRect(),C=I.height/g.offsetHeight;t.top<I.top?g.scrollTop-=(I.top-t.top)/C:t.bottom>I.bottom&&(g.scrollTop+=(t.bottom-I.bottom)/C)}function sr(g){return 100*(g.boost||0)+(g.apply?10:0)+(g.info?5:0)+(g.type?1:0)}function ar(g,e){let I=[],t=null,C=g=>{I.push(g);let{section:e}=g.completion;if(e){t||(t=[]);let g="string"==typeof e?e:e.name;t.some((e=>e.name==g))||t.push("string"==typeof e?{name:g}:e)}},i=e.facet(tr);for(let t of g)if(t.hasResult()){let g=t.result.getMatch;if(!1===t.result.filter)for(let e of t.result.options)C(new Oc(e,t.source,g?g(e):[],1e9-I.length));else{let I,l=e.sliceDoc(t.from,t.to),n=i.filterStrict?new Ir(l):new er(l);for(let e of t.result.options)if(I=n.match(e.label)){let i=e.displayLabel?g?g(e,I.matched):[]:I.matched;C(new Oc(e,t.source,i,I.score+(e.boost||0)))}}}if(t){let g=Object.create(null),e=0,C=(g,e)=>{var I,t;return(null!==(I=g.rank)&&void 0!==I?I:1e9)-(null!==(t=e.rank)&&void 0!==t?t:1e9)||(g.name<e.name?-1:1)};for(let I of t.sort(C))e-=1e5,g[I.name]=e;for(let e of I){let{section:I}=e.completion;I&&(e.score+=g["string"==typeof I?I:I.name])}}let l=[],n=null,A=i.compareCompletions;for(let g of I.sort(((g,e)=>e.score-g.score||A(g.completion,e.completion)))){let e=g.completion;!n||n.label!=e.label||n.detail!=e.detail||null!=n.type&&null!=e.type&&n.type!=e.type||n.apply!=e.apply||n.boost!=e.boost?l.push(g):sr(g.completion)>sr(n)&&(l[l.length-1]=g),n=g.completion}return l}class Vr{constructor(g,e,I,t,C,i){this.options=g,this.attrs=e,this.tooltip=I,this.timestamp=t,this.selected=C,this.disabled=i}setSelected(g,e){return g==this.selected||g>=this.options.length?this:new Vr(this.options,Ur(e,g),this.tooltip,this.timestamp,g,this.disabled)}static build(g,e,I,t,C){let i=ar(g,e);if(!i.length)return t&&g.some((g=>1==g.state))?new Vr(t.options,t.attrs,t.tooltip,t.timestamp,t.selected,!0):null;let l=e.facet(tr).selectOnOpen?0:-1;if(t&&t.selected!=l&&-1!=t.selected){let g=t.options[t.selected].completion;for(let e=0;e<i.length;e++)if(i[e].completion==g){l=e;break}}return new Vr(i,Ur(I,l),{pos:g.reduce(((g,e)=>e.hasResult()?Math.min(g,e.from):g),1e8),create:br,above:C.aboveCursor},t?t.timestamp:Date.now(),l,!1)}map(g){return new Vr(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:g.mapPos(this.tooltip.pos)}),this.timestamp,this.selected,this.disabled)}}class cr{constructor(g,e,I){this.active=g,this.id=e,this.open=I}static start(){return new cr(Zr,"cm-ac-"+Math.floor(2e6*Math.random()).toString(36),null)}update(g){let{state:e}=g,I=e.facet(tr),t=(I.override||e.languageDataAt("autocomplete",fc(e)).map(qc)).map((e=>(this.active.find((g=>g.source==e))||new Fr(e,this.active.some((g=>0!=g.state))?1:0)).update(g,I)));t.length==this.active.length&&t.every(((g,e)=>g==this.active[e]))&&(t=this.active);let C=this.open;C&&g.docChanged&&(C=C.map(g.changes)),g.selection||t.some((e=>e.hasResult()&&g.changes.touchesRange(e.from,e.to)))||!rr(t,this.active)?C=Vr.build(t,e,this.id,C,I):C&&C.disabled&&!t.some((g=>1==g.state))&&(C=null),!C&&t.every((g=>1!=g.state))&&t.some((g=>g.hasResult()))&&(t=t.map((g=>g.hasResult()?new Fr(g.source,0):g)));for(let e of g.effects)e.is(Nr)&&(C=C&&C.setSelected(e.value,this.id));return t==this.active&&C==this.open?this:new cr(t,this.id,C)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:hr}}function rr(g,e){if(g==e)return!0;for(let I=0,t=0;;){for(;I<g.length&&!g[I].hasResult;)I++;for(;t<e.length&&!e[t].hasResult;)t++;let C=I==g.length,i=t==e.length;if(C||i)return C==i;if(g[I++].result!=e[t++].result)return!1}}const hr={"aria-autocomplete":"list"};function Ur(g,e){let I={"aria-autocomplete":"list","aria-haspopup":"listbox","aria-controls":g};return e>-1&&(I["aria-activedescendant"]=g+"-"+e),I}const Zr=[];function Rr(g,e){if(g.isUserEvent("input.complete")){let I=g.annotation(Lc);if(I&&e.activateOnCompletion(I))return"input"}return g.isUserEvent("input.type")?"input":g.isUserEvent("delete.backward")?"delete":null}class Fr{constructor(g,e,I=-1){this.source=g,this.state=e,this.explicitPos=I}hasResult(){return!1}update(g,e){let I=Rr(g,e),t=this;I?t=t.handleUserEvent(g,I,e):g.docChanged?t=t.handleChange(g):g.selection&&0!=t.state&&(t=new Fr(t.source,0));for(let e of g.effects)if(e.is($c))t=new Fr(t.source,1,e.value?fc(g.state):-1);else if(e.is(gr))t=new Fr(t.source,0);else if(e.is(Wr))for(let g of e.value)g.source==t.source&&(t=g);return t}handleUserEvent(g,e,I){return"delete"!=e&&I.activateOnTyping?new Fr(this.source,1):this.map(g.changes)}handleChange(g){return g.changes.touchesRange(fc(g.startState))?new Fr(this.source,0):this.map(g.changes)}map(g){return g.empty||this.explicitPos<0?this:new Fr(this.source,this.state,g.mapPos(this.explicitPos))}}class mr extends Fr{constructor(g,e,I,t,C){super(g,2,e),this.result=I,this.from=t,this.to=C}hasResult(){return!0}handleUserEvent(g,e,I){var t;let C=this.result;C.map&&!g.changes.empty&&(C=C.map(C,g.changes));let i=g.changes.mapPos(this.from),l=g.changes.mapPos(this.to,1),n=fc(g.state);if((this.explicitPos<0?n<=i:n<this.from)||n>l||!C||"delete"==e&&fc(g.startState)==this.from)return new Fr(this.source,"input"==e&&I.activateOnTyping?1:0);let A=this.explicitPos<0?-1:g.changes.mapPos(this.explicitPos);return Br(C.validFor,g.state,i,l)?new mr(this.source,A,C,i,l):C.update&&(C=C.update(C,i,l,new Kc(g.state,n,A>=0)))?new mr(this.source,A,C,C.from,null!==(t=C.to)&&void 0!==t?t:fc(g.state)):new Fr(this.source,1,A)}handleChange(g){return g.changes.touchesRange(this.from,this.to)?new Fr(this.source,0):this.map(g.changes)}map(g){return g.empty?this:(this.result.map?this.result.map(this.result,g):this.result)?new mr(this.source,this.explicitPos<0?-1:g.mapPos(this.explicitPos),this.result,g.mapPos(this.from),g.mapPos(this.to,1)):new Fr(this.source,0)}}function Br(g,e,I,t){if(!g)return!1;let C=e.sliceDoc(I,t);return"function"==typeof g?g(C,I,t,e):jc(g,!0).test(C)}const Wr=yt.define({map:(g,e)=>g.map((g=>g.map(e)))}),Nr=yt.define(),pr=rt.define({create:()=>cr.start(),update:(g,e)=>g.update(e),provide:g=>[Eo.from(g,(g=>g.tooltip)),Vd.contentAttributes.from(g,(g=>g.attrs))]});function Sr(g,e){const I=e.completion.apply||e.completion.label;let t=g.state.field(pr).active.find((g=>g.source==e.source));return t instanceof mr&&("string"==typeof I?g.dispatch(Object.assign(Object.assign({},Pc(g.state,I,t.from,t.to)),{annotations:Lc.of(e.completion)})):I(g,e.completion,t.from,t.to),!0)}const br=dr(pr,Sr);function ur(g,e="option"){return I=>{let t=I.state.field(pr,!1);if(!t||!t.open||t.open.disabled||Date.now()-t.open.timestamp<I.state.facet(tr).interactionDelay)return!1;let C,i=1;"page"==e&&(C=vo(I,t.open.tooltip))&&(i=Math.max(2,Math.floor(C.dom.offsetHeight/C.dom.querySelector("li").offsetHeight)-1));let{length:l}=t.open.options,n=t.open.selected>-1?t.open.selected+i*(g?1:-1):g?0:l-1;return n<0?n="page"==e?0:l-1:n>=l&&(n="page"==e?l-1:0),I.dispatch({effects:Nr.of(n)}),!0}}const Tr=g=>{let e=g.state.field(pr,!1);return!(g.state.readOnly||!e||!e.open||e.open.selected<0||e.open.disabled||Date.now()-e.open.timestamp<g.state.facet(tr).interactionDelay)&&Sr(g,e.open.options[e.open.selected])},Gr=g=>!!g.state.field(pr,!1)&&(g.dispatch({effects:$c.of(!0)}),!0),kr=g=>{let e=g.state.field(pr,!1);return!(!e||!e.active.some((g=>0!=g.state))||(g.dispatch({effects:gr.of(null)}),0))};class Qr{constructor(g,e){this.active=g,this.context=e,this.time=Date.now(),this.updates=[],this.done=void 0}}const Mr=50,Yr=1e3,Er=Hl.fromClass(class{constructor(g){this.view=g,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.pendingStart=!1,this.composing=0;for(let e of g.state.field(pr).active)1==e.state&&this.startQuery(e)}update(g){let e=g.state.field(pr),I=g.state.facet(tr);if(!g.selectionSet&&!g.docChanged&&g.startState.field(pr)==e)return;let t=g.transactions.some((g=>(g.selection||g.docChanged)&&!Rr(g,I)));for(let e=0;e<this.running.length;e++){let I=this.running[e];if(t||I.updates.length+g.transactions.length>Mr&&Date.now()-I.time>Yr){for(let g of I.context.abortListeners)try{g()}catch(g){Yl(this.view.state,g)}I.context.abortListeners=null,this.running.splice(e--,1)}else I.updates.push(...g.transactions)}this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),g.transactions.some((g=>g.effects.some((g=>g.is($c)))))&&(this.pendingStart=!0);let C=this.pendingStart?50:I.activateOnTypingDelay;if(this.debounceUpdate=e.active.some((g=>1==g.state&&!this.running.some((e=>e.active.source==g.source))))?setTimeout((()=>this.startUpdate()),C):-1,0!=this.composing)for(let e of g.transactions)"input"==Rr(e,I)?this.composing=2:2==this.composing&&e.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1,this.pendingStart=!1;let{state:g}=this.view,e=g.field(pr);for(let g of e.active)1==g.state&&!this.running.some((e=>e.active.source==g.source))&&this.startQuery(g)}startQuery(g){let{state:e}=this.view,I=fc(e),t=new Kc(e,I,g.explicitPos==I),C=new Qr(g,t);this.running.push(C),Promise.resolve(g.source(t)).then((g=>{C.context.aborted||(C.done=g||null,this.scheduleAccept())}),(g=>{this.view.dispatch({effects:gr.of(null)}),Yl(this.view.state,g)}))}scheduleAccept(){this.running.every((g=>void 0!==g.done))?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout((()=>this.accept()),this.view.state.facet(tr).updateSyncTime))}accept(){var g;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let e=[],I=this.view.state.facet(tr);for(let t=0;t<this.running.length;t++){let C=this.running[t];if(void 0===C.done)continue;if(this.running.splice(t--,1),C.done){let t=new mr(C.active.source,C.active.explicitPos,C.done,C.done.from,null!==(g=C.done.to)&&void 0!==g?g:fc(C.updates.length?C.updates[0].startState:this.view.state));for(let g of C.updates)t=t.update(g,I);if(t.hasResult()){e.push(t);continue}}let i=this.view.state.field(pr).active.find((g=>g.source==C.active.source));if(i&&1==i.state)if(null==C.done){let g=new Fr(C.active.source,0);for(let e of C.updates)g=g.update(e,I);1!=g.state&&e.push(g)}else this.startQuery(i)}e.length&&this.view.dispatch({effects:Wr.of(e)})}},{eventHandlers:{blur(g){let e=this.view.state.field(pr,!1);if(e&&e.tooltip&&this.view.state.facet(tr).closeOnBlur){let I=e.open&&vo(this.view,e.open.tooltip);(!I||!I.dom.contains(g.relatedTarget))&&setTimeout((()=>this.view.dispatch({effects:gr.of(null)})),10)}},compositionstart(){this.composing=1},compositionend(){3==this.composing&&setTimeout((()=>this.view.dispatch({effects:$c.of(!1)})),20),this.composing=0}}}),yr="object"==typeof navigator&&/Win/.test(navigator.platform),Jr=Zt.highest(Vd.domEventHandlers({keydown(g,e){let I=e.state.field(pr,!1);if(!I||!I.open||I.open.disabled||I.open.selected<0||g.key.length>1||g.ctrlKey&&(!yr||!g.altKey)||g.metaKey)return!1;let t=I.open.options[I.open.selected],C=I.active.find((g=>g.source==t.source)),i=t.completion.commitCharacters||C.result.commitCharacters;return i&&i.indexOf(g.key)>-1&&Sr(e,t),!1}})),Hr=Vd.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",height:"100%",listStyle:"none",margin:0,padding:0,"& > li, & > completion-section":{padding:"1px 3px",lineHeight:1.2},"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer"},"& > completion-section":{display:"list-item",borderBottom:"1px solid silver",paddingLeft:"0.5em",opacity:.7}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#777"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]":{background:"#444"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"···"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:"400px",boxSizing:"border-box"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},".cm-completionInfo.cm-completionInfo-left-narrow":{right:"30px"},".cm-completionInfo.cm-completionInfo-right-narrow":{left:"30px"},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",display:"inline-block",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6",boxSizing:"content-box"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'ƒ'"}},".cm-completionIcon-class":{"&:after":{content:"'○'"}},".cm-completionIcon-interface":{"&:after":{content:"'◌'"}},".cm-completionIcon-variable":{"&:after":{content:"'𝑥'"}},".cm-completionIcon-constant":{"&:after":{content:"'𝐶'"}},".cm-completionIcon-type":{"&:after":{content:"'𝑡'"}},".cm-completionIcon-enum":{"&:after":{content:"'∪'"}},".cm-completionIcon-property":{"&:after":{content:"'□'"}},".cm-completionIcon-keyword":{"&:after":{content:"'🔑︎'"}},".cm-completionIcon-namespace":{"&:after":{content:"'▢'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}});class wr{constructor(g,e,I,t){this.field=g,this.line=e,this.from=I,this.to=t}}class Xr{constructor(g,e,I){this.field=g,this.from=e,this.to=I}map(g){let e=g.mapPos(this.from,-1,LI.TrackDel),I=g.mapPos(this.to,1,LI.TrackDel);return null==e||null==I?null:new Xr(this.field,e,I)}}class Kr{constructor(g,e){this.lines=g,this.fieldPositions=e}instantiate(g,e){let I=[],t=[e],C=g.doc.lineAt(e),i=/^\s*/.exec(C.text)[0];for(let C of this.lines){if(I.length){let I=i,l=/^\t*/.exec(C)[0].length;for(let e=0;e<l;e++)I+=g.facet($a);t.push(e+I.length-l),C=I+C.slice(l)}I.push(C),e+=C.length+1}return{text:I,ranges:this.fieldPositions.map((g=>new Xr(g.field,t[g.line]+g.from,t[g.line]+g.to)))}}static parse(g){let e,I=[],t=[],C=[];for(let i of g.split(/\r\n?|\n/)){for(;e=/[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(i);){let g=e[1]?+e[1]:null,l=e[2]||e[3]||"",n=-1;for(let e=0;e<I.length;e++)(null!=g?I[e].seq==g:l&&I[e].name==l)&&(n=e);if(n<0){let e=0;for(;e<I.length&&(null==g||null!=I[e].seq&&I[e].seq<g);)e++;I.splice(e,0,{seq:g,name:l}),n=e;for(let g of C)g.field>=n&&g.field++}C.push(new wr(n,t.length,e.index,e.index+l.length)),i=i.slice(0,e.index)+l+i.slice(e.index+e[0].length)}for(let g;g=/\\([{}])/.exec(i);){i=i.slice(0,g.index)+g[1]+i.slice(g.index+g[0].length);for(let e of C)e.line==t.length&&e.from>g.index&&(e.from--,e.to--)}t.push(i)}return new Kr(t,C)}}let zr=Di.widget({widget:new class extends Ki{toDOM(){let g=document.createElement("span");return g.className="cm-snippetFieldPosition",g}ignoreEvent(){return!1}}}),Dr=Di.mark({class:"cm-snippetField"});class vr{constructor(g,e){this.ranges=g,this.active=e,this.deco=Di.set(g.map((g=>(g.from==g.to?zr:Dr).range(g.from,g.to))))}map(g){let e=[];for(let I of this.ranges){let t=I.map(g);if(!t)return null;e.push(t)}return new vr(e,this.active)}selectionInsideField(g){return g.ranges.every((g=>this.ranges.some((e=>e.field==this.active&&e.from<=g.from&&e.to>=g.to))))}}const xr=yt.define({map:(g,e)=>g&&g.map(e)}),Or=yt.define(),fr=rt.define({create:()=>null,update(g,e){for(let I of e.effects){if(I.is(xr))return I.value;if(I.is(Or)&&g)return new vr(g.ranges,I.value)}return g&&e.docChanged&&(g=g.map(e.changes)),g&&e.selection&&!g.selectionInsideField(e.selection)&&(g=null),g},provide:g=>Vd.decorations.from(g,(g=>g?g.deco:Di.none))});function jr(g,e){return it.create(g.filter((g=>g.field==e)).map((g=>it.range(g.from,g.to))))}function Lr(g){let e=Kr.parse(g);return(g,I,t,C)=>{let{text:i,ranges:l}=e.instantiate(g.state,t),n={changes:{from:t,to:C,insert:pI.of(i)},scrollIntoView:!0,annotations:I?[Lc.of(I),Jt.userEvent.of("input.complete")]:void 0};if(l.length&&(n.selection=jr(l,0)),l.some((g=>g.field>0))){let e=new vr(l,0),I=n.effects=[xr.of(e)];void 0===g.state.field(fr,!1)&&I.push(yt.appendConfig.of([fr,Ih,Ch,Hr]))}g.dispatch(g.state.update(n))}}function Pr(g){return({state:e,dispatch:I})=>{let t=e.field(fr,!1);if(!t||g<0&&0==t.active)return!1;let C=t.active+g,i=g>0&&!t.ranges.some((e=>e.field==C+g));return I(e.update({selection:jr(t.ranges,C),effects:xr.of(i?null:new vr(t.ranges,C)),scrollIntoView:!0})),!0}}const _r=({state:g,dispatch:e})=>!!g.field(fr,!1)&&(e(g.update({effects:xr.of(null)})),!0),qr=Pr(1),$r=Pr(-1),gh=[{key:"Tab",run:qr,shift:$r},{key:"Escape",run:_r}],eh=At.define({combine:g=>g.length?g[0]:gh}),Ih=Zt.highest(Bd.compute([eh],(g=>g.facet(eh))));function th(g,e){return Object.assign(Object.assign({},e),{apply:Lr(g)})}const Ch=Vd.domEventHandlers({mousedown(g,e){let I,t=e.state.field(fr,!1);if(!t||null==(I=e.posAtCoords({x:g.clientX,y:g.clientY})))return!1;let C=t.ranges.find((g=>g.from<=I&&g.to>=I));return!(!C||C.field==t.active||(e.dispatch({selection:jr(t.ranges,C.field),effects:xr.of(t.ranges.some((g=>g.field>C.field))?new vr(t.ranges,C.field):null),scrollIntoView:!0}),0))}}),ih={brackets:["(","[","{","'",'"'],before:")]}:;>",stringPrefixes:[]},lh=yt.define({map:(g,e)=>e.mapPos(g,-1,LI.TrackAfter)??void 0}),nh=new class extends $t{};nh.startSide=1,nh.endSide=-1;const Ah=rt.define({create:()=>tC.empty,update(g,e){if(g=g.map(e.changes),e.selection){let I=e.state.doc.lineAt(e.selection.main.head);g=g.update({filter:g=>g>=I.from&&g<=I.to})}for(let I of e.effects)I.is(lh)&&(g=g.update({add:[nh.range(I.value,I.value+1)]}));return g}});function dh(){return[ch,Ah]}const oh="()[]{}<>";function sh(g){for(let e=0;e<oh.length;e+=2)if(oh.charCodeAt(e)==g)return oh.charAt(e+1);return OI(g<128?g:g+1)}function ah(g,e){return g.languageDataAt("closeBrackets",e)[0]||ih}const Vh="object"==typeof navigator&&/Android\b/.test(navigator.userAgent),ch=Vd.inputHandler.of(((g,e,I,t)=>{if((Vh?g.composing:g.compositionStarted)||g.state.readOnly)return!1;let C=g.state.selection.main;if(t.length>2||2==t.length&&1==fI(xI(t,0))||e!=C.from||I!=C.to)return!1;let i=Uh(g.state,t);return!!i&&(g.dispatch(i),!0)})),rh=({state:g,dispatch:e})=>{if(g.readOnly)return!1;let I=ah(g,g.selection.main.head).brackets||ih.brackets,t=null,C=g.changeByRange((e=>{if(e.empty){let t=Fh(g.doc,e.head);for(let C of I)if(C==t&&Rh(g.doc,e.head)==sh(xI(C,0)))return{changes:{from:e.head-C.length,to:e.head+C.length},range:it.cursor(e.head-C.length)}}return{range:t=e}}));return t||e(g.update(C,{scrollIntoView:!0,userEvent:"delete.backward"})),!t},hh=[{key:"Backspace",run:rh}];function Uh(g,e){let I=ah(g,g.selection.main.head),t=I.brackets||ih.brackets;for(let C of t){let i=sh(xI(C,0));if(e==C)return i==C?Wh(g,C,t.indexOf(C+C+C)>-1,I):mh(g,C,i,I.before||ih.before);if(e==i&&Zh(g,g.selection.main.from))return Bh(g,C,i)}return null}function Zh(g,e){let I=!1;return g.field(Ah).between(0,g.doc.length,(g=>{g==e&&(I=!0)})),I}function Rh(g,e){let I=g.sliceString(e,e+2);return I.slice(0,fI(xI(I,0)))}function Fh(g,e){let I=g.sliceString(e-2,e);return fI(xI(I,0))==I.length?I:I.slice(1)}function mh(g,e,I,t){let C=null,i=g.changeByRange((i=>{if(!i.empty)return{changes:[{insert:e,from:i.from},{insert:I,from:i.to}],effects:lh.of(i.to+e.length),range:it.range(i.anchor+e.length,i.head+e.length)};let l=Rh(g.doc,i.head);return!l||/\s/.test(l)||t.indexOf(l)>-1?{changes:{insert:e+I,from:i.head},effects:lh.of(i.head+e.length),range:it.cursor(i.head+e.length)}:{range:C=i}}));return C?null:g.update(i,{scrollIntoView:!0,userEvent:"input.type"})}function Bh(g,e,I){let t=null,C=g.changeByRange((e=>e.empty&&Rh(g.doc,e.head)==I?{changes:{from:e.head,to:e.head+I.length,insert:I},range:it.cursor(e.head+I.length)}:t={range:e}));return t?null:g.update(C,{scrollIntoView:!0,userEvent:"input.type"})}function Wh(g,e,I,t){let C=t.stringPrefixes||ih.stringPrefixes,i=null,l=g.changeByRange((t=>{if(!t.empty)return{changes:[{insert:e,from:t.from},{insert:e,from:t.to}],effects:lh.of(t.to+e.length),range:it.range(t.anchor+e.length,t.head+e.length)};let l,n=t.head,A=Rh(g.doc,n);if(A==e){if(Nh(g,n))return{changes:{insert:e+e,from:n},effects:lh.of(n+e.length),range:it.cursor(n+e.length)};if(Zh(g,n)){let t=I&&g.sliceDoc(n,n+3*e.length)==e+e+e?e+e+e:e;return{changes:{from:n,to:n+t.length,insert:t},range:it.cursor(n+t.length)}}}else{if(I&&g.sliceDoc(n-2*e.length,n)==e+e&&(l=Sh(g,n-2*e.length,C))>-1&&Nh(g,l))return{changes:{insert:e+e+e+e,from:n},effects:lh.of(n+e.length),range:it.cursor(n+e.length)};if(g.charCategorizer(n)(A)!=Ot.Word&&Sh(g,n,C)>-1&&!ph(g,n,e,C))return{changes:{insert:e+e,from:n},effects:lh.of(n+e.length),range:it.cursor(n+e.length)}}return{range:i=t}}));return i?null:g.update(l,{scrollIntoView:!0,userEvent:"input.type"})}function Nh(g,e){let I=Xa(g).resolveInner(e+1);return I.parent&&I.from==e}function ph(g,e,I,t){let C=Xa(g).resolveInner(e,-1),i=t.reduce(((g,e)=>Math.max(g,e.length)),0);for(let l=0;l<5;l++){let l=g.sliceDoc(C.from,Math.min(C.to,C.from+I.length+i)),n=l.indexOf(I);if(!n||n>-1&&t.indexOf(l.slice(0,n))>-1){let e=C.firstChild;for(;e&&e.from==C.from&&e.to-e.from>I.length+n;){if(g.sliceDoc(e.to-I.length,e.to)==I)return!1;e=e.firstChild}return!0}let A=C.to==e&&C.parent;if(!A)break;C=A}return!1}function Sh(g,e,I){let t=g.charCategorizer(e);if(t(g.sliceDoc(e-1,e))!=Ot.Word)return e;for(let C of I){let I=e-C.length;if(g.sliceDoc(I,e)==C&&t(g.sliceDoc(I-1,I))!=Ot.Word)return I}return-1}function bh(g={}){return[Jr,pr,tr.of(g),Er,Th,Hr]}const uh=[{key:"Ctrl-Space",run:Gr},{key:"Escape",run:kr},{key:"ArrowDown",run:ur(!0)},{key:"ArrowUp",run:ur(!1)},{key:"PageDown",run:ur(!0,"page")},{key:"PageUp",run:ur(!1,"page")},{key:"Enter",run:Tr}],Th=Zt.highest(Bd.computeN([tr],(g=>g.facet(tr).defaultKeymap?[uh]:[])));function Gh(){var g=arguments[0];"string"==typeof g&&(g=document.createElement(g));var e=1,I=arguments[1];if(I&&"object"==typeof I&&null==I.nodeType&&!Array.isArray(I)){for(var t in I)if(Object.prototype.hasOwnProperty.call(I,t)){var C=I[t];"string"==typeof C?g.setAttribute(t,C):null!=C&&(g[t]=C)}e++}for(;e<arguments.length;e++)kh(g,arguments[e]);return g}function kh(g,e){if("string"==typeof e)g.appendChild(document.createTextNode(e));else if(null!=e)if(null!=e.nodeType)g.appendChild(e);else{if(!Array.isArray(e))throw new RangeError("Unsupported child node: "+e);for(var I=0;I<e.length;I++)kh(g,e[I])}}class Qh{constructor(g,e,I){this.from=g,this.to=e,this.diagnostic=I}}class Mh{constructor(g,e,I){this.diagnostics=g,this.panel=e,this.selected=I}static init(g,e,I){let t=g,C=I.facet(Ph).markerFilter;C&&(t=C(t,I));let i=Di.set(t.map((g=>g.from==g.to||g.from==g.to-1&&I.doc.lineAt(g.from).to==g.from?Di.widget({widget:new gU(g),diagnostic:g}).range(g.from):Di.mark({attributes:{class:"cm-lintRange cm-lintRange-"+g.severity+(g.markClass?" "+g.markClass:"")},diagnostic:g,inclusive:!0}).range(g.from,g.to))),!0);return new Mh(i,e,Yh(i))}}function Yh(g,e=null,I=0){let t=null;return g.between(I,1e9,((g,I,{spec:C})=>{if(!e||C.diagnostic==e)return t=new Qh(g,I,C.diagnostic),!1})),t}function Eh(g,e){let I=e.pos,t=e.end||I,C=g.state.facet(Ph).hideOn(g,I,t);if(null!=C)return C;let i=g.startState.doc.lineAt(e.pos);return!(!g.effects.some((g=>g.is(Hh)))&&!g.changes.touchesRange(i.from,Math.max(i.to,t)))}function yh(g,e){return g.field(Kh,!1)?e:e.concat(yt.appendConfig.of(lU))}function Jh(g,e){return{effects:yh(g,[Hh.of(e)])}}const Hh=yt.define(),wh=yt.define(),Xh=yt.define(),Kh=rt.define({create:()=>new Mh(Di.none,null,null),update(g,e){if(e.docChanged&&g.diagnostics.size){let I=g.diagnostics.map(e.changes),t=null,C=g.panel;if(g.selected){let C=e.changes.mapPos(g.selected.from,1);t=Yh(I,g.selected.diagnostic,C)||Yh(I,null,C)}!I.size&&C&&e.state.facet(Ph).autoPanel&&(C=null),g=new Mh(I,C,t)}for(let I of e.effects)if(I.is(Hh)){let t=e.state.facet(Ph).autoPanel?I.value.length?IU.open:null:g.panel;g=Mh.init(I.value,t,e.state)}else I.is(wh)?g=new Mh(g.diagnostics,I.value?IU.open:null,g.selected):I.is(Xh)&&(g=new Mh(g.diagnostics,g.panel,I.value));return g},provide:g=>[_o.from(g,(g=>g.panel)),Vd.decorations.from(g,(g=>g.diagnostics))]}),zh=Di.mark({class:"cm-lintRange cm-lintRange-active",inclusive:!0});function Dh(g,e,I){let{diagnostics:t}=g.state.field(Kh),C=[],i=2e8,l=0;t.between(e-(I<0?1:0),e+(I>0?1:0),((g,t,{spec:n})=>{e>=g&&e<=t&&(g==t||(e>g||I>0)&&(e<t||I<0))&&(C.push(n.diagnostic),i=Math.min(g,i),l=Math.max(t,l))}));let n=g.state.facet(Ph).tooltipFilter;return n&&(C=n(C,g.state)),C.length?{pos:i,end:l,above:g.state.doc.lineAt(i).to<l,create:()=>({dom:vh(g,C)})}:null}function vh(g,e){return Gh("ul",{class:"cm-tooltip-lint"},e.map((e=>$h(g,e,!1))))}const xh=g=>{let e=g.state.field(Kh,!1);(!e||!e.panel)&&g.dispatch({effects:yh(g.state,[wh.of(!0)])});let I=fo(g,IU.open);return I&&I.dom.querySelector(".cm-panel-lint ul").focus(),!0},Oh=g=>{let e=g.state.field(Kh,!1);return!(!e||!e.panel||(g.dispatch({effects:wh.of(!1)}),0))},fh=g=>{let e=g.state.field(Kh,!1);if(!e)return!1;let I=g.state.selection.main,t=e.diagnostics.iter(I.to+1);return!(!t.value&&(t=e.diagnostics.iter(0),!t.value||t.from==I.from&&t.to==I.to)||(g.dispatch({selection:{anchor:t.from,head:t.to},scrollIntoView:!0}),0))},jh=[{key:"Mod-Shift-m",run:xh,preventDefault:!0},{key:"F8",run:fh}],Lh=Hl.fromClass(class{constructor(g){this.view=g,this.timeout=-1,this.set=!0;let{delay:e}=g.state.facet(Ph);this.lintTime=Date.now()+e,this.run=this.run.bind(this),this.timeout=setTimeout(this.run,e)}run(){clearTimeout(this.timeout);let g=Date.now();if(g<this.lintTime-10)this.timeout=setTimeout(this.run,this.lintTime-g);else{this.set=!1;let{state:g}=this.view,{sources:e}=g.facet(Ph);e.length&&Promise.all(e.map((g=>Promise.resolve(g(this.view))))).then((e=>{let I=e.reduce(((g,e)=>g.concat(e)));this.view.state.doc==g.doc&&this.view.dispatch(Jh(this.view.state,I))}),(g=>{Yl(this.view.state,g)}))}}update(g){let e=g.state.facet(Ph);(g.docChanged||e!=g.startState.facet(Ph)||e.needsRefresh&&e.needsRefresh(g))&&(this.lintTime=Date.now()+e.delay,this.set||(this.set=!0,this.timeout=setTimeout(this.run,e.delay)))}force(){this.set&&(this.lintTime=Date.now(),this.run())}destroy(){clearTimeout(this.timeout)}}),Ph=At.define({combine:g=>Object.assign({sources:g.map((g=>g.source)).filter((g=>null!=g))},qt(g.map((g=>g.config)),{delay:750,markerFilter:null,tooltipFilter:null,needsRefresh:null,hideOn:()=>null},{needsRefresh:(g,e)=>g?e?I=>g(I)||e(I):g:e}))});function _h(g,e={}){return[Ph.of({source:g,config:e}),Lh,lU]}function qh(g){let e=[];if(g)g:for(let{name:I}of g){for(let g=0;g<I.length;g++){let t=I[g];if(/[a-zA-Z]/.test(t)&&!e.some((g=>g.toLowerCase()==t.toLowerCase()))){e.push(t);continue g}}e.push("")}return e}function $h(g,e,I){var t;let C=I?qh(e.actions):[];return Gh("li",{class:"cm-diagnostic cm-diagnostic-"+e.severity},Gh("span",{class:"cm-diagnosticText"},e.renderMessage?e.renderMessage(g):e.message),null===(t=e.actions)||void 0===t?void 0:t.map(((I,t)=>{let i=!1,l=t=>{if(t.preventDefault(),i)return;i=!0;let C=Yh(g.state.field(Kh).diagnostics,e);C&&I.apply(g,C.from,C.to)},{name:n}=I,A=C[t]?n.indexOf(C[t]):-1,d=A<0?n:[n.slice(0,A),Gh("u",n.slice(A,A+1)),n.slice(A+1)];return Gh("button",{type:"button",class:"cm-diagnosticAction",onclick:l,onmousedown:l,"aria-label":` Action: ${n}${A<0?"":` (access key "${C[t]})"`}.`},d)})),e.source&&Gh("div",{class:"cm-diagnosticSource"},e.source))}class gU extends Ki{constructor(g){super(),this.diagnostic=g}eq(g){return g.diagnostic==this.diagnostic}toDOM(){return Gh("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class eU{constructor(g,e){this.diagnostic=e,this.id="item_"+Math.floor(4294967295*Math.random()).toString(16),this.dom=$h(g,e,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class IU{constructor(g){this.view=g,this.items=[],this.list=Gh("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:e=>{if(27==e.keyCode)Oh(this.view),this.view.focus();else if(38==e.keyCode||33==e.keyCode)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(40==e.keyCode||34==e.keyCode)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(36==e.keyCode)this.moveSelection(0);else if(35==e.keyCode)this.moveSelection(this.items.length-1);else if(13==e.keyCode)this.view.focus();else{if(!(e.keyCode>=65&&e.keyCode<=90&&this.selectedIndex>=0))return;{let{diagnostic:I}=this.items[this.selectedIndex],t=qh(I.actions);for(let C=0;C<t.length;C++)if(t[C].toUpperCase().charCodeAt(0)==e.keyCode){let e=Yh(this.view.state.field(Kh).diagnostics,I);e&&I.actions[C].apply(g,e.from,e.to)}}}e.preventDefault()},onclick:g=>{for(let e=0;e<this.items.length;e++)this.items[e].dom.contains(g.target)&&this.moveSelection(e)}}),this.dom=Gh("div",{class:"cm-panel-lint"},this.list,Gh("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>Oh(this.view)},"×")),this.update()}get selectedIndex(){let g=this.view.state.field(Kh).selected;if(!g)return-1;for(let e=0;e<this.items.length;e++)if(this.items[e].diagnostic==g.diagnostic)return e;return-1}update(){let{diagnostics:g,selected:e}=this.view.state.field(Kh),I=0,t=!1,C=null;for(g.between(0,this.view.state.doc.length,((g,i,{spec:l})=>{let n,A=-1;for(let g=I;g<this.items.length;g++)if(this.items[g].diagnostic==l.diagnostic){A=g;break}A<0?(n=new eU(this.view,l.diagnostic),this.items.splice(I,0,n),t=!0):(n=this.items[A],A>I&&(this.items.splice(I,A-I),t=!0)),e&&n.diagnostic==e.diagnostic?n.dom.hasAttribute("aria-selected")||(n.dom.setAttribute("aria-selected","true"),C=n):n.dom.hasAttribute("aria-selected")&&n.dom.removeAttribute("aria-selected"),I++}));I<this.items.length&&!(1==this.items.length&&this.items[0].diagnostic.from<0);)t=!0,this.items.pop();0==this.items.length&&(this.items.push(new eU(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),t=!0),C?(this.list.setAttribute("aria-activedescendant",C.id),this.view.requestMeasure({key:this,read:()=>({sel:C.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:g,panel:e})=>{let I=e.height/this.list.offsetHeight;g.top<e.top?this.list.scrollTop-=(e.top-g.top)/I:g.bottom>e.bottom&&(this.list.scrollTop+=(g.bottom-e.bottom)/I)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),t&&this.sync()}sync(){let g=this.list.firstChild;function e(){let e=g;g=e.nextSibling,e.remove()}for(let I of this.items)if(I.dom.parentNode==this.list){for(;g!=I.dom;)e();g=I.dom.nextSibling}else this.list.insertBefore(I.dom,g);for(;g;)e()}moveSelection(g){if(this.selectedIndex<0)return;let e=Yh(this.view.state.field(Kh).diagnostics,this.items[g].diagnostic);e&&this.view.dispatch({selection:{anchor:e.from,head:e.to},scrollIntoView:!0,effects:Xh.of(e)})}static open(g){return new IU(g)}}function tU(g,e='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(g)}</svg>')`}function CU(g){return tU(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${g}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const iU=Vd.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnostic-hint":{borderLeft:"5px solid #66d"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px",cursor:"pointer"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:CU("#d11")},".cm-lintRange-warning":{backgroundImage:CU("orange")},".cm-lintRange-info":{backgroundImage:CU("#999")},".cm-lintRange-hint":{backgroundImage:CU("#66d")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-lintPoint-hint":{"&:after":{borderBottomColor:"#66d"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}}),lU=[Kh,Vd.decorations.compute([Kh],(g=>{let{selected:e,panel:I}=g.field(Kh);return e&&I&&e.from!=e.to?Di.set([zh.range(e.from,e.to)]):Di.none})),Do(Dh,{hideOn:Eh}),iU];var nU={},AU={},dU={},oU={},sU={},aU={};function VU(g){return!0===g||!1===g}function cU(g){return"string"==typeof g||g instanceof String}function rU(g){return"number"==typeof g||g instanceof Number}function hU(g){return g instanceof Error}function UU(g){return"function"==typeof g}function ZU(g){return Array.isArray(g)}function RU(g){return ZU(g)&&g.every((g=>cU(g)))}Object.defineProperty(aU,"__esModule",{value:!0}),aU.stringArray=aU.array=aU.func=aU.error=aU.number=aU.string=aU.boolean=void 0,aU.boolean=VU,aU.string=cU,aU.number=rU,aU.error=hU,aU.func=UU,aU.array=ZU,aU.stringArray=RU,Object.defineProperty(sU,"__esModule",{value:!0}),sU.Message=sU.NotificationType9=sU.NotificationType8=sU.NotificationType7=sU.NotificationType6=sU.NotificationType5=sU.NotificationType4=sU.NotificationType3=sU.NotificationType2=sU.NotificationType1=sU.NotificationType0=sU.NotificationType=sU.RequestType9=sU.RequestType8=sU.RequestType7=sU.RequestType6=sU.RequestType5=sU.RequestType4=sU.RequestType3=sU.RequestType2=sU.RequestType1=sU.RequestType=sU.RequestType0=sU.AbstractMessageSignature=sU.ParameterStructures=sU.ResponseError=sU.ErrorCodes=void 0;const FU=aU;var mU,BU;!function(g){g.ParseError=-32700,g.InvalidRequest=-32600,g.MethodNotFound=-32601,g.InvalidParams=-32602,g.InternalError=-32603,g.jsonrpcReservedErrorRangeStart=-32099,g.serverErrorStart=-32099,g.MessageWriteError=-32099,g.MessageReadError=-32098,g.PendingResponseRejected=-32097,g.ConnectionInactive=-32096,g.ServerNotInitialized=-32002,g.UnknownErrorCode=-32001,g.jsonrpcReservedErrorRangeEnd=-32e3,g.serverErrorEnd=-32e3}(mU||(sU.ErrorCodes=mU={}));class WU extends Error{constructor(g,e,I){super(e),this.code=FU.number(g)?g:mU.UnknownErrorCode,this.data=I,Object.setPrototypeOf(this,WU.prototype)}toJson(){const g={code:this.code,message:this.message};return void 0!==this.data&&(g.data=this.data),g}}sU.ResponseError=WU;class NU{constructor(g){this.kind=g}static is(g){return g===NU.auto||g===NU.byName||g===NU.byPosition}toString(){return this.kind}}sU.ParameterStructures=NU,NU.auto=new NU("auto"),NU.byPosition=new NU("byPosition"),NU.byName=new NU("byName");class pU{constructor(g,e){this.method=g,this.numberOfParams=e}get parameterStructures(){return NU.auto}}sU.AbstractMessageSignature=pU;class SU extends pU{constructor(g){super(g,0)}}sU.RequestType0=SU;class bU extends pU{constructor(g,e=NU.auto){super(g,1),this._parameterStructures=e}get parameterStructures(){return this._parameterStructures}}sU.RequestType=bU;class uU extends pU{constructor(g,e=NU.auto){super(g,1),this._parameterStructures=e}get parameterStructures(){return this._parameterStructures}}sU.RequestType1=uU;class TU extends pU{constructor(g){super(g,2)}}sU.RequestType2=TU;class GU extends pU{constructor(g){super(g,3)}}sU.RequestType3=GU;class kU extends pU{constructor(g){super(g,4)}}sU.RequestType4=kU;class QU extends pU{constructor(g){super(g,5)}}sU.RequestType5=QU;class MU extends pU{constructor(g){super(g,6)}}sU.RequestType6=MU;class YU extends pU{constructor(g){super(g,7)}}sU.RequestType7=YU;class EU extends pU{constructor(g){super(g,8)}}sU.RequestType8=EU;class yU extends pU{constructor(g){super(g,9)}}sU.RequestType9=yU;class JU extends pU{constructor(g,e=NU.auto){super(g,1),this._parameterStructures=e}get parameterStructures(){return this._parameterStructures}}sU.NotificationType=JU;class HU extends pU{constructor(g){super(g,0)}}sU.NotificationType0=HU;class wU extends pU{constructor(g,e=NU.auto){super(g,1),this._parameterStructures=e}get parameterStructures(){return this._parameterStructures}}sU.NotificationType1=wU;class XU extends pU{constructor(g){super(g,2)}}sU.NotificationType2=XU;class KU extends pU{constructor(g){super(g,3)}}sU.NotificationType3=KU;class zU extends pU{constructor(g){super(g,4)}}sU.NotificationType4=zU;class DU extends pU{constructor(g){super(g,5)}}sU.NotificationType5=DU;class vU extends pU{constructor(g){super(g,6)}}sU.NotificationType6=vU;class xU extends pU{constructor(g){super(g,7)}}sU.NotificationType7=xU;class OU extends pU{constructor(g){super(g,8)}}sU.NotificationType8=OU;class fU extends pU{constructor(g){super(g,9)}}sU.NotificationType9=fU,function(g){g.isRequest=function(g){const e=g;return e&&FU.string(e.method)&&(FU.string(e.id)||FU.number(e.id))},g.isNotification=function(g){const e=g;return e&&FU.string(e.method)&&void 0===g.id},g.isResponse=function(g){const e=g;return e&&(void 0!==e.result||!!e.error)&&(FU.string(e.id)||FU.number(e.id)||null===e.id)}}(BU||(sU.Message=BU={}));var jU,LU,PU={};Object.defineProperty(PU,"__esModule",{value:!0}),PU.LRUCache=PU.LinkedMap=PU.Touch=void 0,function(g){g.None=0,g.First=1,g.AsOld=g.First,g.Last=2,g.AsNew=g.Last}(LU||(PU.Touch=LU={}));class _U{constructor(){this[jU]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){var g;return null==(g=this._head)?void 0:g.value}get last(){var g;return null==(g=this._tail)?void 0:g.value}has(g){return this._map.has(g)}get(g,e=LU.None){const I=this._map.get(g);if(I)return e!==LU.None&&this.touch(I,e),I.value}set(g,e,I=LU.None){let t=this._map.get(g);if(t)t.value=e,I!==LU.None&&this.touch(t,I);else{switch(t={key:g,value:e,next:void 0,previous:void 0},I){case LU.None:this.addItemLast(t);break;case LU.First:this.addItemFirst(t);break;case LU.Last:default:this.addItemLast(t)}this._map.set(g,t),this._size++}return this}delete(g){return!!this.remove(g)}remove(g){const e=this._map.get(g);if(e)return this._map.delete(g),this.removeItem(e),this._size--,e.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const g=this._head;return this._map.delete(g.key),this.removeItem(g),this._size--,g.value}forEach(g,e){const I=this._state;let t=this._head;for(;t;){if(e?g.bind(e)(t.value,t.key,this):g(t.value,t.key,this),this._state!==I)throw new Error("LinkedMap got modified during iteration.");t=t.next}}keys(){const g=this._state;let e=this._head;const I={[Symbol.iterator]:()=>I,next:()=>{if(this._state!==g)throw new Error("LinkedMap got modified during iteration.");if(e){const g={value:e.key,done:!1};return e=e.next,g}return{value:void 0,done:!0}}};return I}values(){const g=this._state;let e=this._head;const I={[Symbol.iterator]:()=>I,next:()=>{if(this._state!==g)throw new Error("LinkedMap got modified during iteration.");if(e){const g={value:e.value,done:!1};return e=e.next,g}return{value:void 0,done:!0}}};return I}entries(){const g=this._state;let e=this._head;const I={[Symbol.iterator]:()=>I,next:()=>{if(this._state!==g)throw new Error("LinkedMap got modified during iteration.");if(e){const g={value:[e.key,e.value],done:!1};return e=e.next,g}return{value:void 0,done:!0}}};return I}[(jU=Symbol.toStringTag,Symbol.iterator)](){return this.entries()}trimOld(g){if(g>=this.size)return;if(0===g)return void this.clear();let e=this._head,I=this.size;for(;e&&I>g;)this._map.delete(e.key),e=e.next,I--;this._head=e,this._size=I,e&&(e.previous=void 0),this._state++}addItemFirst(g){if(this._head||this._tail){if(!this._head)throw new Error("Invalid list");g.next=this._head,this._head.previous=g}else this._tail=g;this._head=g,this._state++}addItemLast(g){if(this._head||this._tail){if(!this._tail)throw new Error("Invalid list");g.previous=this._tail,this._tail.next=g}else this._head=g;this._tail=g,this._state++}removeItem(g){if(g===this._head&&g===this._tail)this._head=void 0,this._tail=void 0;else if(g===this._head){if(!g.next)throw new Error("Invalid list");g.next.previous=void 0,this._head=g.next}else if(g===this._tail){if(!g.previous)throw new Error("Invalid list");g.previous.next=void 0,this._tail=g.previous}else{const e=g.next,I=g.previous;if(!e||!I)throw new Error("Invalid list");e.previous=I,I.next=e}g.next=void 0,g.previous=void 0,this._state++}touch(g,e){if(!this._head||!this._tail)throw new Error("Invalid list");if(e===LU.First||e===LU.Last)if(e===LU.First){if(g===this._head)return;const e=g.next,I=g.previous;g===this._tail?(I.next=void 0,this._tail=I):(e.previous=I,I.next=e),g.previous=void 0,g.next=this._head,this._head.previous=g,this._head=g,this._state++}else if(e===LU.Last){if(g===this._tail)return;const e=g.next,I=g.previous;g===this._head?(e.previous=void 0,this._head=e):(e.previous=I,I.next=e),g.next=void 0,g.previous=this._tail,this._tail.next=g,this._tail=g,this._state++}}toJSON(){const g=[];return this.forEach(((e,I)=>{g.push([I,e])})),g}fromJSON(g){this.clear();for(const[e,I]of g)this.set(e,I)}}PU.LinkedMap=_U;class qU extends _U{constructor(g,e=1){super(),this._limit=g,this._ratio=Math.min(Math.max(0,e),1)}get limit(){return this._limit}set limit(g){this._limit=g,this.checkTrim()}get ratio(){return this._ratio}set ratio(g){this._ratio=Math.min(Math.max(0,g),1),this.checkTrim()}get(g,e=LU.AsNew){return super.get(g,e)}peek(g){return super.get(g,LU.None)}set(g,e){return super.set(g,e,LU.Last),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}}PU.LRUCache=qU;var $U,gZ={};Object.defineProperty(gZ,"__esModule",{value:!0}),gZ.Disposable=void 0,($U||(gZ.Disposable=$U={})).create=function(g){return{dispose:g}};var eZ={},IZ={};let tZ;function CZ(){if(void 0===tZ)throw new Error("No runtime abstraction layer installed");return tZ}Object.defineProperty(IZ,"__esModule",{value:!0}),(CZ||(CZ={})).install=function(g){if(void 0===g)throw new Error("No runtime abstraction layer provided");tZ=g},IZ.default=CZ,Object.defineProperty(eZ,"__esModule",{value:!0}),eZ.Emitter=eZ.Event=void 0;const iZ=IZ;var lZ;!function(g){const e={dispose(){}};g.None=function(){return e}}(lZ||(eZ.Event=lZ={}));class nZ{add(g,e=null,I){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(g),this._contexts.push(e),Array.isArray(I)&&I.push({dispose:()=>this.remove(g,e)})}remove(g,e=null){if(!this._callbacks)return;let I=!1;for(let t=0,C=this._callbacks.length;t<C;t++)if(this._callbacks[t]===g){if(this._contexts[t]===e)return this._callbacks.splice(t,1),void this._contexts.splice(t,1);I=!0}if(I)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...g){if(!this._callbacks)return[];const e=[],I=this._callbacks.slice(0),t=this._contexts.slice(0);for(let C=0,i=I.length;C<i;C++)try{e.push(I[C].apply(t[C],g))}catch(g){(0,iZ.default)().console.error(g)}return e}isEmpty(){return!this._callbacks||0===this._callbacks.length}dispose(){this._callbacks=void 0,this._contexts=void 0}}class AZ{constructor(g){this._options=g}get event(){return this._event||(this._event=(g,e,I)=>{this._callbacks||(this._callbacks=new nZ),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(g,e);const t={dispose:()=>{this._callbacks&&(this._callbacks.remove(g,e),t.dispose=AZ._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(I)&&I.push(t),t}),this._event}fire(g){this._callbacks&&this._callbacks.invoke.call(this._callbacks,g)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}}eZ.Emitter=AZ,AZ._noop=function(){};var dZ={};Object.defineProperty(dZ,"__esModule",{value:!0}),dZ.CancellationTokenSource=dZ.CancellationToken=void 0;const oZ=IZ,sZ=aU,aZ=eZ;var VZ;!function(g){g.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:aZ.Event.None}),g.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:aZ.Event.None}),g.is=function(e){const I=e;return I&&(I===g.None||I===g.Cancelled||sZ.boolean(I.isCancellationRequested)&&!!I.onCancellationRequested)}}(VZ||(dZ.CancellationToken=VZ={}));const cZ=Object.freeze((function(g,e){const I=(0,oZ.default)().timer.setTimeout(g.bind(e),0);return{dispose(){I.dispose()}}}));class rZ{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?cZ:(this._emitter||(this._emitter=new aZ.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}}class hZ{get token(){return this._token||(this._token=new rZ),this._token}cancel(){this._token?this._token.cancel():this._token=VZ.Cancelled}dispose(){this._token?this._token instanceof rZ&&this._token.dispose():this._token=VZ.None}}dZ.CancellationTokenSource=hZ;var UZ={};Object.defineProperty(UZ,"__esModule",{value:!0}),UZ.SharedArrayReceiverStrategy=UZ.SharedArraySenderStrategy=void 0;const ZZ=dZ;var RZ;!function(g){g.Continue=0,g.Cancelled=1}(RZ||(RZ={}));class FZ{constructor(){this.buffers=new Map}enableCancellation(g){if(null===g.id)return;const e=new SharedArrayBuffer(4);new Int32Array(e,0,1)[0]=RZ.Continue,this.buffers.set(g.id,e),g.$cancellationData=e}async sendCancellation(g,e){const I=this.buffers.get(e);if(void 0===I)return;const t=new Int32Array(I,0,1);Atomics.store(t,0,RZ.Cancelled)}cleanup(g){this.buffers.delete(g)}dispose(){this.buffers.clear()}}UZ.SharedArraySenderStrategy=FZ;class mZ{constructor(g){this.data=new Int32Array(g,0,1)}get isCancellationRequested(){return Atomics.load(this.data,0)===RZ.Cancelled}get onCancellationRequested(){throw new Error("Cancellation over SharedArrayBuffer doesn't support cancellation events")}}class BZ{constructor(g){this.token=new mZ(g)}cancel(){}dispose(){}}class WZ{constructor(){this.kind="request"}createCancellationTokenSource(g){const e=g.$cancellationData;return void 0===e?new ZZ.CancellationTokenSource:new BZ(e)}}UZ.SharedArrayReceiverStrategy=WZ;var NZ={},pZ={};Object.defineProperty(pZ,"__esModule",{value:!0}),pZ.Semaphore=void 0;const SZ=IZ;class bZ{constructor(g=1){if(g<=0)throw new Error("Capacity must be greater than 0");this._capacity=g,this._active=0,this._waiting=[]}lock(g){return new Promise(((e,I)=>{this._waiting.push({thunk:g,resolve:e,reject:I}),this.runNext()}))}get active(){return this._active}runNext(){0===this._waiting.length||this._active===this._capacity||(0,SZ.default)().timer.setImmediate((()=>this.doRunNext()))}doRunNext(){if(0===this._waiting.length||this._active===this._capacity)return;const g=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{const e=g.thunk();e instanceof Promise?e.then((e=>{this._active--,g.resolve(e),this.runNext()}),(e=>{this._active--,g.reject(e),this.runNext()})):(this._active--,g.resolve(e),this.runNext())}catch(e){this._active--,g.reject(e),this.runNext()}}}pZ.Semaphore=bZ,Object.defineProperty(NZ,"__esModule",{value:!0}),NZ.ReadableStreamMessageReader=NZ.AbstractMessageReader=NZ.MessageReader=void 0;const uZ=IZ,TZ=aU,GZ=eZ,kZ=pZ;var QZ,MZ;(QZ||(NZ.MessageReader=QZ={})).is=function(g){let e=g;return e&&TZ.func(e.listen)&&TZ.func(e.dispose)&&TZ.func(e.onError)&&TZ.func(e.onClose)&&TZ.func(e.onPartialMessage)};class YZ{constructor(){this.errorEmitter=new GZ.Emitter,this.closeEmitter=new GZ.Emitter,this.partialMessageEmitter=new GZ.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(g){this.errorEmitter.fire(this.asError(g))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(g){this.partialMessageEmitter.fire(g)}asError(g){return g instanceof Error?g:new Error(`Reader received error. Reason: ${TZ.string(g.message)?g.message:"unknown"}`)}}NZ.AbstractMessageReader=YZ,(MZ||(MZ={})).fromOptions=function(g){let e,I;const t=new Map;let C;const i=new Map;if(void 0===g||"string"==typeof g)e=g??"utf-8";else{if(e=g.charset??"utf-8",void 0!==g.contentDecoder&&(I=g.contentDecoder,t.set(I.name,I)),void 0!==g.contentDecoders)for(const e of g.contentDecoders)t.set(e.name,e);if(void 0!==g.contentTypeDecoder&&(C=g.contentTypeDecoder,i.set(C.name,C)),void 0!==g.contentTypeDecoders)for(const e of g.contentTypeDecoders)i.set(e.name,e)}return void 0===C&&(C=(0,uZ.default)().applicationJson.decoder,i.set(C.name,C)),{charset:e,contentDecoder:I,contentDecoders:t,contentTypeDecoder:C,contentTypeDecoders:i}};class EZ extends YZ{constructor(g,e){super(),this.readable=g,this.options=MZ.fromOptions(e),this.buffer=(0,uZ.default)().messageBuffer.create(this.options.charset),this._partialMessageTimeout=1e4,this.nextMessageLength=-1,this.messageToken=0,this.readSemaphore=new kZ.Semaphore(1)}set partialMessageTimeout(g){this._partialMessageTimeout=g}get partialMessageTimeout(){return this._partialMessageTimeout}listen(g){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=g;const e=this.readable.onData((g=>{this.onData(g)}));return this.readable.onError((g=>this.fireError(g))),this.readable.onClose((()=>this.fireClose())),e}onData(g){try{for(this.buffer.append(g);;){if(-1===this.nextMessageLength){const g=this.buffer.tryReadHeaders(!0);if(!g)return;const e=g.get("content-length");if(!e)return void this.fireError(new Error(`Header must provide a Content-Length property.\n${JSON.stringify(Object.fromEntries(g))}`));const I=parseInt(e);if(isNaN(I))return void this.fireError(new Error(`Content-Length value must be a number. Got ${e}`));this.nextMessageLength=I}const g=this.buffer.tryReadBody(this.nextMessageLength);if(void 0===g)return void this.setPartialMessageTimer();this.clearPartialMessageTimer(),this.nextMessageLength=-1,this.readSemaphore.lock((async()=>{const e=void 0!==this.options.contentDecoder?await this.options.contentDecoder.decode(g):g,I=await this.options.contentTypeDecoder.decode(e,this.options);this.callback(I)})).catch((g=>{this.fireError(g)}))}}catch(g){this.fireError(g)}}clearPartialMessageTimer(){this.partialMessageTimer&&(this.partialMessageTimer.dispose(),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),!(this._partialMessageTimeout<=0)&&(this.partialMessageTimer=(0,uZ.default)().timer.setTimeout(((g,e)=>{this.partialMessageTimer=void 0,g===this.messageToken&&(this.firePartialMessage({messageToken:g,waitingTime:e}),this.setPartialMessageTimer())}),this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}}NZ.ReadableStreamMessageReader=EZ;var yZ={};Object.defineProperty(yZ,"__esModule",{value:!0}),yZ.WriteableStreamMessageWriter=yZ.AbstractMessageWriter=yZ.MessageWriter=void 0;const JZ=IZ,HZ=aU,wZ=pZ,XZ=eZ,KZ="Content-Length: ",zZ="\r\n";var DZ,vZ;(DZ||(yZ.MessageWriter=DZ={})).is=function(g){let e=g;return e&&HZ.func(e.dispose)&&HZ.func(e.onClose)&&HZ.func(e.onError)&&HZ.func(e.write)};class xZ{constructor(){this.errorEmitter=new XZ.Emitter,this.closeEmitter=new XZ.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(g,e,I){this.errorEmitter.fire([this.asError(g),e,I])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(g){return g instanceof Error?g:new Error(`Writer received error. Reason: ${HZ.string(g.message)?g.message:"unknown"}`)}}yZ.AbstractMessageWriter=xZ,(vZ||(vZ={})).fromOptions=function(g){return void 0===g||"string"==typeof g?{charset:g??"utf-8",contentTypeEncoder:(0,JZ.default)().applicationJson.encoder}:{charset:g.charset??"utf-8",contentEncoder:g.contentEncoder,contentTypeEncoder:g.contentTypeEncoder??(0,JZ.default)().applicationJson.encoder}};class OZ extends xZ{constructor(g,e){super(),this.writable=g,this.options=vZ.fromOptions(e),this.errorCount=0,this.writeSemaphore=new wZ.Semaphore(1),this.writable.onError((g=>this.fireError(g))),this.writable.onClose((()=>this.fireClose()))}async write(g){return this.writeSemaphore.lock((async()=>this.options.contentTypeEncoder.encode(g,this.options).then((g=>void 0!==this.options.contentEncoder?this.options.contentEncoder.encode(g):g)).then((e=>{const I=[];return I.push(KZ,e.byteLength.toString(),zZ),I.push(zZ),this.doWrite(g,I,e)}),(g=>{throw this.fireError(g),g}))))}async doWrite(g,e,I){try{return await this.writable.write(e.join(""),"ascii"),this.writable.write(I)}catch(e){return this.handleError(e,g),Promise.reject(e)}}handleError(g,e){this.errorCount++,this.fireError(g,e,this.errorCount)}end(){this.writable.end()}}yZ.WriteableStreamMessageWriter=OZ;var fZ={};Object.defineProperty(fZ,"__esModule",{value:!0}),fZ.AbstractMessageBuffer=void 0;const jZ=13,LZ=10,PZ="\r\n";class _Z{constructor(g="utf-8"){this._encoding=g,this._chunks=[],this._totalLength=0}get encoding(){return this._encoding}append(g){const e="string"==typeof g?this.fromString(g,this._encoding):g;this._chunks.push(e),this._totalLength+=e.byteLength}tryReadHeaders(g=!1){if(0===this._chunks.length)return;let e=0,I=0,t=0,C=0;g:for(;I<this._chunks.length;){const g=this._chunks[I];for(t=0;t<g.length;){switch(g[t]){case jZ:switch(e){case 0:e=1;break;case 2:e=3;break;default:e=0}break;case LZ:switch(e){case 1:e=2;break;case 3:e=4,t++;break g;default:e=0}break;default:e=0}t++}C+=g.byteLength,I++}if(4!==e)return;const i=this._read(C+t),l=new Map,n=this.toString(i,"ascii").split(PZ);if(n.length<2)return l;for(let e=0;e<n.length-2;e++){const I=n[e],t=I.indexOf(":");if(-1===t)throw new Error(`Message header must separate key and value using ':'\n${I}`);const C=I.substr(0,t),i=I.substr(t+1).trim();l.set(g?C.toLowerCase():C,i)}return l}tryReadBody(g){if(!(this._totalLength<g))return this._read(g)}get numberOfBytes(){return this._totalLength}_read(g){if(0===g)return this.emptyBuffer();if(g>this._totalLength)throw new Error("Cannot read so many bytes!");if(this._chunks[0].byteLength===g){const e=this._chunks[0];return this._chunks.shift(),this._totalLength-=g,this.asNative(e)}if(this._chunks[0].byteLength>g){const e=this._chunks[0],I=this.asNative(e,g);return this._chunks[0]=e.slice(g),this._totalLength-=g,I}const e=this.allocNative(g);let I=0;for(;g>0;){const t=this._chunks[0];if(t.byteLength>g){const C=t.slice(0,g);e.set(C,I),I+=g,this._chunks[0]=t.slice(g),this._totalLength-=g,g-=g}else e.set(t,I),I+=t.byteLength,this._chunks.shift(),this._totalLength-=t.byteLength,g-=t.byteLength}return e}}fZ.AbstractMessageBuffer=_Z;var qZ={};!function(g){Object.defineProperty(g,"__esModule",{value:!0}),g.createMessageConnection=g.ConnectionOptions=g.MessageStrategy=g.CancellationStrategy=g.CancellationSenderStrategy=g.CancellationReceiverStrategy=g.RequestCancellationReceiverStrategy=g.IdCancellationReceiverStrategy=g.ConnectionStrategy=g.ConnectionError=g.ConnectionErrors=g.LogTraceNotification=g.SetTraceNotification=g.TraceFormat=g.TraceValues=g.Trace=g.NullLogger=g.ProgressType=g.ProgressToken=void 0;const e=IZ,I=aU,t=sU,C=PU,i=eZ,l=dZ;var n,A,d,o,s,a,V,c,r,h,U,Z,R,F,m,B,W,N,p,S;(n||(n={})).type=new t.NotificationType("$/cancelRequest"),(A||(g.ProgressToken=A={})).is=function(g){return"string"==typeof g||"number"==typeof g},(d||(d={})).type=new t.NotificationType("$/progress"),g.ProgressType=class{constructor(){}},(o||(o={})).is=function(g){return I.func(g)},g.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}}),(S=s||(g.Trace=s={}))[S.Off=0]="Off",S[S.Messages=1]="Messages",S[S.Compact=2]="Compact",S[S.Verbose=3]="Verbose",function(g){g.Off="off",g.Messages="messages",g.Compact="compact",g.Verbose="verbose"}(a||(g.TraceValues=a={})),function(g){g.fromString=function(e){if(!I.string(e))return g.Off;switch(e=e.toLowerCase()){case"off":default:return g.Off;case"messages":return g.Messages;case"compact":return g.Compact;case"verbose":return g.Verbose}},g.toString=function(e){switch(e){case g.Off:return"off";case g.Messages:return"messages";case g.Compact:return"compact";case g.Verbose:return"verbose";default:return"off"}}}(s||(g.Trace=s={})),function(g){g.Text="text",g.JSON="json"}(V||(g.TraceFormat=V={})),function(g){g.fromString=function(e){return I.string(e)&&"json"===(e=e.toLowerCase())?g.JSON:g.Text}}(V||(g.TraceFormat=V={})),function(g){g.type=new t.NotificationType("$/setTrace")}(c||(g.SetTraceNotification=c={})),function(g){g.type=new t.NotificationType("$/logTrace")}(r||(g.LogTraceNotification=r={})),function(g){g[g.Closed=1]="Closed",g[g.Disposed=2]="Disposed",g[g.AlreadyListening=3]="AlreadyListening"}(h||(g.ConnectionErrors=h={}));class b extends Error{constructor(g,e){super(e),this.code=g,Object.setPrototypeOf(this,b.prototype)}}g.ConnectionError=b,function(g){g.is=function(g){const e=g;return e&&I.func(e.cancelUndispatched)}}(U||(g.ConnectionStrategy=U={})),function(g){g.is=function(g){const e=g;return e&&(void 0===e.kind||"id"===e.kind)&&I.func(e.createCancellationTokenSource)&&(void 0===e.dispose||I.func(e.dispose))}}(Z||(g.IdCancellationReceiverStrategy=Z={})),function(g){g.is=function(g){const e=g;return e&&"request"===e.kind&&I.func(e.createCancellationTokenSource)&&(void 0===e.dispose||I.func(e.dispose))}}(R||(g.RequestCancellationReceiverStrategy=R={})),function(g){g.Message=Object.freeze({createCancellationTokenSource:g=>new l.CancellationTokenSource}),g.is=function(g){return Z.is(g)||R.is(g)}}(F||(g.CancellationReceiverStrategy=F={})),function(g){g.Message=Object.freeze({sendCancellation:(g,e)=>g.sendNotification(n.type,{id:e}),cleanup(g){}}),g.is=function(g){const e=g;return e&&I.func(e.sendCancellation)&&I.func(e.cleanup)}}(m||(g.CancellationSenderStrategy=m={})),function(g){g.Message=Object.freeze({receiver:F.Message,sender:m.Message}),g.is=function(g){const e=g;return e&&F.is(e.receiver)&&m.is(e.sender)}}(B||(g.CancellationStrategy=B={})),function(g){g.is=function(g){const e=g;return e&&I.func(e.handleMessage)}}(W||(g.MessageStrategy=W={})),function(g){g.is=function(g){const e=g;return e&&(B.is(e.cancellationStrategy)||U.is(e.connectionStrategy)||W.is(e.messageStrategy))}}(N||(g.ConnectionOptions=N={})),function(g){g[g.New=1]="New",g[g.Listening=2]="Listening",g[g.Closed=3]="Closed",g[g.Disposed=4]="Disposed"}(p||(p={})),g.createMessageConnection=function(a,U,R,F){const m=void 0!==R?R:g.NullLogger;let N=0,S=0,u=0;const T="2.0";let G;const k=new Map;let Q;const M=new Map,Y=new Map;let E,y,J=new C.LinkedMap,H=new Map,w=new Set,X=new Map,K=s.Off,z=V.Text,D=p.New;const v=new i.Emitter,x=new i.Emitter,O=new i.Emitter,f=new i.Emitter,j=new i.Emitter,L=F&&F.cancellationStrategy?F.cancellationStrategy:B.Message;function P(g){if(null===g)throw new Error("Can't send requests with id null since the response can't be correlated.");return"req-"+g.toString()}function _(g){}function q(){return D===p.Listening}function $(){return D===p.Closed}function gg(){return D===p.Disposed}function eg(){(D===p.New||D===p.Listening)&&(D=p.Closed,x.fire(void 0))}function Ig(){E||0===J.size||(E=(0,e.default)().timer.setImmediate((()=>{E=void 0,function(){if(0===J.size)return;const g=J.shift();try{const e=null==F?void 0:F.messageStrategy;W.is(e)?e.handleMessage(g,tg):tg(g)}finally{Ig()}}()})))}function tg(g){t.Message.isRequest(g)?function(g){if(gg())return;function e(e,I,C){const i={jsonrpc:T,id:g.id};e instanceof t.ResponseError?i.error=e.toJson():i.result=void 0===e?null:e,lg(i,I,C),U.write(i).catch((()=>m.error("Sending response failed.")))}function C(e,I,t){const C={jsonrpc:T,id:g.id,error:e.toJson()};lg(C,I,t),U.write(C).catch((()=>m.error("Sending response failed.")))}!function(g){if(K!==s.Off&&y)if(z===V.Text){let e;(K===s.Verbose||K===s.Compact)&&g.params&&(e=`Params: ${ig(g.params)}\n\n`),y.log(`Received request '${g.method} - (${g.id})'.`,e)}else Ag("receive-request",g)}(g);const i=k.get(g.method);let l,n;i&&(l=i.type,n=i.handler);const A=Date.now();if(n||G){const i=g.id??String(Date.now()),d=Z.is(L.receiver)?L.receiver.createCancellationTokenSource(i):L.receiver.createCancellationTokenSource(g);null!==g.id&&w.has(g.id)&&d.cancel(),null!==g.id&&X.set(i,d);try{let o;if(n)if(void 0===g.params){if(void 0!==l&&0!==l.numberOfParams)return void C(new t.ResponseError(t.ErrorCodes.InvalidParams,`Request ${g.method} defines ${l.numberOfParams} params but received none.`),g.method,A);o=n(d.token)}else if(Array.isArray(g.params)){if(void 0!==l&&l.parameterStructures===t.ParameterStructures.byName)return void C(new t.ResponseError(t.ErrorCodes.InvalidParams,`Request ${g.method} defines parameters by name but received parameters by position`),g.method,A);o=n(...g.params,d.token)}else{if(void 0!==l&&l.parameterStructures===t.ParameterStructures.byPosition)return void C(new t.ResponseError(t.ErrorCodes.InvalidParams,`Request ${g.method} defines parameters by position but received parameters by name`),g.method,A);o=n(g.params,d.token)}else G&&(o=G(g.method,g.params,d.token));const s=o;o?s.then?s.then((I=>{X.delete(i),e(I,g.method,A)}),(e=>{X.delete(i),e instanceof t.ResponseError?C(e,g.method,A):e&&I.string(e.message)?C(new t.ResponseError(t.ErrorCodes.InternalError,`Request ${g.method} failed with message: ${e.message}`),g.method,A):C(new t.ResponseError(t.ErrorCodes.InternalError,`Request ${g.method} failed unexpectedly without providing any details.`),g.method,A)})):(X.delete(i),e(o,g.method,A)):(X.delete(i),function(e,I,t){void 0===e&&(e=null);const C={jsonrpc:T,id:g.id,result:e};lg(C,I,t),U.write(C).catch((()=>m.error("Sending response failed.")))}(o,g.method,A))}catch(l){X.delete(i),l instanceof t.ResponseError?e(l,g.method,A):l&&I.string(l.message)?C(new t.ResponseError(t.ErrorCodes.InternalError,`Request ${g.method} failed with message: ${l.message}`),g.method,A):C(new t.ResponseError(t.ErrorCodes.InternalError,`Request ${g.method} failed unexpectedly without providing any details.`),g.method,A)}}else C(new t.ResponseError(t.ErrorCodes.MethodNotFound,`Unhandled method ${g.method}`),g.method,A)}(g):t.Message.isNotification(g)?function(g){if(gg())return;let e,I;if(g.method===n.type.method){const e=g.params.id;return w.delete(e),void ng(g)}{const t=M.get(g.method);t&&(I=t.handler,e=t.type)}if(I||Q)try{if(ng(g),I)if(void 0===g.params)void 0!==e&&0!==e.numberOfParams&&e.parameterStructures!==t.ParameterStructures.byName&&m.error(`Notification ${g.method} defines ${e.numberOfParams} params but received none.`),I();else if(Array.isArray(g.params)){const C=g.params;g.method===d.type.method&&2===C.length&&A.is(C[0])?I({token:C[0],value:C[1]}):(void 0!==e&&(e.parameterStructures===t.ParameterStructures.byName&&m.error(`Notification ${g.method} defines parameters by name but received parameters by position`),e.numberOfParams!==g.params.length&&m.error(`Notification ${g.method} defines ${e.numberOfParams} params but received ${C.length} arguments`)),I(...C))}else void 0!==e&&e.parameterStructures===t.ParameterStructures.byPosition&&m.error(`Notification ${g.method} defines parameters by position but received parameters by name`),I(g.params);else Q&&Q(g.method,g.params)}catch(e){e.message?m.error(`Notification handler '${g.method}' failed with message: ${e.message}`):m.error(`Notification handler '${g.method}' failed unexpectedly.`)}else O.fire(g)}(g):t.Message.isResponse(g)?function(g){if(!gg())if(null===g.id)g.error?m.error(`Received response message without id: Error is: \n${JSON.stringify(g.error,void 0,4)}`):m.error("Received response message without id. No further error information provided.");else{const e=g.id,I=H.get(e);if(function(g,e){if(K!==s.Off&&y)if(z===V.Text){let I;if((K===s.Verbose||K===s.Compact)&&(g.error&&g.error.data?I=`Error data: ${ig(g.error.data)}\n\n`:g.result?I=`Result: ${ig(g.result)}\n\n`:void 0===g.error&&(I="No result returned.\n\n")),e){const t=g.error?` Request failed: ${g.error.message} (${g.error.code}).`:"";y.log(`Received response '${e.method} - (${g.id})' in ${Date.now()-e.timerStart}ms.${t}`,I)}else y.log(`Received response ${g.id} without active response promise.`,I)}else Ag("receive-response",g)}(g,I),void 0!==I){H.delete(e);try{if(g.error){const e=g.error;I.reject(new t.ResponseError(e.code,e.message,e.data))}else{if(void 0===g.result)throw new Error("Should never happen.");I.resolve(g.result)}}catch(g){g.message?m.error(`Response handler '${I.method}' failed with message: ${g.message}`):m.error(`Response handler '${I.method}' failed unexpectedly.`)}}}}(g):function(g){if(!g)return void m.error("Received empty message.");m.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(g,null,4)}`);const e=g;if(I.string(e.id)||I.number(e.id)){const g=e.id,I=H.get(g);I&&I.reject(new Error("The received response has neither a result nor an error property."))}}(g)}a.onClose(eg),a.onError((function(g){v.fire([g,void 0,void 0])})),U.onClose(eg),U.onError((function(g){v.fire(g)}));const Cg=g=>{try{if(t.Message.isNotification(g)&&g.method===n.type.method){const e=g.params.id,I=P(e),C=J.get(I);if(t.Message.isRequest(C)){const t=null==F?void 0:F.connectionStrategy,i=t&&t.cancelUndispatched?t.cancelUndispatched(C,_):void 0;if(i&&(void 0!==i.error||void 0!==i.result))return J.delete(I),X.delete(e),i.id=C.id,lg(i,g.method,Date.now()),void U.write(i).catch((()=>m.error("Sending response for canceled message failed.")))}const i=X.get(e);if(void 0!==i)return i.cancel(),void ng(g);w.add(e)}!function(g,e){t.Message.isRequest(e)?g.set(P(e.id),e):t.Message.isResponse(e)?g.set(function(g){return null===g?"res-unknown-"+(++u).toString():"res-"+g.toString()}(e.id),e):g.set("not-"+(++S).toString(),e)}(J,g)}finally{Ig()}};function ig(g){if(null!=g)switch(K){case s.Verbose:return JSON.stringify(g,null,4);case s.Compact:return JSON.stringify(g);default:return}}function lg(g,e,I){if(K!==s.Off&&y)if(z===V.Text){let t;(K===s.Verbose||K===s.Compact)&&(g.error&&g.error.data?t=`Error data: ${ig(g.error.data)}\n\n`:g.result?t=`Result: ${ig(g.result)}\n\n`:void 0===g.error&&(t="No result returned.\n\n")),y.log(`Sending response '${e} - (${g.id})'. Processing request took ${Date.now()-I}ms`,t)}else Ag("send-response",g)}function ng(g){if(K!==s.Off&&y&&g.method!==r.type.method)if(z===V.Text){let e;(K===s.Verbose||K===s.Compact)&&(e=g.params?`Params: ${ig(g.params)}\n\n`:"No parameters provided.\n\n"),y.log(`Received notification '${g.method}'.`,e)}else Ag("receive-notification",g)}function Ag(g,e){if(!y||K===s.Off)return;const I={isLSPMessage:!0,type:g,message:e,timestamp:Date.now()};y.log(I)}function dg(){if($())throw new b(h.Closed,"Connection is closed.");if(gg())throw new b(h.Disposed,"Connection is disposed.")}function og(g){return void 0===g?null:g}function sg(g){if(null!==g)return g}function ag(g){return null!=g&&!Array.isArray(g)&&"object"==typeof g}function Vg(g,e){switch(g){case t.ParameterStructures.auto:return ag(e)?sg(e):[og(e)];case t.ParameterStructures.byName:if(!ag(e))throw new Error("Received parameters by name but param is not an object literal.");return sg(e);case t.ParameterStructures.byPosition:return[og(e)];default:throw new Error(`Unknown parameter structure ${g.toString()}`)}}function cg(g,e){let I;const t=g.numberOfParams;switch(t){case 0:I=void 0;break;case 1:I=Vg(g.parameterStructures,e[0]);break;default:I=[];for(let g=0;g<e.length&&g<t;g++)I.push(og(e[g]));if(e.length<t)for(let g=e.length;g<t;g++)I.push(null)}return I}const rg={sendNotification:(g,...e)=>{let C,i;if(dg(),I.string(g)){C=g;const I=e[0];let l=0,n=t.ParameterStructures.auto;t.ParameterStructures.is(I)&&(l=1,n=I);let A=e.length;const d=A-l;switch(d){case 0:i=void 0;break;case 1:i=Vg(n,e[l]);break;default:if(n===t.ParameterStructures.byName)throw new Error(`Received ${d} parameters for 'by Name' notification parameter structure.`);i=e.slice(l,A).map((g=>og(g)))}}else{const I=e;C=g.method,i=cg(g,I)}const l={jsonrpc:T,method:C,params:i};return function(g){if(K!==s.Off&&y)if(z===V.Text){let e;(K===s.Verbose||K===s.Compact)&&(e=g.params?`Params: ${ig(g.params)}\n\n`:"No parameters provided.\n\n"),y.log(`Sending notification '${g.method}'.`,e)}else Ag("send-notification",g)}(l),U.write(l).catch((g=>{throw m.error("Sending notification failed."),g}))},onNotification:(g,e)=>{let t;return dg(),I.func(g)?Q=g:e&&(I.string(g)?(t=g,M.set(g,{type:void 0,handler:e})):(t=g.method,M.set(g.method,{type:g,handler:e}))),{dispose:()=>{void 0!==t?M.delete(t):Q=void 0}}},onProgress:(g,e,I)=>{if(Y.has(e))throw new Error(`Progress handler for token ${e} already registered`);return Y.set(e,I),{dispose:()=>{Y.delete(e)}}},sendProgress:(g,e,I)=>rg.sendNotification(d.type,{token:e,value:I}),onUnhandledProgress:f.event,sendRequest:(g,...e)=>{let C,i,n;if(dg(),function(){if(!q())throw new Error("Call listen() first.")}(),I.string(g)){C=g;const I=e[0],A=e[e.length-1];let d=0,o=t.ParameterStructures.auto;t.ParameterStructures.is(I)&&(d=1,o=I);let s=e.length;l.CancellationToken.is(A)&&(s-=1,n=A);const a=s-d;switch(a){case 0:i=void 0;break;case 1:i=Vg(o,e[d]);break;default:if(o===t.ParameterStructures.byName)throw new Error(`Received ${a} parameters for 'by Name' request parameter structure.`);i=e.slice(d,s).map((g=>og(g)))}}else{const I=e;C=g.method,i=cg(g,I);const t=g.numberOfParams;n=l.CancellationToken.is(I[t])?I[t]:void 0}const A=N++;let d;n&&(d=n.onCancellationRequested((()=>{const g=L.sender.sendCancellation(rg,A);return void 0===g?(m.log(`Received no promise from cancellation strategy when cancelling id ${A}`),Promise.resolve()):g.catch((()=>{m.log(`Sending cancellation messages for id ${A} failed`)}))})));const o={jsonrpc:T,id:A,method:C,params:i};return function(g){if(K!==s.Off&&y)if(z===V.Text){let e;(K===s.Verbose||K===s.Compact)&&g.params&&(e=`Params: ${ig(g.params)}\n\n`),y.log(`Sending request '${g.method} - (${g.id})'.`,e)}else Ag("send-request",g)}(o),"function"==typeof L.sender.enableCancellation&&L.sender.enableCancellation(o),new Promise((async(g,e)=>{const I={method:C,timerStart:Date.now(),resolve:e=>{g(e),L.sender.cleanup(A),null==d||d.dispose()},reject:g=>{e(g),L.sender.cleanup(A),null==d||d.dispose()}};try{await U.write(o),H.set(A,I)}catch(g){throw m.error("Sending request failed."),I.reject(new t.ResponseError(t.ErrorCodes.MessageWriteError,g.message?g.message:"Unknown reason")),g}}))},onRequest:(g,e)=>{dg();let t=null;return o.is(g)?(t=void 0,G=g):I.string(g)?(t=null,void 0!==e&&(t=g,k.set(g,{handler:e,type:void 0}))):void 0!==e&&(t=g.method,k.set(g.method,{type:g,handler:e})),{dispose:()=>{null!==t&&(void 0!==t?k.delete(t):G=void 0)}}},hasPendingResponse:()=>H.size>0,trace:async(g,e,t)=>{let C=!1,i=V.Text;void 0!==t&&(I.boolean(t)?C=t:(C=t.sendNotification||!1,i=t.traceFormat||V.Text)),K=g,z=i,y=K===s.Off?void 0:e,C&&!$()&&!gg()&&await rg.sendNotification(c.type,{value:s.toString(g)})},onError:v.event,onClose:x.event,onUnhandledNotification:O.event,onDispose:j.event,end:()=>{U.end()},dispose:()=>{if(gg())return;D=p.Disposed,j.fire(void 0);const g=new t.ResponseError(t.ErrorCodes.PendingResponseRejected,"Pending response rejected since connection got disposed");for(const e of H.values())e.reject(g);H=new Map,X=new Map,w=new Set,J=new C.LinkedMap,I.func(U.dispose)&&U.dispose(),I.func(a.dispose)&&a.dispose()},listen:()=>{dg(),function(){if(q())throw new b(h.AlreadyListening,"Connection is already listening")}(),D=p.Listening,a.listen(Cg)},inspect:()=>{(0,e.default)().console.log("inspect")}};return rg.onNotification(r.type,(g=>{if(K===s.Off||!y)return;const e=K===s.Verbose||K===s.Compact;y.log(g.message,e?g.verbose:void 0)})),rg.onNotification(d.type,(g=>{const e=Y.get(g.token);e?e(g.value):f.fire(g)})),rg}}(qZ),function(g){Object.defineProperty(g,"__esModule",{value:!0}),g.ProgressType=g.ProgressToken=g.createMessageConnection=g.NullLogger=g.ConnectionOptions=g.ConnectionStrategy=g.AbstractMessageBuffer=g.WriteableStreamMessageWriter=g.AbstractMessageWriter=g.MessageWriter=g.ReadableStreamMessageReader=g.AbstractMessageReader=g.MessageReader=g.SharedArrayReceiverStrategy=g.SharedArraySenderStrategy=g.CancellationToken=g.CancellationTokenSource=g.Emitter=g.Event=g.Disposable=g.LRUCache=g.Touch=g.LinkedMap=g.ParameterStructures=g.NotificationType9=g.NotificationType8=g.NotificationType7=g.NotificationType6=g.NotificationType5=g.NotificationType4=g.NotificationType3=g.NotificationType2=g.NotificationType1=g.NotificationType0=g.NotificationType=g.ErrorCodes=g.ResponseError=g.RequestType9=g.RequestType8=g.RequestType7=g.RequestType6=g.RequestType5=g.RequestType4=g.RequestType3=g.RequestType2=g.RequestType1=g.RequestType0=g.RequestType=g.Message=g.RAL=void 0,g.MessageStrategy=g.CancellationStrategy=g.CancellationSenderStrategy=g.CancellationReceiverStrategy=g.ConnectionError=g.ConnectionErrors=g.LogTraceNotification=g.SetTraceNotification=g.TraceFormat=g.TraceValues=g.Trace=void 0;const e=sU;Object.defineProperty(g,"Message",{enumerable:!0,get:function(){return e.Message}}),Object.defineProperty(g,"RequestType",{enumerable:!0,get:function(){return e.RequestType}}),Object.defineProperty(g,"RequestType0",{enumerable:!0,get:function(){return e.RequestType0}}),Object.defineProperty(g,"RequestType1",{enumerable:!0,get:function(){return e.RequestType1}}),Object.defineProperty(g,"RequestType2",{enumerable:!0,get:function(){return e.RequestType2}}),Object.defineProperty(g,"RequestType3",{enumerable:!0,get:function(){return e.RequestType3}}),Object.defineProperty(g,"RequestType4",{enumerable:!0,get:function(){return e.RequestType4}}),Object.defineProperty(g,"RequestType5",{enumerable:!0,get:function(){return e.RequestType5}}),Object.defineProperty(g,"RequestType6",{enumerable:!0,get:function(){return e.RequestType6}}),Object.defineProperty(g,"RequestType7",{enumerable:!0,get:function(){return e.RequestType7}}),Object.defineProperty(g,"RequestType8",{enumerable:!0,get:function(){return e.RequestType8}}),Object.defineProperty(g,"RequestType9",{enumerable:!0,get:function(){return e.RequestType9}}),Object.defineProperty(g,"ResponseError",{enumerable:!0,get:function(){return e.ResponseError}}),Object.defineProperty(g,"ErrorCodes",{enumerable:!0,get:function(){return e.ErrorCodes}}),Object.defineProperty(g,"NotificationType",{enumerable:!0,get:function(){return e.NotificationType}}),Object.defineProperty(g,"NotificationType0",{enumerable:!0,get:function(){return e.NotificationType0}}),Object.defineProperty(g,"NotificationType1",{enumerable:!0,get:function(){return e.NotificationType1}}),Object.defineProperty(g,"NotificationType2",{enumerable:!0,get:function(){return e.NotificationType2}}),Object.defineProperty(g,"NotificationType3",{enumerable:!0,get:function(){return e.NotificationType3}}),Object.defineProperty(g,"NotificationType4",{enumerable:!0,get:function(){return e.NotificationType4}}),Object.defineProperty(g,"NotificationType5",{enumerable:!0,get:function(){return e.NotificationType5}}),Object.defineProperty(g,"NotificationType6",{enumerable:!0,get:function(){return e.NotificationType6}}),Object.defineProperty(g,"NotificationType7",{enumerable:!0,get:function(){return e.NotificationType7}}),Object.defineProperty(g,"NotificationType8",{enumerable:!0,get:function(){return e.NotificationType8}}),Object.defineProperty(g,"NotificationType9",{enumerable:!0,get:function(){return e.NotificationType9}}),Object.defineProperty(g,"ParameterStructures",{enumerable:!0,get:function(){return e.ParameterStructures}});const I=PU;Object.defineProperty(g,"LinkedMap",{enumerable:!0,get:function(){return I.LinkedMap}}),Object.defineProperty(g,"LRUCache",{enumerable:!0,get:function(){return I.LRUCache}}),Object.defineProperty(g,"Touch",{enumerable:!0,get:function(){return I.Touch}});const t=gZ;Object.defineProperty(g,"Disposable",{enumerable:!0,get:function(){return t.Disposable}});const C=eZ;Object.defineProperty(g,"Event",{enumerable:!0,get:function(){return C.Event}}),Object.defineProperty(g,"Emitter",{enumerable:!0,get:function(){return C.Emitter}});const i=dZ;Object.defineProperty(g,"CancellationTokenSource",{enumerable:!0,get:function(){return i.CancellationTokenSource}}),Object.defineProperty(g,"CancellationToken",{enumerable:!0,get:function(){return i.CancellationToken}});const l=UZ;Object.defineProperty(g,"SharedArraySenderStrategy",{enumerable:!0,get:function(){return l.SharedArraySenderStrategy}}),Object.defineProperty(g,"SharedArrayReceiverStrategy",{enumerable:!0,get:function(){return l.SharedArrayReceiverStrategy}});const n=NZ;Object.defineProperty(g,"MessageReader",{enumerable:!0,get:function(){return n.MessageReader}}),Object.defineProperty(g,"AbstractMessageReader",{enumerable:!0,get:function(){return n.AbstractMessageReader}}),Object.defineProperty(g,"ReadableStreamMessageReader",{enumerable:!0,get:function(){return n.ReadableStreamMessageReader}});const A=yZ;Object.defineProperty(g,"MessageWriter",{enumerable:!0,get:function(){return A.MessageWriter}}),Object.defineProperty(g,"AbstractMessageWriter",{enumerable:!0,get:function(){return A.AbstractMessageWriter}}),Object.defineProperty(g,"WriteableStreamMessageWriter",{enumerable:!0,get:function(){return A.WriteableStreamMessageWriter}});const d=fZ;Object.defineProperty(g,"AbstractMessageBuffer",{enumerable:!0,get:function(){return d.AbstractMessageBuffer}});const o=qZ;Object.defineProperty(g,"ConnectionStrategy",{enumerable:!0,get:function(){return o.ConnectionStrategy}}),Object.defineProperty(g,"ConnectionOptions",{enumerable:!0,get:function(){return o.ConnectionOptions}}),Object.defineProperty(g,"NullLogger",{enumerable:!0,get:function(){return o.NullLogger}}),Object.defineProperty(g,"createMessageConnection",{enumerable:!0,get:function(){return o.createMessageConnection}}),Object.defineProperty(g,"ProgressToken",{enumerable:!0,get:function(){return o.ProgressToken}}),Object.defineProperty(g,"ProgressType",{enumerable:!0,get:function(){return o.ProgressType}}),Object.defineProperty(g,"Trace",{enumerable:!0,get:function(){return o.Trace}}),Object.defineProperty(g,"TraceValues",{enumerable:!0,get:function(){return o.TraceValues}}),Object.defineProperty(g,"TraceFormat",{enumerable:!0,get:function(){return o.TraceFormat}}),Object.defineProperty(g,"SetTraceNotification",{enumerable:!0,get:function(){return o.SetTraceNotification}}),Object.defineProperty(g,"LogTraceNotification",{enumerable:!0,get:function(){return o.LogTraceNotification}}),Object.defineProperty(g,"ConnectionErrors",{enumerable:!0,get:function(){return o.ConnectionErrors}}),Object.defineProperty(g,"ConnectionError",{enumerable:!0,get:function(){return o.ConnectionError}}),Object.defineProperty(g,"CancellationReceiverStrategy",{enumerable:!0,get:function(){return o.CancellationReceiverStrategy}}),Object.defineProperty(g,"CancellationSenderStrategy",{enumerable:!0,get:function(){return o.CancellationSenderStrategy}}),Object.defineProperty(g,"CancellationStrategy",{enumerable:!0,get:function(){return o.CancellationStrategy}}),Object.defineProperty(g,"MessageStrategy",{enumerable:!0,get:function(){return o.MessageStrategy}});const s=IZ;g.RAL=s.default}(oU),Object.defineProperty(dU,"__esModule",{value:!0});const $Z=oU;class gR extends $Z.AbstractMessageBuffer{constructor(g="utf-8"){super(g),this.asciiDecoder=new TextDecoder("ascii")}emptyBuffer(){return gR.emptyBuffer}fromString(g,e){return(new TextEncoder).encode(g)}toString(g,e){return"ascii"===e?this.asciiDecoder.decode(g):new TextDecoder(e).decode(g)}asNative(g,e){return void 0===e?g:g.slice(0,e)}allocNative(g){return new Uint8Array(g)}}gR.emptyBuffer=new Uint8Array(0);class eR{constructor(g){this.socket=g,this._onData=new $Z.Emitter,this._messageListener=g=>{g.data.arrayBuffer().then((g=>{this._onData.fire(new Uint8Array(g))}),(()=>{(0,$Z.RAL)().console.error("Converting blob to array buffer failed.")}))},this.socket.addEventListener("message",this._messageListener)}onClose(g){return this.socket.addEventListener("close",g),$Z.Disposable.create((()=>this.socket.removeEventListener("close",g)))}onError(g){return this.socket.addEventListener("error",g),$Z.Disposable.create((()=>this.socket.removeEventListener("error",g)))}onEnd(g){return this.socket.addEventListener("end",g),$Z.Disposable.create((()=>this.socket.removeEventListener("end",g)))}onData(g){return this._onData.event(g)}}class IR{constructor(g){this.socket=g}onClose(g){return this.socket.addEventListener("close",g),$Z.Disposable.create((()=>this.socket.removeEventListener("close",g)))}onError(g){return this.socket.addEventListener("error",g),$Z.Disposable.create((()=>this.socket.removeEventListener("error",g)))}onEnd(g){return this.socket.addEventListener("end",g),$Z.Disposable.create((()=>this.socket.removeEventListener("end",g)))}write(g,e){if("string"==typeof g){if(void 0!==e&&"utf-8"!==e)throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${e}`);this.socket.send(g)}else this.socket.send(g);return Promise.resolve()}end(){this.socket.close()}}const tR=new TextEncoder,CR=Object.freeze({messageBuffer:Object.freeze({create:g=>new gR(g)}),applicationJson:Object.freeze({encoder:Object.freeze({name:"application/json",encode:(g,e)=>{if("utf-8"!==e.charset)throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${e.charset}`);return Promise.resolve(tR.encode(JSON.stringify(g,void 0,0)))}}),decoder:Object.freeze({name:"application/json",decode:(g,e)=>{if(!(g instanceof Uint8Array))throw new Error("In a Browser environments only Uint8Arrays are supported.");return Promise.resolve(JSON.parse(new TextDecoder(e.charset).decode(g)))}})}),stream:Object.freeze({asReadableStream:g=>new eR(g),asWritableStream:g=>new IR(g)}),console,timer:Object.freeze({setTimeout(g,e,...I){const t=setTimeout(g,e,...I);return{dispose:()=>clearTimeout(t)}},setImmediate(g,...e){const I=setTimeout(g,0,...e);return{dispose:()=>clearTimeout(I)}},setInterval(g,e,...I){const t=setInterval(g,e,...I);return{dispose:()=>clearInterval(t)}}})});function iR(){return CR}(iR||(iR={})).install=function(){$Z.RAL.install(CR)},dU.default=iR,function(g){var e=Lg&&Lg.__createBinding||(Object.create?function(g,e,I,t){void 0===t&&(t=I);var C=Object.getOwnPropertyDescriptor(e,I);(!C||("get"in C?!e.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return e[I]}}),Object.defineProperty(g,t,C)}:function(g,e,I,t){void 0===t&&(t=I),g[t]=e[I]}),I=Lg&&Lg.__exportStar||function(g,I){for(var t in g)"default"!==t&&!Object.prototype.hasOwnProperty.call(I,t)&&e(I,g,t)};Object.defineProperty(g,"__esModule",{value:!0}),g.createMessageConnection=g.BrowserMessageWriter=g.BrowserMessageReader=void 0,dU.default.install();const t=oU;I(oU,g);class C extends t.AbstractMessageReader{constructor(g){super(),this._onData=new t.Emitter,this._messageListener=g=>{this._onData.fire(g.data)},g.addEventListener("error",(g=>this.fireError(g))),g.onmessage=this._messageListener}listen(g){return this._onData.event(g)}}g.BrowserMessageReader=C;class i extends t.AbstractMessageWriter{constructor(g){super(),this.port=g,this.errorCount=0,g.addEventListener("error",(g=>this.fireError(g)))}write(g){try{return this.port.postMessage(g),Promise.resolve()}catch(e){return this.handleError(e,g),Promise.reject(e)}}handleError(g,e){this.errorCount++,this.fireError(g,e,this.errorCount)}end(){}}g.BrowserMessageWriter=i,g.createMessageConnection=function(g,e,I,C){return void 0===I&&(I=t.NullLogger),t.ConnectionStrategy.is(C)&&(C={connectionStrategy:C}),(0,t.createMessageConnection)(g,e,I,C)}}(AU);var lR,nR,AR,dR,oR,sR,aR,VR,cR,rR,hR,UR,ZR,RR,FR,mR,BR,WR,NR,pR,SR,bR,uR,TR,GR,kR,QR,MR,YR,ER,yR,JR,HR,wR,XR,KR,zR,DR,vR,xR,OR,fR,jR,LR,PR,_R,qR,$R,gF,eF,IF,tF,CF,iF,lF,nF,AF,dF,oF,sF,aF,VF,cF,rF,hF,UF,ZF,RF,FF,mF,BF,WF,NF,pF,SF,bF,uF,TF,GF=AU,kF={};(lR||(lR={})).is=function(g){return"string"==typeof g},(nR||(nR={})).is=function(g){return"string"==typeof g},function(g){g.MIN_VALUE=-2147483648,g.MAX_VALUE=2147483647,g.is=function(e){return"number"==typeof e&&g.MIN_VALUE<=e&&e<=g.MAX_VALUE}}(AR||(AR={})),function(g){g.MIN_VALUE=0,g.MAX_VALUE=2147483647,g.is=function(e){return"number"==typeof e&&g.MIN_VALUE<=e&&e<=g.MAX_VALUE}}(dR||(dR={})),function(g){g.create=function(g,e){return g===Number.MAX_VALUE&&(g=dR.MAX_VALUE),e===Number.MAX_VALUE&&(e=dR.MAX_VALUE),{line:g,character:e}},g.is=function(g){let e=g;return JF.objectLiteral(e)&&JF.uinteger(e.line)&&JF.uinteger(e.character)}}(oR||(oR={})),function(g){g.create=function(g,e,I,t){if(JF.uinteger(g)&&JF.uinteger(e)&&JF.uinteger(I)&&JF.uinteger(t))return{start:oR.create(g,e),end:oR.create(I,t)};if(oR.is(g)&&oR.is(e))return{start:g,end:e};throw new Error(`Range#create called with invalid arguments[${g}, ${e}, ${I}, ${t}]`)},g.is=function(g){let e=g;return JF.objectLiteral(e)&&oR.is(e.start)&&oR.is(e.end)}}(sR||(sR={})),function(g){g.create=function(g,e){return{uri:g,range:e}},g.is=function(g){let e=g;return JF.objectLiteral(e)&&sR.is(e.range)&&(JF.string(e.uri)||JF.undefined(e.uri))}}(aR||(aR={})),function(g){g.create=function(g,e,I,t){return{targetUri:g,targetRange:e,targetSelectionRange:I,originSelectionRange:t}},g.is=function(g){let e=g;return JF.objectLiteral(e)&&sR.is(e.targetRange)&&JF.string(e.targetUri)&&sR.is(e.targetSelectionRange)&&(sR.is(e.originSelectionRange)||JF.undefined(e.originSelectionRange))}}(VR||(VR={})),function(g){g.create=function(g,e,I,t){return{red:g,green:e,blue:I,alpha:t}},g.is=function(g){const e=g;return JF.objectLiteral(e)&&JF.numberRange(e.red,0,1)&&JF.numberRange(e.green,0,1)&&JF.numberRange(e.blue,0,1)&&JF.numberRange(e.alpha,0,1)}}(cR||(cR={})),function(g){g.create=function(g,e){return{range:g,color:e}},g.is=function(g){const e=g;return JF.objectLiteral(e)&&sR.is(e.range)&&cR.is(e.color)}}(rR||(rR={})),function(g){g.create=function(g,e,I){return{label:g,textEdit:e,additionalTextEdits:I}},g.is=function(g){const e=g;return JF.objectLiteral(e)&&JF.string(e.label)&&(JF.undefined(e.textEdit)||pR.is(e))&&(JF.undefined(e.additionalTextEdits)||JF.typedArray(e.additionalTextEdits,pR.is))}}(hR||(hR={})),function(g){g.Comment="comment",g.Imports="imports",g.Region="region"}(UR||(UR={})),function(g){g.create=function(g,e,I,t,C,i){const l={startLine:g,endLine:e};return JF.defined(I)&&(l.startCharacter=I),JF.defined(t)&&(l.endCharacter=t),JF.defined(C)&&(l.kind=C),JF.defined(i)&&(l.collapsedText=i),l},g.is=function(g){const e=g;return JF.objectLiteral(e)&&JF.uinteger(e.startLine)&&JF.uinteger(e.startLine)&&(JF.undefined(e.startCharacter)||JF.uinteger(e.startCharacter))&&(JF.undefined(e.endCharacter)||JF.uinteger(e.endCharacter))&&(JF.undefined(e.kind)||JF.string(e.kind))}}(ZR||(ZR={})),function(g){g.create=function(g,e){return{location:g,message:e}},g.is=function(g){let e=g;return JF.defined(e)&&aR.is(e.location)&&JF.string(e.message)}}(RR||(RR={})),function(g){g.Error=1,g.Warning=2,g.Information=3,g.Hint=4}(FR||(FR={})),function(g){g.Unnecessary=1,g.Deprecated=2}(mR||(mR={})),(BR||(BR={})).is=function(g){const e=g;return JF.objectLiteral(e)&&JF.string(e.href)},function(g){g.create=function(g,e,I,t,C,i){let l={range:g,message:e};return JF.defined(I)&&(l.severity=I),JF.defined(t)&&(l.code=t),JF.defined(C)&&(l.source=C),JF.defined(i)&&(l.relatedInformation=i),l},g.is=function(g){var e;let I=g;return JF.defined(I)&&sR.is(I.range)&&JF.string(I.message)&&(JF.number(I.severity)||JF.undefined(I.severity))&&(JF.integer(I.code)||JF.string(I.code)||JF.undefined(I.code))&&(JF.undefined(I.codeDescription)||JF.string(null===(e=I.codeDescription)||void 0===e?void 0:e.href))&&(JF.string(I.source)||JF.undefined(I.source))&&(JF.undefined(I.relatedInformation)||JF.typedArray(I.relatedInformation,RR.is))}}(WR||(WR={})),function(g){g.create=function(g,e,...I){let t={title:g,command:e};return JF.defined(I)&&I.length>0&&(t.arguments=I),t},g.is=function(g){let e=g;return JF.defined(e)&&JF.string(e.title)&&JF.string(e.command)}}(NR||(NR={})),function(g){g.replace=function(g,e){return{range:g,newText:e}},g.insert=function(g,e){return{range:{start:g,end:g},newText:e}},g.del=function(g){return{range:g,newText:""}},g.is=function(g){const e=g;return JF.objectLiteral(e)&&JF.string(e.newText)&&sR.is(e.range)}}(pR||(pR={})),function(g){g.create=function(g,e,I){const t={label:g};return void 0!==e&&(t.needsConfirmation=e),void 0!==I&&(t.description=I),t},g.is=function(g){const e=g;return JF.objectLiteral(e)&&JF.string(e.label)&&(JF.boolean(e.needsConfirmation)||void 0===e.needsConfirmation)&&(JF.string(e.description)||void 0===e.description)}}(SR||(SR={})),(bR||(bR={})).is=function(g){const e=g;return JF.string(e)},function(g){g.replace=function(g,e,I){return{range:g,newText:e,annotationId:I}},g.insert=function(g,e,I){return{range:{start:g,end:g},newText:e,annotationId:I}},g.del=function(g,e){return{range:g,newText:"",annotationId:e}},g.is=function(g){const e=g;return pR.is(e)&&(SR.is(e.annotationId)||bR.is(e.annotationId))}}(uR||(uR={})),function(g){g.create=function(g,e){return{textDocument:g,edits:e}},g.is=function(g){let e=g;return JF.defined(e)&&yR.is(e.textDocument)&&Array.isArray(e.edits)}}(TR||(TR={})),function(g){g.create=function(g,e,I){let t={kind:"create",uri:g};return void 0!==e&&(void 0!==e.overwrite||void 0!==e.ignoreIfExists)&&(t.options=e),void 0!==I&&(t.annotationId=I),t},g.is=function(g){let e=g;return e&&"create"===e.kind&&JF.string(e.uri)&&(void 0===e.options||(void 0===e.options.overwrite||JF.boolean(e.options.overwrite))&&(void 0===e.options.ignoreIfExists||JF.boolean(e.options.ignoreIfExists)))&&(void 0===e.annotationId||bR.is(e.annotationId))}}(GR||(GR={})),function(g){g.create=function(g,e,I,t){let C={kind:"rename",oldUri:g,newUri:e};return void 0!==I&&(void 0!==I.overwrite||void 0!==I.ignoreIfExists)&&(C.options=I),void 0!==t&&(C.annotationId=t),C},g.is=function(g){let e=g;return e&&"rename"===e.kind&&JF.string(e.oldUri)&&JF.string(e.newUri)&&(void 0===e.options||(void 0===e.options.overwrite||JF.boolean(e.options.overwrite))&&(void 0===e.options.ignoreIfExists||JF.boolean(e.options.ignoreIfExists)))&&(void 0===e.annotationId||bR.is(e.annotationId))}}(kR||(kR={})),function(g){g.create=function(g,e,I){let t={kind:"delete",uri:g};return void 0!==e&&(void 0!==e.recursive||void 0!==e.ignoreIfNotExists)&&(t.options=e),void 0!==I&&(t.annotationId=I),t},g.is=function(g){let e=g;return e&&"delete"===e.kind&&JF.string(e.uri)&&(void 0===e.options||(void 0===e.options.recursive||JF.boolean(e.options.recursive))&&(void 0===e.options.ignoreIfNotExists||JF.boolean(e.options.ignoreIfNotExists)))&&(void 0===e.annotationId||bR.is(e.annotationId))}}(QR||(QR={})),(MR||(MR={})).is=function(g){let e=g;return e&&(void 0!==e.changes||void 0!==e.documentChanges)&&(void 0===e.documentChanges||e.documentChanges.every((g=>JF.string(g.kind)?GR.is(g)||kR.is(g)||QR.is(g):TR.is(g))))};class QF{constructor(g,e){this.edits=g,this.changeAnnotations=e}insert(g,e,I){let t,C;if(void 0===I?t=pR.insert(g,e):bR.is(I)?(C=I,t=uR.insert(g,e,I)):(this.assertChangeAnnotations(this.changeAnnotations),C=this.changeAnnotations.manage(I),t=uR.insert(g,e,C)),this.edits.push(t),void 0!==C)return C}replace(g,e,I){let t,C;if(void 0===I?t=pR.replace(g,e):bR.is(I)?(C=I,t=uR.replace(g,e,I)):(this.assertChangeAnnotations(this.changeAnnotations),C=this.changeAnnotations.manage(I),t=uR.replace(g,e,C)),this.edits.push(t),void 0!==C)return C}delete(g,e){let I,t;if(void 0===e?I=pR.del(g):bR.is(e)?(t=e,I=uR.del(g,e)):(this.assertChangeAnnotations(this.changeAnnotations),t=this.changeAnnotations.manage(e),I=uR.del(g,t)),this.edits.push(I),void 0!==t)return t}add(g){this.edits.push(g)}all(){return this.edits}clear(){this.edits.splice(0,this.edits.length)}assertChangeAnnotations(g){if(void 0===g)throw new Error("Text edit change is not configured to manage change annotations.")}}class MF{constructor(g){this._annotations=void 0===g?Object.create(null):g,this._counter=0,this._size=0}all(){return this._annotations}get size(){return this._size}manage(g,e){let I;if(bR.is(g)?I=g:(I=this.nextId(),e=g),void 0!==this._annotations[I])throw new Error(`Id ${I} is already in use.`);if(void 0===e)throw new Error(`No annotation provided for id ${I}`);return this._annotations[I]=e,this._size++,I}nextId(){return this._counter++,this._counter.toString()}}class YF{constructor(g){this._textEditChanges=Object.create(null),void 0!==g?(this._workspaceEdit=g,g.documentChanges?(this._changeAnnotations=new MF(g.changeAnnotations),g.changeAnnotations=this._changeAnnotations.all(),g.documentChanges.forEach((g=>{if(TR.is(g)){const e=new QF(g.edits,this._changeAnnotations);this._textEditChanges[g.textDocument.uri]=e}}))):g.changes&&Object.keys(g.changes).forEach((e=>{const I=new QF(g.changes[e]);this._textEditChanges[e]=I}))):this._workspaceEdit={}}get edit(){return this.initDocumentChanges(),void 0!==this._changeAnnotations&&(0===this._changeAnnotations.size?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit}getTextEditChange(g){if(yR.is(g)){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");const e={uri:g.uri,version:g.version};let I=this._textEditChanges[e.uri];if(!I){const g=[],t={textDocument:e,edits:g};this._workspaceEdit.documentChanges.push(t),I=new QF(g,this._changeAnnotations),this._textEditChanges[e.uri]=I}return I}{if(this.initChanges(),void 0===this._workspaceEdit.changes)throw new Error("Workspace edit is not configured for normal text edit changes.");let e=this._textEditChanges[g];if(!e){let I=[];this._workspaceEdit.changes[g]=I,e=new QF(I),this._textEditChanges[g]=e}return e}}initDocumentChanges(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._changeAnnotations=new MF,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())}initChanges(){void 0===this._workspaceEdit.documentChanges&&void 0===this._workspaceEdit.changes&&(this._workspaceEdit.changes=Object.create(null))}createFile(g,e,I){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");let t,C,i;if(SR.is(e)||bR.is(e)?t=e:I=e,void 0===t?C=GR.create(g,I):(i=bR.is(t)?t:this._changeAnnotations.manage(t),C=GR.create(g,I,i)),this._workspaceEdit.documentChanges.push(C),void 0!==i)return i}renameFile(g,e,I,t){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");let C,i,l;if(SR.is(I)||bR.is(I)?C=I:t=I,void 0===C?i=kR.create(g,e,t):(l=bR.is(C)?C:this._changeAnnotations.manage(C),i=kR.create(g,e,t,l)),this._workspaceEdit.documentChanges.push(i),void 0!==l)return l}deleteFile(g,e,I){if(this.initDocumentChanges(),void 0===this._workspaceEdit.documentChanges)throw new Error("Workspace edit is not configured for document changes.");let t,C,i;if(SR.is(e)||bR.is(e)?t=e:I=e,void 0===t?C=QR.create(g,I):(i=bR.is(t)?t:this._changeAnnotations.manage(t),C=QR.create(g,I,i)),this._workspaceEdit.documentChanges.push(C),void 0!==i)return i}}!function(g){g.create=function(g){return{uri:g}},g.is=function(g){let e=g;return JF.defined(e)&&JF.string(e.uri)}}(YR||(YR={})),function(g){g.create=function(g,e){return{uri:g,version:e}},g.is=function(g){let e=g;return JF.defined(e)&&JF.string(e.uri)&&JF.integer(e.version)}}(ER||(ER={})),function(g){g.create=function(g,e){return{uri:g,version:e}},g.is=function(g){let e=g;return JF.defined(e)&&JF.string(e.uri)&&(null===e.version||JF.integer(e.version))}}(yR||(yR={})),function(g){g.create=function(g,e,I,t){return{uri:g,languageId:e,version:I,text:t}},g.is=function(g){let e=g;return JF.defined(e)&&JF.string(e.uri)&&JF.string(e.languageId)&&JF.integer(e.version)&&JF.string(e.text)}}(JR||(JR={})),function(g){g.PlainText="plaintext",g.Markdown="markdown",g.is=function(e){const I=e;return I===g.PlainText||I===g.Markdown}}(HR||(HR={})),(wR||(wR={})).is=function(g){const e=g;return JF.objectLiteral(g)&&HR.is(e.kind)&&JF.string(e.value)},function(g){g.Text=1,g.Method=2,g.Function=3,g.Constructor=4,g.Field=5,g.Variable=6,g.Class=7,g.Interface=8,g.Module=9,g.Property=10,g.Unit=11,g.Value=12,g.Enum=13,g.Keyword=14,g.Snippet=15,g.Color=16,g.File=17,g.Reference=18,g.Folder=19,g.EnumMember=20,g.Constant=21,g.Struct=22,g.Event=23,g.Operator=24,g.TypeParameter=25}(XR||(XR={})),function(g){g.PlainText=1,g.Snippet=2}(KR||(KR={})),(zR||(zR={})).Deprecated=1,function(g){g.create=function(g,e,I){return{newText:g,insert:e,replace:I}},g.is=function(g){const e=g;return e&&JF.string(e.newText)&&sR.is(e.insert)&&sR.is(e.replace)}}(DR||(DR={})),function(g){g.asIs=1,g.adjustIndentation=2}(vR||(vR={})),(xR||(xR={})).is=function(g){const e=g;return e&&(JF.string(e.detail)||void 0===e.detail)&&(JF.string(e.description)||void 0===e.description)},(OR||(OR={})).create=function(g){return{label:g}},(fR||(fR={})).create=function(g,e){return{items:g||[],isIncomplete:!!e}},function(g){g.fromPlainText=function(g){return g.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")},g.is=function(g){const e=g;return JF.string(e)||JF.objectLiteral(e)&&JF.string(e.language)&&JF.string(e.value)}}(jR||(jR={})),(LR||(LR={})).is=function(g){let e=g;return!!e&&JF.objectLiteral(e)&&(wR.is(e.contents)||jR.is(e.contents)||JF.typedArray(e.contents,jR.is))&&(void 0===g.range||sR.is(g.range))},(PR||(PR={})).create=function(g,e){return e?{label:g,documentation:e}:{label:g}},(_R||(_R={})).create=function(g,e,...I){let t={label:g};return JF.defined(e)&&(t.documentation=e),JF.defined(I)?t.parameters=I:t.parameters=[],t},function(g){g.Text=1,g.Read=2,g.Write=3}(qR||(qR={})),($R||($R={})).create=function(g,e){let I={range:g};return JF.number(e)&&(I.kind=e),I},function(g){g.File=1,g.Module=2,g.Namespace=3,g.Package=4,g.Class=5,g.Method=6,g.Property=7,g.Field=8,g.Constructor=9,g.Enum=10,g.Interface=11,g.Function=12,g.Variable=13,g.Constant=14,g.String=15,g.Number=16,g.Boolean=17,g.Array=18,g.Object=19,g.Key=20,g.Null=21,g.EnumMember=22,g.Struct=23,g.Event=24,g.Operator=25,g.TypeParameter=26}(gF||(gF={})),(eF||(eF={})).Deprecated=1,(IF||(IF={})).create=function(g,e,I,t,C){let i={name:g,kind:e,location:{uri:t,range:I}};return C&&(i.containerName=C),i},(tF||(tF={})).create=function(g,e,I,t){return void 0!==t?{name:g,kind:e,location:{uri:I,range:t}}:{name:g,kind:e,location:{uri:I}}},function(g){g.create=function(g,e,I,t,C,i){let l={name:g,detail:e,kind:I,range:t,selectionRange:C};return void 0!==i&&(l.children=i),l},g.is=function(g){let e=g;return e&&JF.string(e.name)&&JF.number(e.kind)&&sR.is(e.range)&&sR.is(e.selectionRange)&&(void 0===e.detail||JF.string(e.detail))&&(void 0===e.deprecated||JF.boolean(e.deprecated))&&(void 0===e.children||Array.isArray(e.children))&&(void 0===e.tags||Array.isArray(e.tags))}}(CF||(CF={})),function(g){g.Empty="",g.QuickFix="quickfix",g.Refactor="refactor",g.RefactorExtract="refactor.extract",g.RefactorInline="refactor.inline",g.RefactorRewrite="refactor.rewrite",g.Source="source",g.SourceOrganizeImports="source.organizeImports",g.SourceFixAll="source.fixAll"}(iF||(iF={})),function(g){g.Invoked=1,g.Automatic=2}(lF||(lF={})),function(g){g.create=function(g,e,I){let t={diagnostics:g};return null!=e&&(t.only=e),null!=I&&(t.triggerKind=I),t},g.is=function(g){let e=g;return JF.defined(e)&&JF.typedArray(e.diagnostics,WR.is)&&(void 0===e.only||JF.typedArray(e.only,JF.string))&&(void 0===e.triggerKind||e.triggerKind===lF.Invoked||e.triggerKind===lF.Automatic)}}(nF||(nF={})),function(g){g.create=function(g,e,I){let t={title:g},C=!0;return"string"==typeof e?(C=!1,t.kind=e):NR.is(e)?t.command=e:t.edit=e,C&&void 0!==I&&(t.kind=I),t},g.is=function(g){let e=g;return e&&JF.string(e.title)&&(void 0===e.diagnostics||JF.typedArray(e.diagnostics,WR.is))&&(void 0===e.kind||JF.string(e.kind))&&(void 0!==e.edit||void 0!==e.command)&&(void 0===e.command||NR.is(e.command))&&(void 0===e.isPreferred||JF.boolean(e.isPreferred))&&(void 0===e.edit||MR.is(e.edit))}}(AF||(AF={})),function(g){g.create=function(g,e){let I={range:g};return JF.defined(e)&&(I.data=e),I},g.is=function(g){let e=g;return JF.defined(e)&&sR.is(e.range)&&(JF.undefined(e.command)||NR.is(e.command))}}(dF||(dF={})),function(g){g.create=function(g,e){return{tabSize:g,insertSpaces:e}},g.is=function(g){let e=g;return JF.defined(e)&&JF.uinteger(e.tabSize)&&JF.boolean(e.insertSpaces)}}(oF||(oF={})),function(g){g.create=function(g,e,I){return{range:g,target:e,data:I}},g.is=function(g){let e=g;return JF.defined(e)&&sR.is(e.range)&&(JF.undefined(e.target)||JF.string(e.target))}}(sF||(sF={})),function(g){g.create=function(g,e){return{range:g,parent:e}},g.is=function(e){let I=e;return JF.objectLiteral(I)&&sR.is(I.range)&&(void 0===I.parent||g.is(I.parent))}}(aF||(aF={})),function(g){g.namespace="namespace",g.type="type",g.class="class",g.enum="enum",g.interface="interface",g.struct="struct",g.typeParameter="typeParameter",g.parameter="parameter",g.variable="variable",g.property="property",g.enumMember="enumMember",g.event="event",g.function="function",g.method="method",g.macro="macro",g.keyword="keyword",g.modifier="modifier",g.comment="comment",g.string="string",g.number="number",g.regexp="regexp",g.operator="operator",g.decorator="decorator"}(VF||(VF={})),function(g){g.declaration="declaration",g.definition="definition",g.readonly="readonly",g.static="static",g.deprecated="deprecated",g.abstract="abstract",g.async="async",g.modification="modification",g.documentation="documentation",g.defaultLibrary="defaultLibrary"}(cF||(cF={})),(rF||(rF={})).is=function(g){const e=g;return JF.objectLiteral(e)&&(void 0===e.resultId||"string"==typeof e.resultId)&&Array.isArray(e.data)&&(0===e.data.length||"number"==typeof e.data[0])},function(g){g.create=function(g,e){return{range:g,text:e}},g.is=function(g){const e=g;return null!=e&&sR.is(e.range)&&JF.string(e.text)}}(hF||(hF={})),function(g){g.create=function(g,e,I){return{range:g,variableName:e,caseSensitiveLookup:I}},g.is=function(g){const e=g;return null!=e&&sR.is(e.range)&&JF.boolean(e.caseSensitiveLookup)&&(JF.string(e.variableName)||void 0===e.variableName)}}(UF||(UF={})),function(g){g.create=function(g,e){return{range:g,expression:e}},g.is=function(g){const e=g;return null!=e&&sR.is(e.range)&&(JF.string(e.expression)||void 0===e.expression)}}(ZF||(ZF={})),function(g){g.create=function(g,e){return{frameId:g,stoppedLocation:e}},g.is=function(g){const e=g;return JF.defined(e)&&sR.is(g.stoppedLocation)}}(RF||(RF={})),function(g){g.Type=1,g.Parameter=2,g.is=function(g){return 1===g||2===g}}(FF||(FF={})),function(g){g.create=function(g){return{value:g}},g.is=function(g){const e=g;return JF.objectLiteral(e)&&(void 0===e.tooltip||JF.string(e.tooltip)||wR.is(e.tooltip))&&(void 0===e.location||aR.is(e.location))&&(void 0===e.command||NR.is(e.command))}}(mF||(mF={})),function(g){g.create=function(g,e,I){const t={position:g,label:e};return void 0!==I&&(t.kind=I),t},g.is=function(g){const e=g;return JF.objectLiteral(e)&&oR.is(e.position)&&(JF.string(e.label)||JF.typedArray(e.label,mF.is))&&(void 0===e.kind||FF.is(e.kind))&&void 0===e.textEdits||JF.typedArray(e.textEdits,pR.is)&&(void 0===e.tooltip||JF.string(e.tooltip)||wR.is(e.tooltip))&&(void 0===e.paddingLeft||JF.boolean(e.paddingLeft))&&(void 0===e.paddingRight||JF.boolean(e.paddingRight))}}(BF||(BF={})),(WF||(WF={})).createSnippet=function(g){return{kind:"snippet",value:g}},(NF||(NF={})).create=function(g,e,I,t){return{insertText:g,filterText:e,range:I,command:t}},(pF||(pF={})).create=function(g){return{items:g}},function(g){g.Invoked=0,g.Automatic=1}(SF||(SF={})),(bF||(bF={})).create=function(g,e){return{range:g,text:e}},(uF||(uF={})).create=function(g,e){return{triggerKind:g,selectedCompletionInfo:e}},(TF||(TF={})).is=function(g){const e=g;return JF.objectLiteral(e)&&nR.is(e.uri)&&JF.string(e.name)};const EF=["\n","\r\n","\r"];var yF,JF;!function(g){function e(g,I){if(g.length<=1)return g;const t=g.length/2|0,C=g.slice(0,t),i=g.slice(t);e(C,I),e(i,I);let l=0,n=0,A=0;for(;l<C.length&&n<i.length;)I(C[l],i[n])<=0?g[A++]=C[l++]:g[A++]=i[n++];for(;l<C.length;)g[A++]=C[l++];for(;n<i.length;)g[A++]=i[n++];return g}g.create=function(g,e,I,t){return new HF(g,e,I,t)},g.is=function(g){let e=g;return!!(JF.defined(e)&&JF.string(e.uri)&&(JF.undefined(e.languageId)||JF.string(e.languageId))&&JF.uinteger(e.lineCount)&&JF.func(e.getText)&&JF.func(e.positionAt)&&JF.func(e.offsetAt))},g.applyEdits=function(g,I){let t=g.getText(),C=e(I,((g,e)=>{let I=g.range.start.line-e.range.start.line;return 0===I?g.range.start.character-e.range.start.character:I})),i=t.length;for(let e=C.length-1;e>=0;e--){let I=C[e],l=g.offsetAt(I.range.start),n=g.offsetAt(I.range.end);if(!(n<=i))throw new Error("Overlapping edit");t=t.substring(0,l)+I.newText+t.substring(n,t.length),i=l}return t}}(yF||(yF={}));class HF{constructor(g,e,I,t){this._uri=g,this._languageId=e,this._version=I,this._content=t,this._lineOffsets=void 0}get uri(){return this._uri}get languageId(){return this._languageId}get version(){return this._version}getText(g){if(g){let e=this.offsetAt(g.start),I=this.offsetAt(g.end);return this._content.substring(e,I)}return this._content}update(g,e){this._content=g.text,this._version=e,this._lineOffsets=void 0}getLineOffsets(){if(void 0===this._lineOffsets){let g=[],e=this._content,I=!0;for(let t=0;t<e.length;t++){I&&(g.push(t),I=!1);let C=e.charAt(t);I="\r"===C||"\n"===C,"\r"===C&&t+1<e.length&&"\n"===e.charAt(t+1)&&t++}I&&e.length>0&&g.push(e.length),this._lineOffsets=g}return this._lineOffsets}positionAt(g){g=Math.max(Math.min(g,this._content.length),0);let e=this.getLineOffsets(),I=0,t=e.length;if(0===t)return oR.create(0,g);for(;I<t;){let C=Math.floor((I+t)/2);e[C]>g?t=C:I=C+1}let C=I-1;return oR.create(C,g-e[C])}offsetAt(g){let e=this.getLineOffsets();if(g.line>=e.length)return this._content.length;if(g.line<0)return 0;let I=e[g.line],t=g.line+1<e.length?e[g.line+1]:this._content.length;return Math.max(Math.min(I+g.character,t),I)}get lineCount(){return this.getLineOffsets().length}}!function(g){const e=Object.prototype.toString;g.defined=function(g){return typeof g<"u"},g.undefined=function(g){return typeof g>"u"},g.boolean=function(g){return!0===g||!1===g},g.string=function(g){return"[object String]"===e.call(g)},g.number=function(g){return"[object Number]"===e.call(g)},g.numberRange=function(g,I,t){return"[object Number]"===e.call(g)&&I<=g&&g<=t},g.integer=function(g){return"[object Number]"===e.call(g)&&-2147483648<=g&&g<=2147483647},g.uinteger=function(g){return"[object Number]"===e.call(g)&&0<=g&&g<=2147483647},g.func=function(g){return"[object Function]"===e.call(g)},g.objectLiteral=function(g){return null!==g&&"object"==typeof g},g.typedArray=function(g,e){return Array.isArray(g)&&g.every(e)}}(JF||(JF={}));const wF=Object.freeze(Object.defineProperty({__proto__:null,get AnnotatedTextEdit(){return uR},get ChangeAnnotation(){return SR},get ChangeAnnotationIdentifier(){return bR},get CodeAction(){return AF},get CodeActionContext(){return nF},get CodeActionKind(){return iF},get CodeActionTriggerKind(){return lF},get CodeDescription(){return BR},get CodeLens(){return dF},get Color(){return cR},get ColorInformation(){return rR},get ColorPresentation(){return hR},get Command(){return NR},get CompletionItem(){return OR},get CompletionItemKind(){return XR},get CompletionItemLabelDetails(){return xR},get CompletionItemTag(){return zR},get CompletionList(){return fR},get CreateFile(){return GR},get DeleteFile(){return QR},get Diagnostic(){return WR},get DiagnosticRelatedInformation(){return RR},get DiagnosticSeverity(){return FR},get DiagnosticTag(){return mR},get DocumentHighlight(){return $R},get DocumentHighlightKind(){return qR},get DocumentLink(){return sF},get DocumentSymbol(){return CF},get DocumentUri(){return lR},EOL:EF,get FoldingRange(){return ZR},get FoldingRangeKind(){return UR},get FormattingOptions(){return oF},get Hover(){return LR},get InlayHint(){return BF},get InlayHintKind(){return FF},get InlayHintLabelPart(){return mF},get InlineCompletionContext(){return uF},get InlineCompletionItem(){return NF},get InlineCompletionList(){return pF},get InlineCompletionTriggerKind(){return SF},get InlineValueContext(){return RF},get InlineValueEvaluatableExpression(){return ZF},get InlineValueText(){return hF},get InlineValueVariableLookup(){return UF},get InsertReplaceEdit(){return DR},get InsertTextFormat(){return KR},get InsertTextMode(){return vR},get Location(){return aR},get LocationLink(){return VR},get MarkedString(){return jR},get MarkupContent(){return wR},get MarkupKind(){return HR},get OptionalVersionedTextDocumentIdentifier(){return yR},get ParameterInformation(){return PR},get Position(){return oR},get Range(){return sR},get RenameFile(){return kR},get SelectedCompletionInfo(){return bF},get SelectionRange(){return aF},get SemanticTokenModifiers(){return cF},get SemanticTokenTypes(){return VF},get SemanticTokens(){return rF},get SignatureInformation(){return _R},get StringValue(){return WF},get SymbolInformation(){return IF},get SymbolKind(){return gF},get SymbolTag(){return eF},get TextDocument(){return yF},get TextDocumentEdit(){return TR},get TextDocumentIdentifier(){return YR},get TextDocumentItem(){return JR},get TextEdit(){return pR},get URI(){return nR},get VersionedTextDocumentIdentifier(){return ER},WorkspaceChange:YF,get WorkspaceEdit(){return MR},get WorkspaceFolder(){return TF},get WorkspaceSymbol(){return tF},get integer(){return AR},get uinteger(){return dR}},Symbol.toStringTag,{value:"Module"})),XF=Pg(wF);var KF={};Object.defineProperty(KF,"__esModule",{value:!0}),KF.ProtocolNotificationType=KF.ProtocolNotificationType0=KF.ProtocolRequestType=KF.ProtocolRequestType0=KF.RegistrationType=KF.MessageDirection=void 0;const zF=AU;var DF;!function(g){g.clientToServer="clientToServer",g.serverToClient="serverToClient",g.both="both"}(DF||(KF.MessageDirection=DF={}));class vF{constructor(g){this.method=g}}KF.RegistrationType=vF;class xF extends zF.RequestType0{constructor(g){super(g)}}KF.ProtocolRequestType0=xF;class OF extends zF.RequestType{constructor(g){super(g,zF.ParameterStructures.byName)}}KF.ProtocolRequestType=OF;class fF extends zF.NotificationType0{constructor(g){super(g)}}KF.ProtocolNotificationType0=fF;class jF extends zF.NotificationType{constructor(g){super(g,zF.ParameterStructures.byName)}}KF.ProtocolNotificationType=jF;var LF={},PF={};function _F(g){return!0===g||!1===g}function qF(g){return"string"==typeof g||g instanceof String}function $F(g){return"number"==typeof g||g instanceof Number}function gm(g){return g instanceof Error}function em(g){return"function"==typeof g}function Im(g){return Array.isArray(g)}function tm(g){return Im(g)&&g.every((g=>qF(g)))}function Cm(g,e){return Array.isArray(g)&&g.every(e)}function im(g){return null!==g&&"object"==typeof g}Object.defineProperty(PF,"__esModule",{value:!0}),PF.objectLiteral=PF.typedArray=PF.stringArray=PF.array=PF.func=PF.error=PF.number=PF.string=PF.boolean=void 0,PF.boolean=_F,PF.string=qF,PF.number=$F,PF.error=gm,PF.func=em,PF.array=Im,PF.stringArray=tm,PF.typedArray=Cm,PF.objectLiteral=im;var lm={};Object.defineProperty(lm,"__esModule",{value:!0}),lm.ImplementationRequest=void 0;const nm=KF;var Am;!function(g){g.method="textDocument/implementation",g.messageDirection=nm.MessageDirection.clientToServer,g.type=new nm.ProtocolRequestType(g.method)}(Am||(lm.ImplementationRequest=Am={}));var dm={};Object.defineProperty(dm,"__esModule",{value:!0}),dm.TypeDefinitionRequest=void 0;const om=KF;var sm;!function(g){g.method="textDocument/typeDefinition",g.messageDirection=om.MessageDirection.clientToServer,g.type=new om.ProtocolRequestType(g.method)}(sm||(dm.TypeDefinitionRequest=sm={}));var am={};Object.defineProperty(am,"__esModule",{value:!0}),am.DidChangeWorkspaceFoldersNotification=am.WorkspaceFoldersRequest=void 0;const Vm=KF;var cm,rm;!function(g){g.method="workspace/workspaceFolders",g.messageDirection=Vm.MessageDirection.serverToClient,g.type=new Vm.ProtocolRequestType0(g.method)}(cm||(am.WorkspaceFoldersRequest=cm={})),function(g){g.method="workspace/didChangeWorkspaceFolders",g.messageDirection=Vm.MessageDirection.clientToServer,g.type=new Vm.ProtocolNotificationType(g.method)}(rm||(am.DidChangeWorkspaceFoldersNotification=rm={}));var hm={};Object.defineProperty(hm,"__esModule",{value:!0}),hm.ConfigurationRequest=void 0;const Um=KF;var Zm;!function(g){g.method="workspace/configuration",g.messageDirection=Um.MessageDirection.serverToClient,g.type=new Um.ProtocolRequestType(g.method)}(Zm||(hm.ConfigurationRequest=Zm={}));var Rm={};Object.defineProperty(Rm,"__esModule",{value:!0}),Rm.ColorPresentationRequest=Rm.DocumentColorRequest=void 0;const Fm=KF;var mm,Bm;!function(g){g.method="textDocument/documentColor",g.messageDirection=Fm.MessageDirection.clientToServer,g.type=new Fm.ProtocolRequestType(g.method)}(mm||(Rm.DocumentColorRequest=mm={})),function(g){g.method="textDocument/colorPresentation",g.messageDirection=Fm.MessageDirection.clientToServer,g.type=new Fm.ProtocolRequestType(g.method)}(Bm||(Rm.ColorPresentationRequest=Bm={}));var Wm={};Object.defineProperty(Wm,"__esModule",{value:!0}),Wm.FoldingRangeRefreshRequest=Wm.FoldingRangeRequest=void 0;const Nm=KF;var pm,Sm;!function(g){g.method="textDocument/foldingRange",g.messageDirection=Nm.MessageDirection.clientToServer,g.type=new Nm.ProtocolRequestType(g.method)}(pm||(Wm.FoldingRangeRequest=pm={})),function(g){g.method="workspace/foldingRange/refresh",g.messageDirection=Nm.MessageDirection.serverToClient,g.type=new Nm.ProtocolRequestType0(g.method)}(Sm||(Wm.FoldingRangeRefreshRequest=Sm={}));var bm={};Object.defineProperty(bm,"__esModule",{value:!0}),bm.DeclarationRequest=void 0;const um=KF;var Tm;!function(g){g.method="textDocument/declaration",g.messageDirection=um.MessageDirection.clientToServer,g.type=new um.ProtocolRequestType(g.method)}(Tm||(bm.DeclarationRequest=Tm={}));var Gm={};Object.defineProperty(Gm,"__esModule",{value:!0}),Gm.SelectionRangeRequest=void 0;const km=KF;var Qm;!function(g){g.method="textDocument/selectionRange",g.messageDirection=km.MessageDirection.clientToServer,g.type=new km.ProtocolRequestType(g.method)}(Qm||(Gm.SelectionRangeRequest=Qm={}));var Mm={};Object.defineProperty(Mm,"__esModule",{value:!0}),Mm.WorkDoneProgressCancelNotification=Mm.WorkDoneProgressCreateRequest=Mm.WorkDoneProgress=void 0;const Ym=AU,Em=KF;var ym,Jm,Hm;!function(g){g.type=new Ym.ProgressType,g.is=function(e){return e===g.type}}(ym||(Mm.WorkDoneProgress=ym={})),function(g){g.method="window/workDoneProgress/create",g.messageDirection=Em.MessageDirection.serverToClient,g.type=new Em.ProtocolRequestType(g.method)}(Jm||(Mm.WorkDoneProgressCreateRequest=Jm={})),function(g){g.method="window/workDoneProgress/cancel",g.messageDirection=Em.MessageDirection.clientToServer,g.type=new Em.ProtocolNotificationType(g.method)}(Hm||(Mm.WorkDoneProgressCancelNotification=Hm={}));var wm={};Object.defineProperty(wm,"__esModule",{value:!0}),wm.CallHierarchyOutgoingCallsRequest=wm.CallHierarchyIncomingCallsRequest=wm.CallHierarchyPrepareRequest=void 0;const Xm=KF;var Km,zm,Dm;!function(g){g.method="textDocument/prepareCallHierarchy",g.messageDirection=Xm.MessageDirection.clientToServer,g.type=new Xm.ProtocolRequestType(g.method)}(Km||(wm.CallHierarchyPrepareRequest=Km={})),function(g){g.method="callHierarchy/incomingCalls",g.messageDirection=Xm.MessageDirection.clientToServer,g.type=new Xm.ProtocolRequestType(g.method)}(zm||(wm.CallHierarchyIncomingCallsRequest=zm={})),function(g){g.method="callHierarchy/outgoingCalls",g.messageDirection=Xm.MessageDirection.clientToServer,g.type=new Xm.ProtocolRequestType(g.method)}(Dm||(wm.CallHierarchyOutgoingCallsRequest=Dm={}));var vm={};Object.defineProperty(vm,"__esModule",{value:!0}),vm.SemanticTokensRefreshRequest=vm.SemanticTokensRangeRequest=vm.SemanticTokensDeltaRequest=vm.SemanticTokensRequest=vm.SemanticTokensRegistrationType=vm.TokenFormat=void 0;const xm=KF;var Om,fm,jm,Lm,Pm,_m;(Om||(vm.TokenFormat=Om={})).Relative="relative",function(g){g.method="textDocument/semanticTokens",g.type=new xm.RegistrationType(g.method)}(fm||(vm.SemanticTokensRegistrationType=fm={})),function(g){g.method="textDocument/semanticTokens/full",g.messageDirection=xm.MessageDirection.clientToServer,g.type=new xm.ProtocolRequestType(g.method),g.registrationMethod=fm.method}(jm||(vm.SemanticTokensRequest=jm={})),function(g){g.method="textDocument/semanticTokens/full/delta",g.messageDirection=xm.MessageDirection.clientToServer,g.type=new xm.ProtocolRequestType(g.method),g.registrationMethod=fm.method}(Lm||(vm.SemanticTokensDeltaRequest=Lm={})),function(g){g.method="textDocument/semanticTokens/range",g.messageDirection=xm.MessageDirection.clientToServer,g.type=new xm.ProtocolRequestType(g.method),g.registrationMethod=fm.method}(Pm||(vm.SemanticTokensRangeRequest=Pm={})),function(g){g.method="workspace/semanticTokens/refresh",g.messageDirection=xm.MessageDirection.serverToClient,g.type=new xm.ProtocolRequestType0(g.method)}(_m||(vm.SemanticTokensRefreshRequest=_m={}));var qm={};Object.defineProperty(qm,"__esModule",{value:!0}),qm.ShowDocumentRequest=void 0;const $m=KF;var gB;!function(g){g.method="window/showDocument",g.messageDirection=$m.MessageDirection.serverToClient,g.type=new $m.ProtocolRequestType(g.method)}(gB||(qm.ShowDocumentRequest=gB={}));var eB={};Object.defineProperty(eB,"__esModule",{value:!0}),eB.LinkedEditingRangeRequest=void 0;const IB=KF;var tB;!function(g){g.method="textDocument/linkedEditingRange",g.messageDirection=IB.MessageDirection.clientToServer,g.type=new IB.ProtocolRequestType(g.method)}(tB||(eB.LinkedEditingRangeRequest=tB={}));var CB={};Object.defineProperty(CB,"__esModule",{value:!0}),CB.WillDeleteFilesRequest=CB.DidDeleteFilesNotification=CB.DidRenameFilesNotification=CB.WillRenameFilesRequest=CB.DidCreateFilesNotification=CB.WillCreateFilesRequest=CB.FileOperationPatternKind=void 0;const iB=KF;var lB,nB,AB,dB,oB,sB,aB;!function(g){g.file="file",g.folder="folder"}(lB||(CB.FileOperationPatternKind=lB={})),function(g){g.method="workspace/willCreateFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolRequestType(g.method)}(nB||(CB.WillCreateFilesRequest=nB={})),function(g){g.method="workspace/didCreateFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolNotificationType(g.method)}(AB||(CB.DidCreateFilesNotification=AB={})),function(g){g.method="workspace/willRenameFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolRequestType(g.method)}(dB||(CB.WillRenameFilesRequest=dB={})),function(g){g.method="workspace/didRenameFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolNotificationType(g.method)}(oB||(CB.DidRenameFilesNotification=oB={})),function(g){g.method="workspace/didDeleteFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolNotificationType(g.method)}(sB||(CB.DidDeleteFilesNotification=sB={})),function(g){g.method="workspace/willDeleteFiles",g.messageDirection=iB.MessageDirection.clientToServer,g.type=new iB.ProtocolRequestType(g.method)}(aB||(CB.WillDeleteFilesRequest=aB={}));var VB={};Object.defineProperty(VB,"__esModule",{value:!0}),VB.MonikerRequest=VB.MonikerKind=VB.UniquenessLevel=void 0;const cB=KF;var rB,hB,UB;!function(g){g.document="document",g.project="project",g.group="group",g.scheme="scheme",g.global="global"}(rB||(VB.UniquenessLevel=rB={})),function(g){g.$import="import",g.$export="export",g.local="local"}(hB||(VB.MonikerKind=hB={})),function(g){g.method="textDocument/moniker",g.messageDirection=cB.MessageDirection.clientToServer,g.type=new cB.ProtocolRequestType(g.method)}(UB||(VB.MonikerRequest=UB={}));var ZB={};Object.defineProperty(ZB,"__esModule",{value:!0}),ZB.TypeHierarchySubtypesRequest=ZB.TypeHierarchySupertypesRequest=ZB.TypeHierarchyPrepareRequest=void 0;const RB=KF;var FB,mB,BB;!function(g){g.method="textDocument/prepareTypeHierarchy",g.messageDirection=RB.MessageDirection.clientToServer,g.type=new RB.ProtocolRequestType(g.method)}(FB||(ZB.TypeHierarchyPrepareRequest=FB={})),function(g){g.method="typeHierarchy/supertypes",g.messageDirection=RB.MessageDirection.clientToServer,g.type=new RB.ProtocolRequestType(g.method)}(mB||(ZB.TypeHierarchySupertypesRequest=mB={})),function(g){g.method="typeHierarchy/subtypes",g.messageDirection=RB.MessageDirection.clientToServer,g.type=new RB.ProtocolRequestType(g.method)}(BB||(ZB.TypeHierarchySubtypesRequest=BB={}));var WB={};Object.defineProperty(WB,"__esModule",{value:!0}),WB.InlineValueRefreshRequest=WB.InlineValueRequest=void 0;const NB=KF;var pB,SB;!function(g){g.method="textDocument/inlineValue",g.messageDirection=NB.MessageDirection.clientToServer,g.type=new NB.ProtocolRequestType(g.method)}(pB||(WB.InlineValueRequest=pB={})),function(g){g.method="workspace/inlineValue/refresh",g.messageDirection=NB.MessageDirection.serverToClient,g.type=new NB.ProtocolRequestType0(g.method)}(SB||(WB.InlineValueRefreshRequest=SB={}));var bB={};Object.defineProperty(bB,"__esModule",{value:!0}),bB.InlayHintRefreshRequest=bB.InlayHintResolveRequest=bB.InlayHintRequest=void 0;const uB=KF;var TB,GB,kB;!function(g){g.method="textDocument/inlayHint",g.messageDirection=uB.MessageDirection.clientToServer,g.type=new uB.ProtocolRequestType(g.method)}(TB||(bB.InlayHintRequest=TB={})),function(g){g.method="inlayHint/resolve",g.messageDirection=uB.MessageDirection.clientToServer,g.type=new uB.ProtocolRequestType(g.method)}(GB||(bB.InlayHintResolveRequest=GB={})),function(g){g.method="workspace/inlayHint/refresh",g.messageDirection=uB.MessageDirection.serverToClient,g.type=new uB.ProtocolRequestType0(g.method)}(kB||(bB.InlayHintRefreshRequest=kB={}));var QB={};Object.defineProperty(QB,"__esModule",{value:!0}),QB.DiagnosticRefreshRequest=QB.WorkspaceDiagnosticRequest=QB.DocumentDiagnosticRequest=QB.DocumentDiagnosticReportKind=QB.DiagnosticServerCancellationData=void 0;const MB=AU,YB=PF,EB=KF;var yB,JB,HB,wB,XB;(yB||(QB.DiagnosticServerCancellationData=yB={})).is=function(g){const e=g;return e&&YB.boolean(e.retriggerRequest)},function(g){g.Full="full",g.Unchanged="unchanged"}(JB||(QB.DocumentDiagnosticReportKind=JB={})),function(g){g.method="textDocument/diagnostic",g.messageDirection=EB.MessageDirection.clientToServer,g.type=new EB.ProtocolRequestType(g.method),g.partialResult=new MB.ProgressType}(HB||(QB.DocumentDiagnosticRequest=HB={})),function(g){g.method="workspace/diagnostic",g.messageDirection=EB.MessageDirection.clientToServer,g.type=new EB.ProtocolRequestType(g.method),g.partialResult=new MB.ProgressType}(wB||(QB.WorkspaceDiagnosticRequest=wB={})),function(g){g.method="workspace/diagnostic/refresh",g.messageDirection=EB.MessageDirection.serverToClient,g.type=new EB.ProtocolRequestType0(g.method)}(XB||(QB.DiagnosticRefreshRequest=XB={}));var KB={};Object.defineProperty(KB,"__esModule",{value:!0}),KB.DidCloseNotebookDocumentNotification=KB.DidSaveNotebookDocumentNotification=KB.DidChangeNotebookDocumentNotification=KB.NotebookCellArrayChange=KB.DidOpenNotebookDocumentNotification=KB.NotebookDocumentSyncRegistrationType=KB.NotebookDocument=KB.NotebookCell=KB.ExecutionSummary=KB.NotebookCellKind=void 0;const zB=XF,DB=PF,vB=KF;var xB,OB,fB,jB,LB,PB,_B,qB,$B,gW;!function(g){g.Markup=1,g.Code=2,g.is=function(g){return 1===g||2===g}}(xB||(KB.NotebookCellKind=xB={})),function(g){g.create=function(g,e){const I={executionOrder:g};return(!0===e||!1===e)&&(I.success=e),I},g.is=function(g){const e=g;return DB.objectLiteral(e)&&zB.uinteger.is(e.executionOrder)&&(void 0===e.success||DB.boolean(e.success))},g.equals=function(g,e){return g===e||null!=g&&null!=e&&g.executionOrder===e.executionOrder&&g.success===e.success}}(OB||(KB.ExecutionSummary=OB={})),function(g){function e(g,I){if(g===I)return!0;if(null==g||null==I||typeof g!=typeof I||"object"!=typeof g)return!1;const t=Array.isArray(g),C=Array.isArray(I);if(t!==C)return!1;if(t&&C){if(g.length!==I.length)return!1;for(let t=0;t<g.length;t++)if(!e(g[t],I[t]))return!1}if(DB.objectLiteral(g)&&DB.objectLiteral(I)){const t=Object.keys(g),C=Object.keys(I);if(t.length!==C.length||(t.sort(),C.sort(),!e(t,C)))return!1;for(let C=0;C<t.length;C++){const i=t[C];if(!e(g[i],I[i]))return!1}}return!0}g.create=function(g,e){return{kind:g,document:e}},g.is=function(g){const e=g;return DB.objectLiteral(e)&&xB.is(e.kind)&&zB.DocumentUri.is(e.document)&&(void 0===e.metadata||DB.objectLiteral(e.metadata))},g.diff=function(g,I){const t=new Set;return g.document!==I.document&&t.add("document"),g.kind!==I.kind&&t.add("kind"),g.executionSummary!==I.executionSummary&&t.add("executionSummary"),(void 0!==g.metadata||void 0!==I.metadata)&&!e(g.metadata,I.metadata)&&t.add("metadata"),(void 0!==g.executionSummary||void 0!==I.executionSummary)&&!OB.equals(g.executionSummary,I.executionSummary)&&t.add("executionSummary"),t}}(fB||(KB.NotebookCell=fB={})),function(g){g.create=function(g,e,I,t){return{uri:g,notebookType:e,version:I,cells:t}},g.is=function(g){const e=g;return DB.objectLiteral(e)&&DB.string(e.uri)&&zB.integer.is(e.version)&&DB.typedArray(e.cells,fB.is)}}(jB||(KB.NotebookDocument=jB={})),function(g){g.method="notebookDocument/sync",g.messageDirection=vB.MessageDirection.clientToServer,g.type=new vB.RegistrationType(g.method)}(LB||(KB.NotebookDocumentSyncRegistrationType=LB={})),function(g){g.method="notebookDocument/didOpen",g.messageDirection=vB.MessageDirection.clientToServer,g.type=new vB.ProtocolNotificationType(g.method),g.registrationMethod=LB.method}(PB||(KB.DidOpenNotebookDocumentNotification=PB={})),function(g){g.is=function(g){const e=g;return DB.objectLiteral(e)&&zB.uinteger.is(e.start)&&zB.uinteger.is(e.deleteCount)&&(void 0===e.cells||DB.typedArray(e.cells,fB.is))},g.create=function(g,e,I){const t={start:g,deleteCount:e};return void 0!==I&&(t.cells=I),t}}(_B||(KB.NotebookCellArrayChange=_B={})),function(g){g.method="notebookDocument/didChange",g.messageDirection=vB.MessageDirection.clientToServer,g.type=new vB.ProtocolNotificationType(g.method),g.registrationMethod=LB.method}(qB||(KB.DidChangeNotebookDocumentNotification=qB={})),function(g){g.method="notebookDocument/didSave",g.messageDirection=vB.MessageDirection.clientToServer,g.type=new vB.ProtocolNotificationType(g.method),g.registrationMethod=LB.method}($B||(KB.DidSaveNotebookDocumentNotification=$B={})),function(g){g.method="notebookDocument/didClose",g.messageDirection=vB.MessageDirection.clientToServer,g.type=new vB.ProtocolNotificationType(g.method),g.registrationMethod=LB.method}(gW||(KB.DidCloseNotebookDocumentNotification=gW={}));var eW={};Object.defineProperty(eW,"__esModule",{value:!0}),eW.InlineCompletionRequest=void 0;const IW=KF;var tW;!function(g){g.method="textDocument/inlineCompletion",g.messageDirection=IW.MessageDirection.clientToServer,g.type=new IW.ProtocolRequestType(g.method)}(tW||(eW.InlineCompletionRequest=tW={})),function(g){Object.defineProperty(g,"__esModule",{value:!0}),g.WorkspaceSymbolRequest=g.CodeActionResolveRequest=g.CodeActionRequest=g.DocumentSymbolRequest=g.DocumentHighlightRequest=g.ReferencesRequest=g.DefinitionRequest=g.SignatureHelpRequest=g.SignatureHelpTriggerKind=g.HoverRequest=g.CompletionResolveRequest=g.CompletionRequest=g.CompletionTriggerKind=g.PublishDiagnosticsNotification=g.WatchKind=g.RelativePattern=g.FileChangeType=g.DidChangeWatchedFilesNotification=g.WillSaveTextDocumentWaitUntilRequest=g.WillSaveTextDocumentNotification=g.TextDocumentSaveReason=g.DidSaveTextDocumentNotification=g.DidCloseTextDocumentNotification=g.DidChangeTextDocumentNotification=g.TextDocumentContentChangeEvent=g.DidOpenTextDocumentNotification=g.TextDocumentSyncKind=g.TelemetryEventNotification=g.LogMessageNotification=g.ShowMessageRequest=g.ShowMessageNotification=g.MessageType=g.DidChangeConfigurationNotification=g.ExitNotification=g.ShutdownRequest=g.InitializedNotification=g.InitializeErrorCodes=g.InitializeRequest=g.WorkDoneProgressOptions=g.TextDocumentRegistrationOptions=g.StaticRegistrationOptions=g.PositionEncodingKind=g.FailureHandlingKind=g.ResourceOperationKind=g.UnregistrationRequest=g.RegistrationRequest=g.DocumentSelector=g.NotebookCellTextDocumentFilter=g.NotebookDocumentFilter=g.TextDocumentFilter=void 0,g.MonikerRequest=g.MonikerKind=g.UniquenessLevel=g.WillDeleteFilesRequest=g.DidDeleteFilesNotification=g.WillRenameFilesRequest=g.DidRenameFilesNotification=g.WillCreateFilesRequest=g.DidCreateFilesNotification=g.FileOperationPatternKind=g.LinkedEditingRangeRequest=g.ShowDocumentRequest=g.SemanticTokensRegistrationType=g.SemanticTokensRefreshRequest=g.SemanticTokensRangeRequest=g.SemanticTokensDeltaRequest=g.SemanticTokensRequest=g.TokenFormat=g.CallHierarchyPrepareRequest=g.CallHierarchyOutgoingCallsRequest=g.CallHierarchyIncomingCallsRequest=g.WorkDoneProgressCancelNotification=g.WorkDoneProgressCreateRequest=g.WorkDoneProgress=g.SelectionRangeRequest=g.DeclarationRequest=g.FoldingRangeRefreshRequest=g.FoldingRangeRequest=g.ColorPresentationRequest=g.DocumentColorRequest=g.ConfigurationRequest=g.DidChangeWorkspaceFoldersNotification=g.WorkspaceFoldersRequest=g.TypeDefinitionRequest=g.ImplementationRequest=g.ApplyWorkspaceEditRequest=g.ExecuteCommandRequest=g.PrepareRenameRequest=g.RenameRequest=g.PrepareSupportDefaultBehavior=g.DocumentOnTypeFormattingRequest=g.DocumentRangesFormattingRequest=g.DocumentRangeFormattingRequest=g.DocumentFormattingRequest=g.DocumentLinkResolveRequest=g.DocumentLinkRequest=g.CodeLensRefreshRequest=g.CodeLensResolveRequest=g.CodeLensRequest=g.WorkspaceSymbolResolveRequest=void 0,g.InlineCompletionRequest=g.DidCloseNotebookDocumentNotification=g.DidSaveNotebookDocumentNotification=g.DidChangeNotebookDocumentNotification=g.NotebookCellArrayChange=g.DidOpenNotebookDocumentNotification=g.NotebookDocumentSyncRegistrationType=g.NotebookDocument=g.NotebookCell=g.ExecutionSummary=g.NotebookCellKind=g.DiagnosticRefreshRequest=g.WorkspaceDiagnosticRequest=g.DocumentDiagnosticRequest=g.DocumentDiagnosticReportKind=g.DiagnosticServerCancellationData=g.InlayHintRefreshRequest=g.InlayHintResolveRequest=g.InlayHintRequest=g.InlineValueRefreshRequest=g.InlineValueRequest=g.TypeHierarchySupertypesRequest=g.TypeHierarchySubtypesRequest=g.TypeHierarchyPrepareRequest=void 0;const e=KF,I=XF,t=PF,C=lm;Object.defineProperty(g,"ImplementationRequest",{enumerable:!0,get:function(){return C.ImplementationRequest}});const i=dm;Object.defineProperty(g,"TypeDefinitionRequest",{enumerable:!0,get:function(){return i.TypeDefinitionRequest}});const l=am;Object.defineProperty(g,"WorkspaceFoldersRequest",{enumerable:!0,get:function(){return l.WorkspaceFoldersRequest}}),Object.defineProperty(g,"DidChangeWorkspaceFoldersNotification",{enumerable:!0,get:function(){return l.DidChangeWorkspaceFoldersNotification}});const n=hm;Object.defineProperty(g,"ConfigurationRequest",{enumerable:!0,get:function(){return n.ConfigurationRequest}});const A=Rm;Object.defineProperty(g,"DocumentColorRequest",{enumerable:!0,get:function(){return A.DocumentColorRequest}}),Object.defineProperty(g,"ColorPresentationRequest",{enumerable:!0,get:function(){return A.ColorPresentationRequest}});const d=Wm;Object.defineProperty(g,"FoldingRangeRequest",{enumerable:!0,get:function(){return d.FoldingRangeRequest}}),Object.defineProperty(g,"FoldingRangeRefreshRequest",{enumerable:!0,get:function(){return d.FoldingRangeRefreshRequest}});const o=bm;Object.defineProperty(g,"DeclarationRequest",{enumerable:!0,get:function(){return o.DeclarationRequest}});const s=Gm;Object.defineProperty(g,"SelectionRangeRequest",{enumerable:!0,get:function(){return s.SelectionRangeRequest}});const a=Mm;Object.defineProperty(g,"WorkDoneProgress",{enumerable:!0,get:function(){return a.WorkDoneProgress}}),Object.defineProperty(g,"WorkDoneProgressCreateRequest",{enumerable:!0,get:function(){return a.WorkDoneProgressCreateRequest}}),Object.defineProperty(g,"WorkDoneProgressCancelNotification",{enumerable:!0,get:function(){return a.WorkDoneProgressCancelNotification}});const V=wm;Object.defineProperty(g,"CallHierarchyIncomingCallsRequest",{enumerable:!0,get:function(){return V.CallHierarchyIncomingCallsRequest}}),Object.defineProperty(g,"CallHierarchyOutgoingCallsRequest",{enumerable:!0,get:function(){return V.CallHierarchyOutgoingCallsRequest}}),Object.defineProperty(g,"CallHierarchyPrepareRequest",{enumerable:!0,get:function(){return V.CallHierarchyPrepareRequest}});const c=vm;Object.defineProperty(g,"TokenFormat",{enumerable:!0,get:function(){return c.TokenFormat}}),Object.defineProperty(g,"SemanticTokensRequest",{enumerable:!0,get:function(){return c.SemanticTokensRequest}}),Object.defineProperty(g,"SemanticTokensDeltaRequest",{enumerable:!0,get:function(){return c.SemanticTokensDeltaRequest}}),Object.defineProperty(g,"SemanticTokensRangeRequest",{enumerable:!0,get:function(){return c.SemanticTokensRangeRequest}}),Object.defineProperty(g,"SemanticTokensRefreshRequest",{enumerable:!0,get:function(){return c.SemanticTokensRefreshRequest}}),Object.defineProperty(g,"SemanticTokensRegistrationType",{enumerable:!0,get:function(){return c.SemanticTokensRegistrationType}});const r=qm;Object.defineProperty(g,"ShowDocumentRequest",{enumerable:!0,get:function(){return r.ShowDocumentRequest}});const h=eB;Object.defineProperty(g,"LinkedEditingRangeRequest",{enumerable:!0,get:function(){return h.LinkedEditingRangeRequest}});const U=CB;Object.defineProperty(g,"FileOperationPatternKind",{enumerable:!0,get:function(){return U.FileOperationPatternKind}}),Object.defineProperty(g,"DidCreateFilesNotification",{enumerable:!0,get:function(){return U.DidCreateFilesNotification}}),Object.defineProperty(g,"WillCreateFilesRequest",{enumerable:!0,get:function(){return U.WillCreateFilesRequest}}),Object.defineProperty(g,"DidRenameFilesNotification",{enumerable:!0,get:function(){return U.DidRenameFilesNotification}}),Object.defineProperty(g,"WillRenameFilesRequest",{enumerable:!0,get:function(){return U.WillRenameFilesRequest}}),Object.defineProperty(g,"DidDeleteFilesNotification",{enumerable:!0,get:function(){return U.DidDeleteFilesNotification}}),Object.defineProperty(g,"WillDeleteFilesRequest",{enumerable:!0,get:function(){return U.WillDeleteFilesRequest}});const Z=VB;Object.defineProperty(g,"UniquenessLevel",{enumerable:!0,get:function(){return Z.UniquenessLevel}}),Object.defineProperty(g,"MonikerKind",{enumerable:!0,get:function(){return Z.MonikerKind}}),Object.defineProperty(g,"MonikerRequest",{enumerable:!0,get:function(){return Z.MonikerRequest}});const R=ZB;Object.defineProperty(g,"TypeHierarchyPrepareRequest",{enumerable:!0,get:function(){return R.TypeHierarchyPrepareRequest}}),Object.defineProperty(g,"TypeHierarchySubtypesRequest",{enumerable:!0,get:function(){return R.TypeHierarchySubtypesRequest}}),Object.defineProperty(g,"TypeHierarchySupertypesRequest",{enumerable:!0,get:function(){return R.TypeHierarchySupertypesRequest}});const F=WB;Object.defineProperty(g,"InlineValueRequest",{enumerable:!0,get:function(){return F.InlineValueRequest}}),Object.defineProperty(g,"InlineValueRefreshRequest",{enumerable:!0,get:function(){return F.InlineValueRefreshRequest}});const m=bB;Object.defineProperty(g,"InlayHintRequest",{enumerable:!0,get:function(){return m.InlayHintRequest}}),Object.defineProperty(g,"InlayHintResolveRequest",{enumerable:!0,get:function(){return m.InlayHintResolveRequest}}),Object.defineProperty(g,"InlayHintRefreshRequest",{enumerable:!0,get:function(){return m.InlayHintRefreshRequest}});const B=QB;Object.defineProperty(g,"DiagnosticServerCancellationData",{enumerable:!0,get:function(){return B.DiagnosticServerCancellationData}}),Object.defineProperty(g,"DocumentDiagnosticReportKind",{enumerable:!0,get:function(){return B.DocumentDiagnosticReportKind}}),Object.defineProperty(g,"DocumentDiagnosticRequest",{enumerable:!0,get:function(){return B.DocumentDiagnosticRequest}}),Object.defineProperty(g,"WorkspaceDiagnosticRequest",{enumerable:!0,get:function(){return B.WorkspaceDiagnosticRequest}}),Object.defineProperty(g,"DiagnosticRefreshRequest",{enumerable:!0,get:function(){return B.DiagnosticRefreshRequest}});const W=KB;Object.defineProperty(g,"NotebookCellKind",{enumerable:!0,get:function(){return W.NotebookCellKind}}),Object.defineProperty(g,"ExecutionSummary",{enumerable:!0,get:function(){return W.ExecutionSummary}}),Object.defineProperty(g,"NotebookCell",{enumerable:!0,get:function(){return W.NotebookCell}}),Object.defineProperty(g,"NotebookDocument",{enumerable:!0,get:function(){return W.NotebookDocument}}),Object.defineProperty(g,"NotebookDocumentSyncRegistrationType",{enumerable:!0,get:function(){return W.NotebookDocumentSyncRegistrationType}}),Object.defineProperty(g,"DidOpenNotebookDocumentNotification",{enumerable:!0,get:function(){return W.DidOpenNotebookDocumentNotification}}),Object.defineProperty(g,"NotebookCellArrayChange",{enumerable:!0,get:function(){return W.NotebookCellArrayChange}}),Object.defineProperty(g,"DidChangeNotebookDocumentNotification",{enumerable:!0,get:function(){return W.DidChangeNotebookDocumentNotification}}),Object.defineProperty(g,"DidSaveNotebookDocumentNotification",{enumerable:!0,get:function(){return W.DidSaveNotebookDocumentNotification}}),Object.defineProperty(g,"DidCloseNotebookDocumentNotification",{enumerable:!0,get:function(){return W.DidCloseNotebookDocumentNotification}});const N=eW;var p,S,b,u,T,G,k,Q,M,Y,E,y,J,H,w,X,K,z,D,v,x,O,f,j,L,P,_,q,$,gg,eg,Ig,tg,Cg,ig,lg,ng,Ag,dg,og,sg,ag,Vg,cg,rg,hg,Ug,Zg,Rg,Fg,mg,Bg,Wg,Ng,pg,Sg,bg,ug,Tg,Gg,kg,Qg,Mg,Yg,Eg,yg;Object.defineProperty(g,"InlineCompletionRequest",{enumerable:!0,get:function(){return N.InlineCompletionRequest}}),(p||(g.TextDocumentFilter=p={})).is=function(g){const e=g;return t.string(e)||t.string(e.language)||t.string(e.scheme)||t.string(e.pattern)},(S||(g.NotebookDocumentFilter=S={})).is=function(g){const e=g;return t.objectLiteral(e)&&(t.string(e.notebookType)||t.string(e.scheme)||t.string(e.pattern))},(b||(g.NotebookCellTextDocumentFilter=b={})).is=function(g){const e=g;return t.objectLiteral(e)&&(t.string(e.notebook)||S.is(e.notebook))&&(void 0===e.language||t.string(e.language))},(u||(g.DocumentSelector=u={})).is=function(g){if(!Array.isArray(g))return!1;for(let e of g)if(!t.string(e)&&!p.is(e)&&!b.is(e))return!1;return!0},(yg=T||(g.RegistrationRequest=T={})).method="client/registerCapability",yg.messageDirection=e.MessageDirection.serverToClient,yg.type=new e.ProtocolRequestType(yg.method),function(g){g.method="client/unregisterCapability",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolRequestType(g.method)}(G||(g.UnregistrationRequest=G={})),function(g){g.Create="create",g.Rename="rename",g.Delete="delete"}(k||(g.ResourceOperationKind=k={})),function(g){g.Abort="abort",g.Transactional="transactional",g.TextOnlyTransactional="textOnlyTransactional",g.Undo="undo"}(Q||(g.FailureHandlingKind=Q={})),function(g){g.UTF8="utf-8",g.UTF16="utf-16",g.UTF32="utf-32"}(M||(g.PositionEncodingKind=M={})),function(g){g.hasId=function(g){const e=g;return e&&t.string(e.id)&&e.id.length>0}}(Y||(g.StaticRegistrationOptions=Y={})),function(g){g.is=function(g){const e=g;return e&&(null===e.documentSelector||u.is(e.documentSelector))}}(E||(g.TextDocumentRegistrationOptions=E={})),function(g){g.is=function(g){const e=g;return t.objectLiteral(e)&&(void 0===e.workDoneProgress||t.boolean(e.workDoneProgress))},g.hasWorkDoneProgress=function(g){const e=g;return e&&t.boolean(e.workDoneProgress)}}(y||(g.WorkDoneProgressOptions=y={})),function(g){g.method="initialize",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(J||(g.InitializeRequest=J={})),function(g){g.unknownProtocolVersion=1}(H||(g.InitializeErrorCodes=H={})),function(g){g.method="initialized",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(w||(g.InitializedNotification=w={})),function(g){g.method="shutdown",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType0(g.method)}(X||(g.ShutdownRequest=X={})),function(g){g.method="exit",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType0(g.method)}(K||(g.ExitNotification=K={})),function(g){g.method="workspace/didChangeConfiguration",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(z||(g.DidChangeConfigurationNotification=z={})),function(g){g.Error=1,g.Warning=2,g.Info=3,g.Log=4,g.Debug=5}(D||(g.MessageType=D={})),function(g){g.method="window/showMessage",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolNotificationType(g.method)}(v||(g.ShowMessageNotification=v={})),function(g){g.method="window/showMessageRequest",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolRequestType(g.method)}(x||(g.ShowMessageRequest=x={})),function(g){g.method="window/logMessage",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolNotificationType(g.method)}(O||(g.LogMessageNotification=O={})),function(g){g.method="telemetry/event",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolNotificationType(g.method)}(f||(g.TelemetryEventNotification=f={})),function(g){g.None=0,g.Full=1,g.Incremental=2}(j||(g.TextDocumentSyncKind=j={})),function(g){g.method="textDocument/didOpen",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(L||(g.DidOpenTextDocumentNotification=L={})),function(g){g.isIncremental=function(g){let e=g;return null!=e&&"string"==typeof e.text&&void 0!==e.range&&(void 0===e.rangeLength||"number"==typeof e.rangeLength)},g.isFull=function(g){let e=g;return null!=e&&"string"==typeof e.text&&void 0===e.range&&void 0===e.rangeLength}}(P||(g.TextDocumentContentChangeEvent=P={})),function(g){g.method="textDocument/didChange",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(_||(g.DidChangeTextDocumentNotification=_={})),function(g){g.method="textDocument/didClose",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(q||(g.DidCloseTextDocumentNotification=q={})),function(g){g.method="textDocument/didSave",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}($||(g.DidSaveTextDocumentNotification=$={})),function(g){g.Manual=1,g.AfterDelay=2,g.FocusOut=3}(gg||(g.TextDocumentSaveReason=gg={})),function(g){g.method="textDocument/willSave",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(eg||(g.WillSaveTextDocumentNotification=eg={})),function(g){g.method="textDocument/willSaveWaitUntil",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Ig||(g.WillSaveTextDocumentWaitUntilRequest=Ig={})),function(g){g.method="workspace/didChangeWatchedFiles",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolNotificationType(g.method)}(tg||(g.DidChangeWatchedFilesNotification=tg={})),function(g){g.Created=1,g.Changed=2,g.Deleted=3}(Cg||(g.FileChangeType=Cg={})),function(g){g.is=function(g){const e=g;return t.objectLiteral(e)&&(I.URI.is(e.baseUri)||I.WorkspaceFolder.is(e.baseUri))&&t.string(e.pattern)}}(ig||(g.RelativePattern=ig={})),function(g){g.Create=1,g.Change=2,g.Delete=4}(lg||(g.WatchKind=lg={})),function(g){g.method="textDocument/publishDiagnostics",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolNotificationType(g.method)}(ng||(g.PublishDiagnosticsNotification=ng={})),function(g){g.Invoked=1,g.TriggerCharacter=2,g.TriggerForIncompleteCompletions=3}(Ag||(g.CompletionTriggerKind=Ag={})),function(g){g.method="textDocument/completion",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(dg||(g.CompletionRequest=dg={})),function(g){g.method="completionItem/resolve",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(og||(g.CompletionResolveRequest=og={})),function(g){g.method="textDocument/hover",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(sg||(g.HoverRequest=sg={})),function(g){g.Invoked=1,g.TriggerCharacter=2,g.ContentChange=3}(ag||(g.SignatureHelpTriggerKind=ag={})),function(g){g.method="textDocument/signatureHelp",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Vg||(g.SignatureHelpRequest=Vg={})),function(g){g.method="textDocument/definition",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(cg||(g.DefinitionRequest=cg={})),function(g){g.method="textDocument/references",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(rg||(g.ReferencesRequest=rg={})),function(g){g.method="textDocument/documentHighlight",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(hg||(g.DocumentHighlightRequest=hg={})),function(g){g.method="textDocument/documentSymbol",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Ug||(g.DocumentSymbolRequest=Ug={})),function(g){g.method="textDocument/codeAction",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Zg||(g.CodeActionRequest=Zg={})),function(g){g.method="codeAction/resolve",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Rg||(g.CodeActionResolveRequest=Rg={})),function(g){g.method="workspace/symbol",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Fg||(g.WorkspaceSymbolRequest=Fg={})),function(g){g.method="workspaceSymbol/resolve",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(mg||(g.WorkspaceSymbolResolveRequest=mg={})),function(g){g.method="textDocument/codeLens",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Bg||(g.CodeLensRequest=Bg={})),function(g){g.method="codeLens/resolve",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Wg||(g.CodeLensResolveRequest=Wg={})),function(g){g.method="workspace/codeLens/refresh",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolRequestType0(g.method)}(Ng||(g.CodeLensRefreshRequest=Ng={})),function(g){g.method="textDocument/documentLink",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(pg||(g.DocumentLinkRequest=pg={})),function(g){g.method="documentLink/resolve",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Sg||(g.DocumentLinkResolveRequest=Sg={})),function(g){g.method="textDocument/formatting",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(bg||(g.DocumentFormattingRequest=bg={})),function(g){g.method="textDocument/rangeFormatting",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(ug||(g.DocumentRangeFormattingRequest=ug={})),function(g){g.method="textDocument/rangesFormatting",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Tg||(g.DocumentRangesFormattingRequest=Tg={})),function(g){g.method="textDocument/onTypeFormatting",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Gg||(g.DocumentOnTypeFormattingRequest=Gg={})),function(g){g.Identifier=1}(kg||(g.PrepareSupportDefaultBehavior=kg={})),function(g){g.method="textDocument/rename",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Qg||(g.RenameRequest=Qg={})),function(g){g.method="textDocument/prepareRename",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Mg||(g.PrepareRenameRequest=Mg={})),function(g){g.method="workspace/executeCommand",g.messageDirection=e.MessageDirection.clientToServer,g.type=new e.ProtocolRequestType(g.method)}(Yg||(g.ExecuteCommandRequest=Yg={})),function(g){g.method="workspace/applyEdit",g.messageDirection=e.MessageDirection.serverToClient,g.type=new e.ProtocolRequestType("workspace/applyEdit")}(Eg||(g.ApplyWorkspaceEditRequest=Eg={}))}(LF);var CW={};Object.defineProperty(CW,"__esModule",{value:!0}),CW.createProtocolConnection=void 0;const iW=AU;function lW(g,e,I,t){return iW.ConnectionStrategy.is(t)&&(t={connectionStrategy:t}),(0,iW.createMessageConnection)(g,e,I,t)}CW.createProtocolConnection=lW,function(g){var e=Lg&&Lg.__createBinding||(Object.create?function(g,e,I,t){void 0===t&&(t=I);var C=Object.getOwnPropertyDescriptor(e,I);(!C||("get"in C?!e.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return e[I]}}),Object.defineProperty(g,t,C)}:function(g,e,I,t){void 0===t&&(t=I),g[t]=e[I]}),I=Lg&&Lg.__exportStar||function(g,I){for(var t in g)"default"!==t&&!Object.prototype.hasOwnProperty.call(I,t)&&e(I,g,t)};Object.defineProperty(g,"__esModule",{value:!0}),g.LSPErrorCodes=g.createProtocolConnection=void 0,I(AU,g),I(XF,g),I(KF,g),I(LF,g);var t,C,i=CW;Object.defineProperty(g,"createProtocolConnection",{enumerable:!0,get:function(){return i.createProtocolConnection}}),(C=t||(g.LSPErrorCodes=t={})).lspReservedErrorRangeStart=-32899,C.RequestFailed=-32803,C.ServerCancelled=-32802,C.ContentModified=-32801,C.RequestCancelled=-32800,C.lspReservedErrorRangeEnd=-32800}(kF),function(g){var e=Lg&&Lg.__createBinding||(Object.create?function(g,e,I,t){void 0===t&&(t=I);var C=Object.getOwnPropertyDescriptor(e,I);(!C||("get"in C?!e.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return e[I]}}),Object.defineProperty(g,t,C)}:function(g,e,I,t){void 0===t&&(t=I),g[t]=e[I]}),I=Lg&&Lg.__exportStar||function(g,I){for(var t in g)"default"!==t&&!Object.prototype.hasOwnProperty.call(I,t)&&e(I,g,t)};Object.defineProperty(g,"__esModule",{value:!0}),g.createProtocolConnection=void 0;const t=GF;I(GF,g),I(kF,g),g.createProtocolConnection=function(g,e,I,C){return(0,t.createMessageConnection)(g,e,I,C)}}(nU);const nW={completionDoc:"cm-lsp-completion-doc",tooltip:"cm-lsp-tooltip",lezerTagPrefix:"cm-lsp-tag",diagnostic:{message:"cm-diagnostic--message",code:"cm-diagnostic--code"}},AW=[".code","h1","h2","h3","h4","h5","h6","p","ul"],dW=(g="")=>AW.map((e=>`& .${nW.tooltip} ${e}${g}`)).join(", "),oW={"& .cm-tooltip":{"max-width":"65%"},[`& .${nW.completionDoc} pre`]:{"white-space":"pre-wrap","font-size":"0.9em",padding:"0.5em 0"},[dW()]:{margin:"8px 0"},[dW(":last-child")]:{"margin-bottom":"0"},[`& .${nW.tooltip} a code`]:{background:"#000000",padding:"1px 3px","border-radius":"4px"},[`& .${nW.tooltip}`]:{padding:"0.5em"},[`& .${nW.tooltip} pre`]:{"white-space":"pre-wrap","font-size":"0.9em"},[`& .${nW.diagnostic.message}`]:{"white-space":"pre-wrap"},[`& .${nW.diagnostic.code}`]:{opacity:"0.6",paddingLeft:"6px"}},sW=g=>{const e={},I=[];for(let t=0;t<g.length;t++){const{tag:C,class:i,...l}=g[t];if(!Object.keys(l).length){i&&I.push({tag:C,class:i});continue}const n=i??`${nW.lezerTagPrefix}_${t}`;e[`& .${n}`]=l,I.push({tag:C,class:n})}return{styleSpec:e,tagClasses:I}},aW=g=>{if(null==g||!g.highlightStyles)return{styleSpec:null!=g&&g.styles?{...oW,...g.styles}:oW};const{styleSpec:e,tagClasses:I}=sW(g.highlightStyles);let t={...oW,...e};return g.styles&&(t={...t,...g.styles}),{styleSpec:t,highlighter:aa(I)}},VW=g=>g.reduce(((g,e)=>e),""),cW=g=>typeof g>"u"||null===g,rW=g=>!cW(g),hW=(g,e)=>{if(e.line>=g.lines)return;const I=g.line(e.line+1).from+e.character;return I>g.length?void 0:I},UW=(g,e)=>{const I=g.lineAt(e);return{line:I.number-1,character:e-I.from}},ZW=g=>{let e="",I=Array.from(g).join("");return/\w/.test(I)&&(e+="\\w",I=I.replace(/\w/g,"")),`[${e}${I.replace(/[^\w\s]/g,"\\$&")}]`},RW=g=>{const e=new Set,I=new Set;for(const{apply:t}of g){const[g,...C]=t;e.add(g);for(const g of C)I.add(g)}const t=`${ZW(e)}${ZW(I)}*$`;return[new RegExp(`^${t}`),new RegExp(t)]},FW=g=>{switch(g){case nU.DiagnosticSeverity.Error:return"error";case nU.DiagnosticSeverity.Warning:return"warning";case nU.DiagnosticSeverity.Information:case nU.DiagnosticSeverity.Hint:return"info"}},mW=({code:g,source:e,message:I})=>{if(e||g)return()=>{const t=document.createDocumentFragment(),C=document.createElement("span");C.className=nW.diagnostic.message,C.innerText=I;const i=document.createElement("code");if(i.className=nW.diagnostic.code,e)i.innerText=g?`${e}(${g})`:e;else{if(!g)return C;i.innerText=g.toString()}return t.append(C,i),t}},BW=(g,e)=>e.map((e=>({from:hW(g,e.range.start),to:hW(g,e.range.end),severity:FW(e.severity),message:e.message,renderMessage:mW(e)}))).filter((g=>rW(g.from)&&rW(g.to))).sort(((g,e)=>{switch(!0){case g.from<e.from:return-1;case g.from>e.from:return 1}return 0}));class WW{constructor(g,e,I,t,C,i,l,n,A,d=0,o){this.p=g,this.stack=e,this.state=I,this.reducePos=t,this.pos=C,this.score=i,this.buffer=l,this.bufferBase=n,this.curContext=A,this.lookAhead=d,this.parent=o}toString(){return`[${this.stack.filter(((g,e)=>e%3==0)).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(g,e,I=0){let t=g.parser.context;return new WW(g,[],e,I,I,0,[],0,t?new NW(t,t.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(g,e){this.stack.push(this.state,e,this.bufferBase+this.buffer.length),this.state=g}reduce(g){var e;let I=g>>19,t=65535&g,{parser:C}=this.p;this.reducePos<this.pos-25&&this.setLookAhead(this.pos);let i=C.dynamicPrecedence(t);if(i&&(this.score+=i),0==I)return this.pushState(C.getGoto(this.state,t,!0),this.reducePos),t<C.minRepeatTerm&&this.storeNode(t,this.reducePos,this.reducePos,4,!0),void this.reduceContext(t,this.reducePos);let l=this.stack.length-3*(I-1)-(262144&g?6:0),n=l?this.stack[l-2]:this.p.ranges[0].from,A=this.reducePos-n;A>=2e3&&(null===(e=this.p.parser.nodeSet.types[t])||void 0===e||!e.isAnonymous)&&(n==this.p.lastBigReductionStart?(this.p.bigReductionCount++,this.p.lastBigReductionSize=A):this.p.lastBigReductionSize<A&&(this.p.bigReductionCount=1,this.p.lastBigReductionStart=n,this.p.lastBigReductionSize=A));let d=l?this.stack[l-1]:0,o=this.bufferBase+this.buffer.length-d;if(t<C.minRepeatTerm||131072&g){let g=C.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(t,n,g,o+4,!0)}if(262144&g)this.state=this.stack[l];else{let g=this.stack[l-3];this.state=C.getGoto(g,t,!0)}for(;this.stack.length>l;)this.stack.pop();this.reduceContext(t,n)}storeNode(g,e,I,t=4,C=!1){if(0==g&&(!this.stack.length||this.stack[this.stack.length-1]<this.buffer.length+this.bufferBase)){let g=this,t=this.buffer.length;if(0==t&&g.parent&&(t=g.bufferBase-g.parent.bufferBase,g=g.parent),t>0&&0==g.buffer[t-4]&&g.buffer[t-1]>-1){if(e==I)return;if(g.buffer[t-2]>=e)return void(g.buffer[t-2]=I)}}if(C&&this.pos!=I){let C=this.buffer.length;if(C>0&&0!=this.buffer[C-4])for(;C>0&&this.buffer[C-2]>I;)this.buffer[C]=this.buffer[C-4],this.buffer[C+1]=this.buffer[C-3],this.buffer[C+2]=this.buffer[C-2],this.buffer[C+3]=this.buffer[C-1],C-=4,t>4&&(t-=4);this.buffer[C]=g,this.buffer[C+1]=e,this.buffer[C+2]=I,this.buffer[C+3]=t}else this.buffer.push(g,e,I,t)}shift(g,e,I,t){if(131072&g)this.pushState(65535&g,this.pos);else if(262144&g)this.pos=t,this.shiftContext(e,I),e<=this.p.parser.maxNode&&this.buffer.push(e,I,t,4);else{let C=g,{parser:i}=this.p;(t>this.pos||e<=i.maxNode)&&(this.pos=t,i.stateFlag(C,1)||(this.reducePos=t)),this.pushState(C,I),this.shiftContext(e,I),e<=i.maxNode&&this.buffer.push(e,I,t,4)}}apply(g,e,I,t){65536&g?this.reduce(g):this.shift(g,e,I,t)}useNode(g,e){let I=this.p.reused.length-1;(I<0||this.p.reused[I]!=g)&&(this.p.reused.push(g),I++);let t=this.pos;this.reducePos=this.pos=t+g.length,this.pushState(e,t),this.buffer.push(I,t,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,g,this,this.p.stream.reset(this.pos-g.length)))}split(){let g=this,e=g.buffer.length;for(;e>0&&g.buffer[e-2]>g.reducePos;)e-=4;let I=g.buffer.slice(e),t=g.bufferBase+e;for(;g&&t==g.bufferBase;)g=g.parent;return new WW(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,I,t,this.curContext,this.lookAhead,g)}recoverByDelete(g,e){let I=g<=this.p.parser.maxNode;I&&this.storeNode(g,this.pos,e,4),this.storeNode(0,this.pos,e,I?8:4),this.pos=this.reducePos=e,this.score-=190}canShift(g){for(let e=new pW(this);;){let I=this.p.parser.stateSlot(e.state,4)||this.p.parser.hasAction(e.state,g);if(0==I)return!1;if(!(65536&I))return!0;e.reduce(I)}}recoverByInsert(g){if(this.stack.length>=300)return[];let e=this.p.parser.nextStates(this.state);if(e.length>8||this.stack.length>=120){let I=[];for(let t,C=0;C<e.length;C+=2)(t=e[C+1])!=this.state&&this.p.parser.hasAction(t,g)&&I.push(e[C],t);if(this.stack.length<120)for(let g=0;I.length<8&&g<e.length;g+=2){let t=e[g+1];I.some(((g,e)=>1&e&&g==t))||I.push(e[g],t)}e=I}let I=[];for(let g=0;g<e.length&&I.length<4;g+=2){let t=e[g+1];if(t==this.state)continue;let C=this.split();C.pushState(t,this.pos),C.storeNode(0,C.pos,C.pos,4,!0),C.shiftContext(e[g],this.pos),C.reducePos=this.pos,C.score-=200,I.push(C)}return I}forceReduce(){let{parser:g}=this.p,e=g.stateSlot(this.state,5);if(!(65536&e))return!1;if(!g.validAction(this.state,e)){let I=e>>19,t=65535&e,C=this.stack.length-3*I;if(C<0||g.getGoto(this.stack[C],t,!1)<0){let g=this.findForcedReduction();if(null==g)return!1;e=g}this.storeNode(0,this.pos,this.pos,4,!0),this.score-=100}return this.reducePos=this.pos,this.reduce(e),!0}findForcedReduction(){let{parser:g}=this.p,e=[],I=(t,C)=>{if(!e.includes(t))return e.push(t),g.allActions(t,(e=>{if(!(393216&e))if(65536&e){let I=(e>>19)-C;if(I>1){let t=65535&e,C=this.stack.length-3*I;if(C>=0&&g.getGoto(this.stack[C],t,!1)>=0)return I<<19|65536|t}}else{let g=I(e,C+1);if(null!=g)return g}}))};return I(this.state,0)}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(3!=this.stack.length)return!1;let{parser:g}=this.p;return 65535==g.data[g.stateSlot(this.state,1)]&&!g.stateSlot(this.state,4)}restart(){this.storeNode(0,this.pos,this.pos,4,!0),this.state=this.stack[0],this.stack.length=0}sameState(g){if(this.state!=g.state||this.stack.length!=g.stack.length)return!1;for(let e=0;e<this.stack.length;e+=3)if(this.stack[e]!=g.stack[e])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(g){return this.p.parser.dialect.flags[g]}shiftContext(g,e){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,g,this,this.p.stream.reset(e)))}reduceContext(g,e){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,g,this,this.p.stream.reset(e)))}emitContext(){let g=this.buffer.length-1;(g<0||-3!=this.buffer[g])&&this.buffer.push(this.curContext.hash,this.pos,this.pos,-3)}emitLookAhead(){let g=this.buffer.length-1;(g<0||-4!=this.buffer[g])&&this.buffer.push(this.lookAhead,this.pos,this.pos,-4)}updateContext(g){if(g!=this.curContext.context){let e=new NW(this.curContext.tracker,g);e.hash!=this.curContext.hash&&this.emitContext(),this.curContext=e}}setLookAhead(g){g>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=g)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class NW{constructor(g,e){this.tracker=g,this.context=e,this.hash=g.strict?g.hash(e):0}}class pW{constructor(g){this.start=g,this.state=g.state,this.stack=g.stack,this.base=this.stack.length}reduce(g){let e=65535&g,I=g>>19;0==I?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=3*(I-1);let t=this.start.p.parser.getGoto(this.stack[this.base-3],e,!0);this.state=t}}class SW{constructor(g,e,I){this.stack=g,this.pos=e,this.index=I,this.buffer=g.buffer,0==this.index&&this.maybeNext()}static create(g,e=g.bufferBase+g.buffer.length){return new SW(g,e,e-g.bufferBase)}maybeNext(){let g=this.stack.parent;null!=g&&(this.index=this.stack.bufferBase-g.bufferBase,this.stack=g,this.buffer=g.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,0==this.index&&this.maybeNext()}fork(){return new SW(this.stack,this.pos,this.index)}}function bW(g,e=Uint16Array){if("string"!=typeof g)return g;let I=null;for(let t=0,C=0;t<g.length;){let i=0;for(;;){let e=g.charCodeAt(t++),I=!1;if(126==e){i=65535;break}e>=92&&e--,e>=34&&e--;let C=e-32;if(C>=46&&(C-=46,I=!0),i+=C,I)break;i*=46}I?I[C++]=i:I=new e(i)}return I}class uW{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const TW=new uW;class GW{constructor(g,e){this.input=g,this.ranges=e,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=TW,this.rangeIndex=0,this.pos=this.chunkPos=e[0].from,this.range=e[0],this.end=e[e.length-1].to,this.readNext()}resolveOffset(g,e){let I=this.range,t=this.rangeIndex,C=this.pos+g;for(;C<I.from;){if(!t)return null;let g=this.ranges[--t];C-=I.from-g.to,I=g}for(;e<0?C>I.to:C>=I.to;){if(t==this.ranges.length-1)return null;let g=this.ranges[++t];C+=g.from-I.to,I=g}return C}clipPos(g){if(g>=this.range.from&&g<this.range.to)return g;for(let e of this.ranges)if(e.to>g)return Math.max(g,e.from);return this.end}peek(g){let e,I,t=this.chunkOff+g;if(t>=0&&t<this.chunk.length)e=this.pos+g,I=this.chunk.charCodeAt(t);else{let t=this.resolveOffset(g,1);if(null==t)return-1;if(e=t,e>=this.chunk2Pos&&e<this.chunk2Pos+this.chunk2.length)I=this.chunk2.charCodeAt(e-this.chunk2Pos);else{let g=this.rangeIndex,t=this.range;for(;t.to<=e;)t=this.ranges[++g];this.chunk2=this.input.chunk(this.chunk2Pos=e),e+this.chunk2.length>t.to&&(this.chunk2=this.chunk2.slice(0,t.to-e)),I=this.chunk2.charCodeAt(0)}}return e>=this.token.lookAhead&&(this.token.lookAhead=e+1),I}acceptToken(g,e=0){let I=e?this.resolveOffset(e,-1):this.pos;if(null==I||I<this.token.start)throw new RangeError("Token end out of bounds");this.token.value=g,this.token.end=I}acceptTokenTo(g,e){this.token.value=g,this.token.end=e}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:g,chunkPos:e}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=g,this.chunk2Pos=e,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let g=this.input.chunk(this.pos),e=this.pos+g.length;this.chunk=e>this.range.to?g.slice(0,this.range.to-this.pos):g,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(g=1){for(this.chunkOff+=g;this.pos+g>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();g-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=g,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(g,e){if(e?(this.token=e,e.start=g,e.lookAhead=g+1,e.value=e.extended=-1):this.token=TW,this.pos!=g){if(this.pos=g,g==this.end)return this.setDone(),this;for(;g<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;g>=this.range.to;)this.range=this.ranges[++this.rangeIndex];g>=this.chunkPos&&g<this.chunkPos+this.chunk.length?this.chunkOff=g-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(g,e){if(g>=this.chunkPos&&e<=this.chunkPos+this.chunk.length)return this.chunk.slice(g-this.chunkPos,e-this.chunkPos);if(g>=this.chunk2Pos&&e<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(g-this.chunk2Pos,e-this.chunk2Pos);if(g>=this.range.from&&e<=this.range.to)return this.input.read(g,e);let I="";for(let t of this.ranges){if(t.from>=e)break;t.to>g&&(I+=this.input.read(Math.max(t.from,g),Math.min(t.to,e)))}return I}}class kW{constructor(g,e){this.data=g,this.id=e}token(g,e){let{parser:I}=e.p;YW(this.data,g,e,this.id,I.data,I.tokenPrecTable)}}kW.prototype.contextual=kW.prototype.fallback=kW.prototype.extend=!1;class QW{constructor(g,e,I){this.precTable=e,this.elseToken=I,this.data="string"==typeof g?bW(g):g}token(g,e){let I=g.pos,t=0;for(;;){let I=g.next<0,C=g.resolveOffset(1,1);if(YW(this.data,g,e,0,this.data,this.precTable),g.token.value>-1)break;if(null==this.elseToken)return;if(I||t++,null==C)break;g.reset(C,g.token)}t&&(g.reset(I,g.token),g.acceptToken(this.elseToken,t))}}QW.prototype.contextual=kW.prototype.fallback=kW.prototype.extend=!1;class MW{constructor(g,e={}){this.token=g,this.contextual=!!e.contextual,this.fallback=!!e.fallback,this.extend=!!e.extend}}function YW(g,e,I,t,C,i){let l=0,n=1<<t,{dialect:A}=I.p.parser;g:for(;n&g[l];){let I=g[l+1];for(let t=l+3;t<I;t+=2)if((g[t+1]&n)>0){let I=g[t];if(A.allows(I)&&(-1==e.token.value||e.token.value==I||yW(I,e.token.value,C,i))){e.acceptToken(I);break}}let t=e.next,d=0,o=g[l+2];if(!(e.next<0&&o>d&&65535==g[I+3*o-3])){for(;d<o;){let C=d+o>>1,i=I+C+(C<<1),n=g[i],A=g[i+1]||65536;if(t<n)o=C;else{if(!(t>=A)){l=g[i+2],e.advance();continue g}d=C+1}}break}l=g[I+3*o-1]}}function EW(g,e,I){for(let t,C=e;65535!=(t=g[C]);C++)if(t==I)return C-e;return-1}function yW(g,e,I,t){let C=EW(I,t,e);return C<0||EW(I,t,g)<C}const JW=typeof fg<"u"&&fg.env&&/\bparse\b/.test(fg.env.LOG);let HW=null;function wW(g,e,I){let t=g.cursor(Qs.IncludeAnonymous);for(t.moveTo(e);;)if(!(I<0?t.childBefore(e):t.childAfter(e)))for(;;){if((I<0?t.to<e:t.from>e)&&!t.type.isError)return I<0?Math.max(0,Math.min(t.to-1,e-25)):Math.min(g.length,Math.max(t.from+1,e+25));if(I<0?t.prevSibling():t.nextSibling())break;if(!t.parent())return I<0?0:g.length}}class XW{constructor(g,e){this.fragments=g,this.nodeSet=e,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let g=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(g){for(this.safeFrom=g.openStart?wW(g.tree,g.from+g.offset,1)-g.offset:g.from,this.safeTo=g.openEnd?wW(g.tree,g.to+g.offset,-1)-g.offset:g.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(g.tree),this.start.push(-g.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(g){if(g<this.nextStart)return null;for(;this.fragment&&this.safeTo<=g;)this.nextFragment();if(!this.fragment)return null;for(;;){let e=this.trees.length-1;if(e<0)return this.nextFragment(),null;let I=this.trees[e],t=this.index[e];if(t==I.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let C=I.children[t],i=this.start[e]+I.positions[t];if(i>g)return this.nextStart=i,null;if(C instanceof Ms){if(i==g){if(i<this.safeFrom)return null;let g=i+C.length;if(g<=this.safeTo){let e=C.prop(ps.lookAhead);if(!e||g+e<this.fragment.to)return C}}this.index[e]++,i+C.length>=Math.max(this.safeFrom,g)&&(this.trees.push(C),this.start.push(i),this.index.push(0))}else this.index[e]++,this.nextStart=i+C.length}}}class KW{constructor(g,e){this.stream=e,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=g.tokenizers.map((g=>new uW))}getActions(g){let e=0,I=null,{parser:t}=g.p,{tokenizers:C}=t,i=t.stateSlot(g.state,3),l=g.curContext?g.curContext.hash:0,n=0;for(let t=0;t<C.length;t++){if(!(1<<t&i))continue;let A=C[t],d=this.tokens[t];if((!I||A.fallback)&&((A.contextual||d.start!=g.pos||d.mask!=i||d.context!=l)&&(this.updateCachedToken(d,A,g),d.mask=i,d.context=l),d.lookAhead>d.end+25&&(n=Math.max(d.lookAhead,n)),0!=d.value)){let t=e;if(d.extended>-1&&(e=this.addActions(g,d.extended,d.end,e)),e=this.addActions(g,d.value,d.end,e),!A.extend&&(I=d,e>t))break}}for(;this.actions.length>e;)this.actions.pop();return n&&g.setLookAhead(n),!I&&g.pos==this.stream.end&&(I=new uW,I.value=g.p.parser.eofTerm,I.start=I.end=g.pos,e=this.addActions(g,I.value,I.end,e)),this.mainToken=I,this.actions}getMainToken(g){if(this.mainToken)return this.mainToken;let e=new uW,{pos:I,p:t}=g;return e.start=I,e.end=Math.min(I+1,t.stream.end),e.value=I==t.stream.end?t.parser.eofTerm:0,e}updateCachedToken(g,e,I){let t=this.stream.clipPos(I.pos);if(e.token(this.stream.reset(t,g),I),g.value>-1){let{parser:e}=I.p;for(let t=0;t<e.specialized.length;t++)if(e.specialized[t]==g.value){let C=e.specializers[t](this.stream.read(g.start,g.end),I);if(C>=0&&I.p.parser.dialect.allows(C>>1)){1&C?g.extended=C>>1:g.value=C>>1;break}}}else g.value=0,g.end=this.stream.clipPos(t+1)}putAction(g,e,I,t){for(let e=0;e<t;e+=3)if(this.actions[e]==g)return t;return this.actions[t++]=g,this.actions[t++]=e,this.actions[t++]=I,t}addActions(g,e,I,t){let{state:C}=g,{parser:i}=g.p,{data:l}=i;for(let g=0;g<2;g++)for(let n=i.stateSlot(C,g?2:1);;n+=3){if(65535==l[n]){if(1!=l[n+1]){0==t&&2==l[n+1]&&(t=this.putAction(jW(l,n+2),e,I,t));break}n=jW(l,n+2)}l[n]==e&&(t=this.putAction(jW(l,n+1),e,I,t))}return t}}class zW{constructor(g,e,I,t){this.parser=g,this.input=e,this.ranges=t,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.lastBigReductionStart=-1,this.lastBigReductionSize=0,this.bigReductionCount=0,this.stream=new GW(e,t),this.tokens=new KW(g,this.stream),this.topTerm=g.top[1];let{from:C}=t[0];this.stacks=[WW.start(this,g.top[0],C)],this.fragments=I.length&&this.stream.end-C>4*g.bufferLength?new XW(I,g.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let g,e,I=this.stacks,t=this.minStackPos,C=this.stacks=[];if(this.bigReductionCount>300&&1==I.length){let[g]=I;for(;g.forceReduce()&&g.stack.length&&g.stack[g.stack.length-2]>=this.lastBigReductionStart;);this.bigReductionCount=this.lastBigReductionSize=0}for(let i=0;i<I.length;i++){let l=I[i];for(;;){if(this.tokens.mainToken=null,l.pos>t)C.push(l);else{if(this.advanceStack(l,C,I))continue;{g||(g=[],e=[]),g.push(l);let I=this.tokens.getMainToken(l);e.push(I.value,I.end)}}break}}if(!C.length){let e=g&&LW(g);if(e)return this.stackToTree(e);if(this.parser.strict)throw new SyntaxError("No parse at "+t);this.recovering||(this.recovering=5)}if(this.recovering&&g){let I=null!=this.stoppedAt&&g[0].pos>this.stoppedAt?g[0]:this.runRecovery(g,e,C);if(I)return this.stackToTree(I.forceAll())}if(this.recovering){let g=1==this.recovering?1:3*this.recovering;if(C.length>g)for(C.sort(((g,e)=>e.score-g.score));C.length>g;)C.pop();C.some((g=>g.reducePos>t))&&this.recovering--}else if(C.length>1){g:for(let g=0;g<C.length-1;g++){let e=C[g];for(let I=g+1;I<C.length;I++){let t=C[I];if(e.sameState(t)||e.buffer.length>500&&t.buffer.length>500){if(!((e.score-t.score||e.buffer.length-t.buffer.length)>0)){C.splice(g--,1);continue g}C.splice(I--,1)}}}C.length>12&&C.splice(12,C.length-12)}this.minStackPos=C[0].pos;for(let g=1;g<C.length;g++)C[g].pos<this.minStackPos&&(this.minStackPos=C[g].pos);return null}stopAt(g){if(null!=this.stoppedAt&&this.stoppedAt<g)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=g}advanceStack(g,e,I){let t=g.pos,{parser:C}=this;if(JW&&this.stackID(g),null!=this.stoppedAt&&t>this.stoppedAt)return g.forceReduce()?g:null;if(this.fragments){let e=g.curContext&&g.curContext.tracker.strict,I=e?g.curContext.hash:0;for(let i=this.fragments.nodeAt(t);i;){let t=this.parser.nodeSet.types[i.type.id]==i.type?C.getGoto(g.state,i.type.id):-1;if(t>-1&&i.length&&(!e||(i.prop(ps.contextHash)||0)==I))return g.useNode(i,t),!0;if(!(i instanceof Ms)||0==i.children.length||i.positions[0]>0)break;let l=i.children[0];if(!(l instanceof Ms&&0==i.positions[0]))break;i=l}}let i=C.stateSlot(g.state,4);if(i>0)return g.reduce(i),!0;if(g.stack.length>=8400)for(;g.stack.length>6e3&&g.forceReduce(););let l=this.tokens.getActions(g);for(let C=0;C<l.length;){let i=l[C++],n=l[C++],A=l[C++],d=C==l.length||!I,o=d?g:g.split(),s=this.tokens.mainToken;if(o.apply(i,n,s?s.start:o.pos,A),d)return!0;o.pos>t?e.push(o):I.push(o)}return!1}advanceFully(g,e){let I=g.pos;for(;;){if(!this.advanceStack(g,null,null))return!1;if(g.pos>I)return DW(g,e),!0}}runRecovery(g,e,I){let t=null,C=!1;for(let i=0;i<g.length;i++){let l=g[i],n=e[i<<1],A=e[1+(i<<1)],d=JW?this.stackID(l)+" -> ":"";if(l.deadEnd&&(C||(C=!0,l.restart(),this.advanceFully(l,I))))continue;let o=l.split(),s=d;for(let g=0;o.forceReduce()&&g<10&&!this.advanceFully(o,I);g++)JW&&(s=this.stackID(o)+" -> ");for(let g of l.recoverByInsert(n))this.advanceFully(g,I);this.stream.end>l.pos?(A==l.pos&&(A++,n=0),l.recoverByDelete(n,A),DW(l,I)):(!t||t.score<l.score)&&(t=l)}return t}stackToTree(g){return g.close(),Ms.build({buffer:SW.create(g),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:g.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(g){let e=(HW||(HW=new WeakMap)).get(g);return e||HW.set(g,e=String.fromCodePoint(this.nextStackID++)),e+g}}function DW(g,e){for(let I=0;I<e.length;I++){let t=e[I];if(t.pos==g.pos&&t.sameState(g))return void(e[I].score<g.score&&(e[I]=g))}e.push(g)}class vW{constructor(g,e,I){this.source=g,this.flags=e,this.disabled=I}allows(g){return!this.disabled||0==this.disabled[g]}}const xW=g=>g;class OW{constructor(g){this.start=g.start,this.shift=g.shift||xW,this.reduce=g.reduce||xW,this.reuse=g.reuse||xW,this.hash=g.hash||(()=>0),this.strict=!1!==g.strict}}class fW extends ea{constructor(g){if(super(),this.wrappers=[],14!=g.version)throw new RangeError(`Parser version (${g.version}) doesn't match runtime version (14)`);let e=g.nodeNames.split(" ");this.minRepeatTerm=e.length;for(let I=0;I<g.repeatNodeCount;I++)e.push("");let I=Object.keys(g.topRules).map((e=>g.topRules[e][1])),t=[];for(let g=0;g<e.length;g++)t.push([]);function C(g,e,I){t[g].push([e,e.deserialize(String(I))])}if(g.nodeProps)for(let e of g.nodeProps){let g=e[0];"string"==typeof g&&(g=ps[g]);for(let I=1;I<e.length;){let t=e[I++];if(t>=0)C(t,g,e[I++]);else{let i=e[I+-t];for(let l=-t;l>0;l--)C(e[I++],g,i);I++}}}this.nodeSet=new Ts(e.map(((e,C)=>us.define({name:C>=this.minRepeatTerm?void 0:e,id:C,props:t[C],top:I.indexOf(C)>-1,error:0==C,skipped:g.skippedNodes&&g.skippedNodes.indexOf(C)>-1})))),g.propSources&&(this.nodeSet=this.nodeSet.extend(...g.propSources)),this.strict=!1,this.bufferLength=Bs;let i=bW(g.tokenData);this.context=g.context,this.specializerSpecs=g.specialized||[],this.specialized=new Uint16Array(this.specializerSpecs.length);for(let g=0;g<this.specializerSpecs.length;g++)this.specialized[g]=this.specializerSpecs[g].term;this.specializers=this.specializerSpecs.map(PW),this.states=bW(g.states,Uint32Array),this.data=bW(g.stateData),this.goto=bW(g.goto),this.maxTerm=g.maxTerm,this.tokenizers=g.tokenizers.map((g=>"number"==typeof g?new kW(i,g):g)),this.topRules=g.topRules,this.dialects=g.dialects||{},this.dynamicPrecedences=g.dynamicPrecedences||null,this.tokenPrecTable=g.tokenPrec,this.termNames=g.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(g,e,I){let t=new zW(this,g,e,I);for(let C of this.wrappers)t=C(t,g,e,I);return t}getGoto(g,e,I=!1){let t=this.goto;if(e>=t[0])return-1;for(let C=t[e+1];;){let e=t[C++],i=1&e,l=t[C++];if(i&&I)return l;for(let I=C+(e>>1);C<I;C++)if(t[C]==g)return l;if(i)return-1}}hasAction(g,e){let I=this.data;for(let t=0;t<2;t++)for(let C,i=this.stateSlot(g,t?2:1);;i+=3){if(65535==(C=I[i])){if(1!=I[i+1]){if(2==I[i+1])return jW(I,i+2);break}C=I[i=jW(I,i+2)]}if(C==e||0==C)return jW(I,i+1)}return 0}stateSlot(g,e){return this.states[6*g+e]}stateFlag(g,e){return(this.stateSlot(g,0)&e)>0}validAction(g,e){return!!this.allActions(g,(g=>g==e||null))}allActions(g,e){let I=this.stateSlot(g,4),t=I?e(I):void 0;for(let I=this.stateSlot(g,1);null==t;I+=3){if(65535==this.data[I]){if(1!=this.data[I+1])break;I=jW(this.data,I+2)}t=e(jW(this.data,I+1))}return t}nextStates(g){let e=[];for(let I=this.stateSlot(g,1);;I+=3){if(65535==this.data[I]){if(1!=this.data[I+1])break;I=jW(this.data,I+2)}if(!(1&this.data[I+2])){let g=this.data[I+1];e.some(((e,I)=>1&I&&e==g))||e.push(this.data[I],g)}}return e}configure(g){let e=Object.assign(Object.create(fW.prototype),this);if(g.props&&(e.nodeSet=this.nodeSet.extend(...g.props)),g.top){let I=this.topRules[g.top];if(!I)throw new RangeError(`Invalid top rule name ${g.top}`);e.top=I}return g.tokenizers&&(e.tokenizers=this.tokenizers.map((e=>{let I=g.tokenizers.find((g=>g.from==e));return I?I.to:e}))),g.specializers&&(e.specializers=this.specializers.slice(),e.specializerSpecs=this.specializerSpecs.map(((I,t)=>{let C=g.specializers.find((g=>g.from==I.external));if(!C)return I;let i=Object.assign(Object.assign({},I),{external:C.to});return e.specializers[t]=PW(i),i}))),g.contextTracker&&(e.context=g.contextTracker),g.dialect&&(e.dialect=this.parseDialect(g.dialect)),null!=g.strict&&(e.strict=g.strict),g.wrap&&(e.wrappers=e.wrappers.concat(g.wrap)),null!=g.bufferLength&&(e.bufferLength=g.bufferLength),e}hasWrappers(){return this.wrappers.length>0}getName(g){return this.termNames?this.termNames[g]:String(g<=this.maxNode&&this.nodeSet.types[g].name||g)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(g){let e=this.dynamicPrecedences;return null==e?0:e[g]||0}parseDialect(g){let e=Object.keys(this.dialects),I=e.map((()=>!1));if(g)for(let t of g.split(" ")){let g=e.indexOf(t);g>=0&&(I[g]=!0)}let t=null;for(let g=0;g<e.length;g++)if(!I[g])for(let I,C=this.dialects[e[g]];65535!=(I=this.data[C++]);)(t||(t=new Uint8Array(this.maxTerm+1)))[I]=1;return new vW(g,I,t)}static deserialize(g){return new fW(g)}}function jW(g,e){return g[e]|g[e+1]<<16}function LW(g){let e=null;for(let I of g){let g=I.p.stoppedAt;(I.pos==I.p.stream.end||null!=g&&I.pos>g)&&I.p.parser.stateFlag(I.state,2)&&(!e||e.score<I.score)&&(e=I)}return e}function PW(g){if(g.external){let e=g.extend?1:0;return(I,t)=>g.external(I,t)<<1|e}return g.get}const _W=177,qW=179,$W=184,gN=12,eN=13,IN=17,tN=20,CN=25,iN=53,lN=95,nN=142,AN=144,dN=145,oN=148,sN=10,aN=13,VN=32,cN=9,rN=47,hN=41,UN=125,ZN=new MW(((g,e)=>{for(let I=0,t=g.next;(e.context&&(t<0||t==sN||t==aN||t==rN&&g.peek(I+1)==rN)||t==hN||t==UN)&&g.acceptToken(_W),t==VN||9==t;)t=g.peek(++I)}),{contextual:!0});let RN=new Set([lN,$W,tN,gN,IN,AN,dN,nN,oN,eN,iN,CN]);const FN=new OW({start:!1,shift:(g,e)=>e==qW?g:RN.has(e)}),mN=da({"func interface struct chan map const type var":Qa.definitionKeyword,"import package":Qa.moduleKeyword,"switch for go select return break continue goto fallthrough case if else defer":Qa.controlKeyword,range:Qa.keyword,Bool:Qa.bool,String:Qa.string,Rune:Qa.character,Number:Qa.number,Nil:Qa.null,VariableName:Qa.variableName,DefName:Qa.definition(Qa.variableName),TypeName:Qa.typeName,LabelName:Qa.labelName,FieldName:Qa.propertyName,"FunctionDecl/DefName":Qa.function(Qa.definition(Qa.variableName)),"TypeSpec/DefName":Qa.definition(Qa.typeName),"CallExpr/VariableName":Qa.function(Qa.variableName),LineComment:Qa.lineComment,BlockComment:Qa.blockComment,LogicOp:Qa.logicOperator,ArithOp:Qa.arithmeticOperator,BitOp:Qa.bitwiseOperator,"DerefOp .":Qa.derefOperator,"UpdateOp IncDecOp":Qa.updateOperator,CompareOp:Qa.compareOperator,"= :=":Qa.definitionOperator,"<-":Qa.operator,'~ "*"':Qa.modifier,"; ,":Qa.separator,"... :":Qa.punctuation,"( )":Qa.paren,"[ ]":Qa.squareBracket,"{ }":Qa.brace}),BN={__proto__:null,package:10,import:18,true:380,false:380,nil:383,struct:48,func:68,interface:78,chan:94,map:118,make:157,new:159,const:204,type:212,var:224,if:236,else:238,switch:242,case:248,default:250,for:260,range:266,go:270,select:274,return:284,break:288,continue:290,goto:292,fallthrough:296,defer:300},WN=fW.deserialize({version:14,states:"!=xO#{QQOOP$SOQOOO&UQTO'#CbO&]QRO'#FlO]QQOOOOQP'#Cn'#CnOOQP'#Co'#CoO&eQQO'#C|O(kQQO'#C{O)]QRO'#GiO+tQQO'#D_OOQP'#Ge'#GeO+{QQO'#GeO.aQTO'#GaO.hQQO'#D`OOQP'#Gm'#GmO.mQRO'#GdO/hQQO'#DgOOQP'#Gd'#GdO/uQQO'#DrO2bQQO'#DsO4QQTO'#GqO,^QTO'#GaO4XQQO'#DxO4^QQO'#D{OOQO'#EQ'#EQOOQO'#ER'#EROOQO'#ES'#ESOOQO'#ET'#ETO4cQQO'#EPO5}QQO'#EPOOQP'#Ga'#GaO6UQQO'#E`O6^QQO'#EcOOQP'#G`'#G`O6cQQO'#EsOOQP'#G_'#G_O&]QRO'#FnOOQO'#Fn'#FnO9QQQO'#G^QOQQOOO&]QROOO9XQQO'#C`O9^QSO'#CdO9lQQO'#C}O9tQQO'#DSO9yQQO'#D[O:kQQO'#CsO:pQQO'#DhO:uQQO'#EeO:}QQO'#EiO;VQQO'#EoO;_QQO'#EuO<uQQO'#ExO<|QQO'#FRO4cQQO'#FWO=WQQO'#FYO=]QRO'#F_O=jQRO'#FaO=uQQO'#FaOOQP'#Fe'#FeO4cQQO'#FgP=zOWO'#C^POOO)CAz)CAzOOQO'#G]'#G]OOQO,5<W,5<WOOQO-E9j-E9jO?TQTO'#CqOOQO'#C|'#C|OOQP,59g,59gO?tQQO'#D_O@fQSO'#FuO@kQQO'#C}O@pQQO'#D[O9XQQO'#FqO@uQRO,5=TOAyQQO,59yOCVQSO,5:[O@kQQO'#C}OCaQQO'#DjOOQP,59^,59^OOQO,5<a,5<aO?tQQO'#DeOOQO,5:e,5:eOOQO-E9s-E9sOOQP,59z,59zOOQP,59|,59|OCqQSO,5:QO(kQQO,5:ROC{QQO,5:RO&]QRO'#FxOOQO'#Fx'#FxOFjQQO'#GpOFwQQO,5:^OF|QQO,5:_OHdQQO,5:`OHlQQO,5:aOHvQRO'#FyOIaQRO,5=]OIuQQO'#DzOOQP,5:d,5:dOOQO'#EV'#EVOOQO'#EW'#EWOOQO'#EX'#EXOOQO'#EZ'#EZOOQO'#E['#E[O4cQQO,5:pO4cQQO,5:pO4cQQO,5:pO4cQQO,5:pO4cQQO,5:pO4cQQO,5:wOOQP,5:x,5:xO?tQQO'#EOOOQP,5:g,5:gOOQP,5:k,5:kO9yQQO,59vO4cQQO,5:zO4cQQO,5:}OI|QRO,5;_OOQO,5<Y,5<YOOQO-E9l-E9lO]QQOOOOQP'#Cb'#CbOOQP,58z,58zOOQP'#Cf'#CfOJWQQO'#CfOJ]QSO'#CkOOQP,59O,59OOJkQQO'#DPOLZQQO,5<UOLbQQO,59iOLsQQO,5<TOMpQQO'#DUOOQP,59n,59nOOQP,59v,59vONfQQO,59vONmQQO'#CwOOQP,59_,59_O?tQQO,5:SONxQRO'#EgO! VQQO'#EhOOQP,5;P,5;PO! |QQO'#EkO!!WQQO'#EnOOQP,5;T,5;TO!!`QRO'#EqO!!mQQO'#ErOOQP,5;Z,5;ZO!!uQTO'#CbO!!|QTO,5;aO&]QRO,5;aO!#WQQO,5;jO!$yQTO,5;dO!%WQQO'#EzOOQP,5;d,5;dO&]QRO,5;dO!%cQSO,5;mO!%mQQO'#E`O!%uQQO'#EcO!%zQQO'#FTO!&UQQO'#FTOOQP,5;m,5;mO!&ZQQO,5;mO!&`QTO,5;rO!&mQQO'#F[OOQP,5;t,5;tO!&xQTO'#GqOOQP,5;y,5;yOOQP'#Et'#EtOOQP,5;{,5;{O!']QTO,5<RPOOO'#Fk'#FkP!'jOWO,58xPOOO,58x,58xO!'uQQO,59yO!'zQQO'#GgOOQP,59i,59iO(kQQO,59vOOQP,5<],5<]OOQP-E9o-E9oOOQP1G/e1G/eOOQP1G/v1G/vO!([QSO'#DlO!(lQQO'#DlO!(wQQO'#DkOOQO'#Go'#GoO!(|QQO'#GoO!)UQQO,5:UO!)ZQQO'#GnO!)fQQO,5:PPOQO'#Cq'#CqO(kQQO1G/lOOQP1G/m1G/mO(kQQO1G/mOOQO,5<d,5<dOOQO-E9v-E9vOOQP1G/x1G/xO!)kQSO1G/yOOQP'#Cy'#CyOOQP1G/z1G/zO?tQQO1G/}O!)xQSO1G/{O!*YQQO1G/|O!*gQTO,5<eOOQP-E9w-E9wOOQP,5:f,5:fO!+QQQO,5:fOOQP1G0[1G0[O!,vQTO1G0[O!.wQTO1G0[O!/OQTO1G0[O!0pQTO1G0[O!1QQTO1G0cO!1bQQO,5:jOOQP1G/b1G/bOOQP1G0f1G0fOOQP1G0i1G0iOOQP1G0y1G0yOOQP,59Q,59QO&]QRO'#FmO!1mQSO,59VOOQP,59V,59VOOQO'#DQ'#DQO?tQQO'#DQO!1{QQO'#DQOOQO'#Gh'#GhO!2SQQO'#GhO!2[QQO,59kO!2aQSO'#CqOJkQQO'#DPOOQP,5=R,5=RO@kQQO1G1pOOQP1G/w1G/wO.hQQO'#ElO!2rQRO1G1oO@kQQO1G1oO@kQQO'#DVO?tQQO'#DWOOQP'#Gk'#GkO!2}QRO'#GjOOQP'#Gj'#GjO&]QRO'#FsO!3`QQO,59pOOQP,59p,59pO!3gQRO'#CxO!3uQQO'#CxO!3|QRO'#CxO.hQQO'#CxO&]QRO'#FoO!4XQQO,59cOOQP,59c,59cO!4dQQO1G/nO4cQQO,5;RO!4iQQO,5;RO&]QRO'#FzO!4nQQO,5;SOOQP,5;S,5;SO!6aQQO'#DgO?tQQO,5;VOOQP,5;V,5;VO&]QRO'#F}O!6hQQO,5;YOOQP,5;Y,5;YO!6pQRO,5;]O4cQQO,5;]O&]QRO'#GOO!6{QQO,5;^OOQP,5;^,5;^O!7TQRO1G0{O!7`QQO1G0{O4cQQO1G1UO!8vQQO1G1UOOQP1G1O1G1OO!9OQQO'#GPO!9YQQO,5;fOOQP,5;f,5;fO4cQQO'#E{O!9eQQO'#E{O<uQQO1G1OOOQP1G1X1G1XO!9jQQO,5:zO!9jQQO,5:}O!9tQSO,5;oO!:OQQO,5;oO!:VQQO,5;oO!9OQQO'#GRO!:aQQO,5;vOOQP,5;v,5;vO!<PQQO'#F]O!<WQQO'#F]POOO-E9i-E9iPOOO1G.d1G.dO!<]QQO,5:VO!<gQQO,5=ZO!<tQQO,5=ZOOQP1G/p1G/pO!<|QQO,5=YO!=WQQO,5=YOOQP1G/k1G/kOOQP7+%W7+%WOOQP7+%X7+%XOOQP7+%e7+%eO!=cQQO7+%eO!=hQQO7+%iOOQP7+%g7+%gO!=mQQO7+%gO!=rQQO7+%hO!>PQSO7+%hOOQP7+%h7+%hO4cQQO7+%hOOQP1G0Q1G0QO!>^QQO1G0QOOQP1G0U1G0UO!>fQQO1G0UOF|QQO1G0UOOQO,5<X,5<XOOQO-E9k-E9kOOQP1G.q1G.qOOQO,59l,59lO?tQQO,59lO!?cQQO,5=SO!?jQQO,5=SOOQP1G/V1G/VO!?rQQO,59yO!?}QRO7+'[O!@YQQO'#EmO!@dQQO'#HOO!@lQQO,5;WOOQP7+'Z7+'ZO!@qQRO7+'ZOOQP,59q,59qOOQP,59r,59rOOQO'#DZ'#DZO!@]QQO'#FtO!@|QRO,59tOOQO,5<_,5<_OOQO-E9q-E9qOOQP1G/[1G/[OOQP,59d,59dOHgQQO'#FpO!3uQQO,59dO!A_QRO,59dO!AjQRO,59dOOQO,5<Z,5<ZOOQO-E9m-E9mOOQP1G.}1G.}O(kQQO7+%YOOQP1G0m1G0mO4cQQO1G0mOOQO,5<f,5<fOOQO-E9x-E9xOOQP1G0n1G0nO!AxQQO'#GdOOQP1G0q1G0qOOQO,5<i,5<iOOQO-E9{-E9{OOQP1G0t1G0tO4cQQO1G0wOOQP1G0w1G0wOOQO,5<j,5<jOOQO-E9|-E9|OOQP1G0x1G0xO!B]QQO7+&gO!BeQSO7+&gO!CsQSO7+&pO!CzQQO7+&pOOQO,5<k,5<kOOQO-E9}-E9}OOQP1G1Q1G1QO!DRQQO,5;gOOQO,5;g,5;gO!DWQSO7+&jOOQP7+&j7+&jO!DbQQO7+&pO!7`QQO1G1[O!DgQQO1G1ZOOQO1G1Z1G1ZO!DnQSO1G1ZOOQO,5<m,5<mOOQO-E:P-E:POOQP1G1b1G1bO!DxQSO'#GqO!E]QQO'#F^O!EbQQO'#F^O!EgQQO,5;wOOQO,5;w,5;wO!ElQSO1G/qOOQO1G/q1G/qO!EyQSO'#DoO!FZQQO'#DoO!FfQQO'#DnOOQO,5<c,5<cO!FkQQO1G2uOOQO-E9u-E9uOOQO,5<b,5<bO!FxQQO1G2tOOQO-E9t-E9tOOQP<<IP<<IPOOQP<<IT<<ITOOQP<<IR<<IRO!GSQSO<<ISOOQP<<IS<<ISO4cQQO<<ISO!GaQSO<<ISOOQP7+%l7+%lO!GkQQO7+%lOOQP7+%p7+%pO!GpQQO7+%pO!GuQQO7+%pOOQO1G/W1G/WOOQO,5<^,5<^O!G}QQO1G2nOOQO-E9p-E9pOOQP<<Jv<<JvO.hQQO'#F{O!@YQQO,5;XOOQO,5;X,5;XO!HUQQO,5=jO!H^QQO,5=jOOQO1G0r1G0rOOQP<<Ju<<JuOOQP,5<`,5<`OOQP-E9r-E9rOOQO,5<[,5<[OOQO-E9n-E9nO!HfQRO1G/OOOQP1G/O1G/OOOQP<<Ht<<HtOOQP7+&X7+&XO!HqQQO'#DeOOQP7+&c7+&cOOQP<<JR<<JRO!HxQRO<<JRO!ITQQO<<J[O!I]QQO<<J[OOQO1G1R1G1ROOQP<<JU<<JUO4cQQO<<J[O!IbQSO7+&vOOQO7+&u7+&uO!IlQQO7+&uO4cQQO,5;xOOQO1G1c1G1cO!<]QQO,5:YP!<]QQO'#FwP?tQQO'#FvOOQPAN>nAN>nO4cQQOAN>nO!IsQSOAN>nOOQP<<IW<<IWOOQP<<I[<<I[O!I}QQO<<I[P!>nQQO'#FrOOQO,5<g,5<gOOQO-E9y-E9yOOQO1G0s1G0sOOQO,5<h,5<hO!JVQQO1G3UOOQO-E9z-E9zOOQP7+$j7+$jO!J_QQO'#GnO!B]QQOAN?mO!JjQQOAN?vO!JqQQOAN?vO!KzQSOAN?vOOQO<<Ja<<JaO!LRQSO1G1dO!L]QSO1G/tOOQO1G/t1G/tO!LjQSOG24YOOQPG24YG24YOOQPAN>vAN>vO!LtQQOAN>vP.hQQO'#F|OOQPG25XG25XO!LyQQOG25bO!MOQQO'#FPOOQPG25bG25bO!MZQQOG25bOOQPLD)tLD)tOOQPG24bG24bO!JqQQOLD*|O!9OQQO'#GQO!McQQO,5;kOOQP,5;k,5;kO?tQQO'#FQO!MnQQO'#FQO!MsQQOLD*|OOQP!$'Nh!$'NhOOQO,5<l,5<lOOQO-E:O-E:OOOQP1G1V1G1VO!MzQQO,5;lOOQO,5;l,5;lO!NPQQO!$'NhOOQO1G1W1G1WO!JqQQO!)9DSOOQP!.K9n!.K9nO# {QTO'#CqO#!`QTO'#CqO##}QSO'#CqO#$XQSO'#CqO#&]QSO'#CqO#&gQQO'#FyO#&tQQO'#FyO#'OQQO,5=]O#'ZQQO,5=]O#'cQQO,5:pO!7`QQO,5:pOF|QQO,5:pO#'cQQO,5:pO!7`QQO,5:pOF|QQO,5:pO#'cQQO,5:pO!7`QQO,5:pOF|QQO,5:pO#'cQQO,5:pO!7`QQO,5:pOF|QQO,5:pO#'cQQO,5:pO!7`QQO,5:pOF|QQO,5:pO!7`QQO,5:wO!7`QQO,5:zO!7`QQO,5:}O#(yQSO'#CbO#)}QSO'#CbO#*bQSO'#GqO#*rQSO'#GqO#+PQRO'#GgO#+yQSO,5<eO#,ZQSO,5<eO#,hQSO1G0[O#-rQTO1G0[O#-yQSO1G0[O#.TQSO1G0[O#0{QTO1G0[O#1SQSO1G0[O#2eQSO1G0[O#2lQTO1G0[O#2sQSO1G0[O#4XQSO1G0[O#4`QTO1G0[O#4jQSO1G0[O#4wQSO1G0cO#5dQTO'#CqO#5kQTO'#CqO#6bQSO'#GqO#'cQQO'#EPO!7`QQO'#EPOF|QQO'#EPO#8]QQO'#EPO#8gQQO'#EPO#8qQQO'#EPO#8{QQO'#E`O#9TQQO'#EcO@kQQO'#C}O?tQQO,5:RO#9YQQO,59vO#:iQQO,59vO?tQQO,59vO?tQQO1G/lO?tQQO1G/mO?tQQO7+%YO?tQQO'#C{O#:pQQO'#DgO#9YQQO'#D[O#:wQQO'#D[O#:|QSO,5:QO#;WQQO,5:RO#;]QQO1G/nO?tQQO,5:SO#;bQQO'#Dh",stateData:"#;m~O$yOSPOS$zPQ~OVvOX{O[oO^YOaoOdoOh!POjcOr|Ow}O!P!OO!QnO!WaO!]!QO!phO!qhO#Y!RO#^!SO#d!TO#j!UO#m!VO#v!WO#{!XO#}!YO$S!ZO$U![O$V![O$W!]O$Y!^O$[!_O%OQO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO$v%QP~OTzO~P]O$z!`O~OVeXZeX^eX^!TXj!TXnUXneX!QeX!WeX!W!TX!|eX#ReX#TeX#UeX#WUX$weX%YeX%`eX%feX%geX%ieX%jeX%keX%leX%meX%neX%oeX%peX%qeX~O!a#hX~P$XOV!bO$w!bO~O[!wX^pX^!wXa!wXd!wXhpXh!wXrpXr!wXwpXw!wX!PpX!P!wX!QpX!Q!wX!WpX!W!wX!]pX!]!wX!p!wX!q!wX%OpX%O!wX%U!wX%V!wX%YpX%Y!wX%f!wX%g!wX%h!wX%i!wX%j!wX~O^!hOh!POr!jOw}O!P!OO!Q!kO!WaO!]!QO%O!eO%Y!fO~On!lO#W%]XV%]X^%]Xh%]Xr%]Xw%]X!P%]X!Q%]X!W%]X!]%]X#T%]X$w%]X%O%]X%Y%]Xu%]X~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!WaO!]!QO!phO!qhO%O+wO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O!Q-OO~P*aOj!qO^%XX]%XXn%XX!V%XX~O!W!tOV%TXZ%TX^%TXn%TX!Q%TX!W%TX!|%TX#R%TX#T%TX#U%TX$w%TX%Y%TX%`%TX%f%TX%g%TX%i%TX%j%TX%k%TX%l%TX%m%TX%n%TX%o%TX%p%TX%q%TX]%TX!V%TXj%TXi%TX!a%TXu%TX~OZ!sO~P,^O%O!eO~O!W!tO^%WXj%WX]%WXn%WX!V%WXu%WXV%WX$w%WX%`%WX#T%WX[%WX!a%WX~Ou!{O!QnO!V!zO~P*aOV!}O[oO^YOaoOdoOh!POjcOr!pOw}O!P!OO!QnO!WaO!]!QO!phO!qhO#Y!RO#^!SO#d!TO#j!UO#m!VO#v!WO#{!XO#}!YO$S!ZO$U![O$V![O$W!]O$Y!^O$[!_O%OQO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlOi%dP~O^#QO~OZ#RO^#VOn#TO!Q#cO!W#SO#R#dO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[O%q#]OV`X#T%eX#U%eX$w`X~O!|#`O~P2gO^#VO~O^#eO~O!QnO~P*aO[oO^YOaoOdoOh!POr!pOw}O!QnO!WaO!]!QO!phO!qhO%O+wO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O!P#hO~P4jO#T#iO#U#iO~O#W#jO~O!a#kO~OVvO[oO^YOaoOdoOh!POjcOr|Ow}O!P!OO!QnO!WaO!]!QO!phO!qhO#Y!RO#^!SO#d!TO#j!UO#m!VO#v!WO#{!XO#}!YO$S!ZO$U![O$V![O$W!]O$Y!^O$[!_O%OQO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O$v%QX~P6hO%O#oO~OZ#rO[#qO^#sO%O#oO~O^#uO%O#oO~Oj#yO~O^!hOh!POr!jOw}O!P!OO!Q#|O!WaO!]!QO%O!eO%Y!fO~Oj#}O~O!W$PO~O^$RO%O#oO~O^$UO%O#oO~O^$XO%O#oO~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!Q-PO!WaO!]!QO!phO!qhO%O$ZO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~Oj$`O~P;_OV$fOjcO~P;_Oj$kO~O!QnOV$RX$w$RX~P*aO%O$oOV$TX$w$TX~O%O$oO~O${$rO$|$rO$}$tO~OZeX^!TX!W!TXj!TXn!TXh!TXr!TXw!TX{!TX!P!TX!Q!TX!]!TX%O!TX%Y!TX~O]!TX!V!TXu!TX#T!TXV!TX$w!TX%`!TX[!TX!a!TX~P>VO^!hOh!POr-TOw}O!P-_O!Q-`O!W-^O!]-eO%O!eO%Y!fO~OZ!sO~O^#uO~O!P$xO~On!lO#W%]aV%]a^%]ah%]ar%]aw%]a!P%]a!Q%]a!W%]a!]%]a#T%]a$w%]a%O%]a%Y%]au%]a~O]${O^#QO~OZ#RO^#VO!W#SO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[O%q#]O~O]$|O!|,WO~PBROj!qOn%QO!QnOi%cP~P*aO!V%WO!|#`O~PBRO!V%YO~OV!}O[oO^YOaoOdoOh!POjcOr!pOw}O!P!OO!QnO!WaO!]!QO!phO!qhO#Y!RO#^!SO#d!TO#j!UO#m!VO#v!WO#{!XO#}!YO$S!ZO$U![O$V![O$W!]O$Y!^O$[!_O%OQO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~Oi%dX#p%dX#q%dX~PDQOi%]O~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!Q-QO!WaO!]!QO!phO!qhO%O+{O%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O^%aO%O%_O~O!QnO!a%cO~P*aO!QnOn$mX#T$mX#U$mXV$mX$w$mX!a$mX~P*aOn#TO#T%ea#U%eaV%ea$w%ea!a%ea~O]%fO~PF|OV#ga$w#ga~PDTO[%sO~OZ#rO[#qO]%vO%O#oO~O^!hOh!POn%zOr-TOu%xOw}O!P-_O!Q-`O!W-^O!]-eO%O,dO%Y!fO]%[P~O^&OOh!POr!jOw}O!P!OO!Q!kO!WaO!]!QO%Y!fO^%ZXj%ZX~O%O%}O~PKfOjcO^qa]qanqa!Vqa~O^#uO!W&SO~O^!hOh!POr-TOw}O{&WO!P-_O!Q-`O!W-^O!]-eO%O,xO%Y!fO~Oi&^O~PL{O^!hOh!POr!jOw}O!Q!kO!WaO!]!QO%O!eO%Y!fO~O!P#hO~PMwOi&eO%O,yO%Y!fO~O#T&gOV#ZX$w#ZX~P?tO]&kO%O#oO~O^!hOh!POr-TOw}O!P-_O!Q-`O!]-eO%O!eO%Y!fO~O!W&lO#T&mO~P! _O]&qO%O#oO~O#T&sOV#eX$w#eX~P?tO]&vO%O#oO~OjeX~P$XOjcO!|,XO~P2gOn!lO#W&yO#W%]X~O^#VOn#TO!Q#cO!W#SO!|,XO#R#dO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[O%q#]OV`X#T%eX#U%eX~OZ&zOj$`O$w`X~P!#cOi'OO#p'PO#q'QO~OZ#ROjcO~P!#cO#T'TO#U#iO~O#W'UO~OV'WO!QnO~P*aOV'XO~OjcO~O!|#`OV#za$w#za~PBROi'[O#p']O#q'^O~On#TO!|#`OV%eX$w%eX!a%eX~PBRO!|#`OV$Za$w$Za~PBRO${$rO$|$rO$}'`O~O]${O~O%O!eO]%ZXn%ZX!V%ZX~PKfO!|#`Oi!_Xn!_X!a!`X~PBROi!_Xn!_X!a!`X~O!a'aO~On'bOi%cX~Oi'dO~On'eO!V%bX!a%bX~O!V'gO~O]'jOn'kO!|,YO~PBROn'nO!V'mO!a'oO!|#`O~PBRO!QnO!V'qO!a'rO~P*aO!|#`On$ma#T$ma#U$maV$ma$w$ma!a$ma~PBRO]'sOu'tO~O%Y#XO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOV!xiZ!xi^!xin!xi!Q!xi!W!xi!|!xi#R!xi#T!xi#U!xi$w!xi%`!xi%f!xi%g!xi%i!xi%p!xi%q!xi~O!V!xii!xi!a!xi~P!+YO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOV!xiZ!xi^!xin!xi!Q!xi!W!xi#R!xi#T!xi#U!xi$w!xi%p!xi%q!xi!V!xii!xi!a!xi~O!|!xi~P!-TO!|#`O~P!-TO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[OV!xiZ!xi^!xin!xi!Q!xi!W!xi#R!xi#T!xi#U!xi$w!xi%q!xi~O!|#`O!V!xii!xi!a!xi~P!/VO!|#`OV#Pi$w#Pi!a#Pi~PBRO]'uOn'wOu'vO~OZ#rO[#qO]'zO%O#oO~Ou'|O~P?tOn'}O]%[X~O](PO~OZeX^mX^!TXj!TX!W!TX~OjcOV$]i$w$]i~O%`(ZOV%^X$w%^Xn%^X!V%^X~Oi(`O~PL{O[(aO!W!tOVlX$wlX~On(bO~P?tO[(aOVlX$wlX~Oi(hO%O,yO%Y!fO~O!V(iO~O#T(kO~O](nO%O#oO~O[oO^YOaoOdoOh!POr!pOu-bOw}O!P!OO!QnO!V-UO!WaO!]!QO!phO!qhO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O%O+zO~P!4vO](sO%O#oO~O#T(tOV#ea$w#ea~O](xO%O#oO~O#k(yOV#ii$w#ii~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!Q-PO!WaO!]!QO!phO!qhO%O+xO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O^(|O%O%_O~O#p%dP#q%dP~P/uOi)PO#p'PO#q'QO~O!a)RO~O!QnO#y)VO~P*aOV)WO!|#`O~PBROj#wa~P;_OV)WO!QnO~P*aOi)]O#p']O#q'^O~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!QnO!WaO!]!QO!phO!qhO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O%O,eO~P!:lO!a)bO~Oj!qO!QnO~P*aOj!qO!QnOi%ca~P*aOn)iOi%ca~O!V%ba!a%ba~P?tOn)lO!V%ba!a%ba~O])nO~O])oO~O!V)pO~O!QnO!V)rO!a)sO~P*aO!V)rO!a)sO!|#`O~PBRO])uOn)vO~O])wOn)xO~O^!hOh!POr-TOu%xOw}O!P-_O!Q-`O!W-^O!]-eO%O,dO%Y!fO~O]%[a~P!>nOn)|O]%[a~O]${O]tXntX~OjcOV$^q$w$^q~On*PO{&WO~P?tOn*SO!V%rX~O!V*UO~OjcOV$]q$w$]q~O%`(ZOV|a$w|an|a!V|a~O[*]OVla$wla~O[*]O!W!tOVla$wla~On*PO{&WO!W*`O^%WXj%WX~P! _OjcO#j!UO~OjcO!|,XO~PBROZ*dO^#VO!W#SO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[O%q#]O~O!|#`O~P!BoO#^*eO~P?tO!a*fO~Oj$`O!|,XO~P!BoO#W*hO~Oj#wi~P;_OV*kO!|#`O~PBROn#TO!Q#cO!|#`O!a$QX#T%eX~PBRO#T*lO~O#W*lO~O!a*mO~O!|#`Oi!_in!_i~PBRO!|#`Oi!bXn!bX!a!cX~PBROi!bXn!bX!a!cX~O!a*nO~Oj!qO!QnOi%ci~P*aO!V%bi!a%bi~P?tO!V*qO!a*rO!|#`O~PBRO!V*qO!|#`O~PBRO]*tO~O]*uO~O]*uOu*vO~O]%[i~P!>nO%O!eO!V%ra~On*|O!V%ra~O[+OOVli$wli~O%O+yO~P!4vO#k+QOV#iy$w#iy~O^+RO%O%_O~O]+SO~O!|,XOj#xq~PBROj#wq~P;_O!V+ZO!|#`O~PBRO]+[On+]O~O%O!eO!V%ri~O^#QOn'eO!V%bX~O#^+`O~P?tOj+aO~O^#VO!W#SO!|#`O%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[O%q#]O~OZ+cO~P!JvO!|#`O!a$Qi~PBRO!|#`Oi!bin!bi~PBRO!V+dO!|#`O~PBRO]+eO~O]+fO~Oi+iO#p+jO#q+kO~O^+lO%O%_O~Oi+pO#p+jO#q+kO~O!a+rO~O#^+sO~P?tO!a+tO~O]+uO~OZeX^eX^!TXj!TX!WeX!W!TX!|eX%YeX%`eX%feX%geX%ieX%jeX%keX%leX%meX%neX%oeX%peX%qeXVeXneX!QeX#ReX#TeX#UeX$weX~O]eX]!TX!VeXieX!aeX~P!NUOjeX~P!NUOZeX^eX^!TXj!TX!WeX!W!TX!|eX%YeX%`eX%feX%geX%ieX%jeX%keX%leX%meX%neX%oeX%peX%qeXn!TX!VeX~O]eX!V!TX~P#!gOh!TXr!TXw!TX{!TX!P!TX!Q!TX!]!TX%O!TX%Y!TX~P#!gOZeX^eX^!TXj!TXneX!WeX!W!TX!|eX%YeX%`eX%feX%geX%ieX%jeX%keX%leX%meX%neX%oeX%peX%qeX~O]eXueX~P#$xO]$mXn$mXu$mX~PF|Oj$mXn$mX~P!7`On+|O]%eau%ea~On+}Oj%ea~O[oO^YOaoOdoOh!POr!pOw}O!P!OO!Q-OO!WaO!]!QO!phO!qhO%O+yO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~OZeX]!TX^UXhUXnUXn!TXrUXuUXwUX!PUX!QUX!WUX!W!TX!]UX%OUX%YUX~OnUX!QeX!aeX#TeX#WUX~P#$xOn+|O!|,YO]%eXu%eX~PBROn+}O!|,XOj%eX~PBRO^&OOV%ZXj%ZX$w%ZX]%ZXn%ZX!V%ZXu%ZX%`%ZX#T%ZX[%ZX!a%ZX~P?wO!|,YO]$man$mau$ma~PBRO!|,XOj$man$ma~PBRO%Y#XO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOZ!xi]!xi^!xi!W!xi!|!xi%`!xi%f!xi%g!xi%i!xi%p!xi%q!xi~Oj!xi~P!+YOn!xiu!xi~P#,hO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOZ!xi]!xi^!xi!W!xi!|!xi%p!xi%q!xi~O%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOV!xiZ!xi^!xij!xin!xi!Q!xi!W!xi#R!xi#T!xi#U!xi$w!xi%p!xi%q!xi~O!|!xi~P#/_On!xiu!xi~P#.TO%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YOZ!xi]!xi^!xi!W!xi%p!xi%q!xi~O!|,WO~P#1^O!|,XO~P#/_O!|,YOn!xiu!xi~P#1^O%Y#XO%`#ZO%fiO%giO%i#ZO%j#YO%k#XO%l#XO%m#YO%n#YO%o#YO%p#[OZ!xi]!xi^!xi!W!xi%q!xi~O!|,WO~P#3QO!|,XOj!xi~P!/VO!|,YOn!xiu!xi~P#3QO!|,XOj#Pi~PBROV!TXZeX^mX!W!TX$w!TX~O%`!TX~P#5RO[!TXhmXnmXrmXwmX!PmX!QmX!WmX!]mX%OmX%YmX~P#5ROn#TO!Q,aO!|,XO#R#dOj`X#T%eX#U%eX~PBRO[oO^YOaoOdoOh!POr!pOw}O!P#hO!WaO!]!QO!phO!qhO%UTO%VUO%YVO%fiO%giO%hjO%ikO%jlO~O!Q-OO%O+yO~P#6{O!Q-PO%O+xO~P#6{O!Q-QO%O+{O~P#6{O#T,bO#U,bO~O#W,cO~O^!hOh!POr-TOw}O!P-_O!Q-WO!W-^O!]-eO%O!eO%Y!fO~O^!hOh!POr-TOw}O!Q-`O!W-^O!]-eO%O!eO%Y!fO~O!P-VO~P#9zO%O+wO~P!4vO!P-XO~O!V-YO!|#`O~PBRO!V-ZO~O!V-[O~O!W-dO~OP%ka%Oa~",goto:"!FW%sPP%tP%wP%zP'SP'XPPPP'`'cP'u'uP)w'u-_PPP0j0m0qP1V4b1VP7s8WP1VP8a8d8hP8p8w1VPP1V8{<`?vPPCY-_-_-_PCdCuCxPC{DQ'u'uDV'uES'u'u'u'uGUIW'uPPJR'uJUMjMjMj'u! r! r!#SP!$`!%d!&d'cP'cPP'cP!&yP!'V!'^!&yP!'a!'h!'n!'w!&yP!'z!(R!&y!(U!(fPP!&yP!(x!)UPP!&y!)Y!)c!&yP!)g!)gP!&yP!&yP!)j!)m!&v!&yP!&yPPP!&yP!&yP!)q!)q!)w!)}!*U!*[!*d!*j!*p!*w!*}!+T!+Z!.q!.x!/O!/X!/m!/s!/z!0Q!0W!0^!0d!0jPPPPPPPPP!0p!1f!1k!1{!2kPP!7P!:^P!>u!?Z!?_!@Z!@fP!@p!D_!Df!Di!DuPPPPPPPPPPPP!FSR!aPRyO!WXOScw!R!T!U!W#O#k#n#u$R$X&O&j&u&|'W'Y']'})W)|*k*w+gQ#pzU#r{#s%uQ#x|U$T!S$U&pQ$^!VQ$y!lR)U'RVROS#nQ#t{T%t#s%uR#t{qrOScw!U!V!W#O#k#n&|'W'Y)W*k+g%PoOSYacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^%O]OSYacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^#u!iW^!O!h!t!z#e#h#u#v#y#|#}$P$Q$T$W$v$x%W%Y%a%x%y&O&S&W&]&`&b&d&m'e'|'}(S([(c(i(o(|)l)|*P*Q*S*p*w*|+R+^+j+l,h-U-V-W-X-Y-Z-[-]-_-d'cbOSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&W&]&`&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*Q*`*h*k*l*n*o*p*r*w+R+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-dR$O!PT&c#}&dW%`#R&z*d+cQ&Q#vS&V#y&]S&`#}&dR*Y(b'cZOSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&W&]&`&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*Q*`*h*k*l*n*o*p*r*w+R+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-d%fWOSWYacmnw!O!U!V!W!X!Z!_!q!z#O#Q#S#T#V#^#_#`#a#b#c#h#i#j#k#n#v#|$f$v$x%W%Y%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(i(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^S&b#}&d!{-]!h!t#e#u#y$P$Q$T$W%a%x%y&O&W&]&`&m'e'|'}(S([(c(o(|)l)|*Q*p*w+R+j+l,h-U-V-W-X-Y-Z-[-]-_-dQ#v|S$v!j!pU&P#v$v,hZ,h#x&Q&U&V-TS%{#u&OV){'})|*wR#z}T&[#y&]]&X#y&](S([(o*QZ&Z#y&](S(o*QT([&Y(]'s_OSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|#}$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&S&W&]&`&b&d&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*P*Q*S*`*h*k*l*n*o*p*r*w*|+R+^+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-d'r_OSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|#}$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&S&W&]&`&b&d&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*P*Q*S*`*h*k*l*n*o*p*r*w*|+R+^+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-dR!w^'bbOSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&W&]&`&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*Q*`*h*k*l*n*o*p*r*w+R+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-dS&a#}&dR(d&bS!u]fX!x`&_(e(oQ!r[Q%O!qQ)d'aU)f'b)i*oR+X*nR%R!qR%P!qV)h'b)i*oV)g'b)i*odtOScw#O#k#n&|'Y+gQ$h!WQ&R#wQ&w$[S'S$c$iQ(V&TQ*O(RQ*V(WQ*b(yQ*c(zR+_+Q%PfOSYacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^%PgOSYacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^!q#Weg!o!y$[$_$c$j$m$q$}%^%b%d%m'V'p(z({)S)Y)^)c)e)q)t*i*s+T+V+W+Y,f,g,i,j,w,z-aR#fh#^mOSacmnw!X!Z!_!q#O#S#T#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&y&|'P'T'U'X'Y']'a'b'o'r(k(t)i)s*`*h*l*n*o*r+g-^!W#_e!y$j$m$q$}%b%d%j%k%l%m'V'p({)Y)^)c)e)q)t*s+T+V+W+Y-aW,T!o,n,q,tj,U$[$_$c(z)S*i,g,j,o,r,u,w,z[,V%^,f,i,p,s,v`,{Y,Q,T,W,Z,^,{-Ox,|!U!V!W&x'R'W)V)W*k+},R,U,X,[,_,a,b,c,|-Pg,}#Q#V'w+|,S,V,Y,],`,}-Q#^mOSacmnw!X!Z!_!q#O#S#T#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&y&|'P'T'U'X'Y']'a'b'o'r(k(t)i)s*`*h*l*n*o*r+g-^`,{Y,Q,T,W,Z,^,{-Ox,|!U!V!W&x'R'W)V)W*k+},R,U,X,[,_,a,b,c,|-Pg,}#Q#V'w+|,S,V,Y,],`,}-Q!Y#^e!y$j$m$q$}%b%d%i%j%k%l%m'V'p({)Y)^)c)e)q)t*s+T+V+W+Y-aY,Q!o,k,n,q,tl,R$[$_$c(z)S*i,g,j,l,o,r,u,w,z_,S%^,f,i,m,p,s,v!W#_e!y$j$m$q$}%b%d%j%k%l%m'V'p({)Y)^)c)e)q)t*s+T+V+W+Y-aW,T!o,n,q,tj,U$[$_$c(z)S*i,g,j,o,r,u,w,z],V%^,f,i,p,s,v!S#ae!y$j$m$q$}%b%d%l%m'V'p({)Y)^)c)e)q)t*s+T+V+W+Y-aS,Z!o,tf,[$[$_$c(z)S*i,g,j,u,w,zX,]%^,f,i,v!Q#be!y$j$m$q$}%b%d%m'V'p({)Y)^)c)e)q)t*s+T+V+W+Y-aQ,^!od,_$[$_$c(z)S*i,g,j,w,zV,`%^,f,iprOScw!U!V!W#O#k#n&|'W'Y)W*k+gR)a']etOScw#O#k#n&|'Y+gQ$S!RT&i$R&jR$S!RQ$V!ST&o$U&pQ&U#xR&m$TS(T&S&lV*{*S*|+^R$V!SQ$Y!TT&t$X&uR$Y!TdsOScw#O#k#n&|'Y+gT$p![!]dtOScw#O#k#n&|'Y+gQ*b(yR+_+QQ$a!VQ&{$_Q)T'RR*g)ST&|$`&}Q+b+SQ+m+fR+v+uT+g+a+hR$i!WR$l!YT'Y$k'ZXuOSw#nQ$s!`R'_$sSSO#nR!dSQ%u#sR'y%uUwOS#nR#mwQ&d#}R(g&dQ(c&`R*Z(cS!mX$^R$z!mQ(O%{R)}(OQ&]#yR(_&]Q(]&YR*X(]'r^OSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|#}$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&S&W&]&`&b&d&g&l&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*P*Q*S*`*h*k*l*n*o*p*r*w*|+R+^+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-dR!v^S'f%T+PR)m'fQ'c%RR)j'cW#Oc&|'Y+gR%[#O^#Ue$[$_$c$m)^,zU%e#U,O,PQ,O,fR,P,gQ&j$RR(m&jS*Q(S(oR*y*QQ*T(TR*}*TQ&p$UR(r&pQ&u$XR(w&uQ&}$`R)O&}Q+h+aR+o+hQ'Z$kR)['ZQ!cRQ#luQ#nyQ%Z!|Q&x$]Q'R$bQ'x%tQ(^&[Q(f&cQ(l&iQ(q&oR(v&tVxOS#nWuOSw#nY!|c#O&|'Y+gR%r#kdtOScw#O#k#n&|'Y+gQ$]!UQ$b!VQ$g!WQ)X'WQ*j)WR+U*kdeOScw#O#k#n&|'Y+gQ!oYQ!ya`#gmn,{,|,}-O-P-QQ$[!UQ$_!VQ$c!WQ$j!Xd$m!Z#i#j&g&s'P'T'U(k(tQ$q!_Q$}!qQ%^#QQ%b#SQ%d#TW%h#^,Q,R,SQ%i#_Q%j#`Q%k#aQ%l#bQ%m#cQ'V$fQ'p%cQ(z&xQ({&yQ)S'RQ)Y'XQ)^']Q)c'aU)e'b)i*oQ)q'oQ)t'rQ*i)VQ*s)sQ+T*hQ+V*lQ+W*nQ+Y*rS,f#V'wS,g,b,cQ,i+|Q,j+}Q,k,TQ,l,UQ,m,VQ,n,WQ,o,XQ,p,YQ,q,ZQ,r,[Q,s,]Q,t,^Q,u,_Q,v,`Q,w,aU,z'W)W*kV-a&l*`-^#bZW!O!h!t!z#e#h#u#v#y#|$P$Q$T$W$v$x%W%Y%a%x%y&O&W&]&`&m'e'|'}(S([(c(i(o(|)l)|*Q*p*w+R+j+l,h-U-V-W-X-Y-Z-[-]-_-d%P[OSYacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*`*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^$zdOSacmnw!U!V!W!X!Z!_!q#O#Q#S#T#V#^#_#`#a#b#c#i#j#k#n$f%c&g&l&s&x&y&|'P'R'T'U'W'X'Y']'a'b'o'r'w(k(t)V)W)i)s*h*k*l*n*o*r+g+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,{,|,}-O-P-Q-^S!gW-]Q!nYS#{!O-_Q$u!hS%T!t+jS%X!z-UQ%n#e[%o#h#|$x-V-W-XW%w#u'})|*wU&P#v$v,h[&X#y&](S([(o*QQ&f$PQ&h$QQ&n$TQ&r$WS'h%W-YS'i%Y-ZW'l%a(|+R+lS'{%x%yQ(Q&OQ(Y&WQ(d&`Q(p&mU)k'e)l*pQ)z'|Q*[(cS*^(i-[Q+P*`R-c-dS#w|!pS$w!j-TQ&T#xQ(R&QQ(W&UR(X&VT%|#u&OhqOScw!U!V#O#k#n&|'Y+gU$Q!R$R&jU$W!T$X&uQ$e!WY%y#u&O'})|*wQ)`']V-S'W)W*kS&[#y&]S*R(S(oR*z*QY&Y#y&](S(o*QR*W(['``OSWYacmnw!O!U!V!W!X!Z!_!h!q!t!z#O#Q#S#T#V#^#_#`#a#b#c#e#h#i#j#k#n#u#v#y#|$P$Q$T$W$f$v$x%W%Y%a%c%x%y&O&W&]&`&g&m&s&x&y&|'P'R'T'U'W'X'Y']'a'b'e'o'r'w'|'}(S([(c(i(k(o(t(|)V)W)i)l)s)|*Q*`*h*k*l*n*o*p*r*w+R+g+j+l+|+},Q,R,S,T,U,V,W,X,Y,Z,[,],^,_,`,a,b,c,h,{,|,}-O-P-Q-U-V-W-X-Y-Z-[-]-^-_-dS&_#}&dW(S&S*S*|+^Q(e&bQ(o&lR*x*PS%U!t*`R+q+jR%S!qQ#PcQ(}&|Q)Z'YR+n+ghpOScw!U!V#O#k#n&|'Y+gQ$d!WQ$n!ZQ%g#VU%p#i'T,bU%q#j'U,cQ(j&gQ(u&sQ)Q'PQ)_']Q)y'wQ*_(kQ*a(tV-R'W)W*kT(U&S&l",nodeNames:"⚠ LineComment BlockComment SourceFile PackageClause package DefName ; ImportDecl import ImportSpec . String ) ( SpecList ExprStatement Number Bool Nil Rune VariableName TypedLiteral StructType struct } { StructBody FieldDecl FieldName , PointerType * FunctionType func Parameters Parameter ... InterfaceType interface InterfaceBody MethodElem UnderlyingType ~ TypeElem LogicOp ChannelType chan <- ParenthesizedType QualifiedType TypeName ParameterizedType ] [ TypeArgs ArrayType SliceType MapType map LiteralValue Element Key : Element Key ParenthesizedExpr FunctionLiteral Block Conversion SelectorExpr IndexExpr SliceExpr TypeAssertion CallExpr ParameterizedExpr Arguments CallExpr make new Arguments UnaryExp ArithOp LogicOp BitOp DerefOp BinaryExp ArithOp BitOp BitOp CompareOp LogicOp LogicOp SendStatement IncDecStatement IncDecOp Assignment = UpdateOp VarDecl := ConstDecl const ConstSpec SpecList TypeDecl type TypeSpec TypeParams TypeParam SpecList VarDecl var VarSpec SpecList LabeledStatement LabelName IfStatement if else SwitchStatement switch SwitchBlock Case case default TypeSwitchStatement SwitchBlock Case ForStatement for ForClause RangeClause range GoStatement go SelectStatement select SelectBlock Case ReceiveStatement ReturnStatement return GotoStatement break continue goto FallthroughStatement fallthrough DeferStatement defer FunctionDecl MethodDecl",maxTerm:218,context:FN,nodeProps:[["isolate",-3,2,12,20,""],["group",-18,12,17,18,19,20,21,22,66,67,69,70,71,72,73,74,77,81,86,"Expr",-20,16,68,93,94,96,99,101,105,111,115,117,120,126,129,134,136,141,143,147,149,"Statement",-12,23,31,33,38,46,49,50,51,52,56,57,58,"Type"],["openedBy",13,"(",25,"{",53,"["],["closedBy",14,")",26,"}",54,"]"]],propSources:[mN],skippedNodes:[0,1,2,153],repeatNodeCount:23,tokenData:":b~RvXY#iYZ#i]^#ipq#iqr#zrs$Xuv&Pvw&^wx&yxy(qyz(vz{({{|)T|})e}!O)j!O!P)u!P!Q+}!Q!R,y!R![-t![!]2^!]!^2k!^!_2p!_!`3]!`!a3e!c!}3x!}#O4j#P#Q4o#Q#R4t#R#S4|#S#T9X#T#o3x#o#p9q#p#q9v#q#r:W#r#s:]$g;'S3x;'S;=`4d<%lO3x~#nS$y~XY#iYZ#i]^#ipq#iU$PP%hQ!_!`$SS$XO!|S~$^W[~OY$XZr$Xrs$vs#O$X#O#P${#P;'S$X;'S;=`%y<%lO$X~${O[~~%ORO;'S$X;'S;=`%X;=`O$X~%^X[~OY$XZr$Xrs$vs#O$X#O#P${#P;'S$X;'S;=`%y;=`<%l$X<%lO$X~%|P;=`<%l$X~&UP%l~!_!`&X~&^O#U~~&cR%j~vw&l!_!`&X#Q#R&q~&qO%p~~&vP%o~!_!`&X~'OWd~OY&yZw&ywx'hx#O&y#O#P'm#P;'S&y;'S;=`(k<%lO&y~'mOd~~'pRO;'S&y;'S;=`'y;=`O&y~(OXd~OY&yZw&ywx'hx#O&y#O#P'm#P;'S&y;'S;=`(k;=`<%l&y<%lO&y~(nP;=`<%l&y~(vO^~~({O]~~)QP%Y~!_!`&X~)YQ%f~{|)`!_!`&X~)eO#R~~)jOn~~)oQ%g~}!O)`!_!`&X~)zRZS!O!P*T!Q![*`#R#S+w~*WP!O!P*Z~*`Ou~Q*eTaQ!Q![*`!g!h*t#R#S+w#X#Y*t#]#^+rQ*wS{|+T}!O+T!Q![+^#R#S+lQ+WQ!Q![+^#R#S+lQ+cRaQ!Q![+^#R#S+l#]#^+rQ+oP!Q![+^Q+wOaQQ+zP!Q![*`~,SR%k~z{,]!P!Q,b!_!`&X~,bO$z~~,gSP~OY,bZ;'S,b;'S;=`,s<%lO,b~,vP;=`<%l,bQ-O[aQ!O!P*`!Q![-t!d!e.c!g!h*t!q!r/Z!z!{/x#R#S.]#U#V.c#X#Y*t#]#^+r#c#d/Z#l#m/xQ-yUaQ!O!P*`!Q![-t!g!h*t#R#S.]#X#Y*t#]#^+rQ.`P!Q![-tQ.fR!Q!R.o!R!S.o#R#S/QQ.tSaQ!Q!R.o!R!S.o#R#S/Q#]#^+rQ/TQ!Q!R.o!R!S.oQ/^Q!Q!Y/d#R#S/rQ/iRaQ!Q!Y/d#R#S/r#]#^+rQ/uP!Q!Y/dQ/{T!O!P0[!Q![1c!c!i1c#R#S2Q#T#Z1cQ0_S!Q![0k!c!i0k#R#S1V#T#Z0kQ0pVaQ!Q![0k!c!i0k!r!s*t#R#S1V#T#Z0k#]#^+r#d#e*tQ1YR!Q![0k!c!i0k#T#Z0kQ1hWaQ!O!P0k!Q![1c!c!i1c!r!s*t#R#S2Q#T#Z1c#]#^+r#d#e*tQ2TR!Q![1c!c!i1c#T#Z1c~2cP!a~!_!`2f~2kO#W~~2pOV~~2uR!|S}!O3O!^!_3T!_!`$S~3TO!Q~~3YP%m~!_!`&X~3bP#T~!_!`$S~3jQ!|S!_!`$S!`!a3p~3uP%n~!_!`&X~3}V%O~!Q![3x!c!}3x#R#S3x#T#o3x$g;'S3x;'S;=`4d<%lO3x~4gP;=`<%l3x~4oO!W~~4tO!V~~4yP%i~!_!`&X~5RV%O~!Q![5h!c!}3x#R#S3x#T#o3x$g;'S3x;'S;=`4d<%lO3x~5o^aQ%O~!O!P*`!Q![5h!c!g3x!g!h6k!h!}3x#R#S4|#T#X3x#X#Y6k#Y#]3x#]#^8k#^#o3x$g;'S3x;'S;=`4d<%lO3x~6pX%O~{|+T}!O+T!Q![7]!c!}3x#R#S8P#T#o3x$g;'S3x;'S;=`4d<%lO3x~7dXaQ%O~!Q![7]!c!}3x#R#S8P#T#]3x#]#^8k#^#o3x$g;'S3x;'S;=`4d<%lO3x~8UV%O~!Q![7]!c!}3x#R#S3x#T#o3x$g;'S3x;'S;=`4d<%lO3x~8rVaQ%O~!Q![3x!c!}3x#R#S3x#T#o3x$g;'S3x;'S;=`4d<%lO3x~9[TO#S9X#S#T$v#T;'S9X;'S;=`9k<%lO9X~9nP;=`<%l9X~9vOj~~9{Q%`~!_!`&X#p#q:R~:WO%q~~:]Oi~~:bO{~",tokenizers:[ZN,1,2,new QW("j~RQYZXz{^~^O$|~~aP!P!Qd~iO$}~~",25,181)],topRules:{SourceFile:[0,3]},dynamicPrecedences:{19:1,51:-1,55:2,69:-1,108:-1},specialized:[{term:184,get:g=>BN[g]||-1}],tokenPrec:5451}),NN=[th("func ${name}(${params}) ${type} {\n\t${}\n}",{label:"func",detail:"declaration",type:"keyword"}),th("func (${receiver}) ${name}(${params}) ${type} {\n\t${}\n}",{label:"func",detail:"method declaration",type:"keyword"}),th("var ${name} = ${value}",{label:"var",detail:"declaration",type:"keyword"}),th("type ${name} ${type}",{label:"type",detail:"declaration",type:"keyword"}),th("const ${name} = ${value}",{label:"const",detail:"declaration",type:"keyword"}),th("type ${name} = ${type}",{label:"type",detail:"alias declaration",type:"keyword"}),th("for ${init}; ${test}; ${update} {\n\t${}\n}",{label:"for",detail:"loop",type:"keyword"}),th("for ${i} := range ${value} {\n\t${}\n}",{label:"for",detail:"range",type:"keyword"}),th("select {\n\t${}\n}",{label:"select",detail:"statement",type:"keyword"}),th("case ${}:\n${}",{label:"case",type:"keyword"}),th("switch ${} {\n\t${}\n}",{label:"switch",detail:"statement",type:"keyword"}),th("switch ${}.(${type}) {\n\t${}\n}",{label:"switch",detail:"type statement",type:"keyword"}),th("if ${} {\n\t${}\n}",{label:"if",detail:"block",type:"keyword"}),th("if ${} {\n\t${}\n} else {\n\t${}\n}",{label:"if",detail:"/ else block",type:"keyword"}),th('import ${name} "${module}"\n${}',{label:"import",detail:"declaration",type:"keyword"})],pN=new $s,SN=new Set(["SourceFile","Block","FunctionDecl","MethodDecl","FunctionLiteral","ForStatement","SwitchStatement","TypeSwitchStatement","IfStatement"]);function bN(g,e){return(I,t)=>{g:for(let C=I.node.firstChild,i=0,l=null;;){for(;!C;){if(!i)break g;i--,C=l.nextSibling,l=l.parent}e&&C.name==e||"SpecList"==C.name?(i++,l=C,C=C.firstChild):("DefName"==C.name&&t(C,g),C=C.nextSibling)}return!0}}const uN={FunctionDecl:bN("function"),VarDecl:bN("var","VarSpec"),ConstDecl:bN("constant","ConstSpec"),TypeDecl:bN("type","TypeSpec"),ImportDecl:bN("constant","ImportSpec"),Parameter:bN("var"),__proto__:null};function TN(g,e){let I=pN.get(e);if(I)return I;let t=[],C=!0;function i(e,I){let C=g.sliceString(e.from,e.to);t.push({label:C,type:I})}return e.cursor(Qs.IncludeAnonymous).iterate((e=>{if(C)C=!1;else if(e.name){let g=uN[e.name];if(g&&g(e,i)||SN.has(e.name))return!1}else if(e.to-e.from>8192){for(let I of TN(g,e.node))t.push(I);return!1}})),pN.set(e,t),t}const GN=/^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/,kN=["String","LineComment","BlockComment","DefName","LabelName","FieldName",".","?."],QN=g=>{let e=Xa(g.state).resolveInner(g.pos,-1);if(kN.indexOf(e.name)>-1)return null;let I="VariableName"==e.name||e.to-e.from<20&&GN.test(g.state.sliceDoc(e.from,e.to));if(!I&&!g.explicit)return null;let t=[];for(let I=e;I;I=I.parent)SN.has(I.name)&&(t=t.concat(TN(g.state.doc,I)));return{options:t,from:I?e.from:g.pos,validFor:GN}},MN=wa.define({name:"go",parser:WN.configure({props:[CV.add({IfStatement:hV({except:/^\s*({|else\b)/}),LabeledStatement:rV,"SwitchBlock SelectBlock":g=>{let e=g.textAfter,I=/^\s*\}/.test(e),t=/^\s*(case|default)\b/.test(e);return g.baseIndent+(I||t?0:g.unit)},Block:VV({closing:"}"}),BlockComment:()=>null,Statement:hV({except:/^{/})}),FV.add({"Block SwitchBlock SelectBlock LiteralValue InterfaceType StructType SpecList":mV,BlockComment:g=>({from:g.from+2,to:g.to-2})})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"',"`"]},commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case\b|default\b|\})$/}});let YN=g=>({label:g,type:"keyword"});const EN="interface struct chan map package go return break continue goto fallthrough else defer range true false nil".split(" ").map(YN);function yN(){let g=NN.concat(EN);return new _a(MN,[MN.data.of({autocomplete:xc(kN,vc(g))}),MN.data.of({autocomplete:QN})])}const JN={};function HN(g){let e=JN[g];if(e)return e;e=JN[g]=[];for(let g=0;g<128;g++){const I=String.fromCharCode(g);e.push(I)}for(let I=0;I<g.length;I++){const t=g.charCodeAt(I);e[t]="%"+("0"+t.toString(16).toUpperCase()).slice(-2)}return e}function wN(g,e){"string"!=typeof e&&(e=wN.defaultChars);const I=HN(e);return g.replace(/(%[a-f0-9]{2})+/gi,(function(g){let e="";for(let t=0,C=g.length;t<C;t+=3){const i=parseInt(g.slice(t+1,t+3),16);if(i<128)e+=I[i];else{if(192==(224&i)&&t+3<C){const I=parseInt(g.slice(t+4,t+6),16);if(128==(192&I)){const g=i<<6&1984|63&I;e+=g<128?"��":String.fromCharCode(g),t+=3;continue}}if(224==(240&i)&&t+6<C){const I=parseInt(g.slice(t+4,t+6),16),C=parseInt(g.slice(t+7,t+9),16);if(128==(192&I)&&128==(192&C)){const g=i<<12&61440|I<<6&4032|63&C;e+=g<2048||g>=55296&&g<=57343?"���":String.fromCharCode(g),t+=6;continue}}if(240==(248&i)&&t+9<C){const I=parseInt(g.slice(t+4,t+6),16),C=parseInt(g.slice(t+7,t+9),16),l=parseInt(g.slice(t+10,t+12),16);if(128==(192&I)&&128==(192&C)&&128==(192&l)){let g=i<<18&1835008|I<<12&258048|C<<6&4032|63&l;g<65536||g>1114111?e+="����":(g-=65536,e+=String.fromCharCode(55296+(g>>10),56320+(1023&g))),t+=9;continue}}e+="�"}}return e}))}wN.defaultChars=";/?:@&=+$,#",wN.componentChars="";const XN={};function KN(g){let e=XN[g];if(e)return e;e=XN[g]=[];for(let g=0;g<128;g++){const I=String.fromCharCode(g);/^[0-9a-z]$/i.test(I)?e.push(I):e.push("%"+("0"+g.toString(16).toUpperCase()).slice(-2))}for(let I=0;I<g.length;I++)e[g.charCodeAt(I)]=g[I];return e}function zN(g,e,I){"string"!=typeof e&&(I=e,e=zN.defaultChars),typeof I>"u"&&(I=!0);const t=KN(e);let C="";for(let e=0,i=g.length;e<i;e++){const l=g.charCodeAt(e);if(I&&37===l&&e+2<i&&/^[0-9a-f]{2}$/i.test(g.slice(e+1,e+3)))C+=g.slice(e,e+3),e+=2;else if(l<128)C+=t[l];else if(l>=55296&&l<=57343){if(l>=55296&&l<=56319&&e+1<i){const I=g.charCodeAt(e+1);if(I>=56320&&I<=57343){C+=encodeURIComponent(g[e]+g[e+1]),e++;continue}}C+="%EF%BF%BD"}else C+=encodeURIComponent(g[e])}return C}function DN(g){let e="";return e+=g.protocol||"",e+=g.slashes?"//":"",e+=g.auth?g.auth+"@":"",g.hostname&&-1!==g.hostname.indexOf(":")?e+="["+g.hostname+"]":e+=g.hostname||"",e+=g.port?":"+g.port:"",e+=g.pathname||"",e+=g.search||"",e+=g.hash||"",e}function vN(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}zN.defaultChars=";/?:@&=+$,-_.!~*'()#",zN.componentChars="-_.!~*'()";const xN=/^([a-z0-9.+-]+:)/i,ON=/:[0-9]*$/,fN=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,jN=["<",">",'"',"`"," ","\r","\n","\t"],LN=["{","}","|","\\","^","`"].concat(jN),PN=["'"].concat(LN),_N=["%","/","?",";","#"].concat(PN),qN=["/","?","#"],$N=255,gp=/^[+a-z0-9A-Z_-]{0,63}$/,ep=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,Ip={javascript:!0,"javascript:":!0},tp={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function Cp(g,e){if(g&&g instanceof vN)return g;const I=new vN;return I.parse(g,e),I}vN.prototype.parse=function(g,e){let I,t,C,i=g;if(i=i.trim(),!e&&1===g.split("#").length){const g=fN.exec(i);if(g)return this.pathname=g[1],g[2]&&(this.search=g[2]),this}let l=xN.exec(i);if(l&&(l=l[0],I=l.toLowerCase(),this.protocol=l,i=i.substr(l.length)),(e||l||i.match(/^\/\/[^@\/]+@[^@\/]+/))&&(C="//"===i.substr(0,2),C&&!(l&&Ip[l])&&(i=i.substr(2),this.slashes=!0)),!Ip[l]&&(C||l&&!tp[l])){let g,e,I=-1;for(let g=0;g<qN.length;g++)t=i.indexOf(qN[g]),-1!==t&&(-1===I||t<I)&&(I=t);e=-1===I?i.lastIndexOf("@"):i.lastIndexOf("@",I),-1!==e&&(g=i.slice(0,e),i=i.slice(e+1),this.auth=g),I=-1;for(let g=0;g<_N.length;g++)t=i.indexOf(_N[g]),-1!==t&&(-1===I||t<I)&&(I=t);-1===I&&(I=i.length),":"===i[I-1]&&I--;const C=i.slice(0,I);i=i.slice(I),this.parseHost(C),this.hostname=this.hostname||"";const l="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!l){const g=this.hostname.split(/\./);for(let e=0,I=g.length;e<I;e++){const I=g[e];if(I&&!I.match(gp)){let t="";for(let g=0,e=I.length;g<e;g++)I.charCodeAt(g)>127?t+="x":t+=I[g];if(!t.match(gp)){const t=g.slice(0,e),C=g.slice(e+1),l=I.match(ep);l&&(t.push(l[1]),C.unshift(l[2])),C.length&&(i=C.join(".")+i),this.hostname=t.join(".");break}}}}this.hostname.length>$N&&(this.hostname=""),l&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}const n=i.indexOf("#");-1!==n&&(this.hash=i.substr(n),i=i.slice(0,n));const A=i.indexOf("?");return-1!==A&&(this.search=i.substr(A),i=i.slice(0,A)),i&&(this.pathname=i),tp[I]&&this.hostname&&!this.pathname&&(this.pathname=""),this},vN.prototype.parseHost=function(g){let e=ON.exec(g);e&&(e=e[0],":"!==e&&(this.port=e.substr(1)),g=g.substr(0,g.length-e.length)),g&&(this.hostname=g)};const ip=Object.freeze(Object.defineProperty({__proto__:null,decode:wN,encode:zN,format:DN,parse:Cp},Symbol.toStringTag,{value:"Module"})),lp=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,np=/[\0-\x1F\x7F-\x9F]/,Ap=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,dp=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,op=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/,sp=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,ap=Object.freeze(Object.defineProperty({__proto__:null,Any:lp,Cc:np,Cf:Ap,P:dp,S:op,Z:sp},Symbol.toStringTag,{value:"Module"})),Vp=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map((g=>g.charCodeAt(0)))),cp=new Uint16Array("Ȁaglq\tɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((g=>g.charCodeAt(0))));var rp;const hp=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]),Up=null!==(rp=String.fromCodePoint)&&void 0!==rp?rp:function(g){let e="";return g>65535&&(g-=65536,e+=String.fromCharCode(g>>>10&1023|55296),g=56320|1023&g),e+=String.fromCharCode(g),e};function Zp(g){var e;return g>=55296&&g<=57343||g>1114111?65533:null!==(e=hp.get(g))&&void 0!==e?e:g}var Rp;!function(g){g[g.NUM=35]="NUM",g[g.SEMI=59]="SEMI",g[g.EQUALS=61]="EQUALS",g[g.ZERO=48]="ZERO",g[g.NINE=57]="NINE",g[g.LOWER_A=97]="LOWER_A",g[g.LOWER_F=102]="LOWER_F",g[g.LOWER_X=120]="LOWER_X",g[g.LOWER_Z=122]="LOWER_Z",g[g.UPPER_A=65]="UPPER_A",g[g.UPPER_F=70]="UPPER_F",g[g.UPPER_Z=90]="UPPER_Z"}(Rp||(Rp={}));const Fp=32;var mp,Bp,Wp;function Np(g){return g>=Rp.ZERO&&g<=Rp.NINE}function pp(g){return g>=Rp.UPPER_A&&g<=Rp.UPPER_F||g>=Rp.LOWER_A&&g<=Rp.LOWER_F}function Sp(g){return g>=Rp.UPPER_A&&g<=Rp.UPPER_Z||g>=Rp.LOWER_A&&g<=Rp.LOWER_Z||Np(g)}function bp(g){return g===Rp.EQUALS||Sp(g)}!function(g){g[g.VALUE_LENGTH=49152]="VALUE_LENGTH",g[g.BRANCH_LENGTH=16256]="BRANCH_LENGTH",g[g.JUMP_TABLE=127]="JUMP_TABLE"}(mp||(mp={})),function(g){g[g.EntityStart=0]="EntityStart",g[g.NumericStart=1]="NumericStart",g[g.NumericDecimal=2]="NumericDecimal",g[g.NumericHex=3]="NumericHex",g[g.NamedEntity=4]="NamedEntity"}(Bp||(Bp={})),function(g){g[g.Legacy=0]="Legacy",g[g.Strict=1]="Strict",g[g.Attribute=2]="Attribute"}(Wp||(Wp={}));class up{constructor(g,e,I){this.decodeTree=g,this.emitCodePoint=e,this.errors=I,this.state=Bp.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=Wp.Strict}startEntity(g){this.decodeMode=g,this.state=Bp.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1}write(g,e){switch(this.state){case Bp.EntityStart:return g.charCodeAt(e)===Rp.NUM?(this.state=Bp.NumericStart,this.consumed+=1,this.stateNumericStart(g,e+1)):(this.state=Bp.NamedEntity,this.stateNamedEntity(g,e));case Bp.NumericStart:return this.stateNumericStart(g,e);case Bp.NumericDecimal:return this.stateNumericDecimal(g,e);case Bp.NumericHex:return this.stateNumericHex(g,e);case Bp.NamedEntity:return this.stateNamedEntity(g,e)}}stateNumericStart(g,e){return e>=g.length?-1:(g.charCodeAt(e)|Fp)===Rp.LOWER_X?(this.state=Bp.NumericHex,this.consumed+=1,this.stateNumericHex(g,e+1)):(this.state=Bp.NumericDecimal,this.stateNumericDecimal(g,e))}addToNumericResult(g,e,I,t){if(e!==I){const C=I-e;this.result=this.result*Math.pow(t,C)+parseInt(g.substr(e,C),t),this.consumed+=C}}stateNumericHex(g,e){const I=e;for(;e<g.length;){const t=g.charCodeAt(e);if(!Np(t)&&!pp(t))return this.addToNumericResult(g,I,e,16),this.emitNumericEntity(t,3);e+=1}return this.addToNumericResult(g,I,e,16),-1}stateNumericDecimal(g,e){const I=e;for(;e<g.length;){const t=g.charCodeAt(e);if(!Np(t))return this.addToNumericResult(g,I,e,10),this.emitNumericEntity(t,2);e+=1}return this.addToNumericResult(g,I,e,10),-1}emitNumericEntity(g,e){var I;if(this.consumed<=e)return null===(I=this.errors)||void 0===I||I.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(g===Rp.SEMI)this.consumed+=1;else if(this.decodeMode===Wp.Strict)return 0;return this.emitCodePoint(Zp(this.result),this.consumed),this.errors&&(g!==Rp.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed}stateNamedEntity(g,e){const{decodeTree:I}=this;let t=I[this.treeIndex],C=(t&mp.VALUE_LENGTH)>>14;for(;e<g.length;e++,this.excess++){const i=g.charCodeAt(e);if(this.treeIndex=Gp(I,t,this.treeIndex+Math.max(1,C),i),this.treeIndex<0)return 0===this.result||this.decodeMode===Wp.Attribute&&(0===C||bp(i))?0:this.emitNotTerminatedNamedEntity();if(t=I[this.treeIndex],C=(t&mp.VALUE_LENGTH)>>14,0!==C){if(i===Rp.SEMI)return this.emitNamedEntityData(this.treeIndex,C,this.consumed+this.excess);this.decodeMode!==Wp.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1}emitNotTerminatedNamedEntity(){var g;const{result:e,decodeTree:I}=this,t=(I[e]&mp.VALUE_LENGTH)>>14;return this.emitNamedEntityData(e,t,this.consumed),null===(g=this.errors)||void 0===g||g.missingSemicolonAfterCharacterReference(),this.consumed}emitNamedEntityData(g,e,I){const{decodeTree:t}=this;return this.emitCodePoint(1===e?t[g]&~mp.VALUE_LENGTH:t[g+1],I),3===e&&this.emitCodePoint(t[g+2],I),I}end(){var g;switch(this.state){case Bp.NamedEntity:return 0===this.result||this.decodeMode===Wp.Attribute&&this.result!==this.treeIndex?0:this.emitNotTerminatedNamedEntity();case Bp.NumericDecimal:return this.emitNumericEntity(0,2);case Bp.NumericHex:return this.emitNumericEntity(0,3);case Bp.NumericStart:return null===(g=this.errors)||void 0===g||g.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case Bp.EntityStart:return 0}}}function Tp(g){let e="";const I=new up(g,(g=>e+=Up(g)));return function(g,t){let C=0,i=0;for(;(i=g.indexOf("&",i))>=0;){e+=g.slice(C,i),I.startEntity(t);const l=I.write(g,i+1);if(l<0){C=i+I.end();break}C=i+l,i=0===l?C+1:C}const l=e+g.slice(C);return e="",l}}function Gp(g,e,I,t){const C=(e&mp.BRANCH_LENGTH)>>7,i=e&mp.JUMP_TABLE;if(0===C)return 0!==i&&t===i?I:-1;if(i){const e=t-i;return e<0||e>=C?-1:g[I+e]-1}let l=I,n=l+C-1;for(;l<=n;){const e=l+n>>>1,I=g[e];if(I<t)l=e+1;else{if(!(I>t))return g[e+C];n=e-1}}return-1}const kp=Tp(Vp);function Qp(g,e=Wp.Legacy){return kp(g,e)}function Mp(g){return Object.prototype.toString.call(g)}function Yp(g){return"[object String]"===Mp(g)}Tp(cp);const Ep=Object.prototype.hasOwnProperty;function yp(g,e){return Ep.call(g,e)}function Jp(g){return Array.prototype.slice.call(arguments,1).forEach((function(e){if(e){if("object"!=typeof e)throw new TypeError(e+"must be object");Object.keys(e).forEach((function(I){g[I]=e[I]}))}})),g}function Hp(g,e,I){return[].concat(g.slice(0,e),I,g.slice(e+1))}function wp(g){return!(g>=55296&&g<=57343||g>=64976&&g<=65007||!(65535&~g)||65534==(65535&g)||g>=0&&g<=8||11===g||g>=14&&g<=31||g>=127&&g<=159||g>1114111)}function Xp(g){if(g>65535){const e=55296+((g-=65536)>>10),I=56320+(1023&g);return String.fromCharCode(e,I)}return String.fromCharCode(g)}const Kp=/\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g,zp=/&([a-z#][a-z0-9]{1,31});/gi,Dp=new RegExp(Kp.source+"|"+zp.source,"gi"),vp=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;function xp(g,e){if(35===e.charCodeAt(0)&&vp.test(e)){const I="x"===e[1].toLowerCase()?parseInt(e.slice(2),16):parseInt(e.slice(1),10);return wp(I)?Xp(I):g}const I=Qp(g);return I!==g?I:g}function Op(g){return g.indexOf("\\")<0?g:g.replace(Kp,"$1")}function fp(g){return g.indexOf("\\")<0&&g.indexOf("&")<0?g:g.replace(Dp,(function(g,e,I){return e||xp(g,I)}))}const jp=/[&<>"]/,Lp=/[&<>"]/g,Pp={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function _p(g){return Pp[g]}function qp(g){return jp.test(g)?g.replace(Lp,_p):g}const $p=/[.?*+^$[\]\\(){}|-]/g;function gS(g){return g.replace($p,"\\$&")}function eS(g){switch(g){case 9:case 32:return!0}return!1}function IS(g){if(g>=8192&&g<=8202)return!0;switch(g){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}function tS(g){return dp.test(g)||op.test(g)}function CS(g){switch(g){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function iS(g){return g=g.trim().replace(/\s+/g," "),"Ṿ"==="ẞ".toLowerCase()&&(g=g.replace(/ẞ/g,"ß")),g.toLowerCase().toUpperCase()}const lS={mdurl:ip,ucmicro:ap},nS=Object.freeze(Object.defineProperty({__proto__:null,arrayReplaceAt:Hp,assign:Jp,escapeHtml:qp,escapeRE:gS,fromCodePoint:Xp,has:yp,isMdAsciiPunct:CS,isPunctChar:tS,isSpace:eS,isString:Yp,isValidEntityCode:wp,isWhiteSpace:IS,lib:lS,normalizeReference:iS,unescapeAll:fp,unescapeMd:Op},Symbol.toStringTag,{value:"Module"}));function AS(g,e,I){let t,C,i,l;const n=g.posMax,A=g.pos;for(g.pos=e+1,t=1;g.pos<n;){if(i=g.src.charCodeAt(g.pos),93===i&&(t--,0===t)){C=!0;break}if(l=g.pos,g.md.inline.skipToken(g),91===i)if(l===g.pos-1)t++;else if(I)return g.pos=A,-1}let d=-1;return C&&(d=g.pos),g.pos=A,d}function dS(g,e,I){let t,C=e;const i={ok:!1,pos:0,str:""};if(60===g.charCodeAt(C)){for(C++;C<I;){if(t=g.charCodeAt(C),10===t||60===t)return i;if(62===t)return i.pos=C+1,i.str=fp(g.slice(e+1,C)),i.ok=!0,i;92===t&&C+1<I?C+=2:C++}return i}let l=0;for(;C<I&&(t=g.charCodeAt(C),!(32===t||t<32||127===t));)if(92===t&&C+1<I){if(32===g.charCodeAt(C+1))break;C+=2}else{if(40===t&&(l++,l>32))return i;if(41===t){if(0===l)break;l--}C++}return e===C||0!==l||(i.str=fp(g.slice(e,C)),i.pos=C,i.ok=!0),i}function oS(g,e,I,t){let C,i=e;const l={ok:!1,can_continue:!1,pos:0,str:"",marker:0};if(t)l.str=t.str,l.marker=t.marker;else{if(i>=I)return l;let t=g.charCodeAt(i);if(34!==t&&39!==t&&40!==t)return l;e++,i++,40===t&&(t=41),l.marker=t}for(;i<I;){if(C=g.charCodeAt(i),C===l.marker)return l.pos=i+1,l.str+=fp(g.slice(e,i)),l.ok=!0,l;if(40===C&&41===l.marker)return l;92===C&&i+1<I&&i++,i++}return l.can_continue=!0,l.str+=fp(g.slice(e,i)),l}const sS=Object.freeze(Object.defineProperty({__proto__:null,parseLinkDestination:dS,parseLinkLabel:AS,parseLinkTitle:oS},Symbol.toStringTag,{value:"Module"})),aS={};function VS(){this.rules=Jp({},aS)}function cS(){this.__rules__=[],this.__cache__=null}function rS(g,e,I){this.type=g,this.tag=e,this.attrs=null,this.map=null,this.nesting=I,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}function hS(g,e,I){this.src=g,this.env=I,this.tokens=[],this.inlineMode=!1,this.md=e}aS.code_inline=function(g,e,I,t,C){const i=g[e];return"<code"+C.renderAttrs(i)+">"+qp(i.content)+"</code>"},aS.code_block=function(g,e,I,t,C){const i=g[e];return"<pre"+C.renderAttrs(i)+"><code>"+qp(g[e].content)+"</code></pre>\n"},aS.fence=function(g,e,I,t,C){const i=g[e],l=i.info?fp(i.info).trim():"";let n,A="",d="";if(l){const g=l.split(/(\s+)/g);A=g[0],d=g.slice(2).join("")}if(n=I.highlight&&I.highlight(i.content,A,d)||qp(i.content),0===n.indexOf("<pre"))return n+"\n";if(l){const g=i.attrIndex("class"),e=i.attrs?i.attrs.slice():[];g<0?e.push(["class",I.langPrefix+A]):(e[g]=e[g].slice(),e[g][1]+=" "+I.langPrefix+A);const t={attrs:e};return`<pre><code${C.renderAttrs(t)}>${n}</code></pre>\n`}return`<pre><code${C.renderAttrs(i)}>${n}</code></pre>\n`},aS.image=function(g,e,I,t,C){const i=g[e];return i.attrs[i.attrIndex("alt")][1]=C.renderInlineAsText(i.children,I,t),C.renderToken(g,e,I)},aS.hardbreak=function(g,e,I){return I.xhtmlOut?"<br />\n":"<br>\n"},aS.softbreak=function(g,e,I){return I.breaks?I.xhtmlOut?"<br />\n":"<br>\n":"\n"},aS.text=function(g,e){return qp(g[e].content)},aS.html_block=function(g,e){return g[e].content},aS.html_inline=function(g,e){return g[e].content},VS.prototype.renderAttrs=function(g){let e,I,t;if(!g.attrs)return"";for(t="",e=0,I=g.attrs.length;e<I;e++)t+=" "+qp(g.attrs[e][0])+'="'+qp(g.attrs[e][1])+'"';return t},VS.prototype.renderToken=function(g,e,I){const t=g[e];let C="";if(t.hidden)return"";t.block&&-1!==t.nesting&&e&&g[e-1].hidden&&(C+="\n"),C+=(-1===t.nesting?"</":"<")+t.tag,C+=this.renderAttrs(t),0===t.nesting&&I.xhtmlOut&&(C+=" /");let i=!1;if(t.block&&(i=!0,1===t.nesting&&e+1<g.length)){const I=g[e+1];("inline"===I.type||I.hidden||-1===I.nesting&&I.tag===t.tag)&&(i=!1)}return C+=i?">\n":">",C},VS.prototype.renderInline=function(g,e,I){let t="";const C=this.rules;for(let i=0,l=g.length;i<l;i++){const l=g[i].type;typeof C[l]<"u"?t+=C[l](g,i,e,I,this):t+=this.renderToken(g,i,e)}return t},VS.prototype.renderInlineAsText=function(g,e,I){let t="";for(let C=0,i=g.length;C<i;C++)switch(g[C].type){case"text":case"html_inline":case"html_block":t+=g[C].content;break;case"image":t+=this.renderInlineAsText(g[C].children,e,I);break;case"softbreak":case"hardbreak":t+="\n"}return t},VS.prototype.render=function(g,e,I){let t="";const C=this.rules;for(let i=0,l=g.length;i<l;i++){const l=g[i].type;"inline"===l?t+=this.renderInline(g[i].children,e,I):typeof C[l]<"u"?t+=C[l](g,i,e,I,this):t+=this.renderToken(g,i,e,I)}return t},cS.prototype.__find__=function(g){for(let e=0;e<this.__rules__.length;e++)if(this.__rules__[e].name===g)return e;return-1},cS.prototype.__compile__=function(){const g=this,e=[""];g.__rules__.forEach((function(g){g.enabled&&g.alt.forEach((function(g){e.indexOf(g)<0&&e.push(g)}))})),g.__cache__={},e.forEach((function(e){g.__cache__[e]=[],g.__rules__.forEach((function(I){I.enabled&&(e&&I.alt.indexOf(e)<0||g.__cache__[e].push(I.fn))}))}))},cS.prototype.at=function(g,e,I){const t=this.__find__(g),C=I||{};if(-1===t)throw new Error("Parser rule not found: "+g);this.__rules__[t].fn=e,this.__rules__[t].alt=C.alt||[],this.__cache__=null},cS.prototype.before=function(g,e,I,t){const C=this.__find__(g),i=t||{};if(-1===C)throw new Error("Parser rule not found: "+g);this.__rules__.splice(C,0,{name:e,enabled:!0,fn:I,alt:i.alt||[]}),this.__cache__=null},cS.prototype.after=function(g,e,I,t){const C=this.__find__(g),i=t||{};if(-1===C)throw new Error("Parser rule not found: "+g);this.__rules__.splice(C+1,0,{name:e,enabled:!0,fn:I,alt:i.alt||[]}),this.__cache__=null},cS.prototype.push=function(g,e,I){const t=I||{};this.__rules__.push({name:g,enabled:!0,fn:e,alt:t.alt||[]}),this.__cache__=null},cS.prototype.enable=function(g,e){Array.isArray(g)||(g=[g]);const I=[];return g.forEach((function(g){const t=this.__find__(g);if(t<0){if(e)return;throw new Error("Rules manager: invalid rule name "+g)}this.__rules__[t].enabled=!0,I.push(g)}),this),this.__cache__=null,I},cS.prototype.enableOnly=function(g,e){Array.isArray(g)||(g=[g]),this.__rules__.forEach((function(g){g.enabled=!1})),this.enable(g,e)},cS.prototype.disable=function(g,e){Array.isArray(g)||(g=[g]);const I=[];return g.forEach((function(g){const t=this.__find__(g);if(t<0){if(e)return;throw new Error("Rules manager: invalid rule name "+g)}this.__rules__[t].enabled=!1,I.push(g)}),this),this.__cache__=null,I},cS.prototype.getRules=function(g){return null===this.__cache__&&this.__compile__(),this.__cache__[g]||[]},rS.prototype.attrIndex=function(g){if(!this.attrs)return-1;const e=this.attrs;for(let I=0,t=e.length;I<t;I++)if(e[I][0]===g)return I;return-1},rS.prototype.attrPush=function(g){this.attrs?this.attrs.push(g):this.attrs=[g]},rS.prototype.attrSet=function(g,e){const I=this.attrIndex(g),t=[g,e];I<0?this.attrPush(t):this.attrs[I]=t},rS.prototype.attrGet=function(g){const e=this.attrIndex(g);let I=null;return e>=0&&(I=this.attrs[e][1]),I},rS.prototype.attrJoin=function(g,e){const I=this.attrIndex(g);I<0?this.attrPush([g,e]):this.attrs[I][1]=this.attrs[I][1]+" "+e},hS.prototype.Token=rS;const US=/\r\n?|\n/g,ZS=/\0/g;function RS(g){let e;e=g.src.replace(US,"\n"),e=e.replace(ZS,"�"),g.src=e}function FS(g){let e;g.inlineMode?(e=new g.Token("inline","",0),e.content=g.src,e.map=[0,1],e.children=[],g.tokens.push(e)):g.md.block.parse(g.src,g.md,g.env,g.tokens)}function mS(g){const e=g.tokens;for(let I=0,t=e.length;I<t;I++){const t=e[I];"inline"===t.type&&g.md.inline.parse(t.content,g.md,g.env,t.children)}}function BS(g){return/^<a[>\s]/i.test(g)}function WS(g){return/^<\/a\s*>/i.test(g)}function NS(g){const e=g.tokens;if(g.md.options.linkify)for(let I=0,t=e.length;I<t;I++){if("inline"!==e[I].type||!g.md.linkify.pretest(e[I].content))continue;let t=e[I].children,C=0;for(let i=t.length-1;i>=0;i--){const l=t[i];if("link_close"!==l.type){if("html_inline"===l.type&&(BS(l.content)&&C>0&&C--,WS(l.content)&&C++),!(C>0)&&"text"===l.type&&g.md.linkify.test(l.content)){const C=l.content;let n=g.md.linkify.match(C);const A=[];let d=l.level,o=0;n.length>0&&0===n[0].index&&i>0&&"text_special"===t[i-1].type&&(n=n.slice(1));for(let e=0;e<n.length;e++){const I=n[e].url,t=g.md.normalizeLink(I);if(!g.md.validateLink(t))continue;let i=n[e].text;i=n[e].schema?"mailto:"!==n[e].schema||/^mailto:/i.test(i)?g.md.normalizeLinkText(i):g.md.normalizeLinkText("mailto:"+i).replace(/^mailto:/,""):g.md.normalizeLinkText("http://"+i).replace(/^http:\/\//,"");const l=n[e].index;if(l>o){const e=new g.Token("text","",0);e.content=C.slice(o,l),e.level=d,A.push(e)}const s=new g.Token("link_open","a",1);s.attrs=[["href",t]],s.level=d++,s.markup="linkify",s.info="auto",A.push(s);const a=new g.Token("text","",0);a.content=i,a.level=d,A.push(a);const V=new g.Token("link_close","a",-1);V.level=--d,V.markup="linkify",V.info="auto",A.push(V),o=n[e].lastIndex}if(o<C.length){const e=new g.Token("text","",0);e.content=C.slice(o),e.level=d,A.push(e)}e[I].children=t=Hp(t,i,A)}}else for(i--;t[i].level!==l.level&&"link_open"!==t[i].type;)i--}}}const pS=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,SS=/\((c|tm|r)\)/i,bS=/\((c|tm|r)\)/gi,uS={c:"©",r:"®",tm:"™"};function TS(g,e){return uS[e.toLowerCase()]}function GS(g){let e=0;for(let I=g.length-1;I>=0;I--){const t=g[I];"text"===t.type&&!e&&(t.content=t.content.replace(bS,TS)),"link_open"===t.type&&"auto"===t.info&&e--,"link_close"===t.type&&"auto"===t.info&&e++}}function kS(g){let e=0;for(let I=g.length-1;I>=0;I--){const t=g[I];"text"===t.type&&!e&&pS.test(t.content)&&(t.content=t.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/gm,"$1—").replace(/(^|\s)--(?=\s|$)/gm,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm,"$1–")),"link_open"===t.type&&"auto"===t.info&&e--,"link_close"===t.type&&"auto"===t.info&&e++}}function QS(g){let e;if(g.md.options.typographer)for(e=g.tokens.length-1;e>=0;e--)"inline"===g.tokens[e].type&&(SS.test(g.tokens[e].content)&&GS(g.tokens[e].children),pS.test(g.tokens[e].content)&&kS(g.tokens[e].children))}const MS=/['"]/,YS=/['"]/g,ES="’";function yS(g,e,I){return g.slice(0,e)+I+g.slice(e+1)}function JS(g,e){let I;const t=[];for(let C=0;C<g.length;C++){const i=g[C],l=g[C].level;for(I=t.length-1;I>=0&&!(t[I].level<=l);I--);if(t.length=I+1,"text"!==i.type)continue;let n=i.content,A=0,d=n.length;g:for(;A<d;){YS.lastIndex=A;const o=YS.exec(n);if(!o)break;let s=!0,a=!0;A=o.index+1;const V="'"===o[0];let c=32;if(o.index-1>=0)c=n.charCodeAt(o.index-1);else for(I=C-1;I>=0&&"softbreak"!==g[I].type&&"hardbreak"!==g[I].type;I--)if(g[I].content){c=g[I].content.charCodeAt(g[I].content.length-1);break}let r=32;if(A<d)r=n.charCodeAt(A);else for(I=C+1;I<g.length&&"softbreak"!==g[I].type&&"hardbreak"!==g[I].type;I++)if(g[I].content){r=g[I].content.charCodeAt(0);break}const h=CS(c)||tS(String.fromCharCode(c)),U=CS(r)||tS(String.fromCharCode(r)),Z=IS(c),R=IS(r);if(R?s=!1:U&&(Z||h||(s=!1)),Z?a=!1:h&&(R||U||(a=!1)),34===r&&'"'===o[0]&&c>=48&&c<=57&&(a=s=!1),s&&a&&(s=h,a=U),s||a){if(a)for(I=t.length-1;I>=0;I--){let s=t[I];if(t[I].level<l)break;if(s.single===V&&t[I].level===l){let l,a;s=t[I],V?(l=e.md.options.quotes[2],a=e.md.options.quotes[3]):(l=e.md.options.quotes[0],a=e.md.options.quotes[1]),i.content=yS(i.content,o.index,a),g[s.token].content=yS(g[s.token].content,s.pos,l),A+=a.length-1,s.token===C&&(A+=l.length-1),n=i.content,d=n.length,t.length=I;continue g}}s?t.push({token:C,pos:o.index,single:V,level:l}):a&&V&&(i.content=yS(i.content,o.index,ES))}else V&&(i.content=yS(i.content,o.index,ES))}}}function HS(g){if(g.md.options.typographer)for(let e=g.tokens.length-1;e>=0;e--)"inline"!==g.tokens[e].type||!MS.test(g.tokens[e].content)||JS(g.tokens[e].children,g)}function wS(g){let e,I;const t=g.tokens,C=t.length;for(let g=0;g<C;g++){if("inline"!==t[g].type)continue;const C=t[g].children,i=C.length;for(e=0;e<i;e++)"text_special"===C[e].type&&(C[e].type="text");for(e=I=0;e<i;e++)"text"===C[e].type&&e+1<i&&"text"===C[e+1].type?C[e+1].content=C[e].content+C[e+1].content:(e!==I&&(C[I]=C[e]),I++);e!==I&&(C.length=I)}}const XS=[["normalize",RS],["block",FS],["inline",mS],["linkify",NS],["replacements",QS],["smartquotes",HS],["text_join",wS]];function KS(){this.ruler=new cS;for(let g=0;g<XS.length;g++)this.ruler.push(XS[g][0],XS[g][1])}function zS(g,e,I,t){this.src=g,this.md=e,this.env=I,this.tokens=t,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0;const C=this.src;for(let g=0,e=0,I=0,t=0,i=C.length,l=!1;e<i;e++){const n=C.charCodeAt(e);if(!l){if(eS(n)){I++,9===n?t+=4-t%4:t++;continue}l=!0}(10===n||e===i-1)&&(10!==n&&e++,this.bMarks.push(g),this.eMarks.push(e),this.tShift.push(I),this.sCount.push(t),this.bsCount.push(0),l=!1,I=0,t=0,g=e+1)}this.bMarks.push(C.length),this.eMarks.push(C.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}KS.prototype.process=function(g){const e=this.ruler.getRules("");for(let I=0,t=e.length;I<t;I++)e[I](g)},KS.prototype.State=hS,zS.prototype.push=function(g,e,I){const t=new rS(g,e,I);return t.block=!0,I<0&&this.level--,t.level=this.level,I>0&&this.level++,this.tokens.push(t),t},zS.prototype.isEmpty=function(g){return this.bMarks[g]+this.tShift[g]>=this.eMarks[g]},zS.prototype.skipEmptyLines=function(g){for(let e=this.lineMax;g<e&&!(this.bMarks[g]+this.tShift[g]<this.eMarks[g]);g++);return g},zS.prototype.skipSpaces=function(g){for(let e=this.src.length;g<e&&eS(this.src.charCodeAt(g));g++);return g},zS.prototype.skipSpacesBack=function(g,e){if(g<=e)return g;for(;g>e;)if(!eS(this.src.charCodeAt(--g)))return g+1;return g},zS.prototype.skipChars=function(g,e){for(let I=this.src.length;g<I&&this.src.charCodeAt(g)===e;g++);return g},zS.prototype.skipCharsBack=function(g,e,I){if(g<=I)return g;for(;g>I;)if(e!==this.src.charCodeAt(--g))return g+1;return g},zS.prototype.getLines=function(g,e,I,t){if(g>=e)return"";const C=new Array(e-g);for(let i=0,l=g;l<e;l++,i++){let g=0;const n=this.bMarks[l];let A,d=n;for(A=l+1<e||t?this.eMarks[l]+1:this.eMarks[l];d<A&&g<I;){const e=this.src.charCodeAt(d);if(eS(e))9===e?g+=4-(g+this.bsCount[l])%4:g++;else{if(!(d-n<this.tShift[l]))break;g++}d++}C[i]=g>I?new Array(g-I+1).join(" ")+this.src.slice(d,A):this.src.slice(d,A)}return C.join("")},zS.prototype.Token=rS;const DS=65536;function vS(g,e){const I=g.bMarks[e]+g.tShift[e],t=g.eMarks[e];return g.src.slice(I,t)}function xS(g){const e=[],I=g.length;let t=0,C=g.charCodeAt(t),i=!1,l=0,n="";for(;t<I;)124===C&&(i?(n+=g.substring(l,t-1),l=t):(e.push(n+g.substring(l,t)),n="",l=t+1)),i=92===C,t++,C=g.charCodeAt(t);return e.push(n+g.substring(l)),e}function OS(g,e,I,t){if(e+2>I)return!1;let C=e+1;if(g.sCount[C]<g.blkIndent||g.sCount[C]-g.blkIndent>=4)return!1;let i=g.bMarks[C]+g.tShift[C];if(i>=g.eMarks[C])return!1;const l=g.src.charCodeAt(i++);if(124!==l&&45!==l&&58!==l||i>=g.eMarks[C])return!1;const n=g.src.charCodeAt(i++);if(124!==n&&45!==n&&58!==n&&!eS(n)||45===l&&eS(n))return!1;for(;i<g.eMarks[C];){const e=g.src.charCodeAt(i);if(124!==e&&45!==e&&58!==e&&!eS(e))return!1;i++}let A=vS(g,e+1),d=A.split("|");const o=[];for(let g=0;g<d.length;g++){const e=d[g].trim();if(!e){if(0===g||g===d.length-1)continue;return!1}if(!/^:?-+:?$/.test(e))return!1;58===e.charCodeAt(e.length-1)?o.push(58===e.charCodeAt(0)?"center":"right"):58===e.charCodeAt(0)?o.push("left"):o.push("")}if(A=vS(g,e).trim(),-1===A.indexOf("|")||g.sCount[e]-g.blkIndent>=4)return!1;d=xS(A),d.length&&""===d[0]&&d.shift(),d.length&&""===d[d.length-1]&&d.pop();const s=d.length;if(0===s||s!==o.length)return!1;if(t)return!0;const a=g.parentType;g.parentType="table";const V=g.md.block.ruler.getRules("blockquote"),c=[e,0];g.push("table_open","table",1).map=c,g.push("thead_open","thead",1).map=[e,e+1],g.push("tr_open","tr",1).map=[e,e+1];for(let e=0;e<d.length;e++){const I=g.push("th_open","th",1);o[e]&&(I.attrs=[["style","text-align:"+o[e]]]);const t=g.push("inline","",0);t.content=d[e].trim(),t.children=[],g.push("th_close","th",-1)}g.push("tr_close","tr",-1),g.push("thead_close","thead",-1);let r,h=0;for(C=e+2;C<I&&!(g.sCount[C]<g.blkIndent);C++){let t=!1;for(let e=0,i=V.length;e<i;e++)if(V[e](g,C,I,!0)){t=!0;break}if(t||(A=vS(g,C).trim(),!A)||g.sCount[C]-g.blkIndent>=4||(d=xS(A),d.length&&""===d[0]&&d.shift(),d.length&&""===d[d.length-1]&&d.pop(),h+=s-d.length,h>DS))break;C===e+2&&(g.push("tbody_open","tbody",1).map=r=[e+2,0]),g.push("tr_open","tr",1).map=[C,C+1];for(let e=0;e<s;e++){const I=g.push("td_open","td",1);o[e]&&(I.attrs=[["style","text-align:"+o[e]]]);const t=g.push("inline","",0);t.content=d[e]?d[e].trim():"",t.children=[],g.push("td_close","td",-1)}g.push("tr_close","tr",-1)}return r&&(g.push("tbody_close","tbody",-1),r[1]=C),g.push("table_close","table",-1),c[1]=C,g.parentType=a,g.line=C,!0}function fS(g,e,I){if(g.sCount[e]-g.blkIndent<4)return!1;let t=e+1,C=t;for(;t<I;)if(g.isEmpty(t))t++;else{if(!(g.sCount[t]-g.blkIndent>=4))break;t++,C=t}g.line=C;const i=g.push("code_block","code",0);return i.content=g.getLines(e,C,4+g.blkIndent,!1)+"\n",i.map=[e,g.line],!0}function jS(g,e,I,t){let C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e];if(g.sCount[e]-g.blkIndent>=4||C+3>i)return!1;const l=g.src.charCodeAt(C);if(126!==l&&96!==l)return!1;let n=C;C=g.skipChars(C,l);let A=C-n;if(A<3)return!1;const d=g.src.slice(n,C),o=g.src.slice(C,i);if(96===l&&o.indexOf(String.fromCharCode(l))>=0)return!1;if(t)return!0;let s=e,a=!1;for(;s++,!(s>=I||(C=n=g.bMarks[s]+g.tShift[s],i=g.eMarks[s],C<i&&g.sCount[s]<g.blkIndent));)if(!(g.src.charCodeAt(C)!==l||g.sCount[s]-g.blkIndent>=4||(C=g.skipChars(C,l),C-n<A||(C=g.skipSpaces(C),C<i)))){a=!0;break}A=g.sCount[e],g.line=s+(a?1:0);const V=g.push("fence","code",0);return V.info=o,V.content=g.getLines(e+1,s,A,!0),V.markup=d,V.map=[e,g.line],!0}function LS(g,e,I,t){let C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e];const l=g.lineMax;if(g.sCount[e]-g.blkIndent>=4||62!==g.src.charCodeAt(C))return!1;if(t)return!0;const n=[],A=[],d=[],o=[],s=g.md.block.ruler.getRules("blockquote"),a=g.parentType;g.parentType="blockquote";let V,c=!1;for(V=e;V<I;V++){const e=g.sCount[V]<g.blkIndent;if(C=g.bMarks[V]+g.tShift[V],i=g.eMarks[V],C>=i)break;if(62===g.src.charCodeAt(C++)&&!e){let e,I,t=g.sCount[V]+1;32===g.src.charCodeAt(C)?(C++,t++,I=!1,e=!0):9===g.src.charCodeAt(C)?(e=!0,(g.bsCount[V]+t)%4==3?(C++,t++,I=!1):I=!0):e=!1;let l=t;for(n.push(g.bMarks[V]),g.bMarks[V]=C;C<i;){const e=g.src.charCodeAt(C);if(!eS(e))break;9===e?l+=4-(l+g.bsCount[V]+(I?1:0))%4:l++,C++}c=C>=i,A.push(g.bsCount[V]),g.bsCount[V]=g.sCount[V]+1+(e?1:0),d.push(g.sCount[V]),g.sCount[V]=l-t,o.push(g.tShift[V]),g.tShift[V]=C-g.bMarks[V];continue}if(c)break;let t=!1;for(let e=0,C=s.length;e<C;e++)if(s[e](g,V,I,!0)){t=!0;break}if(t){g.lineMax=V,0!==g.blkIndent&&(n.push(g.bMarks[V]),A.push(g.bsCount[V]),o.push(g.tShift[V]),d.push(g.sCount[V]),g.sCount[V]-=g.blkIndent);break}n.push(g.bMarks[V]),A.push(g.bsCount[V]),o.push(g.tShift[V]),d.push(g.sCount[V]),g.sCount[V]=-1}const r=g.blkIndent;g.blkIndent=0;const h=g.push("blockquote_open","blockquote",1);h.markup=">";const U=[e,0];h.map=U,g.md.block.tokenize(g,e,V),g.push("blockquote_close","blockquote",-1).markup=">",g.lineMax=l,g.parentType=a,U[1]=g.line;for(let I=0;I<o.length;I++)g.bMarks[I+e]=n[I],g.tShift[I+e]=o[I],g.sCount[I+e]=d[I],g.bsCount[I+e]=A[I];return g.blkIndent=r,!0}function PS(g,e,I,t){const C=g.eMarks[e];if(g.sCount[e]-g.blkIndent>=4)return!1;let i=g.bMarks[e]+g.tShift[e];const l=g.src.charCodeAt(i++);if(42!==l&&45!==l&&95!==l)return!1;let n=1;for(;i<C;){const e=g.src.charCodeAt(i++);if(e!==l&&!eS(e))return!1;e===l&&n++}if(n<3)return!1;if(t)return!0;g.line=e+1;const A=g.push("hr","hr",0);return A.map=[e,g.line],A.markup=Array(n+1).join(String.fromCharCode(l)),!0}function _S(g,e){const I=g.eMarks[e];let t=g.bMarks[e]+g.tShift[e];const C=g.src.charCodeAt(t++);return 42!==C&&45!==C&&43!==C||t<I&&!eS(g.src.charCodeAt(t))?-1:t}function qS(g,e){const I=g.bMarks[e]+g.tShift[e],t=g.eMarks[e];let C=I;if(C+1>=t)return-1;let i=g.src.charCodeAt(C++);if(i<48||i>57)return-1;for(;;){if(C>=t)return-1;if(i=g.src.charCodeAt(C++),!(i>=48&&i<=57)){if(41===i||46===i)break;return-1}if(C-I>=10)return-1}return C<t&&(i=g.src.charCodeAt(C),!eS(i))?-1:C}function $S(g,e){const I=g.level+2;for(let t=e+2,C=g.tokens.length-2;t<C;t++)g.tokens[t].level===I&&"paragraph_open"===g.tokens[t].type&&(g.tokens[t+2].hidden=!0,g.tokens[t].hidden=!0,t+=2)}function gb(g,e,I,t){let C,i,l,n,A=e,d=!0;if(g.sCount[A]-g.blkIndent>=4||g.listIndent>=0&&g.sCount[A]-g.listIndent>=4&&g.sCount[A]<g.blkIndent)return!1;let o,s,a,V=!1;if(t&&"paragraph"===g.parentType&&g.sCount[A]>=g.blkIndent&&(V=!0),(a=qS(g,A))>=0){if(o=!0,l=g.bMarks[A]+g.tShift[A],s=Number(g.src.slice(l,a-1)),V&&1!==s)return!1}else{if(!((a=_S(g,A))>=0))return!1;o=!1}if(V&&g.skipSpaces(a)>=g.eMarks[A])return!1;if(t)return!0;const c=g.src.charCodeAt(a-1),r=g.tokens.length;o?(n=g.push("ordered_list_open","ol",1),1!==s&&(n.attrs=[["start",s]])):n=g.push("bullet_list_open","ul",1);const h=[A,0];n.map=h,n.markup=String.fromCharCode(c);let U=!1;const Z=g.md.block.ruler.getRules("list"),R=g.parentType;for(g.parentType="list";A<I;){i=a,C=g.eMarks[A];const e=g.sCount[A]+a-(g.bMarks[A]+g.tShift[A]);let t=e;for(;i<C;){const e=g.src.charCodeAt(i);if(9===e)t+=4-(t+g.bsCount[A])%4;else{if(32!==e)break;t++}i++}const s=i;let V;V=s>=C?1:t-e,V>4&&(V=1);const r=e+V;n=g.push("list_item_open","li",1),n.markup=String.fromCharCode(c);const h=[A,0];n.map=h,o&&(n.info=g.src.slice(l,a-1));const R=g.tight,F=g.tShift[A],m=g.sCount[A],B=g.listIndent;if(g.listIndent=g.blkIndent,g.blkIndent=r,g.tight=!0,g.tShift[A]=s-g.bMarks[A],g.sCount[A]=t,s>=C&&g.isEmpty(A+1)?g.line=Math.min(g.line+2,I):g.md.block.tokenize(g,A,I,!0),(!g.tight||U)&&(d=!1),U=g.line-A>1&&g.isEmpty(g.line-1),g.blkIndent=g.listIndent,g.listIndent=B,g.tShift[A]=F,g.sCount[A]=m,g.tight=R,n=g.push("list_item_close","li",-1),n.markup=String.fromCharCode(c),A=g.line,h[1]=A,A>=I||g.sCount[A]<g.blkIndent||g.sCount[A]-g.blkIndent>=4)break;let W=!1;for(let e=0,t=Z.length;e<t;e++)if(Z[e](g,A,I,!0)){W=!0;break}if(W)break;if(o){if(a=qS(g,A),a<0)break;l=g.bMarks[A]+g.tShift[A]}else if(a=_S(g,A),a<0)break;if(c!==g.src.charCodeAt(a-1))break}return n=o?g.push("ordered_list_close","ol",-1):g.push("bullet_list_close","ul",-1),n.markup=String.fromCharCode(c),h[1]=A,g.line=A,g.parentType=R,d&&$S(g,r),!0}function eb(g,e,I,t){let C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e],l=e+1;if(g.sCount[e]-g.blkIndent>=4||91!==g.src.charCodeAt(C))return!1;function n(e){const I=g.lineMax;if(e>=I||g.isEmpty(e))return null;let t=!1;if(g.sCount[e]-g.blkIndent>3&&(t=!0),g.sCount[e]<0&&(t=!0),!t){const t=g.md.block.ruler.getRules("reference"),C=g.parentType;g.parentType="reference";let i=!1;for(let C=0,l=t.length;C<l;C++)if(t[C](g,e,I,!0)){i=!0;break}if(g.parentType=C,i)return null}const C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e];return g.src.slice(C,i+1)}let A=g.src.slice(C,i+1);i=A.length;let d=-1;for(C=1;C<i;C++){const g=A.charCodeAt(C);if(91===g)return!1;if(93===g){d=C;break}if(10===g){const g=n(l);null!==g&&(A+=g,i=A.length,l++)}else if(92===g&&(C++,C<i&&10===A.charCodeAt(C))){const g=n(l);null!==g&&(A+=g,i=A.length,l++)}}if(d<0||58!==A.charCodeAt(d+1))return!1;for(C=d+2;C<i;C++){const g=A.charCodeAt(C);if(10===g){const g=n(l);null!==g&&(A+=g,i=A.length,l++)}else if(!eS(g))break}const o=g.md.helpers.parseLinkDestination(A,C,i);if(!o.ok)return!1;const s=g.md.normalizeLink(o.str);if(!g.md.validateLink(s))return!1;C=o.pos;const a=C,V=l,c=C;for(;C<i;C++){const g=A.charCodeAt(C);if(10===g){const g=n(l);null!==g&&(A+=g,i=A.length,l++)}else if(!eS(g))break}let r,h=g.md.helpers.parseLinkTitle(A,C,i);for(;h.can_continue;){const e=n(l);if(null===e)break;A+=e,C=i,i=A.length,l++,h=g.md.helpers.parseLinkTitle(A,C,i,h)}for(C<i&&c!==C&&h.ok?(r=h.str,C=h.pos):(r="",C=a,l=V);C<i&&eS(A.charCodeAt(C));)C++;if(C<i&&10!==A.charCodeAt(C)&&r)for(r="",C=a,l=V;C<i&&eS(A.charCodeAt(C));)C++;if(C<i&&10!==A.charCodeAt(C))return!1;const U=iS(A.slice(1,d));return!!U&&(t||(typeof g.env.references>"u"&&(g.env.references={}),typeof g.env.references[U]>"u"&&(g.env.references[U]={title:r,href:s}),g.line=l),!0)}const Ib=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],tb="[a-zA-Z_:][a-zA-Z0-9:._-]*",Cb="[^\"'=<>`\\x00-\\x20]+",ib="'[^']*'",lb='"[^"]*"',nb="(?:"+Cb+"|"+ib+"|"+lb+")",Ab="(?:\\s+"+tb+"(?:\\s*=\\s*"+nb+")?)",db="<[A-Za-z][A-Za-z0-9\\-]*"+Ab+"*\\s*\\/?>",ob="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",sb="\x3c!---?>|\x3c!--(?:[^-]|-[^-]|--[^>])*--\x3e",ab="<[?][\\s\\S]*?[?]>",Vb="<![A-Za-z][^>]*>",cb="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",rb=new RegExp("^(?:"+db+"|"+ob+"|"+sb+"|"+ab+"|"+Vb+"|"+cb+")"),hb=new RegExp("^(?:"+db+"|"+ob+")"),Ub=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+Ib.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(hb.source+"\\s*$"),/^$/,!1]];function Zb(g,e,I,t){let C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e];if(g.sCount[e]-g.blkIndent>=4||!g.md.options.html||60!==g.src.charCodeAt(C))return!1;let l=g.src.slice(C,i),n=0;for(;n<Ub.length&&!Ub[n][0].test(l);n++);if(n===Ub.length)return!1;if(t)return Ub[n][2];let A=e+1;if(!Ub[n][1].test(l))for(;A<I&&!(g.sCount[A]<g.blkIndent);A++)if(C=g.bMarks[A]+g.tShift[A],i=g.eMarks[A],l=g.src.slice(C,i),Ub[n][1].test(l)){0!==l.length&&A++;break}g.line=A;const d=g.push("html_block","",0);return d.map=[e,A],d.content=g.getLines(e,A,g.blkIndent,!0),!0}function Rb(g,e,I,t){let C=g.bMarks[e]+g.tShift[e],i=g.eMarks[e];if(g.sCount[e]-g.blkIndent>=4)return!1;let l=g.src.charCodeAt(C);if(35!==l||C>=i)return!1;let n=1;for(l=g.src.charCodeAt(++C);35===l&&C<i&&n<=6;)n++,l=g.src.charCodeAt(++C);if(n>6||C<i&&!eS(l))return!1;if(t)return!0;i=g.skipSpacesBack(i,C);const A=g.skipCharsBack(i,35,C);A>C&&eS(g.src.charCodeAt(A-1))&&(i=A),g.line=e+1;const d=g.push("heading_open","h"+String(n),1);d.markup="########".slice(0,n),d.map=[e,g.line];const o=g.push("inline","",0);return o.content=g.src.slice(C,i).trim(),o.map=[e,g.line],o.children=[],g.push("heading_close","h"+String(n),-1).markup="########".slice(0,n),!0}function Fb(g,e,I){const t=g.md.block.ruler.getRules("paragraph");if(g.sCount[e]-g.blkIndent>=4)return!1;const C=g.parentType;g.parentType="paragraph";let i,l=0,n=e+1;for(;n<I&&!g.isEmpty(n);n++){if(g.sCount[n]-g.blkIndent>3)continue;if(g.sCount[n]>=g.blkIndent){let e=g.bMarks[n]+g.tShift[n];const I=g.eMarks[n];if(e<I&&(i=g.src.charCodeAt(e),(45===i||61===i)&&(e=g.skipChars(e,i),e=g.skipSpaces(e),e>=I))){l=61===i?1:2;break}}if(g.sCount[n]<0)continue;let e=!1;for(let C=0,i=t.length;C<i;C++)if(t[C](g,n,I,!0)){e=!0;break}if(e)break}if(!l)return!1;const A=g.getLines(e,n,g.blkIndent,!1).trim();g.line=n+1;const d=g.push("heading_open","h"+String(l),1);d.markup=String.fromCharCode(i),d.map=[e,g.line];const o=g.push("inline","",0);return o.content=A,o.map=[e,g.line-1],o.children=[],g.push("heading_close","h"+String(l),-1).markup=String.fromCharCode(i),g.parentType=C,!0}function mb(g,e,I){const t=g.md.block.ruler.getRules("paragraph"),C=g.parentType;let i=e+1;for(g.parentType="paragraph";i<I&&!g.isEmpty(i);i++){if(g.sCount[i]-g.blkIndent>3||g.sCount[i]<0)continue;let e=!1;for(let C=0,l=t.length;C<l;C++)if(t[C](g,i,I,!0)){e=!0;break}if(e)break}const l=g.getLines(e,i,g.blkIndent,!1).trim();g.line=i,g.push("paragraph_open","p",1).map=[e,g.line];const n=g.push("inline","",0);return n.content=l,n.map=[e,g.line],n.children=[],g.push("paragraph_close","p",-1),g.parentType=C,!0}const Bb=[["table",OS,["paragraph","reference"]],["code",fS],["fence",jS,["paragraph","reference","blockquote","list"]],["blockquote",LS,["paragraph","reference","blockquote","list"]],["hr",PS,["paragraph","reference","blockquote","list"]],["list",gb,["paragraph","reference","blockquote"]],["reference",eb],["html_block",Zb,["paragraph","reference","blockquote"]],["heading",Rb,["paragraph","reference","blockquote"]],["lheading",Fb],["paragraph",mb]];function Wb(){this.ruler=new cS;for(let g=0;g<Bb.length;g++)this.ruler.push(Bb[g][0],Bb[g][1],{alt:(Bb[g][2]||[]).slice()})}function Nb(g,e,I,t){this.src=g,this.env=I,this.md=e,this.tokens=t,this.tokens_meta=Array(t.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}function pb(g){switch(g){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}function Sb(g,e){let I=g.pos;for(;I<g.posMax&&!pb(g.src.charCodeAt(I));)I++;return I!==g.pos&&(e||(g.pending+=g.src.slice(g.pos,I)),g.pos=I,!0)}Wb.prototype.tokenize=function(g,e,I){const t=this.ruler.getRules(""),C=t.length,i=g.md.options.maxNesting;let l=e,n=!1;for(;l<I&&(g.line=l=g.skipEmptyLines(l),!(l>=I||g.sCount[l]<g.blkIndent));){if(g.level>=i){g.line=I;break}const e=g.line;let A=!1;for(let i=0;i<C;i++)if(A=t[i](g,l,I,!1),A){if(e>=g.line)throw new Error("block rule didn't increment state.line");break}if(!A)throw new Error("none of the block rules matched");g.tight=!n,g.isEmpty(g.line-1)&&(n=!0),l=g.line,l<I&&g.isEmpty(l)&&(n=!0,l++,g.line=l)}},Wb.prototype.parse=function(g,e,I,t){if(!g)return;const C=new this.State(g,e,I,t);this.tokenize(C,C.line,C.lineMax)},Wb.prototype.State=zS,Nb.prototype.pushPending=function(){const g=new rS("text","",0);return g.content=this.pending,g.level=this.pendingLevel,this.tokens.push(g),this.pending="",g},Nb.prototype.push=function(g,e,I){this.pending&&this.pushPending();const t=new rS(g,e,I);let C=null;return I<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),t.level=this.level,I>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],C={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(t),this.tokens_meta.push(C),t},Nb.prototype.scanDelims=function(g,e){const I=this.posMax,t=this.src.charCodeAt(g),C=g>0?this.src.charCodeAt(g-1):32;let i=g;for(;i<I&&this.src.charCodeAt(i)===t;)i++;const l=i-g,n=i<I?this.src.charCodeAt(i):32,A=CS(C)||tS(String.fromCharCode(C)),d=CS(n)||tS(String.fromCharCode(n)),o=IS(C),s=IS(n),a=!s&&(!d||o||A),V=!o&&(!A||s||d);return{can_open:a&&(e||!V||A),can_close:V&&(e||!a||d),length:l}},Nb.prototype.Token=rS;const bb=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;function ub(g,e){if(!g.md.options.linkify||g.linkLevel>0)return!1;const I=g.pos;if(I+3>g.posMax||58!==g.src.charCodeAt(I)||47!==g.src.charCodeAt(I+1)||47!==g.src.charCodeAt(I+2))return!1;const t=g.pending.match(bb);if(!t)return!1;const C=t[1],i=g.md.linkify.matchAtStart(g.src.slice(I-C.length));if(!i)return!1;let l=i.url;if(l.length<=C.length)return!1;l=l.replace(/\*+$/,"");const n=g.md.normalizeLink(l);if(!g.md.validateLink(n))return!1;if(!e){g.pending=g.pending.slice(0,-C.length);const e=g.push("link_open","a",1);e.attrs=[["href",n]],e.markup="linkify",e.info="auto",g.push("text","",0).content=g.md.normalizeLinkText(l);const I=g.push("link_close","a",-1);I.markup="linkify",I.info="auto"}return g.pos+=l.length-C.length,!0}function Tb(g,e){let I=g.pos;if(10!==g.src.charCodeAt(I))return!1;const t=g.pending.length-1,C=g.posMax;if(!e)if(t>=0&&32===g.pending.charCodeAt(t))if(t>=1&&32===g.pending.charCodeAt(t-1)){let e=t-1;for(;e>=1&&32===g.pending.charCodeAt(e-1);)e--;g.pending=g.pending.slice(0,e),g.push("hardbreak","br",0)}else g.pending=g.pending.slice(0,-1),g.push("softbreak","br",0);else g.push("softbreak","br",0);for(I++;I<C&&eS(g.src.charCodeAt(I));)I++;return g.pos=I,!0}const Gb=[];for(let g=0;g<256;g++)Gb.push(0);function kb(g,e){let I=g.pos;const t=g.posMax;if(92!==g.src.charCodeAt(I)||(I++,I>=t))return!1;let C=g.src.charCodeAt(I);if(10===C){for(e||g.push("hardbreak","br",0),I++;I<t&&(C=g.src.charCodeAt(I),eS(C));)I++;return g.pos=I,!0}let i=g.src[I];if(C>=55296&&C<=56319&&I+1<t){const e=g.src.charCodeAt(I+1);e>=56320&&e<=57343&&(i+=g.src[I+1],I++)}const l="\\"+i;if(!e){const e=g.push("text_special","",0);C<256&&0!==Gb[C]?e.content=i:e.content=l,e.markup=l,e.info="escape"}return g.pos=I+1,!0}function Qb(g,e){let I=g.pos;if(96!==g.src.charCodeAt(I))return!1;const t=I;I++;const C=g.posMax;for(;I<C&&96===g.src.charCodeAt(I);)I++;const i=g.src.slice(t,I),l=i.length;if(g.backticksScanned&&(g.backticks[l]||0)<=t)return e||(g.pending+=i),g.pos+=l,!0;let n,A=I;for(;-1!==(n=g.src.indexOf("`",A));){for(A=n+1;A<C&&96===g.src.charCodeAt(A);)A++;const t=A-n;if(t===l){if(!e){const e=g.push("code_inline","code",0);e.markup=i,e.content=g.src.slice(I,n).replace(/\n/g," ").replace(/^ (.+) $/,"$1")}return g.pos=A,!0}g.backticks[t]=n}return g.backticksScanned=!0,e||(g.pending+=i),g.pos+=l,!0}function Mb(g,e){const I=g.pos,t=g.src.charCodeAt(I);if(e||126!==t)return!1;const C=g.scanDelims(g.pos,!0);let i=C.length;const l=String.fromCharCode(t);if(i<2)return!1;let n;i%2&&(n=g.push("text","",0),n.content=l,i--);for(let e=0;e<i;e+=2)n=g.push("text","",0),n.content=l+l,g.delimiters.push({marker:t,length:0,token:g.tokens.length-1,end:-1,open:C.can_open,close:C.can_close});return g.pos+=C.length,!0}function Yb(g,e){let I;const t=[],C=e.length;for(let i=0;i<C;i++){const C=e[i];if(126!==C.marker||-1===C.end)continue;const l=e[C.end];I=g.tokens[C.token],I.type="s_open",I.tag="s",I.nesting=1,I.markup="~~",I.content="",I=g.tokens[l.token],I.type="s_close",I.tag="s",I.nesting=-1,I.markup="~~",I.content="","text"===g.tokens[l.token-1].type&&"~"===g.tokens[l.token-1].content&&t.push(l.token-1)}for(;t.length;){const e=t.pop();let C=e+1;for(;C<g.tokens.length&&"s_close"===g.tokens[C].type;)C++;C--,e!==C&&(I=g.tokens[C],g.tokens[C]=g.tokens[e],g.tokens[e]=I)}}function Eb(g){const e=g.tokens_meta,I=g.tokens_meta.length;Yb(g,g.delimiters);for(let t=0;t<I;t++)e[t]&&e[t].delimiters&&Yb(g,e[t].delimiters)}"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach((function(g){Gb[g.charCodeAt(0)]=1}));const yb={tokenize:Mb,postProcess:Eb};function Jb(g,e){const I=g.pos,t=g.src.charCodeAt(I);if(e||95!==t&&42!==t)return!1;const C=g.scanDelims(g.pos,42===t);for(let e=0;e<C.length;e++)g.push("text","",0).content=String.fromCharCode(t),g.delimiters.push({marker:t,length:C.length,token:g.tokens.length-1,end:-1,open:C.can_open,close:C.can_close});return g.pos+=C.length,!0}function Hb(g,e){for(let I=e.length-1;I>=0;I--){const t=e[I];if(95!==t.marker&&42!==t.marker||-1===t.end)continue;const C=e[t.end],i=I>0&&e[I-1].end===t.end+1&&e[I-1].marker===t.marker&&e[I-1].token===t.token-1&&e[t.end+1].token===C.token+1,l=String.fromCharCode(t.marker),n=g.tokens[t.token];n.type=i?"strong_open":"em_open",n.tag=i?"strong":"em",n.nesting=1,n.markup=i?l+l:l,n.content="";const A=g.tokens[C.token];A.type=i?"strong_close":"em_close",A.tag=i?"strong":"em",A.nesting=-1,A.markup=i?l+l:l,A.content="",i&&(g.tokens[e[I-1].token].content="",g.tokens[e[t.end+1].token].content="",I--)}}function wb(g){const e=g.tokens_meta,I=g.tokens_meta.length;Hb(g,g.delimiters);for(let t=0;t<I;t++)e[t]&&e[t].delimiters&&Hb(g,e[t].delimiters)}const Xb={tokenize:Jb,postProcess:wb};function Kb(g,e){let I,t,C,i,l="",n="",A=g.pos,d=!0;if(91!==g.src.charCodeAt(g.pos))return!1;const o=g.pos,s=g.posMax,a=g.pos+1,V=g.md.helpers.parseLinkLabel(g,g.pos,!0);if(V<0)return!1;let c=V+1;if(c<s&&40===g.src.charCodeAt(c)){for(d=!1,c++;c<s&&(I=g.src.charCodeAt(c),eS(I)||10===I);c++);if(c>=s)return!1;if(A=c,C=g.md.helpers.parseLinkDestination(g.src,c,g.posMax),C.ok){for(l=g.md.normalizeLink(C.str),g.md.validateLink(l)?c=C.pos:l="",A=c;c<s&&(I=g.src.charCodeAt(c),eS(I)||10===I);c++);if(C=g.md.helpers.parseLinkTitle(g.src,c,g.posMax),c<s&&A!==c&&C.ok)for(n=C.str,c=C.pos;c<s&&(I=g.src.charCodeAt(c),eS(I)||10===I);c++);}(c>=s||41!==g.src.charCodeAt(c))&&(d=!0),c++}if(d){if(typeof g.env.references>"u")return!1;if(c<s&&91===g.src.charCodeAt(c)?(A=c+1,c=g.md.helpers.parseLinkLabel(g,c),c>=0?t=g.src.slice(A,c++):c=V+1):c=V+1,t||(t=g.src.slice(a,V)),i=g.env.references[iS(t)],!i)return g.pos=o,!1;l=i.href,n=i.title}if(!e){g.pos=a,g.posMax=V;const e=[["href",l]];g.push("link_open","a",1).attrs=e,n&&e.push(["title",n]),g.linkLevel++,g.md.inline.tokenize(g),g.linkLevel--,g.push("link_close","a",-1)}return g.pos=c,g.posMax=s,!0}function zb(g,e){let I,t,C,i,l,n,A,d,o="";const s=g.pos,a=g.posMax;if(33!==g.src.charCodeAt(g.pos)||91!==g.src.charCodeAt(g.pos+1))return!1;const V=g.pos+2,c=g.md.helpers.parseLinkLabel(g,g.pos+1,!1);if(c<0)return!1;if(i=c+1,i<a&&40===g.src.charCodeAt(i)){for(i++;i<a&&(I=g.src.charCodeAt(i),eS(I)||10===I);i++);if(i>=a)return!1;for(d=i,n=g.md.helpers.parseLinkDestination(g.src,i,g.posMax),n.ok&&(o=g.md.normalizeLink(n.str),g.md.validateLink(o)?i=n.pos:o=""),d=i;i<a&&(I=g.src.charCodeAt(i),eS(I)||10===I);i++);if(n=g.md.helpers.parseLinkTitle(g.src,i,g.posMax),i<a&&d!==i&&n.ok)for(A=n.str,i=n.pos;i<a&&(I=g.src.charCodeAt(i),eS(I)||10===I);i++);else A="";if(i>=a||41!==g.src.charCodeAt(i))return g.pos=s,!1;i++}else{if(typeof g.env.references>"u")return!1;if(i<a&&91===g.src.charCodeAt(i)?(d=i+1,i=g.md.helpers.parseLinkLabel(g,i),i>=0?C=g.src.slice(d,i++):i=c+1):i=c+1,C||(C=g.src.slice(V,c)),l=g.env.references[iS(C)],!l)return g.pos=s,!1;o=l.href,A=l.title}if(!e){t=g.src.slice(V,c);const e=[];g.md.inline.parse(t,g.md,g.env,e);const I=g.push("image","img",0),C=[["src",o],["alt",""]];I.attrs=C,I.children=e,I.content=t,A&&C.push(["title",A])}return g.pos=i,g.posMax=a,!0}const Db=/^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,vb=/^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;function xb(g,e){let I=g.pos;if(60!==g.src.charCodeAt(I))return!1;const t=g.pos,C=g.posMax;for(;;){if(++I>=C)return!1;const e=g.src.charCodeAt(I);if(60===e)return!1;if(62===e)break}const i=g.src.slice(t+1,I);if(vb.test(i)){const I=g.md.normalizeLink(i);if(!g.md.validateLink(I))return!1;if(!e){const e=g.push("link_open","a",1);e.attrs=[["href",I]],e.markup="autolink",e.info="auto",g.push("text","",0).content=g.md.normalizeLinkText(i);const t=g.push("link_close","a",-1);t.markup="autolink",t.info="auto"}return g.pos+=i.length+2,!0}if(Db.test(i)){const I=g.md.normalizeLink("mailto:"+i);if(!g.md.validateLink(I))return!1;if(!e){const e=g.push("link_open","a",1);e.attrs=[["href",I]],e.markup="autolink",e.info="auto",g.push("text","",0).content=g.md.normalizeLinkText(i);const t=g.push("link_close","a",-1);t.markup="autolink",t.info="auto"}return g.pos+=i.length+2,!0}return!1}function Ob(g){return/^<a[>\s]/i.test(g)}function fb(g){return/^<\/a\s*>/i.test(g)}function jb(g){const e=32|g;return e>=97&&e<=122}function Lb(g,e){if(!g.md.options.html)return!1;const I=g.posMax,t=g.pos;if(60!==g.src.charCodeAt(t)||t+2>=I)return!1;const C=g.src.charCodeAt(t+1);if(33!==C&&63!==C&&47!==C&&!jb(C))return!1;const i=g.src.slice(t).match(rb);if(!i)return!1;if(!e){const e=g.push("html_inline","",0);e.content=i[0],Ob(e.content)&&g.linkLevel++,fb(e.content)&&g.linkLevel--}return g.pos+=i[0].length,!0}const Pb=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,_b=/^&([a-z][a-z0-9]{1,31});/i;function qb(g,e){const I=g.pos,t=g.posMax;if(38!==g.src.charCodeAt(I)||I+1>=t)return!1;if(35===g.src.charCodeAt(I+1)){const t=g.src.slice(I).match(Pb);if(t){if(!e){const e="x"===t[1][0].toLowerCase()?parseInt(t[1].slice(1),16):parseInt(t[1],10),I=g.push("text_special","",0);I.content=wp(e)?Xp(e):Xp(65533),I.markup=t[0],I.info="entity"}return g.pos+=t[0].length,!0}}else{const t=g.src.slice(I).match(_b);if(t){const I=Qp(t[0]);if(I!==t[0]){if(!e){const e=g.push("text_special","",0);e.content=I,e.markup=t[0],e.info="entity"}return g.pos+=t[0].length,!0}}}return!1}function $b(g){const e={},I=g.length;if(!I)return;let t=0,C=-2;const i=[];for(let l=0;l<I;l++){const I=g[l];if(i.push(0),(g[t].marker!==I.marker||C!==I.token-1)&&(t=l),C=I.token,I.length=I.length||0,!I.close)continue;e.hasOwnProperty(I.marker)||(e[I.marker]=[-1,-1,-1,-1,-1,-1]);const n=e[I.marker][(I.open?3:0)+I.length%3];let A=t-i[t]-1,d=A;for(;A>n;A-=i[A]+1){const e=g[A];if(e.marker===I.marker&&e.open&&e.end<0){let t=!1;if((e.close||I.open)&&(e.length+I.length)%3==0&&(e.length%3!=0||I.length%3!=0)&&(t=!0),!t){const t=A>0&&!g[A-1].open?i[A-1]+1:0;i[l]=l-A+t,i[A]=t,I.open=!1,e.end=l,e.close=!1,d=-1,C=-2;break}}}-1!==d&&(e[I.marker][(I.open?3:0)+(I.length||0)%3]=d)}}function gu(g){const e=g.tokens_meta,I=g.tokens_meta.length;$b(g.delimiters);for(let g=0;g<I;g++)e[g]&&e[g].delimiters&&$b(e[g].delimiters)}function eu(g){let e,I,t=0;const C=g.tokens,i=g.tokens.length;for(e=I=0;e<i;e++)C[e].nesting<0&&t--,C[e].level=t,C[e].nesting>0&&t++,"text"===C[e].type&&e+1<i&&"text"===C[e+1].type?C[e+1].content=C[e].content+C[e+1].content:(e!==I&&(C[I]=C[e]),I++);e!==I&&(C.length=I)}const Iu=[["text",Sb],["linkify",ub],["newline",Tb],["escape",kb],["backticks",Qb],["strikethrough",yb.tokenize],["emphasis",Xb.tokenize],["link",Kb],["image",zb],["autolink",xb],["html_inline",Lb],["entity",qb]],tu=[["balance_pairs",gu],["strikethrough",yb.postProcess],["emphasis",Xb.postProcess],["fragments_join",eu]];function Cu(){this.ruler=new cS;for(let g=0;g<Iu.length;g++)this.ruler.push(Iu[g][0],Iu[g][1]);this.ruler2=new cS;for(let g=0;g<tu.length;g++)this.ruler2.push(tu[g][0],tu[g][1])}function iu(g){const e={};return g=g||{},e.src_Any=lp.source,e.src_Cc=np.source,e.src_Z=sp.source,e.src_P=dp.source,e.src_ZPCc=[e.src_Z,e.src_P,e.src_Cc].join("|"),e.src_ZCc=[e.src_Z,e.src_Cc].join("|"),e.src_pseudo_letter="(?:(?![><｜]|"+e.src_ZPCc+")"+e.src_Any+")",e.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",e.src_auth="(?:(?:(?!"+e.src_ZCc+"|[@/\\[\\]()]).)+@)?",e.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",e.src_host_terminator="(?=$|[><｜]|"+e.src_ZPCc+")(?!"+(g["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+e.src_ZPCc+"))",e.src_path="(?:[/?#](?:(?!"+e.src_ZCc+"|[><｜]|[()[\\]{}.,\"'?!\\-;]).|\\[(?:(?!"+e.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+e.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+e.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+e.src_ZCc+'|["]).)+\\"|\\\'(?:(?!'+e.src_ZCc+"|[']).)+\\'|\\'(?="+e.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+e.src_ZCc+"|[.]|$)|"+(g["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+e.src_ZCc+"|$)|;(?!"+e.src_ZCc+"|$)|\\!+(?!"+e.src_ZCc+"|[!]|$)|\\?(?!"+e.src_ZCc+"|[?]|$))+|\\/)?",e.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',e.src_xn="xn--[a-z0-9\\-]{1,59}",e.src_domain_root="(?:"+e.src_xn+"|"+e.src_pseudo_letter+"{1,63})",e.src_domain="(?:"+e.src_xn+"|(?:"+e.src_pseudo_letter+")|(?:"+e.src_pseudo_letter+"(?:-|"+e.src_pseudo_letter+"){0,61}"+e.src_pseudo_letter+"))",e.src_host="(?:(?:(?:(?:"+e.src_domain+")\\.)*"+e.src_domain+"))",e.tpl_host_fuzzy="(?:"+e.src_ip4+"|(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%)))",e.tpl_host_no_ip_fuzzy="(?:(?:(?:"+e.src_domain+")\\.)+(?:%TLDS%))",e.src_host_strict=e.src_host+e.src_host_terminator,e.tpl_host_fuzzy_strict=e.tpl_host_fuzzy+e.src_host_terminator,e.src_host_port_strict=e.src_host+e.src_port+e.src_host_terminator,e.tpl_host_port_fuzzy_strict=e.tpl_host_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_port_no_ip_fuzzy_strict=e.tpl_host_no_ip_fuzzy+e.src_port+e.src_host_terminator,e.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+e.src_ZPCc+"|>|$))",e.tpl_email_fuzzy='(^|[><｜]|"|\\(|'+e.src_ZCc+")("+e.src_email_name+"@"+e.tpl_host_fuzzy_strict+")",e.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_fuzzy_strict+e.src_path+")",e.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+e.src_ZPCc+"))((?![$+<=>^`|｜])"+e.tpl_host_port_no_ip_fuzzy_strict+e.src_path+")",e}function lu(g){return Array.prototype.slice.call(arguments,1).forEach((function(e){e&&Object.keys(e).forEach((function(I){g[I]=e[I]}))})),g}function nu(g){return Object.prototype.toString.call(g)}function Au(g){return"[object String]"===nu(g)}function du(g){return"[object Object]"===nu(g)}function ou(g){return"[object RegExp]"===nu(g)}function su(g){return"[object Function]"===nu(g)}function au(g){return g.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}Cu.prototype.skipToken=function(g){const e=g.pos,I=this.ruler.getRules(""),t=I.length,C=g.md.options.maxNesting,i=g.cache;if(typeof i[e]<"u")return void(g.pos=i[e]);let l=!1;if(g.level<C){for(let C=0;C<t;C++)if(g.level++,l=I[C](g,!0),g.level--,l){if(e>=g.pos)throw new Error("inline rule didn't increment state.pos");break}}else g.pos=g.posMax;l||g.pos++,i[e]=g.pos},Cu.prototype.tokenize=function(g){const e=this.ruler.getRules(""),I=e.length,t=g.posMax,C=g.md.options.maxNesting;for(;g.pos<t;){const i=g.pos;let l=!1;if(g.level<C)for(let t=0;t<I;t++)if(l=e[t](g,!1),l){if(i>=g.pos)throw new Error("inline rule didn't increment state.pos");break}if(l){if(g.pos>=t)break}else g.pending+=g.src[g.pos++]}g.pending&&g.pushPending()},Cu.prototype.parse=function(g,e,I,t){const C=new this.State(g,e,I,t);this.tokenize(C);const i=this.ruler2.getRules(""),l=i.length;for(let g=0;g<l;g++)i[g](C)},Cu.prototype.State=Nb;const Vu={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};function cu(g){return Object.keys(g||{}).reduce((function(g,e){return g||Vu.hasOwnProperty(e)}),!1)}const ru={"http:":{validate:function(g,e,I){const t=g.slice(e);return I.re.http||(I.re.http=new RegExp("^\\/\\/"+I.re.src_auth+I.re.src_host_port_strict+I.re.src_path,"i")),I.re.http.test(t)?t.match(I.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(g,e,I){const t=g.slice(e);return I.re.no_http||(I.re.no_http=new RegExp("^"+I.re.src_auth+"(?:localhost|(?:(?:"+I.re.src_domain+")\\.)+"+I.re.src_domain_root+")"+I.re.src_port+I.re.src_host_terminator+I.re.src_path,"i")),I.re.no_http.test(t)?e>=3&&":"===g[e-3]||e>=3&&"/"===g[e-3]?0:t.match(I.re.no_http)[0].length:0}},"mailto:":{validate:function(g,e,I){const t=g.slice(e);return I.re.mailto||(I.re.mailto=new RegExp("^"+I.re.src_email_name+"@"+I.re.src_host_strict,"i")),I.re.mailto.test(t)?t.match(I.re.mailto)[0].length:0}}},hu="a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",Uu="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function Zu(g){g.__index__=-1,g.__text_cache__=""}function Ru(g){return function(e,I){const t=e.slice(I);return g.test(t)?t.match(g)[0].length:0}}function Fu(){return function(g,e){e.normalize(g)}}function mu(g){const e=g.re=iu(g.__opts__),I=g.__tlds__.slice();function t(g){return g.replace("%TLDS%",e.src_tlds)}g.onCompile(),g.__tlds_replaced__||I.push(hu),I.push(e.src_xn),e.src_tlds=I.join("|"),e.email_fuzzy=RegExp(t(e.tpl_email_fuzzy),"i"),e.link_fuzzy=RegExp(t(e.tpl_link_fuzzy),"i"),e.link_no_ip_fuzzy=RegExp(t(e.tpl_link_no_ip_fuzzy),"i"),e.host_fuzzy_test=RegExp(t(e.tpl_host_fuzzy_test),"i");const C=[];function i(g,e){throw new Error('(LinkifyIt) Invalid schema "'+g+'": '+e)}g.__compiled__={},Object.keys(g.__schemas__).forEach((function(e){const I=g.__schemas__[e];if(null===I)return;const t={validate:null,link:null};if(g.__compiled__[e]=t,du(I))return ou(I.validate)?t.validate=Ru(I.validate):su(I.validate)?t.validate=I.validate:i(e,I),void(su(I.normalize)?t.normalize=I.normalize:I.normalize?i(e,I):t.normalize=Fu());Au(I)?C.push(e):i(e,I)})),C.forEach((function(e){g.__compiled__[g.__schemas__[e]]&&(g.__compiled__[e].validate=g.__compiled__[g.__schemas__[e]].validate,g.__compiled__[e].normalize=g.__compiled__[g.__schemas__[e]].normalize)})),g.__compiled__[""]={validate:null,normalize:Fu()};const l=Object.keys(g.__compiled__).filter((function(e){return e.length>0&&g.__compiled__[e]})).map(au).join("|");g.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+l+")","i"),g.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+e.src_ZPCc+"))("+l+")","ig"),g.re.schema_at_start=RegExp("^"+g.re.schema_search.source,"i"),g.re.pretest=RegExp("("+g.re.schema_test.source+")|("+g.re.host_fuzzy_test.source+")|@","i"),Zu(g)}function Bu(g,e){const I=g.__index__,t=g.__last_index__,C=g.__text_cache__.slice(I,t);this.schema=g.__schema__.toLowerCase(),this.index=I+e,this.lastIndex=t+e,this.raw=C,this.text=C,this.url=C}function Wu(g,e){const I=new Bu(g,e);return g.__compiled__[I.schema].normalize(I,g),I}function Nu(g,e){if(!(this instanceof Nu))return new Nu(g,e);e||cu(g)&&(e=g,g={}),this.__opts__=lu({},Vu,e),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=lu({},ru,g),this.__compiled__={},this.__tlds__=Uu,this.__tlds_replaced__=!1,this.re={},mu(this)}Nu.prototype.add=function(g,e){return this.__schemas__[g]=e,mu(this),this},Nu.prototype.set=function(g){return this.__opts__=lu(this.__opts__,g),this},Nu.prototype.test=function(g){if(this.__text_cache__=g,this.__index__=-1,!g.length)return!1;let e,I,t,C,i,l,n,A,d;if(this.re.schema_test.test(g))for(n=this.re.schema_search,n.lastIndex=0;null!==(e=n.exec(g));)if(C=this.testSchemaAt(g,e[2],n.lastIndex),C){this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+C;break}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(A=g.search(this.re.host_fuzzy_test),A>=0&&(this.__index__<0||A<this.__index__)&&null!==(I=g.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))&&(i=I.index+I[1].length,(this.__index__<0||i<this.__index__)&&(this.__schema__="",this.__index__=i,this.__last_index__=I.index+I[0].length))),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&(d=g.indexOf("@"),d>=0&&null!==(t=g.match(this.re.email_fuzzy))&&(i=t.index+t[1].length,l=t.index+t[0].length,(this.__index__<0||i<this.__index__||i===this.__index__&&l>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=i,this.__last_index__=l))),this.__index__>=0},Nu.prototype.pretest=function(g){return this.re.pretest.test(g)},Nu.prototype.testSchemaAt=function(g,e,I){return this.__compiled__[e.toLowerCase()]?this.__compiled__[e.toLowerCase()].validate(g,I,this):0},Nu.prototype.match=function(g){const e=[];let I=0;this.__index__>=0&&this.__text_cache__===g&&(e.push(Wu(this,I)),I=this.__last_index__);let t=I?g.slice(I):g;for(;this.test(t);)e.push(Wu(this,I)),t=t.slice(this.__last_index__),I+=this.__last_index__;return e.length?e:null},Nu.prototype.matchAtStart=function(g){if(this.__text_cache__=g,this.__index__=-1,!g.length)return null;const e=this.re.schema_at_start.exec(g);if(!e)return null;const I=this.testSchemaAt(g,e[2],e[0].length);return I?(this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+I,Wu(this,0)):null},Nu.prototype.tlds=function(g,e){return g=Array.isArray(g)?g:[g],e?(this.__tlds__=this.__tlds__.concat(g).sort().filter((function(g,e,I){return g!==I[e-1]})).reverse(),mu(this),this):(this.__tlds__=g.slice(),this.__tlds_replaced__=!0,mu(this),this)},Nu.prototype.normalize=function(g){g.schema||(g.url="http://"+g.url),"mailto:"===g.schema&&!/^mailto:/i.test(g.url)&&(g.url="mailto:"+g.url)},Nu.prototype.onCompile=function(){};const pu=2147483647,Su=36,bu=1,uu=26,Tu=38,Gu=700,ku=72,Qu=128,Mu="-",Yu=/^xn--/,Eu=/[^\0-\x7F]/,yu=/[\x2E\u3002\uFF0E\uFF61]/g,Ju={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},Hu=35,wu=Math.floor,Xu=String.fromCharCode;function Ku(g){throw new RangeError(Ju[g])}function zu(g,e){const I=[];let t=g.length;for(;t--;)I[t]=e(g[t]);return I}function Du(g,e){const I=g.split("@");let t="";return I.length>1&&(t=I[0]+"@",g=I[1]),t+zu((g=g.replace(yu,".")).split("."),e).join(".")}function vu(g){const e=[];let I=0;const t=g.length;for(;I<t;){const C=g.charCodeAt(I++);if(C>=55296&&C<=56319&&I<t){const t=g.charCodeAt(I++);56320==(64512&t)?e.push(((1023&C)<<10)+(1023&t)+65536):(e.push(C),I--)}else e.push(C)}return e}const xu=g=>String.fromCodePoint(...g),Ou=function(g){return g>=48&&g<58?g-48+26:g>=65&&g<91?g-65:g>=97&&g<123?g-97:Su},fu=function(g,e){return g+22+75*(g<26)-((0!=e)<<5)},ju=function(g,e,I){let t=0;for(g=I?wu(g/Gu):g>>1,g+=wu(g/e);g>455;t+=Su)g=wu(g/Hu);return wu(t+36*g/(g+Tu))},Lu=function(g){const e=[],I=g.length;let t=0,C=Qu,i=ku,l=g.lastIndexOf(Mu);l<0&&(l=0);for(let I=0;I<l;++I)g.charCodeAt(I)>=128&&Ku("not-basic"),e.push(g.charCodeAt(I));for(let n=l>0?l+1:0;n<I;){const l=t;for(let e=1,C=Su;;C+=Su){n>=I&&Ku("invalid-input");const l=Ou(g.charCodeAt(n++));l>=Su&&Ku("invalid-input"),l>wu((pu-t)/e)&&Ku("overflow"),t+=l*e;const A=C<=i?1:C>=i+uu?uu:C-i;if(l<A)break;const d=Su-A;e>wu(pu/d)&&Ku("overflow"),e*=d}const A=e.length+1;i=ju(t-l,A,0==l),wu(t/A)>pu-C&&Ku("overflow"),C+=wu(t/A),t%=A,e.splice(t++,0,C)}return String.fromCodePoint(...e)},Pu=function(g){const e=[],I=(g=vu(g)).length;let t=Qu,C=0,i=ku;for(const I of g)I<128&&e.push(Xu(I));const l=e.length;let n=l;for(l&&e.push(Mu);n<I;){let I=pu;for(const e of g)e>=t&&e<I&&(I=e);const A=n+1;I-t>wu((pu-C)/A)&&Ku("overflow"),C+=(I-t)*A,t=I;for(const I of g)if(I<t&&++C>pu&&Ku("overflow"),I===t){let g=C;for(let I=Su;;I+=Su){const t=I<=i?1:I>=i+uu?uu:I-i;if(g<t)break;const C=g-t,l=Su-t;e.push(Xu(fu(t+C%l,0))),g=wu(C/l)}e.push(Xu(fu(g,0))),i=ju(C,A,n===l),C=0,++n}++C,++t}return e.join("")},_u=function(g){return Du(g,(function(g){return Yu.test(g)?Lu(g.slice(4).toLowerCase()):g}))},qu=function(g){return Du(g,(function(g){return Eu.test(g)?"xn--"+Pu(g):g}))},$u={version:"2.3.1",ucs2:{decode:vu,encode:xu},decode:Lu,encode:Pu,toASCII:qu,toUnicode:_u},gT={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},eT={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},IT={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}},tT={default:gT,zero:eT,commonmark:IT},CT=/^(vbscript|javascript|file|data):/,iT=/^data:image\/(gif|png|jpeg|webp);/;function lT(g){const e=g.trim().toLowerCase();return!CT.test(e)||iT.test(e)}const nT=["http:","https:","mailto:"];function AT(g){const e=Cp(g,!0);if(e.hostname&&(!e.protocol||nT.indexOf(e.protocol)>=0))try{e.hostname=$u.toASCII(e.hostname)}catch{}return zN(DN(e))}function dT(g){const e=Cp(g,!0);if(e.hostname&&(!e.protocol||nT.indexOf(e.protocol)>=0))try{e.hostname=$u.toUnicode(e.hostname)}catch{}return wN(DN(e),wN.defaultChars+"%")}function oT(g,e){if(!(this instanceof oT))return new oT(g,e);e||Yp(g)||(e=g||{},g="default"),this.inline=new Cu,this.block=new Wb,this.core=new KS,this.renderer=new VS,this.linkify=new Nu,this.validateLink=lT,this.normalizeLink=AT,this.normalizeLinkText=dT,this.utils=nS,this.helpers=Jp({},sS),this.options={},this.configure(g),e&&this.set(e)}oT.prototype.set=function(g){return Jp(this.options,g),this},oT.prototype.configure=function(g){const e=this;if(Yp(g)){const e=g;if(!(g=tT[e]))throw new Error('Wrong `markdown-it` preset "'+e+'", check name')}if(!g)throw new Error("Wrong `markdown-it` preset, can't be empty");return g.options&&e.set(g.options),g.components&&Object.keys(g.components).forEach((function(I){g.components[I].rules&&e[I].ruler.enableOnly(g.components[I].rules),g.components[I].rules2&&e[I].ruler2.enableOnly(g.components[I].rules2)})),this},oT.prototype.enable=function(g,e){let I=[];Array.isArray(g)||(g=[g]),["core","block","inline"].forEach((function(e){I=I.concat(this[e].ruler.enable(g,!0))}),this),I=I.concat(this.inline.ruler2.enable(g,!0));const t=g.filter((function(g){return I.indexOf(g)<0}));if(t.length&&!e)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+t);return this},oT.prototype.disable=function(g,e){let I=[];Array.isArray(g)||(g=[g]),["core","block","inline"].forEach((function(e){I=I.concat(this[e].ruler.disable(g,!0))}),this),I=I.concat(this.inline.ruler2.disable(g,!0));const t=g.filter((function(g){return I.indexOf(g)<0}));if(t.length&&!e)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+t);return this},oT.prototype.use=function(g){const e=[this].concat(Array.prototype.slice.call(arguments,1));return g.apply(g,e),this},oT.prototype.parse=function(g,e){if("string"!=typeof g)throw new Error("Input data should be a String");const I=new this.core.State(g,this,e);return this.core.process(I),I.tokens},oT.prototype.render=function(g,e){return e=e||{},this.renderer.render(this.parse(g,e),this.options,e)},oT.prototype.parseInline=function(g,e){const I=new this.core.State(g,this,e);return I.inlineMode=!0,this.core.process(I),I.tokens},oT.prototype.renderInline=function(g,e){return e=e||{},this.renderer.render(this.parseInline(g,e),this.options,e)};const sT=Object.fromEntries(Object.entries(nU.CompletionItemKind).map((([g,e])=>[e,g]))),aT=g=>g===nU.CompletionItemKind.Module?"namespace":sT[g].toLowerCase(),VT=(g,e)=>"kind"in g?g.kind:"language"in g?g.language:e,cT=g=>Array.isArray(g)?g.reduce(((g,e)=>{const{kind:I,value:t}=g;switch(typeof e){case"string":return{kind:I,value:t+"\n\n"+e};case"object":return{kind:VT(e,I),value:t+"\n\n"+e.value};default:return g}}),{kind:nU.MarkupKind.PlainText,value:""}):"string"==typeof g?{kind:nU.MarkupKind.PlainText,value:g}:{kind:VT(g,nU.MarkupKind.PlainText),value:g.value};class rT{constructor(g){I(this,"langGo",yN().language),I(this,"printer"),this.highlighter=g,this.printer=oT({html:!1,breaks:!0,highlight:(g,e,I)=>this.highlightSource(g,e)})}highlightSource(g,e){if("go"!==e||!this.highlighter)return`<pre class="code">${g}</pre>`;const I=this.langGo.parser.parse(g);let t="",C=0;return ca(I,this.highlighter,((e,I,i)=>{if(C>0){const I=g.slice(C,e);I.length>0&&(t+=`<span>${I}</span>`)}C=I,t+=`<span class="${i}">${g.slice(e,I)}</span>`})),`<div class="code-highlighted">${t}</div>`}renderContents(g,e){const{kind:I,value:t}=cT(e);if(I===nU.MarkupKind.Markdown)return void(g.innerHTML=this.printer.render(t));const C=document.createElement("pre");C.innerText=t,g.appendChild(C)}}const hT=(g,e)=>{if(!e)return null;const I=document.createElement("div");return I.classList.add(nW.completionDoc),"string"==typeof e?I.innerText=e:g.renderContents(I,e),I},UT=At.define({combine:VW}),ZT=At.define({combine:VW}),RT=At.define({combine:VW}),FT=500;class mT{constructor(g,e){I(this,"client"),I(this,"documentUri"),I(this,"languageId"),I(this,"documentVersion"),I(this,"docRenderer"),I(this,"changesTimeout"),this.view=g,this.docRenderer=new rT(e),this.client=this.view.state.facet(UT),this.documentUri=this.view.state.facet(ZT),this.languageId=this.view.state.facet(RT),this.documentVersion=0,this.changesTimeout=0,this.client.attachPlugin(this),this.initialize({documentText:this.view.state.doc.toString()})}update({docChanged:g}){g&&(this.changesTimeout&&clearTimeout(this.changesTimeout),this.changesTimeout=self.setTimeout((()=>{this.sendChange({documentText:this.view.state.doc.toString()})}),FT))}destroy(){this.client.detachPlugin(this)}supportsResolveProvider(){var g,e;return null==(e=null==(g=this.client.capabilities)?void 0:g.completionProvider)?void 0:e.resolveProvider}async initialize({documentText:g}){this.client.initializePromise&&await this.client.initializePromise,await this.client.textDocumentDidOpen({textDocument:{uri:this.documentUri,languageId:this.languageId,text:g,version:this.documentVersion}})}async sendChange({documentText:g}){if(this.client.ready)try{await this.client.textDocumentDidChange({textDocument:{uri:this.documentUri,version:this.documentVersion++},contentChanges:[{text:g}]})}catch(g){}}async format(){if(!this.client.ready)return;const g=await this.client.textDocumentFormatting({textDocument:{uri:this.documentUri},options:{tabSize:this.view.state.tabSize,insertSpaces:!1}});if(!g.length)return;const e=[];g.forEach((({newText:g,range:I})=>{const t=hW(this.view.state.doc,I.start),C=hW(this.view.state.doc,I.end);rW(t)&&rW(C)&&e.push({from:t,to:C,insert:g})}));const I=g[0].newText.length,{head:t}=this.view.state.selection.main,C=t>I?I:t;this.view.dispatch({changes:e,selection:{anchor:C}})}async requestDiagnostics(g){if(!this.client.ready)return;const e=await this.client.textDocumentLinting({textDocument:{uri:this.documentUri,version:this.documentVersion++},contentChanges:[{text:g.state.doc.toString()}]});return e&&e.uri===this.documentUri?BW(this.view.state.doc,e.diagnostics):void 0}async requestHoverTooltip(g,{line:e,character:I}){var t;if(!this.client.ready||null==(t=this.client.capabilities)||!t.hoverProvider)return null;const C=await this.client.textDocumentHover({textDocument:{uri:this.documentUri},position:{line:e,character:I}});if(null==C||!C.contents)return null;const{contents:i,range:l}=C;let n,A=hW(g.state.doc,{line:e,character:I});if(l&&(A=hW(g.state.doc,l.start),n=hW(g.state.doc,l.end)),cW(A))return null;const d=document.createElement("div");return d.classList.add(nW.tooltip),this.docRenderer.renderContents(d,i),{pos:A,end:n,create:g=>({dom:d}),above:!0}}async requestCompletion(g,{line:e,character:I},{triggerKind:t,triggerCharacter:C}){var i;if(!this.client.ready||null==(i=this.client.capabilities)||!i.completionProvider)return null;await this.sendChange({documentText:g.state.doc.toString()});const l=await this.client.textDocumentCompletion({textDocument:{uri:this.documentUri},position:{line:e,character:I},context:{triggerKind:t,triggerCharacter:C}});if(!l)return null;const n="isIncomplete"in l&&l.isIncomplete;let A=("items"in l?l.items:l).map((g=>{const{detail:e,label:I,kind:t,insertText:C,textEdit:i,sortText:l,filterText:A}=g;return{label:I,detail:e,apply:(null==i?void 0:i.newText)??C??I,type:t&&aT(t),sortText:l??I,filterText:A??I,info:this.newCompletionItemResolver(g,n)}}));const[d,o]=RW(A),s=g.matchBefore(o);let{pos:a}=g;if(s){a=s.from;const g=s.text.toLowerCase();/^\w+$/.test(g)&&(A=A.filter((({filterText:e})=>e.toLowerCase().startsWith(g))).sort((({apply:g},{apply:e})=>{switch(!0){case g.startsWith(s.text)&&!e.startsWith(s.text):return-1;case!g.startsWith(s.text)&&e.startsWith(s.text):return 1}return 0})))}return{from:a,options:A}}newCompletionItemResolver(g,e){return e?this.supportsResolveProvider()?async()=>{const e=await this.client.completionItemResolve(g);return hT(this.docRenderer,e.documentation??g.documentation)}:void 0:g.documentation?()=>hT(this.docRenderer,g.documentation):void 0}handleNotification(g){try{"textDocument/publishDiagnostics"===g.method&&this.handleDiagnostics(g.params)}catch(g){}}handleDiagnostics(g){if(g.uri!==this.documentUri)return;const e=BW(this.view.state.doc,g.diagnostics);this.view.dispatch(Jh(this.view.state,e))}}function BT(g){var e;let I=null;return[Vd.theme((null==(e=g.theme)?void 0:e.styleSpec)??oW),UT.of(g.client),ZT.of(g.documentUri),RT.of(g.languageId),_h((async g=>await(null==I?void 0:I.requestDiagnostics(g))??[])),Hl.define((e=>{var t;return I=new mT(e,null==(t=g.theme)?void 0:t.highlighter)})),Do(((g,e)=>(null==I?void 0:I.requestHoverTooltip(g,UW(g.state.doc,e)))??null)),Bd.of([{key:"Mod-Shift-f",run:g=>(null==I||I.format(),!0)},{key:"Mod-l",run:g=>(null==I||I.requestDiagnostics(g),!0)}]),bh({override:[async g=>{var e,t,C;if(null==I)return null;const{state:i,pos:l,explicit:n}=g,A=i.doc.lineAt(l);let d,o=nU.CompletionTriggerKind.Invoked;return!n&&null!=(C=null==(t=null==(e=I.client.capabilities)?void 0:e.completionProvider)?void 0:t.triggerCharacters)&&C.includes(A.text[l-A.from-1])&&(o=nU.CompletionTriggerKind.TriggerCharacter,d=A.text[l-A.from-1]),o!==nU.CompletionTriggerKind.Invoked||g.matchBefore(/\w+$/)?await I.requestCompletion(g,UW(i.doc,l),{triggerKind:o,triggerCharacter:d}):null}]})]}var WT={},NT={};!function(g){var e=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},I=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}};Object.defineProperty(g,"__esModule",{value:!0}),g.defaultNextRequest=void 0;var t=NI;g.defaultNextRequest=function(){var g=-1;return function(){return++g}};var C=function(){function C(e,I){void 0===I&&(I=g.defaultNextRequest()),this.batch=[],this.batchStarted=!1,this.lastId=-1,this.transports=e,this.requests={},this.connectPromise=this.connect(),this.requestChannel=new t.EventEmitter,this.nextID=I}return C.prototype.connect=function(){var g=this;return Promise.all(this.transports.map((function(t){return e(g,void 0,void 0,(function(){return I(this,(function(g){switch(g.label){case 0:return t.subscribe("error",this.handleError.bind(this)),t.subscribe("notification",this.handleNotification.bind(this)),[4,t.connect()];case 1:return g.sent(),[2]}}))}))})))},C.prototype.getPrimaryTransport=function(){return this.transports[0]},C.prototype.request=function(g,t,C){return void 0===t&&(t=!1),e(this,void 0,void 0,(function(){var e,i,l,n=this;return I(this,(function(I){return e=this.nextID().toString(),i=t?null:e,l={request:this.makeRequest(g.method,g.params||[],i),internalID:e},this.batchStarted?[2,new Promise((function(g,e){n.batch.push({resolve:g,reject:e,request:l})}))]:[2,this.getPrimaryTransport().sendData(l,C)]}))}))},C.prototype.close=function(){this.requestChannel.removeAllListeners(),this.transports.forEach((function(g){g.unsubscribe(),g.close()}))},C.prototype.startBatch=function(){this.batchStarted=!0},C.prototype.stopBatch=function(){if(!1===this.batchStarted)throw new Error("cannot end that which has never started");0!==this.batch.length?(this.getPrimaryTransport().sendData(this.batch),this.batch=[],this.batchStarted=!1):this.batchStarted=!1},C.prototype.makeRequest=function(g,e,I){return I?{jsonrpc:"2.0",id:I,method:g,params:e}:{jsonrpc:"2.0",method:g,params:e}},C.prototype.handleError=function(g){this.requestChannel.emit("error",g)},C.prototype.handleNotification=function(g){this.requestChannel.emit("notification",g)},C}();g.default=C}(NT);var pT={},ST={},bT={},uT={};!function(g){var e=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}();Object.defineProperty(g,"__esModule",{value:!0}),g.convertJSONToRPCError=g.JSONRPCError=g.ERR_UNKNOWN=g.ERR_MISSIING_ID=g.ERR_TIMEOUT=void 0,g.ERR_TIMEOUT=7777,g.ERR_MISSIING_ID=7878,g.ERR_UNKNOWN=7979;var I=function(g){function I(e,I,t){var C=this.constructor,i=g.call(this,e)||this;return i.message=e,i.code=I,i.data=t,Object.setPrototypeOf(i,C.prototype),i}return e(I,g),I}(Error);g.JSONRPCError=I,g.convertJSONToRPCError=function(e){if(e.error){var t=e.error,C=t.message,i=t.code,l=t.data;return new I(C,i,l)}return new I("Unknown error",g.ERR_UNKNOWN,e)}}(uT),Object.defineProperty(bT,"__esModule",{value:!0}),bT.TransportRequestManager=void 0;var TT=NI,GT=uT,kT=function(){function g(){this.pendingRequest={},this.pendingBatchRequest={},this.transportEventChannel=new TT.EventEmitter}return g.prototype.addRequest=function(g,e){return this.transportEventChannel.emit("pending",g),g instanceof Array?(this.addBatchReq(g,e),Promise.resolve()):this.addReq(g.internalID,e)},g.prototype.settlePendingRequest=function(g,e){var I=this;g.forEach((function(g){var t=I.pendingRequest[g.internalID];if(delete I.pendingBatchRequest[g.internalID],void 0!==t){if(e)return void t.reject(e);t.resolve(),(null===g.request.id||void 0===g.request.id)&&delete I.pendingRequest[g.internalID]}}))},g.prototype.isPendingRequest=function(g){return this.pendingRequest.hasOwnProperty(g)},g.prototype.resolveResponse=function(g,e){void 0===e&&(e=!0);var I=g;try{return I=JSON.parse(g),!1===this.checkJSONRPC(I)?void 0:I instanceof Array?this.resolveBatch(I,e):this.resolveRes(I,e)}catch{var t=new GT.JSONRPCError("Bad response format",GT.ERR_UNKNOWN,g);return e&&this.transportEventChannel.emit("error",t),t}},g.prototype.addBatchReq=function(g,e){var I=this;return g.forEach((function(g){var e=g.resolve,t=g.reject,C=g.request.internalID;I.pendingBatchRequest[C]=!0,I.pendingRequest[C]={resolve:e,reject:t}})),Promise.resolve()},g.prototype.addReq=function(g,e){var I=this;return new Promise((function(t,C){null!==e&&e&&I.setRequestTimeout(g,e,C),I.pendingRequest[g]={resolve:t,reject:C}}))},g.prototype.checkJSONRPC=function(g){var e=[g];return g instanceof Array&&(e=g),e.every((function(g){return void 0!==g.result||void 0!==g.error||void 0!==g.method}))},g.prototype.processResult=function(g,e){if(g.error){var I=GT.convertJSONToRPCError(g);e.reject(I)}else e.resolve(g.result)},g.prototype.resolveBatch=function(g,e){var I=this,t=g.map((function(g){return I.resolveRes(g,e)})).filter((function(g){return g}));if(t.length>0)return t[0]},g.prototype.resolveRes=function(g,e){var I,t=g.id,C=g.error,i=this.pendingRequest[t];return i?(delete this.pendingRequest[t],this.processResult(g,i),void this.transportEventChannel.emit("response",g)):void 0!==t||void 0!==C?(C&&(I=GT.convertJSONToRPCError(g)),e&&C&&I&&this.transportEventChannel.emit("error",I),I):void this.transportEventChannel.emit("notification",g)},g.prototype.setRequestTimeout=function(g,e,I){var t=this;setTimeout((function(){delete t.pendingRequest[g],I(new GT.JSONRPCError("Request timeout request took longer than "+e+" ms to resolve",GT.ERR_TIMEOUT))}),e)},g}();bT.TransportRequestManager=kT,Object.defineProperty(ST,"__esModule",{value:!0}),ST.Transport=void 0;var QT=bT,MT=function(){function g(){this.transportRequestManager=new QT.TransportRequestManager,this.transportRequestManager.transportEventChannel.on("error",(function(){}))}return g.prototype.subscribe=function(g,e){this.transportRequestManager.transportEventChannel.addListener(g,e)},g.prototype.unsubscribe=function(g,e){if(!g)return this.transportRequestManager.transportEventChannel.removeAllListeners();g&&e&&this.transportRequestManager.transportEventChannel.removeListener(g,e)},g.prototype.parseData=function(g){return g instanceof Array?g.map((function(g){return g.request.request})):g.request},g}();ST.Transport=MT;var YT={};!function(g){Object.defineProperty(g,"__esModule",{value:!0}),g.getNotifications=g.getBatchRequests=g.isNotification=void 0,g.isNotification=function(g){return void 0===g.request.id||null===g.request.id},g.getBatchRequests=function(g){return g instanceof Array?g.filter((function(g){return null!=g.request.request.id})).map((function(g){return g.request})):[]},g.getNotifications=function(e){return e instanceof Array?e.filter((function(e){return g.isNotification(e.request)})).map((function(g){return g.request})):g.isNotification(e)?[e]:[]}}(YT);var ET=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}();Object.defineProperty(pT,"__esModule",{value:!0});var yT=ST,JT=YT,HT=uT,wT=function(g){function e(e,I,t){var C=g.call(this)||this;return C.connection=e,C.reqUri=I,C.resUri=t,C}return ET(e,g),e.prototype.connect=function(){var g=this;return this.connection.on(this.resUri,(function(e){g.transportRequestManager.resolveResponse(e)})),Promise.resolve()},e.prototype.sendData=function(g,e){void 0===e&&(e=null);var I=this.transportRequestManager.addRequest(g,e),t=JT.getNotifications(g),C=this.parseData(g);try{return this.connection.emit(this.reqUri,C),this.transportRequestManager.settlePendingRequest(t),I}catch(g){var i=new HT.JSONRPCError(g.message,HT.ERR_UNKNOWN,g);return this.transportRequestManager.settlePendingRequest(t,i),Promise.reject(i)}},e.prototype.close=function(){this.connection.removeAllListeners()},e}(yT.Transport);pT.default=wT;var XT={},KT=typeof globalThis<"u"&&globalThis||typeof self<"u"&&self||typeof jg<"u"&&jg||{},zT={searchParams:"URLSearchParams"in KT,iterable:"Symbol"in KT&&"iterator"in Symbol,blob:"FileReader"in KT&&"Blob"in KT&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in KT,arrayBuffer:"ArrayBuffer"in KT};function DT(g){return g&&DataView.prototype.isPrototypeOf(g)}if(zT.arrayBuffer)var vT=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],xT=ArrayBuffer.isView||function(g){return g&&vT.indexOf(Object.prototype.toString.call(g))>-1};function OT(g){if("string"!=typeof g&&(g=String(g)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(g)||""===g)throw new TypeError('Invalid character in header field name: "'+g+'"');return g.toLowerCase()}function fT(g){return"string"!=typeof g&&(g=String(g)),g}function jT(g){var e={next:function(){var e=g.shift();return{done:void 0===e,value:e}}};return zT.iterable&&(e[Symbol.iterator]=function(){return e}),e}function LT(g){this.map={},g instanceof LT?g.forEach((function(g,e){this.append(e,g)}),this):Array.isArray(g)?g.forEach((function(g){if(2!=g.length)throw new TypeError("Headers constructor: expected name/value pair to be length 2, found"+g.length);this.append(g[0],g[1])}),this):g&&Object.getOwnPropertyNames(g).forEach((function(e){this.append(e,g[e])}),this)}function PT(g){if(!g._noBody){if(g.bodyUsed)return Promise.reject(new TypeError("Already read"));g.bodyUsed=!0}}function _T(g){return new Promise((function(e,I){g.onload=function(){e(g.result)},g.onerror=function(){I(g.error)}}))}function qT(g){var e=new FileReader,I=_T(e);return e.readAsArrayBuffer(g),I}function $T(g){var e=new FileReader,I=_T(e),t=/charset=([A-Za-z0-9_-]+)/.exec(g.type),C=t?t[1]:"utf-8";return e.readAsText(g,C),I}function gG(g){for(var e=new Uint8Array(g),I=new Array(e.length),t=0;t<e.length;t++)I[t]=String.fromCharCode(e[t]);return I.join("")}function eG(g){if(g.slice)return g.slice(0);var e=new Uint8Array(g.byteLength);return e.set(new Uint8Array(g)),e.buffer}function IG(){return this.bodyUsed=!1,this._initBody=function(g){this.bodyUsed=this.bodyUsed,this._bodyInit=g,g?"string"==typeof g?this._bodyText=g:zT.blob&&Blob.prototype.isPrototypeOf(g)?this._bodyBlob=g:zT.formData&&FormData.prototype.isPrototypeOf(g)?this._bodyFormData=g:zT.searchParams&&URLSearchParams.prototype.isPrototypeOf(g)?this._bodyText=g.toString():zT.arrayBuffer&&zT.blob&&DT(g)?(this._bodyArrayBuffer=eG(g.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):zT.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(g)||xT(g))?this._bodyArrayBuffer=eG(g):this._bodyText=g=Object.prototype.toString.call(g):(this._noBody=!0,this._bodyText=""),this.headers.get("content-type")||("string"==typeof g?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):zT.searchParams&&URLSearchParams.prototype.isPrototypeOf(g)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},zT.blob&&(this.blob=function(){var g=PT(this);if(g)return g;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))}),this.arrayBuffer=function(){if(this._bodyArrayBuffer)return PT(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer));if(zT.blob)return this.blob().then(qT);throw new Error("could not read as ArrayBuffer")},this.text=function(){var g=PT(this);if(g)return g;if(this._bodyBlob)return $T(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(gG(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},zT.formData&&(this.formData=function(){return this.text().then(lG)}),this.json=function(){return this.text().then(JSON.parse)},this}LT.prototype.append=function(g,e){g=OT(g),e=fT(e);var I=this.map[g];this.map[g]=I?I+", "+e:e},LT.prototype.delete=function(g){delete this.map[OT(g)]},LT.prototype.get=function(g){return g=OT(g),this.has(g)?this.map[g]:null},LT.prototype.has=function(g){return this.map.hasOwnProperty(OT(g))},LT.prototype.set=function(g,e){this.map[OT(g)]=fT(e)},LT.prototype.forEach=function(g,e){for(var I in this.map)this.map.hasOwnProperty(I)&&g.call(e,this.map[I],I,this)},LT.prototype.keys=function(){var g=[];return this.forEach((function(e,I){g.push(I)})),jT(g)},LT.prototype.values=function(){var g=[];return this.forEach((function(e){g.push(e)})),jT(g)},LT.prototype.entries=function(){var g=[];return this.forEach((function(e,I){g.push([I,e])})),jT(g)},zT.iterable&&(LT.prototype[Symbol.iterator]=LT.prototype.entries);var tG=["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"];function CG(g){var e=g.toUpperCase();return tG.indexOf(e)>-1?e:g}function iG(g,e){if(!(this instanceof iG))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var I=(e=e||{}).body;if(g instanceof iG){if(g.bodyUsed)throw new TypeError("Already read");this.url=g.url,this.credentials=g.credentials,e.headers||(this.headers=new LT(g.headers)),this.method=g.method,this.mode=g.mode,this.signal=g.signal,!I&&null!=g._bodyInit&&(I=g._bodyInit,g.bodyUsed=!0)}else this.url=String(g);if(this.credentials=e.credentials||this.credentials||"same-origin",(e.headers||!this.headers)&&(this.headers=new LT(e.headers)),this.method=CG(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal||function(){if("AbortController"in KT)return(new AbortController).signal}(),this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&I)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(I),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==e.cache&&"no-cache"!==e.cache)){var t=/([?&])_=[^&]*/;t.test(this.url)?this.url=this.url.replace(t,"$1_="+(new Date).getTime()):this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}function lG(g){var e=new FormData;return g.trim().split("&").forEach((function(g){if(g){var I=g.split("="),t=I.shift().replace(/\+/g," "),C=I.join("=").replace(/\+/g," ");e.append(decodeURIComponent(t),decodeURIComponent(C))}})),e}function nG(g){var e=new LT;return g.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(g){return 0===g.indexOf("\n")?g.substr(1,g.length):g})).forEach((function(g){var I=g.split(":"),t=I.shift().trim();if(t){var C=I.join(":").trim();try{e.append(t,C)}catch(g){}}})),e}function AG(g,e){if(!(this instanceof AG))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');if(e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.status<200||this.status>599)throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");this.ok=this.status>=200&&this.status<300,this.statusText=void 0===e.statusText?"":""+e.statusText,this.headers=new LT(e.headers),this.url=e.url||"",this._initBody(g)}iG.prototype.clone=function(){return new iG(this,{body:this._bodyInit})},IG.call(iG.prototype),IG.call(AG.prototype),AG.prototype.clone=function(){return new AG(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new LT(this.headers),url:this.url})},AG.error=function(){var g=new AG(null,{status:200,statusText:""});return g.ok=!1,g.status=0,g.type="error",g};var dG=[301,302,303,307,308];AG.redirect=function(g,e){if(-1===dG.indexOf(e))throw new RangeError("Invalid status code");return new AG(null,{status:e,headers:{location:g}})};var oG=KT.DOMException;try{new oG}catch{(oG=function(g,e){this.message=g,this.name=e;var I=Error(g);this.stack=I.stack}).prototype=Object.create(Error.prototype),oG.prototype.constructor=oG}function sG(g,e){return new Promise((function(I,t){var C=new iG(g,e);if(C.signal&&C.signal.aborted)return t(new oG("Aborted","AbortError"));var i=new XMLHttpRequest;function l(){i.abort()}if(i.onload=function(){var g={statusText:i.statusText,headers:nG(i.getAllResponseHeaders()||"")};0===C.url.indexOf("file://")&&(i.status<200||i.status>599)?g.status=200:g.status=i.status,g.url="responseURL"in i?i.responseURL:g.headers.get("X-Request-URL");var e="response"in i?i.response:i.responseText;setTimeout((function(){I(new AG(e,g))}),0)},i.onerror=function(){setTimeout((function(){t(new TypeError("Network request failed"))}),0)},i.ontimeout=function(){setTimeout((function(){t(new TypeError("Network request timed out"))}),0)},i.onabort=function(){setTimeout((function(){t(new oG("Aborted","AbortError"))}),0)},i.open(C.method,function(g){try{return""===g&&KT.location.href?KT.location.href:g}catch{return g}}(C.url),!0),"include"===C.credentials?i.withCredentials=!0:"omit"===C.credentials&&(i.withCredentials=!1),"responseType"in i&&(zT.blob?i.responseType="blob":zT.arrayBuffer&&(i.responseType="arraybuffer")),e&&"object"==typeof e.headers&&!(e.headers instanceof LT||KT.Headers&&e.headers instanceof KT.Headers)){var n=[];Object.getOwnPropertyNames(e.headers).forEach((function(g){n.push(OT(g)),i.setRequestHeader(g,fT(e.headers[g]))})),C.headers.forEach((function(g,e){-1===n.indexOf(e)&&i.setRequestHeader(e,g)}))}else C.headers.forEach((function(g,e){i.setRequestHeader(e,g)}));C.signal&&(C.signal.addEventListener("abort",l),i.onreadystatechange=function(){4===i.readyState&&C.signal.removeEventListener("abort",l)}),i.send(typeof C._bodyInit>"u"?null:C._bodyInit)}))}sG.polyfill=!0,KT.fetch||(KT.fetch=sG,KT.Headers=LT,KT.Request=iG,KT.Response=AG);var aG=self.fetch.bind(self),VG=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}(),cG=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},rG=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}},hG=Lg&&Lg.__importDefault||function(g){return g&&g.__esModule?g:{default:g}};Object.defineProperty(XT,"__esModule",{value:!0}),XT.HTTPTransport=void 0;var UG=hG(aG),ZG=ST,RG=YT,FG=uT,mG=function(g){function e(I,t){var C=g.call(this)||this;return C.onlyNotifications=function(g){return g instanceof Array?g.every((function(g){return null===g.request.request.id||void 0===g.request.request.id})):null===g.request.id||void 0===g.request.id},C.uri=I,C.credentials=t&&t.credentials,C.headers=e.setupHeaders(t&&t.headers),C.injectedFetcher=null==t?void 0:t.fetcher,C}return VG(e,g),e.prototype.connect=function(){return Promise.resolve()},e.prototype.sendData=function(g,e){return void 0===e&&(e=null),cG(this,void 0,void 0,(function(){var I,t,C,i,l,n,A,d;return rG(this,(function(o){switch(o.label){case 0:I=this.transportRequestManager.addRequest(g,e),t=RG.getNotifications(g),C=RG.getBatchRequests(g),i=this.injectedFetcher||UG.default,o.label=1;case 1:return o.trys.push([1,4,,5]),[4,i(this.uri,{method:"POST",headers:this.headers,body:JSON.stringify(this.parseData(g)),credentials:this.credentials})];case 2:return l=o.sent(),this.transportRequestManager.settlePendingRequest(t),this.onlyNotifications(g)?[2,Promise.resolve()]:[4,l.text()];case 3:return n=o.sent(),(d=this.transportRequestManager.resolveResponse(n))?(this.transportRequestManager.settlePendingRequest(C,d),[2,Promise.reject(d)]):[3,5];case 4:return A=o.sent(),d=new FG.JSONRPCError(A.message,FG.ERR_UNKNOWN,A),this.transportRequestManager.settlePendingRequest(t,d),this.transportRequestManager.settlePendingRequest(RG.getBatchRequests(g),d),[2,Promise.reject(d)];case 5:return[2,I]}}))}))},e.prototype.close=function(){},e.setupHeaders=function(g){var e=new Headers(g);return e.set("Content-Type","application/json"),e},e}(ZG.Transport);XT.HTTPTransport=mG,XT.default=mG;var BG={},WG=null;typeof WebSocket<"u"?WG=WebSocket:typeof MozWebSocket<"u"?WG=MozWebSocket:typeof jg<"u"?WG=jg.WebSocket||jg.MozWebSocket:typeof window<"u"?WG=window.WebSocket||window.MozWebSocket:typeof self<"u"&&(WG=self.WebSocket||self.MozWebSocket);const NG=WG,pG=Object.freeze(Object.defineProperty({__proto__:null,default:NG},Symbol.toStringTag,{value:"Module"})),SG=Pg(pG);var bG=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}(),uG=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},TG=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}},GG=Lg&&Lg.__importDefault||function(g){return g&&g.__esModule?g:{default:g}};Object.defineProperty(BG,"__esModule",{value:!0});var kG=GG(SG),QG=ST,MG=YT,YG=uT,EG=function(g){function e(e){var I=g.call(this)||this;return I.uri=e,I.connection=new kG.default(e),I}return bG(e,g),e.prototype.connect=function(){var g=this;return new Promise((function(e,I){var t=function(){g.connection.removeEventListener("open",t),e()};g.connection.addEventListener("open",t),g.connection.addEventListener("message",(function(e){var I=e.data;g.transportRequestManager.resolveResponse(I)}))}))},e.prototype.sendData=function(g,e){return void 0===e&&(e=5e3),uG(this,void 0,void 0,(function(){var I,t,C;return TG(this,(function(i){I=this.transportRequestManager.addRequest(g,e),t=MG.getNotifications(g);try{this.connection.send(JSON.stringify(this.parseData(g))),this.transportRequestManager.settlePendingRequest(t)}catch(e){C=new YG.JSONRPCError(e.message,YG.ERR_UNKNOWN,e),this.transportRequestManager.settlePendingRequest(t,C),this.transportRequestManager.settlePendingRequest(MG.getBatchRequests(g),C),I=Promise.reject(C)}return[2,I]}))}))},e.prototype.close=function(){this.connection.close()},e}(QG.Transport);BG.default=EG;var yG={},JG=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}(),HG=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},wG=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}};Object.defineProperty(yG,"__esModule",{value:!0});var XG=ST,KG=YT,zG=function(g){var e=window.screen.height;return window.open(g,"inspector:popup","left=0,top=0,width=400,height="+e+",resizable,scrollbars=yes,status=1")},DG=function(g){function e(e){var I=g.call(this)||this;return I.messageHandler=function(g){I.transportRequestManager.resolveResponse(JSON.stringify(g.data))},I.uri=e,I.postMessageID="post-message-transport-"+Math.random(),I}return JG(e,g),e.prototype.createWindow=function(g){return new Promise((function(e,I){var t;t=zG(g),setTimeout((function(){e(t)}),3e3)}))},e.prototype.connect=function(){var g=this,e=/^(http|https):\/\/.*$/;return new Promise((function(I,t){return HG(g,void 0,void 0,(function(){var g;return wG(this,(function(C){switch(C.label){case 0:return e.test(this.uri)||t(new Error("Bad URI")),g=this,[4,this.createWindow(this.uri)];case 1:return g.frame=C.sent(),window.addEventListener("message",this.messageHandler),I(),[2]}}))}))}))},e.prototype.sendData=function(g,e){return HG(this,void 0,void 0,(function(){var e,I;return wG(this,(function(t){return e=this.transportRequestManager.addRequest(g,null),I=KG.getNotifications(g),this.frame&&(this.frame.postMessage(g.request,this.uri),this.transportRequestManager.settlePendingRequest(I)),[2,e]}))}))},e.prototype.close=function(){this.frame&&(window.removeEventListener("message",this.messageHandler),this.frame.close())},e}(XG.Transport);yG.default=DG;var vG={},xG=Lg&&Lg.__extends||function(){var g=function(e,I){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(g,e){g.__proto__=e}||function(g,e){for(var I in e)e.hasOwnProperty(I)&&(g[I]=e[I])})(e,I)};return function(e,I){function t(){this.constructor=e}g(e,I),e.prototype=null===I?Object.create(I):(t.prototype=I.prototype,new t)}}(),OG=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},fG=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}};Object.defineProperty(vG,"__esModule",{value:!0});var jG=ST,LG=YT,PG=function(g){function e(e){var I=g.call(this)||this;return I.messageHandler=function(g){I.transportRequestManager.resolveResponse(JSON.stringify(g.data))},I.uri=e,I.postMessageID="post-message-transport-"+Math.random(),I}return xG(e,g),e.prototype.createWindow=function(g){var e=this;return new Promise((function(I,t){var C,i=document.createElement("iframe");i.setAttribute("id",e.postMessageID),i.setAttribute("width","0px"),i.setAttribute("height","0px"),i.setAttribute("style","visiblity:hidden;border:none;outline:none;"),i.addEventListener("load",(function(){I(C)})),i.setAttribute("src",g),window.document.body.appendChild(i),C=i.contentWindow}))},e.prototype.connect=function(){var g=this,e=/^(http|https):\/\/.*$/;return new Promise((function(I,t){return OG(g,void 0,void 0,(function(){var g;return fG(this,(function(C){switch(C.label){case 0:return e.test(this.uri)||t(new Error("Bad URI")),g=this,[4,this.createWindow(this.uri)];case 1:return g.frame=C.sent(),window.addEventListener("message",this.messageHandler),I(),[2]}}))}))}))},e.prototype.sendData=function(g,e){return OG(this,void 0,void 0,(function(){var e,I;return fG(this,(function(t){return e=this.transportRequestManager.addRequest(g,null),I=LG.getNotifications(g),this.frame&&(this.frame.postMessage(g.request,"*"),this.transportRequestManager.settlePendingRequest(I)),[2,e]}))}))},e.prototype.close=function(){var g=document.getElementById(this.postMessageID);null==g||g.remove(),window.removeEventListener("message",this.messageHandler)},e}(jG.Transport);vG.default=PG;var _G={},qG=Lg&&Lg.__awaiter||function(g,e,I,t){return new(I||(I=Promise))((function(C,i){function l(g){try{A(t.next(g))}catch(g){i(g)}}function n(g){try{A(t.throw(g))}catch(g){i(g)}}function A(g){g.done?C(g.value):function(g){return g instanceof I?g:new I((function(e){e(g)}))}(g.value).then(l,n)}A((t=t.apply(g,e||[])).next())}))},$G=Lg&&Lg.__generator||function(g,e){var I,t,C,i,l={label:0,sent:function(){if(1&C[0])throw C[1];return C[1]},trys:[],ops:[]};return i={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function n(i){return function(n){return function(i){if(I)throw new TypeError("Generator is already executing.");for(;l;)try{if(I=1,t&&(C=2&i[0]?t.return:i[0]?t.throw||((C=t.return)&&C.call(t),0):t.next)&&!(C=C.call(t,i[1])).done)return C;switch(t=0,C&&(i=[2&i[0],C.value]),i[0]){case 0:case 1:C=i;break;case 4:return l.label++,{value:i[1],done:!1};case 5:l.label++,t=i[1],i=[0];continue;case 7:i=l.ops.pop(),l.trys.pop();continue;default:if(!(C=(C=l.trys).length>0&&C[C.length-1])&&(6===i[0]||2===i[0])){l=0;continue}if(3===i[0]&&(!C||i[1]>C[0]&&i[1]<C[3])){l.label=i[1];break}if(6===i[0]&&l.label<C[1]){l.label=C[1],C=i;break}if(C&&l.label<C[2]){l.label=C[2],l.ops.push(i);break}C[2]&&l.ops.pop(),l.trys.pop();continue}i=e.call(g,l)}catch(g){i=[6,g],t=0}finally{I=C=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,n])}}};Object.defineProperty(_G,"__esModule",{value:!0});var gk=function(){function g(g){this.requestManager=g}return g.prototype.startBatch=function(){return this.requestManager.startBatch()},g.prototype.stopBatch=function(){return this.requestManager.stopBatch()},g.prototype.request=function(g,e){return qG(this,void 0,void 0,(function(){return $G(this,(function(I){switch(I.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:I.sent(),I.label=2;case 2:return[2,this.requestManager.request(g,!1,e)]}}))}))},g.prototype.notify=function(g){return qG(this,void 0,void 0,(function(){return $G(this,(function(e){switch(e.label){case 0:return this.requestManager.connectPromise?[4,this.requestManager.connectPromise]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2,this.requestManager.request(g,!0,null)]}}))}))},g.prototype.onNotification=function(g){this.requestManager.requestChannel.addListener("notification",g)},g.prototype.onError=function(g){this.requestManager.requestChannel.addListener("error",g)},g.prototype.close=function(){this.requestManager.close()},g}();_G.default=gk,function(g){var e=Lg&&Lg.__importDefault||function(g){return g&&g.__esModule?g:{default:g}};Object.defineProperty(g,"__esModule",{value:!0}),g.PostMessageIframeTransport=g.PostMessageWindowTransport=g.JSONRPCError=g.WebSocketTransport=g.EventEmitterTransport=g.HTTPTransport=g.RequestManager=g.Client=void 0;var I=e(NT);g.RequestManager=I.default;var t=e(pT);g.EventEmitterTransport=t.default;var C=e(XT);g.HTTPTransport=C.default;var i=e(BG);g.WebSocketTransport=i.default;var l=e(yG);g.PostMessageWindowTransport=l.default;var n=e(vG);g.PostMessageIframeTransport=n.default;var A=uT;Object.defineProperty(g,"JSONRPCError",{enumerable:!0,get:function(){return A.JSONRPCError}});var d=e(_G);g.Client=d.default,g.default=d.default}(WT);const ek=({rootUri:g,workspaceFolders:e})=>({clientInfo:{name:"gnostudio.codemirror-lsp",version:"1.0.0"},capabilities:{textDocument:{hover:{dynamicRegistration:!0,contentFormat:["markdown","plaintext"]},moniker:{},synchronization:{dynamicRegistration:!0,willSave:!1,didSave:!1,willSaveWaitUntil:!1},completion:{dynamicRegistration:!0,completionItem:{snippetSupport:!1,commitCharactersSupport:!0,documentationFormat:["markdown","plaintext"],deprecatedSupport:!1,preselectSupport:!1},contextSupport:!1},signatureHelp:{dynamicRegistration:!0,signatureInformation:{documentationFormat:["markdown","plaintext"]}},declaration:{dynamicRegistration:!0,linkSupport:!0},definition:{dynamicRegistration:!0,linkSupport:!0},typeDefinition:{dynamicRegistration:!0,linkSupport:!0},implementation:{dynamicRegistration:!0,linkSupport:!0}},workspace:{didChangeConfiguration:{dynamicRegistration:!0}}},initializationOptions:null,processId:null,rootUri:g,workspaceFolders:e}),Ik=1e4,tk=3*Ik,Ck=(g,e)=>{};class ik{constructor({rootUri:g,workspaceFolders:e,transport:t,autoClose:C,windowNotificationHandler:i}){I(this,"rootUri"),I(this,"workspaceFolders"),I(this,"autoClose"),I(this,"windowNotificationHandler"),I(this,"requestManager"),I(this,"client"),I(this,"ready",!1),I(this,"capabilities"),I(this,"plugins"),I(this,"initializePromise"),this.rootUri=g,this.workspaceFolders=e,this.autoClose=C,this.plugins=[],this.windowNotificationHandler=i,this.requestManager=new WT.RequestManager([t]),this.client=new WT.Client(this.requestManager),this.client.onNotification((g=>{this.handleNotification(g)})),this.initializePromise=this.initialize()}async initialize(){var g,e;try{const{capabilities:g}=await this.request("initialize",ek({rootUri:this.rootUri,workspaceFolders:this.workspaceFolders}),tk);this.capabilities=g}catch(I){throw null==(e=null==(g=this.windowNotificationHandler)?void 0:g.onInitError)||e.call(g,I),I}await this.notify("initialized",{}),this.ready=!0}close(){this.client.close()}textDocumentDidOpen(g){return this.notify("textDocument/didOpen",g)}textDocumentDidChange(g){return this.notify("textDocument/didChange",g)}async textDocumentFormatting(g){return await this.request("textDocument/formatting",g,Ik)}async textDocumentLinting(g){return await this.request("textDocument/didChange",g,Ik)}async textDocumentHover(g){try{return await this.request("textDocument/hover",g,Ik)}catch(g){return Ck(),null}}async textDocumentCompletion(g){try{return await this.request("textDocument/completion",g,Ik)}catch(g){return Ck(),null}}async completionItemResolve(g){try{return await this.request("completionItem/resolve",g,Ik)}catch(e){return Ck(),g}}attachPlugin(g){this.plugins.push(g)}detachPlugin(g){const e=this.plugins.indexOf(g);-1!==e&&(this.plugins.splice(e,1),!this.plugins.length&&this.autoClose&&this.close())}request(g,e,I){return this.client.request({method:g,params:e},I)}notify(g,e){return this.client.notify({method:g,params:e})}handleNotification(g){var e,I,t,C;switch(g.method){case"window/logMessage":case"window/showMessage":return void(null==(I=null==(e=this.windowNotificationHandler)?void 0:e.showMessage)||I.call(e,g.params));case"$/progress":return void(null==(C=null==(t=this.windowNotificationHandler)?void 0:t.onProgress)||C.call(t,g.params))}for(const e of this.plugins)e.handleNotification(g)}}var lk={0:"Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",1:function(g,e){return"Cannot apply '"+g+"' to '"+e.toString()+"': Field not found."},5:"'keys()' can only be used on observable objects, arrays, sets and maps",6:"'values()' can only be used on observable objects, arrays, sets and maps",7:"'entries()' can only be used on observable objects, arrays and maps",8:"'set()' can only be used on observable objects, arrays and maps",9:"'remove()' can only be used on observable objects, arrays and maps",10:"'has()' can only be used on observable objects, arrays and maps",11:"'get()' can only be used on observable objects, arrays and maps",12:"Invalid annotation",13:"Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",14:"Intercept handlers should return nothing or a change object",15:"Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",16:"Modification exception: the internal structure of an observable array was changed.",17:function(g,e){return"[mobx.array] Index out of bounds, "+g+" is larger than "+e},18:"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",19:function(g){return"Cannot initialize from classes that inherit from Map: "+g.constructor.name},20:function(g){return"Cannot initialize map from "+g},21:function(g){return"Cannot convert to map from '"+g+"'"},22:"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",23:"It is not possible to get index atoms from arrays",24:function(g){return"Cannot obtain administration from "+g},25:function(g,e){return"the entry '"+g+"' does not exist in the observable map '"+e+"'"},26:"please specify a property",27:function(g,e){return"no observable property '"+g.toString()+"' found on the observable object '"+e+"'"},28:function(g){return"Cannot obtain atom from "+g},29:"Expecting some object",30:"invalid action stack. did you forget to finish an action?",31:"missing option for computed: get",32:function(g,e){return"Cycle detected in computation "+g+": "+e},33:function(g){return"The setter of computed value '"+g+"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?"},34:function(g){return"[ComputedValue '"+g+"'] It is not possible to assign a new value to a computed value."},35:"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",36:"isolateGlobalState should be called before MobX is running any reactions",37:function(g){return"[mobx] `observableArray."+g+"()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()."+g+"()` instead"},38:"'ownKeys()' can only be used on observable objects",39:"'defineProperty()' can only be used on observable objects"},nk="production"!==fg.env.NODE_ENV?lk:{};function Ak(g){for(var e=arguments.length,I=new Array(e>1?e-1:0),t=1;t<e;t++)I[t-1]=arguments[t];if("production"!==fg.env.NODE_ENV){var C="string"==typeof g?g:nk[g];throw"function"==typeof C&&(C=C.apply(null,I)),new Error("[MobX] "+C)}throw new Error("number"==typeof g?"[MobX] minified error nr: "+g+(I.length?" "+I.map(String).join(","):"")+". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts":"[MobX] "+g)}var dk={};function ok(){return typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof jg<"u"?jg:typeof self<"u"?self:dk}var sk=Object.assign,ak=Object.getOwnPropertyDescriptor,Vk=Object.defineProperty,ck=Object.prototype,rk=[];Object.freeze(rk);var hk={};Object.freeze(hk);var Uk=typeof Proxy<"u",Zk=Object.toString();function Rk(){Uk||Ak("production"!==fg.env.NODE_ENV?"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`":"Proxy not available")}function Fk(g){"production"!==fg.env.NODE_ENV&&eY.verifyProxies&&Ak("MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to "+g)}function mk(){return++eY.mobxGuid}function Bk(g){var e=!1;return function(){if(!e)return e=!0,g.apply(this,arguments)}}var Wk=function(){};function Nk(g){return"function"==typeof g}function pk(g){switch(typeof g){case"string":case"symbol":case"number":return!0}return!1}function Sk(g){return null!==g&&"object"==typeof g}function bk(g){if(!Sk(g))return!1;var e=Object.getPrototypeOf(g);if(null==e)return!0;var I=Object.hasOwnProperty.call(e,"constructor")&&e.constructor;return"function"==typeof I&&I.toString()===Zk}function uk(g){var e=null==g?void 0:g.constructor;return!!e&&("GeneratorFunction"===e.name||"GeneratorFunction"===e.displayName)}function Tk(g,e,I){Vk(g,e,{enumerable:!1,writable:!0,configurable:!0,value:I})}function Gk(g,e,I){Vk(g,e,{enumerable:!1,writable:!1,configurable:!0,value:I})}function kk(g,e){var I="isMobX"+g;return e.prototype[I]=!0,function(g){return Sk(g)&&!0===g[I]}}function Qk(g){return g instanceof Map}function Mk(g){return g instanceof Set}var Yk=typeof Object.getOwnPropertySymbols<"u";function Ek(g){var e=Object.keys(g);if(!Yk)return e;var I=Object.getOwnPropertySymbols(g);return I.length?[].concat(e,I.filter((function(e){return ck.propertyIsEnumerable.call(g,e)}))):e}var yk=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Yk?function(g){return Object.getOwnPropertyNames(g).concat(Object.getOwnPropertySymbols(g))}:Object.getOwnPropertyNames;function Jk(g){return"string"==typeof g?g:"symbol"==typeof g?g.toString():new String(g).toString()}function Hk(g){return null===g?null:"object"==typeof g?""+g:g}function wk(g,e){return ck.hasOwnProperty.call(g,e)}var Xk=Object.getOwnPropertyDescriptors||function(g){var e={};return yk(g).forEach((function(I){e[I]=ak(g,I)})),e};function Kk(g,e){for(var I=0;I<e.length;I++){var t=e[I];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(g,_k(t.key),t)}}function zk(g,e,I){return e&&Kk(g.prototype,e),Object.defineProperty(g,"prototype",{writable:!1}),g}function Dk(){return Dk=Object.assign?Object.assign.bind():function(g){for(var e=1;e<arguments.length;e++){var I=arguments[e];for(var t in I)Object.prototype.hasOwnProperty.call(I,t)&&(g[t]=I[t])}return g},Dk.apply(this,arguments)}function vk(g,e){g.prototype=Object.create(e.prototype),g.prototype.constructor=g,xk(g,e)}function xk(g,e){return(xk=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(g,e){return g.__proto__=e,g})(g,e)}function Ok(g){if(void 0===g)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return g}function fk(g,e){if(g){if("string"==typeof g)return jk(g,e);var I=Object.prototype.toString.call(g).slice(8,-1);if("Object"===I&&g.constructor&&(I=g.constructor.name),"Map"===I||"Set"===I)return Array.from(g);if("Arguments"===I||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(I))return jk(g,e)}}function jk(g,e){(null==e||e>g.length)&&(e=g.length);for(var I=0,t=new Array(e);I<e;I++)t[I]=g[I];return t}function Lk(g,e){var I=typeof Symbol<"u"&&g[Symbol.iterator]||g["@@iterator"];if(I)return(I=I.call(g)).next.bind(I);if(Array.isArray(g)||(I=fk(g))||e){I&&(g=I);var t=0;return function(){return t>=g.length?{done:!0}:{done:!1,value:g[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Pk(g,e){if("object"!=typeof g||null===g)return g;var I=g[Symbol.toPrimitive];if(void 0!==I){var t=I.call(g,e);if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(g)}function _k(g){var e=Pk(g,"string");return"symbol"==typeof e?e:String(e)}var qk=Symbol("mobx-stored-annotations");function $k(g){return Object.assign((function(e,I){if(tQ(I))return g.decorate_20223_(e,I);gQ(e,I,g)}),g)}function gQ(g,e,I){wk(g,qk)||Tk(g,qk,Dk({},g[qk])),"production"!==fg.env.NODE_ENV&&RQ(I)&&!wk(g[qk],e)&&Ak("'"+g.constructor.name+".prototype."+e.toString()+"' is decorated with 'override', but no such decorated member was found on prototype."),eQ(g,I,e),RQ(I)||(g[qk][e]=I)}function eQ(g,e,I){if("production"!==fg.env.NODE_ENV&&!RQ(e)&&wk(g[qk],I)){var t=g.constructor.name+".prototype."+I.toString(),C=g[qk][I].annotationType_;Ak("Cannot apply '@"+e.annotationType_+"' to '"+t+"':\nThe field is already decorated with '@"+C+"'.\nRe-decorating fields is not allowed.\nUse '@override' decorator for methods overridden by subclass.")}}function IQ(g){return wk(g,qk)||Tk(g,qk,Dk({},g[qk])),g[qk]}function tQ(g){return"object"==typeof g&&"string"==typeof g.kind}function CQ(g,e){"production"!==fg.env.NODE_ENV&&!e.includes(g.kind)&&Ak("The decorator applied to '"+String(g.name)+"' cannot be used on a "+g.kind+" element")}var iQ=Symbol("mobx administration"),lQ=function(){function g(g){void 0===g&&(g="production"!==fg.env.NODE_ENV?"Atom@"+mk():"Atom"),this.name_=void 0,this.isPendingUnobservation_=!1,this.isBeingObserved_=!1,this.observers_=new Set,this.diffValue_=0,this.lastAccessedBy_=0,this.lowestObserverState_=YM.NOT_TRACKING_,this.onBOL=void 0,this.onBUOL=void 0,this.name_=g}var e=g.prototype;return e.onBO=function(){this.onBOL&&this.onBOL.forEach((function(g){return g()}))},e.onBUO=function(){this.onBUOL&&this.onBUOL.forEach((function(g){return g()}))},e.reportObserved=function(){return nY(this)},e.reportChanged=function(){iY(),AY(this),lY()},e.toString=function(){return this.name_},g}(),nQ=kk("Atom",lQ);function AQ(g,e,I){void 0===e&&(e=Wk),void 0===I&&(I=Wk);var t=new lQ(g);return e!==Wk&&xY(t,e),I!==Wk&&OY(t,I),t}function dQ(g,e){return g===e}function oQ(g,e){return By(g,e)}function sQ(g,e){return By(g,e,1)}function aQ(g,e){return Object.is?Object.is(g,e):g===e?0!==g||1/g==1/e:g!=g&&e!=e}var VQ={identity:dQ,structural:oQ,default:aQ,shallow:sQ};function cQ(g,e,I){return lE(g)?g:Array.isArray(g)?oM.array(g,{name:I}):bk(g)?oM.object(g,void 0,{name:I}):Qk(g)?oM.map(g,{name:I}):Mk(g)?oM.set(g,{name:I}):"function"!=typeof g||JY(g)||CE(g)?g:uk(g)?IE(g):yY(I,g)}function rQ(g,e,I){return null==g||Cy(g)||HE(g)||xE(g)||_E(g)?g:Array.isArray(g)?oM.array(g,{name:I,deep:!1}):bk(g)?oM.object(g,void 0,{name:I,deep:!1}):Qk(g)?oM.map(g,{name:I,deep:!1}):Mk(g)?oM.set(g,{name:I,deep:!1}):void("production"!==fg.env.NODE_ENV&&Ak("The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets"))}function hQ(g){return g}function UQ(g,e){return"production"!==fg.env.NODE_ENV&&lE(g)&&Ak("observable.struct should not be used with observable values"),By(g,e)?e:g}var ZQ="override";function RQ(g){return g.annotationType_===ZQ}function FQ(g,e){return{annotationType_:g,options_:e,make_:mQ,extend_:BQ,decorate_20223_:WQ}}function mQ(g,e,I,t){var C;if(null!=(C=this.options_)&&C.bound)return null===this.extend_(g,e,I,!1)?0:1;if(t===g.target_)return null===this.extend_(g,e,I,!1)?0:2;if(JY(I.value))return 1;var i=pQ(g,this,e,I,!1);return Vk(t,e,i),2}function BQ(g,e,I,t){var C=pQ(g,this,e,I);return g.defineProperty_(e,C,t)}function WQ(g,e){"production"!==fg.env.NODE_ENV&&CQ(e,["method","field"]);var I=e.kind,t=e.name,C=e.addInitializer,i=this;if("field"!=I){var l,n,A,d,o,s;if("method"==I)return JY(g)||(n=g,g=BM(null!=(A=null==(d=i.options_)?void 0:d.name)?A:t.toString(),n,null!=(o=null==(s=i.options_)?void 0:s.autoAction)&&o)),null!=(l=this.options_)&&l.bound&&C((function(){var g=this,e=g[t].bind(g);e.isMobxAction=!0,g[t]=e})),g;Ak("Cannot apply '"+i.annotationType_+"' to '"+String(t)+"' (kind: "+I+"):\n'"+i.annotationType_+"' can only be used on properties with a function value.")}else C((function(){gQ(this,t,i)}))}function NQ(g,e,I,t){var C=e.annotationType_,i=t.value;"production"!==fg.env.NODE_ENV&&!Nk(i)&&Ak("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on properties with a function value.")}function pQ(g,e,I,t,C){var i,l,n,A,d,o,s;void 0===C&&(C=eY.safeDescriptors),NQ(g,e,I,t);var a,V=t.value;return null!=(i=e.options_)&&i.bound&&(V=V.bind(null!=(a=g.proxy_)?a:g.target_)),{value:BM(null!=(l=null==(n=e.options_)?void 0:n.name)?l:I.toString(),V,null!=(A=null==(d=e.options_)?void 0:d.autoAction)&&A,null!=(o=e.options_)&&o.bound?null!=(s=g.proxy_)?s:g.target_:void 0),configurable:!C||g.isPlainObject_,enumerable:!1,writable:!C}}function SQ(g,e){return{annotationType_:g,options_:e,make_:bQ,extend_:uQ,decorate_20223_:TQ}}function bQ(g,e,I,t){var C;if(t===g.target_)return null===this.extend_(g,e,I,!1)?0:2;if(null!=(C=this.options_)&&C.bound&&(!wk(g.target_,e)||!CE(g.target_[e]))&&null===this.extend_(g,e,I,!1))return 0;if(CE(I.value))return 1;var i=kQ(g,this,e,I,!1,!1);return Vk(t,e,i),2}function uQ(g,e,I,t){var C,i=kQ(g,this,e,I,null==(C=this.options_)?void 0:C.bound);return g.defineProperty_(e,i,t)}function TQ(g,e){var I;"production"!==fg.env.NODE_ENV&&CQ(e,["method"]);var t=e.name,C=e.addInitializer;return CE(g)||(g=IE(g)),null!=(I=this.options_)&&I.bound&&C((function(){var g=this,e=g[t].bind(g);e.isMobXFlow=!0,g[t]=e})),g}function GQ(g,e,I,t){var C=e.annotationType_,i=t.value;"production"!==fg.env.NODE_ENV&&!Nk(i)&&Ak("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on properties with a generator function value.")}function kQ(g,e,I,t,C,i){void 0===i&&(i=eY.safeDescriptors),GQ(g,e,I,t);var l,n=t.value;return CE(n)||(n=IE(n)),C&&((n=n.bind(null!=(l=g.proxy_)?l:g.target_)).isMobXFlow=!0),{value:n,configurable:!i||g.isPlainObject_,enumerable:!1,writable:!i}}function QQ(g,e){return{annotationType_:g,options_:e,make_:MQ,extend_:YQ,decorate_20223_:EQ}}function MQ(g,e,I){return null===this.extend_(g,e,I,!1)?0:1}function YQ(g,e,I,t){return yQ(g,this,e,I),g.defineComputedProperty_(e,Dk({},this.options_,{get:I.get,set:I.set}),t)}function EQ(g,e){"production"!==fg.env.NODE_ENV&&CQ(e,["getter"]);var I=this,t=e.name;return(0,e.addInitializer)((function(){var e=ey(this)[iQ],C=Dk({},I.options_,{get:g,context:this});C.name||(C.name="production"!==fg.env.NODE_ENV?e.name_+"."+t.toString():"ObservableObject."+t.toString()),e.values_.set(t,new yM(C))})),function(){return this[iQ].getObservablePropValue_(t)}}function yQ(g,e,I,t){var C=e.annotationType_,i=t.get;"production"!==fg.env.NODE_ENV&&!i&&Ak("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on getter(+setter) properties.")}function JQ(g,e){return{annotationType_:g,options_:e,make_:HQ,extend_:wQ,decorate_20223_:XQ}}function HQ(g,e,I){return null===this.extend_(g,e,I,!1)?0:1}function wQ(g,e,I,t){var C,i;return KQ(g,this,e,I),g.defineObservableProperty_(e,I.value,null!=(C=null==(i=this.options_)?void 0:i.enhancer)?C:cQ,t)}function XQ(g,e){if("production"!==fg.env.NODE_ENV){if("field"===e.kind)throw Ak("Please use `@observable accessor "+String(e.name)+"` instead of `@observable "+String(e.name)+"`");CQ(e,["accessor"])}var I=this,t=e.kind,C=e.name,i=new WeakSet;function l(g,e){var t,l,n=ey(g)[iQ],A=new QM(e,null!=(t=null==(l=I.options_)?void 0:l.enhancer)?t:cQ,"production"!==fg.env.NODE_ENV?n.name_+"."+C.toString():"ObservableObject."+C.toString(),!1);n.values_.set(C,A),i.add(g)}if("accessor"==t)return{get:function(){return i.has(this)||l(this,g.get.call(this)),this[iQ].getObservablePropValue_(C)},set:function(g){return i.has(this)||l(this,g),this[iQ].setObservablePropValue_(C,g)},init:function(g){return i.has(this)||l(this,g),g}}}function KQ(g,e,I,t){var C=e.annotationType_;"production"!==fg.env.NODE_ENV&&!("value"in t)&&Ak("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' cannot be used on getter/setter properties")}var zQ="true",DQ=vQ();function vQ(g){return{annotationType_:zQ,options_:g,make_:xQ,extend_:OQ,decorate_20223_:fQ}}function xQ(g,e,I,t){var C,i,l,n;if(I.get)return rM.make_(g,e,I,t);if(I.set){var A=BM(e.toString(),I.set);return t===g.target_?null===g.defineProperty_(e,{configurable:!eY.safeDescriptors||g.isPlainObject_,set:A})?0:2:(Vk(t,e,{configurable:!0,set:A}),2)}if(t!==g.target_&&"function"==typeof I.value)return uk(I.value)?(null!=(n=this.options_)&&n.autoBind?IE.bound:IE).make_(g,e,I,t):(null!=(l=this.options_)&&l.autoBind?yY.bound:yY).make_(g,e,I,t);var d,o=!1===(null==(C=this.options_)?void 0:C.deep)?oM.ref:oM;return"function"==typeof I.value&&null!=(i=this.options_)&&i.autoBind&&(I.value=I.value.bind(null!=(d=g.proxy_)?d:g.target_)),o.make_(g,e,I,t)}function OQ(g,e,I,t){var C,i,l;return I.get?rM.extend_(g,e,I,t):I.set?g.defineProperty_(e,{configurable:!eY.safeDescriptors||g.isPlainObject_,set:BM(e.toString(),I.set)},t):("function"==typeof I.value&&null!=(C=this.options_)&&C.autoBind&&(I.value=I.value.bind(null!=(l=g.proxy_)?l:g.target_)),(!1===(null==(i=this.options_)?void 0:i.deep)?oM.ref:oM).extend_(g,e,I,t))}function fQ(g,e){Ak("'"+this.annotationType_+"' cannot be used as a decorator")}var jQ="observable",LQ="observable.ref",PQ="observable.shallow",_Q="observable.struct",qQ={deep:!0,name:void 0,defaultDecorator:void 0,proxy:!0};function $Q(g){return g||qQ}Object.freeze(qQ);var gM=JQ(jQ),eM=JQ(LQ,{enhancer:hQ}),IM=JQ(PQ,{enhancer:rQ}),tM=JQ(_Q,{enhancer:UQ}),CM=$k(gM);function iM(g){return!0===g.deep?cQ:!1===g.deep?hQ:nM(g.defaultDecorator)}function lM(g){var e;return g?null!=(e=g.defaultDecorator)?e:vQ(g):void 0}function nM(g){var e,I;return g&&null!=(e=null==(I=g.options_)?void 0:I.enhancer)?e:cQ}function AM(g,e,I){return tQ(e)?gM.decorate_20223_(g,e):pk(e)?void gQ(g,e,gM):lE(g)?g:bk(g)?oM.object(g,e,I):Array.isArray(g)?oM.array(g,e):Qk(g)?oM.map(g,e):Mk(g)?oM.set(g,e):"object"==typeof g&&null!==g?g:oM.box(g,e)}sk(AM,CM);var dM={box:function(g,e){var I=$Q(e);return new QM(g,iM(I),I.name,!0,I.equals)},array:function(g,e){var I=$Q(e);return(!1===eY.useProxies||!1===I.proxy?hy:kE)(g,iM(I),I.name)},map:function(g,e){var I=$Q(e);return new vE(g,iM(I),I.name)},set:function(g,e){var I=$Q(e);return new PE(g,iM(I),I.name)},object:function(g,e,I){return Fy((function(){return jY(!1===eY.useProxies||!1===(null==I?void 0:I.proxy)?ey({},I):hE({},I),g,e)}))},ref:$k(eM),shallow:$k(IM),deep:CM,struct:$k(tM)},oM=sk(AM,dM),sM="computed",aM="computed.struct",VM=QQ(sM),cM=QQ(aM,{equals:VQ.structural}),rM=function(g,e){if(tQ(e))return VM.decorate_20223_(g,e);if(pk(e))return gQ(g,e,VM);if(bk(g))return $k(QQ(sM,g));"production"!==fg.env.NODE_ENV&&(Nk(g)||Ak("First argument to `computed` should be an expression."),Nk(e)&&Ak("A setter as second argument is no longer supported, use `{ set: fn }` option instead"));var I=bk(e)?e:{};return I.get=g,I.name||(I.name=g.name||""),new yM(I)};Object.assign(rM,VM),rM.struct=$k(cM);var hM,UM,ZM=0,RM=1,FM=null!=(hM=null==(UM=ak((function(){}),"name"))?void 0:UM.configurable)&&hM,mM={value:"action",configurable:!0,writable:!1,enumerable:!1};function BM(g,e,I,t){function C(){return WM(g,I,e,t||this,arguments)}return void 0===I&&(I=!1),"production"!==fg.env.NODE_ENV&&(Nk(e)||Ak("`action` can only be invoked on functions"),("string"!=typeof g||!g)&&Ak("actions should have valid names, got: '"+g+"'")),C.isMobxAction=!0,C.toString=function(){return e.toString()},FM&&(mM.value=g,Vk(C,"name",mM)),C}function WM(g,e,I,t,C){var i=NM(g,e,t,C);try{return I.apply(t,C)}catch(g){throw i.error_=g,g}finally{pM(i)}}function NM(g,e,I,t){var C="production"!==fg.env.NODE_ENV&&RY()&&!!g,i=0;if("production"!==fg.env.NODE_ENV&&C){i=Date.now();var l=t?Array.from(t):rk;mY({type:pY,name:g,object:I,arguments:l})}var n=eY.trackingDerivation,A=!e||!n;iY();var d=eY.allowStateChanges;A&&(jM(),d=bM(!0));var o={runAsAction_:A,prevDerivation_:n,prevAllowStateChanges_:d,prevAllowStateReads_:PM(!0),notifySpy_:C,startTime_:i,actionId_:RM++,parentActionId_:ZM};return ZM=o.actionId_,o}function pM(g){ZM!==g.actionId_&&Ak(30),ZM=g.parentActionId_,void 0!==g.error_&&(eY.suppressReactionErrors=!0),uM(g.prevAllowStateChanges_),_M(g.prevAllowStateReads_),lY(),g.runAsAction_&&LM(g.prevDerivation_),"production"!==fg.env.NODE_ENV&&g.notifySpy_&&WY({time:Date.now()-g.startTime_}),eY.suppressReactionErrors=!1}function SM(g,e){var I=bM(g);try{return e()}finally{uM(I)}}function bM(g){var e=eY.allowStateChanges;return eY.allowStateChanges=g,e}function uM(g){eY.allowStateChanges=g}var TM,GM="create";TM=Symbol.toPrimitive;var kM,QM=function(g){function e(e,I,t,C,i){var l;return void 0===t&&(t="production"!==fg.env.NODE_ENV?"ObservableValue@"+mk():"ObservableValue"),void 0===C&&(C=!0),void 0===i&&(i=VQ.default),(l=g.call(this,t)||this).enhancer=void 0,l.name_=void 0,l.equals=void 0,l.hasUnreportedChange_=!1,l.interceptors_=void 0,l.changeListeners_=void 0,l.value_=void 0,l.dehancer=void 0,l.enhancer=I,l.name_=t,l.equals=i,l.value_=I(e,void 0,t),"production"!==fg.env.NODE_ENV&&C&&RY()&&FY({type:GM,object:Ok(l),observableKind:"value",debugObjectName:l.name_,newValue:""+l.value_}),l}vk(e,g);var I=e.prototype;return I.dehanceValue=function(g){return void 0!==this.dehancer?this.dehancer(g):g},I.set=function(g){var e=this.value_;if((g=this.prepareNewValue_(g))!==eY.UNCHANGED){var I=RY();"production"!==fg.env.NODE_ENV&&I&&mY({type:bE,object:this,observableKind:"value",debugObjectName:this.name_,newValue:g,oldValue:e}),this.setNewValue_(g),"production"!==fg.env.NODE_ENV&&I&&WY()}},I.prepareNewValue_=function(g){if(KM(this),UE(this)){var e=RE(this,{object:this,type:bE,newValue:g});if(!e)return eY.UNCHANGED;g=e.newValue}return g=this.enhancer(g,this.value_,this.name_),this.equals(this.value_,g)?eY.UNCHANGED:g},I.setNewValue_=function(g){var e=this.value_;this.value_=g,this.reportChanged(),FE(this)&&BE(this,{type:bE,object:this,newValue:g,oldValue:e})},I.get=function(){return this.reportObserved(),this.dehanceValue(this.value_)},I.intercept_=function(g){return ZE(this,g)},I.observe_=function(g,e){return e&&g({observableKind:"value",debugObjectName:this.name_,object:this,type:bE,newValue:this.value_,oldValue:void 0}),mE(this,g)},I.raw=function(){return this.value_},I.toJSON=function(){return this.get()},I.toString=function(){return this.name_+"["+this.value_+"]"},I.valueOf=function(){return Hk(this.get())},I[TM]=function(){return this.valueOf()},e}(lQ),MM=kk("ObservableValue",QM);kM=Symbol.toPrimitive;var YM,EM,yM=function(){function g(g){this.dependenciesState_=YM.NOT_TRACKING_,this.observing_=[],this.newObserving_=null,this.isBeingObserved_=!1,this.isPendingUnobservation_=!1,this.observers_=new Set,this.diffValue_=0,this.runId_=0,this.lastAccessedBy_=0,this.lowestObserverState_=YM.UP_TO_DATE_,this.unboundDepsCount_=0,this.value_=new HM(null),this.name_=void 0,this.triggeredBy_=void 0,this.isComputing_=!1,this.isRunningSetter_=!1,this.derivation=void 0,this.setter_=void 0,this.isTracing_=EM.NONE,this.scope_=void 0,this.equals_=void 0,this.requiresReaction_=void 0,this.keepAlive_=void 0,this.onBOL=void 0,this.onBUOL=void 0,g.get||Ak(31),this.derivation=g.get,this.name_=g.name||("production"!==fg.env.NODE_ENV?"ComputedValue@"+mk():"ComputedValue"),g.set&&(this.setter_=BM("production"!==fg.env.NODE_ENV?this.name_+"-setter":"ComputedValue-setter",g.set)),this.equals_=g.equals||(g.compareStructural||g.struct?VQ.structural:VQ.default),this.scope_=g.context,this.requiresReaction_=g.requiresReaction,this.keepAlive_=!!g.keepAlive}var e=g.prototype;return e.onBecomeStale_=function(){oY(this)},e.onBO=function(){this.onBOL&&this.onBOL.forEach((function(g){return g()}))},e.onBUO=function(){this.onBUOL&&this.onBUOL.forEach((function(g){return g()}))},e.get=function(){if(this.isComputing_&&Ak(32,this.name_,this.derivation),0!==eY.inBatch||0!==this.observers_.size||this.keepAlive_){if(nY(this),XM(this)){var g=eY.trackingContext;this.keepAlive_&&!g&&(eY.trackingContext=this),this.trackAndCompute()&&dY(this),eY.trackingContext=g}}else XM(this)&&(this.warnAboutUntrackedRead_(),iY(),this.value_=this.computeValue_(!1),lY());var e=this.value_;if(wM(e))throw e.cause;return e},e.set=function(g){if(this.setter_){this.isRunningSetter_&&Ak(33,this.name_),this.isRunningSetter_=!0;try{this.setter_.call(this.scope_,g)}finally{this.isRunningSetter_=!1}}else Ak(34,this.name_)},e.trackAndCompute=function(){var g=this.value_,e=this.dependenciesState_===YM.NOT_TRACKING_,I=this.computeValue_(!0),t=e||wM(g)||wM(I)||!this.equals_(g,I);return t&&(this.value_=I,"production"!==fg.env.NODE_ENV&&RY()&&FY({observableKind:"computed",debugObjectName:this.name_,object:this.scope_,type:"update",oldValue:g,newValue:I})),t},e.computeValue_=function(g){this.isComputing_=!0;var e,I=bM(!1);if(g)e=DM(this,this.derivation,this.scope_);else if(!0===eY.disableErrorBoundaries)e=this.derivation.call(this.scope_);else try{e=this.derivation.call(this.scope_)}catch(g){e=new HM(g)}return uM(I),this.isComputing_=!1,e},e.suspend_=function(){this.keepAlive_||(OM(this),this.value_=void 0,"production"!==fg.env.NODE_ENV&&(this.isTracing_,EM.NONE))},e.observe_=function(g,e){var I=this,t=!0,C=void 0;return HY((function(){var i=I.get();if(!t||e){var l=jM();g({observableKind:"computed",debugObjectName:I.name_,type:bE,object:I,newValue:i,oldValue:C}),LM(l)}t=!1,C=i}))},e.warnAboutUntrackedRead_=function(){"production"!==fg.env.NODE_ENV&&(this.isTracing_,EM.NONE,"boolean"==typeof this.requiresReaction_?this.requiresReaction_:eY.computedRequiresReaction)},e.toString=function(){return this.name_+"["+this.derivation.toString()+"]"},e.valueOf=function(){return Hk(this.get())},e[kM]=function(){return this.valueOf()},g}(),JM=kk("ComputedValue",yM);!function(g){g[g.NOT_TRACKING_=-1]="NOT_TRACKING_",g[g.UP_TO_DATE_=0]="UP_TO_DATE_",g[g.POSSIBLY_STALE_=1]="POSSIBLY_STALE_",g[g.STALE_=2]="STALE_"}(YM||(YM={})),function(g){g[g.NONE=0]="NONE",g[g.LOG=1]="LOG",g[g.BREAK=2]="BREAK"}(EM||(EM={}));var HM=function(g){this.cause=void 0,this.cause=g};function wM(g){return g instanceof HM}function XM(g){switch(g.dependenciesState_){case YM.UP_TO_DATE_:return!1;case YM.NOT_TRACKING_:case YM.STALE_:return!0;case YM.POSSIBLY_STALE_:for(var e=PM(!0),I=jM(),t=g.observing_,C=t.length,i=0;i<C;i++){var l=t[i];if(JM(l)){if(eY.disableErrorBoundaries)l.get();else try{l.get()}catch{return LM(I),_M(e),!0}if(g.dependenciesState_===YM.STALE_)return LM(I),_M(e),!0}}return qM(g),LM(I),_M(e),!1}}function KM(g){if("production"!==fg.env.NODE_ENV){var e=g.observers_.size>0;!eY.allowStateChanges&&(e||eY.enforceActions)}}function zM(g){"production"!==fg.env.NODE_ENV&&!eY.allowStateReads&&eY.observableRequiresReaction}function DM(g,e,I){var t=PM(!0);qM(g),g.newObserving_=new Array(0===g.runId_?100:g.observing_.length),g.unboundDepsCount_=0,g.runId_=++eY.runId;var C,i=eY.trackingDerivation;if(eY.trackingDerivation=g,eY.inBatch++,!0===eY.disableErrorBoundaries)C=e.call(I);else try{C=e.call(I)}catch(g){C=new HM(g)}return eY.inBatch--,eY.trackingDerivation=i,xM(g),vM(g),_M(t),C}function vM(g){"production"!==fg.env.NODE_ENV&&0===g.observing_.length&&("boolean"==typeof g.requiresObservable_?g.requiresObservable_:eY.reactionRequiresObservable)}function xM(g){for(var e=g.observing_,I=g.observing_=g.newObserving_,t=YM.UP_TO_DATE_,C=0,i=g.unboundDepsCount_,l=0;l<i;l++){var n=I[l];0===n.diffValue_&&(n.diffValue_=1,C!==l&&(I[C]=n),C++),n.dependenciesState_>t&&(t=n.dependenciesState_)}for(I.length=C,g.newObserving_=null,i=e.length;i--;){var A=e[i];0===A.diffValue_&&tY(A,g),A.diffValue_=0}for(;C--;){var d=I[C];1===d.diffValue_&&(d.diffValue_=0,IY(d,g))}t!==YM.UP_TO_DATE_&&(g.dependenciesState_=t,g.onBecomeStale_())}function OM(g){var e=g.observing_;g.observing_=[];for(var I=e.length;I--;)tY(e[I],g);g.dependenciesState_=YM.NOT_TRACKING_}function fM(g){var e=jM();try{return g()}finally{LM(e)}}function jM(){var g=eY.trackingDerivation;return eY.trackingDerivation=null,g}function LM(g){eY.trackingDerivation=g}function PM(g){var e=eY.allowStateReads;return eY.allowStateReads=g,e}function _M(g){eY.allowStateReads=g}function qM(g){if(g.dependenciesState_!==YM.UP_TO_DATE_){g.dependenciesState_=YM.UP_TO_DATE_;for(var e=g.observing_,I=e.length;I--;)e[I].lowestObserverState_=YM.UP_TO_DATE_}}var $M=function(){this.version=6,this.UNCHANGED={},this.trackingDerivation=null,this.trackingContext=null,this.runId=0,this.mobxGuid=0,this.inBatch=0,this.pendingUnobservations=[],this.pendingReactions=[],this.isRunningReactions=!1,this.allowStateChanges=!1,this.allowStateReads=!0,this.enforceActions=!0,this.spyListeners=[],this.globalReactionErrorHandlers=[],this.computedRequiresReaction=!1,this.reactionRequiresObservable=!1,this.observableRequiresReaction=!1,this.disableErrorBoundaries=!1,this.suppressReactionErrors=!1,this.useProxies=!0,this.verifyProxies=!1,this.safeDescriptors=!0},gY=!0,eY=function(){var g=ok();return g.__mobxInstanceCount>0&&!g.__mobxGlobals&&(gY=!1),g.__mobxGlobals&&g.__mobxGlobals.version!==(new $M).version&&(gY=!1),gY?g.__mobxGlobals?(g.__mobxInstanceCount+=1,g.__mobxGlobals.UNCHANGED||(g.__mobxGlobals.UNCHANGED={}),g.__mobxGlobals):(g.__mobxInstanceCount=1,g.__mobxGlobals=new $M):(setTimeout((function(){Ak(35)}),1),new $M)}();function IY(g,e){g.observers_.add(e),g.lowestObserverState_>e.dependenciesState_&&(g.lowestObserverState_=e.dependenciesState_)}function tY(g,e){g.observers_.delete(e),0===g.observers_.size&&CY(g)}function CY(g){!1===g.isPendingUnobservation_&&(g.isPendingUnobservation_=!0,eY.pendingUnobservations.push(g))}function iY(){eY.inBatch++}function lY(){if(0==--eY.inBatch){hY();for(var g=eY.pendingUnobservations,e=0;e<g.length;e++){var I=g[e];I.isPendingUnobservation_=!1,0===I.observers_.size&&(I.isBeingObserved_&&(I.isBeingObserved_=!1,I.onBUO()),I instanceof yM&&I.suspend_())}eY.pendingUnobservations=[]}}function nY(g){zM(g);var e=eY.trackingDerivation;return null!==e?(e.runId_!==g.lastAccessedBy_&&(g.lastAccessedBy_=e.runId_,e.newObserving_[e.unboundDepsCount_++]=g,!g.isBeingObserved_&&eY.trackingContext&&(g.isBeingObserved_=!0,g.onBO())),g.isBeingObserved_):(0===g.observers_.size&&eY.inBatch>0&&CY(g),!1)}function AY(g){g.lowestObserverState_!==YM.STALE_&&(g.lowestObserverState_=YM.STALE_,g.observers_.forEach((function(e){e.dependenciesState_===YM.UP_TO_DATE_&&("production"!==fg.env.NODE_ENV&&e.isTracing_!==EM.NONE&&sY(e,g),e.onBecomeStale_()),e.dependenciesState_=YM.STALE_})))}function dY(g){g.lowestObserverState_!==YM.STALE_&&(g.lowestObserverState_=YM.STALE_,g.observers_.forEach((function(e){e.dependenciesState_===YM.POSSIBLY_STALE_?(e.dependenciesState_=YM.STALE_,"production"!==fg.env.NODE_ENV&&e.isTracing_!==EM.NONE&&sY(e,g)):e.dependenciesState_===YM.UP_TO_DATE_&&(g.lowestObserverState_=YM.UP_TO_DATE_)})))}function oY(g){g.lowestObserverState_===YM.UP_TO_DATE_&&(g.lowestObserverState_=YM.POSSIBLY_STALE_,g.observers_.forEach((function(g){g.dependenciesState_===YM.UP_TO_DATE_&&(g.dependenciesState_=YM.POSSIBLY_STALE_,g.onBecomeStale_())})))}function sY(g,e){if(g.isTracing_===EM.BREAK){var I=[];aY(LY(g),I,1),new Function("debugger;\n/*\nTracing '"+g.name_+"'\n\nYou are entering this break point because derivation '"+g.name_+"' is being traced and '"+e.name_+"' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n"+(g instanceof yM?g.derivation.toString().replace(/[*]\//g,"/"):"")+"\n\nThe dependencies for this derivation are:\n\n"+I.join("\n")+"\n*/\n    ")()}}function aY(g,e,I){e.length>=1e3?e.push("(and many more)"):(e.push(""+"\t".repeat(I-1)+g.name),g.dependencies&&g.dependencies.forEach((function(g){return aY(g,e,I+1)})))}var VY=function(){function g(g,e,I,t){void 0===g&&(g="production"!==fg.env.NODE_ENV?"Reaction@"+mk():"Reaction"),this.name_=void 0,this.onInvalidate_=void 0,this.errorHandler_=void 0,this.requiresObservable_=void 0,this.observing_=[],this.newObserving_=[],this.dependenciesState_=YM.NOT_TRACKING_,this.diffValue_=0,this.runId_=0,this.unboundDepsCount_=0,this.isDisposed_=!1,this.isScheduled_=!1,this.isTrackPending_=!1,this.isRunning_=!1,this.isTracing_=EM.NONE,this.name_=g,this.onInvalidate_=e,this.errorHandler_=I,this.requiresObservable_=t}var e=g.prototype;return e.onBecomeStale_=function(){this.schedule_()},e.schedule_=function(){this.isScheduled_||(this.isScheduled_=!0,eY.pendingReactions.push(this),hY())},e.isScheduled=function(){return this.isScheduled_},e.runReaction_=function(){if(!this.isDisposed_){iY(),this.isScheduled_=!1;var g=eY.trackingContext;if(eY.trackingContext=this,XM(this)){this.isTrackPending_=!0;try{this.onInvalidate_(),"production"!==fg.env.NODE_ENV&&this.isTrackPending_&&RY()&&FY({name:this.name_,type:"scheduled-reaction"})}catch(g){this.reportExceptionInDerivation_(g)}}eY.trackingContext=g,lY()}},e.track=function(g){if(!this.isDisposed_){iY();var e,I=RY();"production"!==fg.env.NODE_ENV&&I&&(e=Date.now(),mY({name:this.name_,type:"reaction"})),this.isRunning_=!0;var t=eY.trackingContext;eY.trackingContext=this;var C=DM(this,g,void 0);eY.trackingContext=t,this.isRunning_=!1,this.isTrackPending_=!1,this.isDisposed_&&OM(this),wM(C)&&this.reportExceptionInDerivation_(C.cause),"production"!==fg.env.NODE_ENV&&I&&WY({time:Date.now()-e}),lY()}},e.reportExceptionInDerivation_=function(g){var e=this;if(this.errorHandler_)this.errorHandler_(g,this);else{if(eY.disableErrorBoundaries)throw g;var I="production"!==fg.env.NODE_ENV?"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '"+this+"'":"[mobx] uncaught error in '"+this+"'";eY.suppressReactionErrors&&fg.env.NODE_ENV,"production"!==fg.env.NODE_ENV&&RY()&&FY({type:"error",name:this.name_,message:I,error:""+g}),eY.globalReactionErrorHandlers.forEach((function(I){return I(g,e)}))}},e.dispose=function(){this.isDisposed_||(this.isDisposed_=!0,this.isRunning_||(iY(),OM(this),lY()))},e.getDisposer_=function(g){var e=this,I=function I(){e.dispose(),null==g||null==g.removeEventListener||g.removeEventListener("abort",I)};return null==g||null==g.addEventListener||g.addEventListener("abort",I),I[iQ]=this,I},e.toString=function(){return"Reaction["+this.name_+"]"},e.trace=function(g){void 0===g&&(g=!1),sE(this,g)},g}(),cY=100,rY=function(g){return g()};function hY(){eY.inBatch>0||eY.isRunningReactions||rY(UY)}function UY(){eY.isRunningReactions=!0;for(var g=eY.pendingReactions,e=0;g.length>0;){++e===cY&&g.splice(0);for(var I=g.splice(0),t=0,C=I.length;t<C;t++)I[t].runReaction_()}eY.isRunningReactions=!1}var ZY=kk("Reaction",VY);function RY(){return"production"!==fg.env.NODE_ENV&&!!eY.spyListeners.length}function FY(g){if("production"!==fg.env.NODE_ENV&&eY.spyListeners.length)for(var e=eY.spyListeners,I=0,t=e.length;I<t;I++)e[I](g)}function mY(g){"production"!==fg.env.NODE_ENV&&FY(Dk({},g,{spyReportStart:!0}))}var BY={type:"report-end",spyReportEnd:!0};function WY(g){"production"!==fg.env.NODE_ENV&&FY(g?Dk({},g,{type:"report-end",spyReportEnd:!0}):BY)}function NY(g){return"production"===fg.env.NODE_ENV?function(){}:(eY.spyListeners.push(g),Bk((function(){eY.spyListeners=eY.spyListeners.filter((function(e){return e!==g}))})))}var pY="action",SY="action.bound",bY="autoAction",uY="autoAction.bound",TY="<unnamed action>",GY=FQ(pY),kY=FQ(SY,{bound:!0}),QY=FQ(bY,{autoAction:!0}),MY=FQ(uY,{autoAction:!0,bound:!0});function YY(g){return function(e,I){return Nk(e)?BM(e.name||TY,e,g):Nk(I)?BM(e,I,g):tQ(I)?(g?QY:GY).decorate_20223_(e,I):pk(I)?gQ(e,I,g?QY:GY):pk(e)?$k(FQ(g?bY:pY,{name:e,autoAction:g})):void("production"!==fg.env.NODE_ENV&&Ak("Invalid arguments for `action`"))}}var EY=YY(!1);Object.assign(EY,GY);var yY=YY(!0);function JY(g){return Nk(g)&&!0===g.isMobxAction}function HY(g,e){var I,t,C,i,l;void 0===e&&(e=hk),"production"!==fg.env.NODE_ENV&&(Nk(g)||Ak("Autorun expects a function as first argument"),JY(g)&&Ak("Autorun does not accept actions since actions are untrackable"));var n,A=null!=(I=null==(t=e)?void 0:t.name)?I:"production"!==fg.env.NODE_ENV?g.name||"Autorun@"+mk():"Autorun";if(e.scheduler||e.delay){var d=XY(e),o=!1;n=new VY(A,(function(){o||(o=!0,d((function(){o=!1,n.isDisposed_||n.track(s)})))}),e.onError,e.requiresObservable)}else n=new VY(A,(function(){this.track(s)}),e.onError,e.requiresObservable);function s(){g(n)}return null!=(C=e)&&null!=(i=C.signal)&&i.aborted||n.schedule_(),n.getDisposer_(null==(l=e)?void 0:l.signal)}Object.assign(yY,QY),EY.bound=$k(kY),yY.bound=$k(MY);var wY=function(g){return g()};function XY(g){return g.scheduler?g.scheduler:g.delay?function(e){return setTimeout(e,g.delay)}:wY}function KY(g,e,I){var t,C,i,l;void 0===I&&(I=hk),"production"!==fg.env.NODE_ENV&&((!Nk(g)||!Nk(e))&&Ak("First and second argument to reaction should be functions"),bk(I)||Ak("Third argument of reactions should be an object"));var n,A=null!=(t=I.name)?t:"production"!==fg.env.NODE_ENV?"Reaction@"+mk():"Reaction",d=EY(A,I.onError?zY(I.onError,e):e),o=!I.scheduler&&!I.delay,s=XY(I),a=!0,V=!1,c=I.compareStructural?VQ.structural:I.equals||VQ.default,r=new VY(A,(function(){a||o?h():V||(V=!0,s(h))}),I.onError,I.requiresObservable);function h(){if(V=!1,!r.isDisposed_){var e=!1,t=n;r.track((function(){var I=SM(!1,(function(){return g(r)}));e=a||!c(n,I),n=I})),(a&&I.fireImmediately||!a&&e)&&d(n,t,r),a=!1}}return null!=(C=I)&&null!=(i=C.signal)&&i.aborted||r.schedule_(),r.getDisposer_(null==(l=I)?void 0:l.signal)}function zY(g,e){return function(){try{return e.apply(this,arguments)}catch(e){g.call(this,e)}}}var DY="onBO",vY="onBUO";function xY(g,e,I){return fY(DY,g,e,I)}function OY(g,e,I){return fY(vY,g,e,I)}function fY(g,e,I,t){var C=Uy(e),i=Nk(t)?t:I,l=g+"L";return C[l]?C[l].add(i):C[l]=new Set([i]),function(){var g=C[l];g&&(g.delete(i),0===g.size&&delete C[l])}}function jY(g,e,I,t){"production"!==fg.env.NODE_ENV&&(arguments.length>4&&Ak("'extendObservable' expected 2-4 arguments"),"object"!=typeof g&&Ak("'extendObservable' expects an object as first argument"),xE(g)&&Ak("'extendObservable' should not be used on maps, use map.merge instead"),bk(e)||Ak("'extendObservable' only accepts plain objects as second argument"),(lE(e)||lE(I))&&Ak("Extending an object with another observable (object) is not supported"));var C=Xk(e);return Fy((function(){var e=ey(g,t)[iQ];yk(C).forEach((function(g){e.extend_(g,C[g],!I||!(g in I)||I[g])}))})),g}function LY(g,e){return PY(Uy(g,e))}function PY(g){var e={name:g.name_};return g.observing_&&g.observing_.length>0&&(e.dependencies=_Y(g.observing_).map(PY)),e}function _Y(g){return Array.from(new Set(g))}var qY=0;function $Y(){this.message="FLOW_CANCELLED"}$Y.prototype=Object.create(Error.prototype);var gE=SQ("flow"),eE=SQ("flow.bound",{bound:!0}),IE=Object.assign((function(g,e){if(tQ(e))return gE.decorate_20223_(g,e);if(pk(e))return gQ(g,e,gE);"production"!==fg.env.NODE_ENV&&1!==arguments.length&&Ak("Flow expects single argument with generator function");var I=g,t=I.name||"<unnamed flow>",C=function(){var g,e=arguments,C=++qY,i=EY(t+" - runid: "+C+" - init",I).apply(this,e),l=void 0,n=new Promise((function(e,I){var n=0;function A(g){var e;l=void 0;try{e=EY(t+" - runid: "+C+" - yield "+n++,i.next).call(i,g)}catch(g){return I(g)}o(e)}function d(g){var e;l=void 0;try{e=EY(t+" - runid: "+C+" - yield "+n++,i.throw).call(i,g)}catch(g){return I(g)}o(e)}function o(g){if(!Nk(null==g?void 0:g.then))return g.done?e(g.value):(l=Promise.resolve(g.value)).then(A,d);g.then(o,I)}g=I,A(void 0)}));return n.cancel=EY(t+" - runid: "+C+" - cancel",(function(){try{l&&tE(l);var e=i.return(void 0),I=Promise.resolve(e.value);I.then(Wk,Wk),tE(I),g(new $Y)}catch(e){g(e)}})),n};return C.isMobXFlow=!0,C}),gE);function tE(g){Nk(g.cancel)&&g.cancel()}function CE(g){return!0===(null==g?void 0:g.isMobXFlow)}function iE(g,e){return!!g&&(Cy(g)||!!g[iQ]||nQ(g)||ZY(g)||JM(g))}function lE(g){return"production"!==fg.env.NODE_ENV&&1!==arguments.length&&Ak("isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property"),iE(g)}function nE(g){if(Cy(g))return g[iQ].ownKeys_();Ak(38)}function AE(g,e,I){return g.set(e,I),I}function dE(g,e){if(null==g||"object"!=typeof g||g instanceof Date||!lE(g))return g;if(MM(g)||JM(g))return dE(g.get(),e);if(e.has(g))return e.get(g);if(HE(g)){var I=AE(e,g,new Array(g.length));return g.forEach((function(g,t){I[t]=dE(g,e)})),I}if(_E(g)){var t=AE(e,g,new Set);return g.forEach((function(g){t.add(dE(g,e))})),t}if(xE(g)){var C=AE(e,g,new Map);return g.forEach((function(g,I){C.set(I,dE(g,e))})),C}var i=AE(e,g,{});return nE(g).forEach((function(I){ck.propertyIsEnumerable.call(g,I)&&(i[I]=dE(g[I],e))})),i}function oE(g,e){return"production"!==fg.env.NODE_ENV&&e&&Ak("toJS no longer supports options"),dE(g,new Map)}function sE(){if("production"!==fg.env.NODE_ENV){for(var g=!1,e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];"boolean"==typeof I[I.length-1]&&(g=I.pop());var C=aE(I);if(!C)return Ak("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");C.isTracing_,EM.NONE,C.isTracing_=g?EM.BREAK:EM.LOG}}function aE(g){switch(g.length){case 0:return eY.trackingDerivation;case 1:return Uy(g[0]);case 2:return Uy(g[0],g[1])}}function VE(g,e){void 0===e&&(e=void 0),iY();try{return g.apply(e)}finally{lY()}}function cE(g){return g[iQ]}IE.bound=$k(eE);var rE={has:function(g,e){return"production"!==fg.env.NODE_ENV&&eY.trackingDerivation&&Fk("detect new properties using the 'in' operator. Use 'has' from 'mobx' instead."),cE(g).has_(e)},get:function(g,e){return cE(g).get_(e)},set:function(g,e,I){var t;return!!pk(e)&&("production"!==fg.env.NODE_ENV&&!cE(g).values_.has(e)&&Fk("add a new observable property through direct assignment. Use 'set' from 'mobx' instead."),null==(t=cE(g).set_(e,I,!0))||t)},deleteProperty:function(g,e){var I;return"production"!==fg.env.NODE_ENV&&Fk("delete properties from an observable object. Use 'remove' from 'mobx' instead."),!!pk(e)&&(null==(I=cE(g).delete_(e,!0))||I)},defineProperty:function(g,e,I){var t;return"production"!==fg.env.NODE_ENV&&Fk("define property on an observable object. Use 'defineProperty' from 'mobx' instead."),null==(t=cE(g).defineProperty_(e,I))||t},ownKeys:function(g){return"production"!==fg.env.NODE_ENV&&eY.trackingDerivation&&Fk("iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead."),cE(g).ownKeys_()},preventExtensions:function(g){Ak(13)}};function hE(g,e){var I,t;return Rk(),null!=(t=(I=(g=ey(g,e))[iQ]).proxy_)?t:I.proxy_=new Proxy(g,rE)}function UE(g){return void 0!==g.interceptors_&&g.interceptors_.length>0}function ZE(g,e){var I=g.interceptors_||(g.interceptors_=[]);return I.push(e),Bk((function(){var g=I.indexOf(e);-1!==g&&I.splice(g,1)}))}function RE(g,e){var I=jM();try{for(var t=[].concat(g.interceptors_||[]),C=0,i=t.length;C<i&&((e=t[C](e))&&!e.type&&Ak(14),e);C++);return e}finally{LM(I)}}function FE(g){return void 0!==g.changeListeners_&&g.changeListeners_.length>0}function mE(g,e){var I=g.changeListeners_||(g.changeListeners_=[]);return I.push(e),Bk((function(){var g=I.indexOf(e);-1!==g&&I.splice(g,1)}))}function BE(g,e){var I=jM(),t=g.changeListeners_;if(t){for(var C=0,i=(t=t.slice()).length;C<i;C++)t[C](e);LM(I)}}function WE(g,e,I){return Fy((function(){var t=ey(g,I)[iQ];"production"!==fg.env.NODE_ENV&&e&&g[qk]&&Ak("makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported."),null!=e||(e=IQ(g)),yk(e).forEach((function(g){return t.make_(g,e[g])}))})),g}var NE=Symbol("mobx-keys");function pE(g,e,I){return"production"!==fg.env.NODE_ENV&&(!bk(g)&&!bk(Object.getPrototypeOf(g))&&Ak("'makeAutoObservable' can only be used for classes that don't have a superclass"),Cy(g)&&Ak("makeAutoObservable can only be used on objects not already made observable")),bk(g)?jY(g,g,e,I):(Fy((function(){var t=ey(g,I)[iQ];if(!g[NE]){var C=Object.getPrototypeOf(g),i=new Set([].concat(yk(g),yk(C)));i.delete("constructor"),i.delete(iQ),Tk(C,NE,i)}g[NE].forEach((function(g){return t.make_(g,!e||!(g in e)||e[g])}))})),g)}var SE="splice",bE="update",uE=1e4,TE={get:function(g,e){var I=g[iQ];return e===iQ?I:"length"===e?I.getArrayLength_():"string"!=typeof e||isNaN(e)?wk(QE,e)?QE[e]:g[e]:I.get_(parseInt(e))},set:function(g,e,I){var t=g[iQ];return"length"===e&&t.setArrayLength_(I),"symbol"==typeof e||isNaN(e)?g[e]=I:t.set_(parseInt(e),I),!0},preventExtensions:function(){Ak(15)}},GE=function(){function g(g,e,I,t){void 0===g&&(g="production"!==fg.env.NODE_ENV?"ObservableArray@"+mk():"ObservableArray"),this.owned_=void 0,this.legacyMode_=void 0,this.atom_=void 0,this.values_=[],this.interceptors_=void 0,this.changeListeners_=void 0,this.enhancer_=void 0,this.dehancer=void 0,this.proxy_=void 0,this.lastKnownLength_=0,this.owned_=I,this.legacyMode_=t,this.atom_=new lQ(g),this.enhancer_=function(I,t){return e(I,t,"production"!==fg.env.NODE_ENV?g+"[..]":"ObservableArray[..]")}}var e=g.prototype;return e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.dehanceValues_=function(g){return void 0!==this.dehancer&&g.length>0?g.map(this.dehancer):g},e.intercept_=function(g){return ZE(this,g)},e.observe_=function(g,e){return void 0===e&&(e=!1),e&&g({observableKind:"array",object:this.proxy_,debugObjectName:this.atom_.name_,type:"splice",index:0,added:this.values_.slice(),addedCount:this.values_.length,removed:[],removedCount:0}),mE(this,g)},e.getArrayLength_=function(){return this.atom_.reportObserved(),this.values_.length},e.setArrayLength_=function(g){("number"!=typeof g||isNaN(g)||g<0)&&Ak("Out of range: "+g);var e=this.values_.length;if(g!==e)if(g>e){for(var I=new Array(g-e),t=0;t<g-e;t++)I[t]=void 0;this.spliceWithArray_(e,0,I)}else this.spliceWithArray_(g,e-g)},e.updateArrayLength_=function(g,e){g!==this.lastKnownLength_&&Ak(16),this.lastKnownLength_+=e,this.legacyMode_&&e>0&&ry(g+e+1)},e.spliceWithArray_=function(g,e,I){var t=this;KM(this.atom_);var C=this.values_.length;if(void 0===g?g=0:g>C?g=C:g<0&&(g=Math.max(0,C+g)),e=1===arguments.length?C-g:null==e?0:Math.max(0,Math.min(e,C-g)),void 0===I&&(I=rk),UE(this)){var i=RE(this,{object:this.proxy_,type:SE,index:g,removedCount:e,added:I});if(!i)return rk;e=i.removedCount,I=i.added}if(I=0===I.length?I:I.map((function(g){return t.enhancer_(g,void 0)})),this.legacyMode_||"production"!==fg.env.NODE_ENV){var l=I.length-e;this.updateArrayLength_(C,l)}var n=this.spliceItemsIntoValues_(g,e,I);return(0!==e||0!==I.length)&&this.notifyArraySplice_(g,I,n),this.dehanceValues_(n)},e.spliceItemsIntoValues_=function(g,e,I){var t;if(I.length<uE)return(t=this.values_).splice.apply(t,[g,e].concat(I));var C=this.values_.slice(g,g+e),i=this.values_.slice(g+e);this.values_.length+=I.length-e;for(var l=0;l<I.length;l++)this.values_[g+l]=I[l];for(var n=0;n<i.length;n++)this.values_[g+I.length+n]=i[n];return C},e.notifyArrayChildUpdate_=function(g,e,I){var t=!this.owned_&&RY(),C=FE(this),i=C||t?{observableKind:"array",object:this.proxy_,type:bE,debugObjectName:this.atom_.name_,index:g,newValue:e,oldValue:I}:null;"production"!==fg.env.NODE_ENV&&t&&mY(i),this.atom_.reportChanged(),C&&BE(this,i),"production"!==fg.env.NODE_ENV&&t&&WY()},e.notifyArraySplice_=function(g,e,I){var t=!this.owned_&&RY(),C=FE(this),i=C||t?{observableKind:"array",object:this.proxy_,debugObjectName:this.atom_.name_,type:SE,index:g,removed:I,added:e,removedCount:I.length,addedCount:e.length}:null;"production"!==fg.env.NODE_ENV&&t&&mY(i),this.atom_.reportChanged(),C&&BE(this,i),"production"!==fg.env.NODE_ENV&&t&&WY()},e.get_=function(g){if(!(this.legacyMode_&&g>=this.values_.length))return this.atom_.reportObserved(),this.dehanceValue_(this.values_[g])},e.set_=function(g,e){var I=this.values_;if(this.legacyMode_&&g>I.length&&Ak(17,g,I.length),g<I.length){KM(this.atom_);var t=I[g];if(UE(this)){var C=RE(this,{type:bE,object:this.proxy_,index:g,newValue:e});if(!C)return;e=C.newValue}(e=this.enhancer_(e,t))!==t&&(I[g]=e,this.notifyArrayChildUpdate_(g,e,t))}else{for(var i=new Array(g+1-I.length),l=0;l<i.length-1;l++)i[l]=void 0;i[i.length-1]=e,this.spliceWithArray_(I.length,0,i)}},g}();function kE(g,e,I,t){return void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableArray@"+mk():"ObservableArray"),void 0===t&&(t=!1),Rk(),Fy((function(){var C=new GE(I,e,t,!1);Gk(C.values_,iQ,C);var i=new Proxy(C.values_,TE);return C.proxy_=i,g&&g.length&&C.spliceWithArray_(0,0,g),i}))}var QE={clear:function(){return this.splice(0)},replace:function(g){var e=this[iQ];return e.spliceWithArray_(0,e.values_.length,g)},toJSON:function(){return this.slice()},splice:function(g,e){for(var I=arguments.length,t=new Array(I>2?I-2:0),C=2;C<I;C++)t[C-2]=arguments[C];var i=this[iQ];switch(arguments.length){case 0:return[];case 1:return i.spliceWithArray_(g);case 2:return i.spliceWithArray_(g,e)}return i.spliceWithArray_(g,e,t)},spliceWithArray:function(g,e,I){return this[iQ].spliceWithArray_(g,e,I)},push:function(){for(var g=this[iQ],e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];return g.spliceWithArray_(g.values_.length,0,I),g.values_.length},pop:function(){return this.splice(Math.max(this[iQ].values_.length-1,0),1)[0]},shift:function(){return this.splice(0,1)[0]},unshift:function(){for(var g=this[iQ],e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];return g.spliceWithArray_(0,0,I),g.values_.length},reverse:function(){return eY.trackingDerivation&&Ak(37,"reverse"),this.replace(this.slice().reverse()),this},sort:function(){eY.trackingDerivation&&Ak(37,"sort");var g=this.slice();return g.sort.apply(g,arguments),this.replace(g),this},remove:function(g){var e=this[iQ],I=e.dehanceValues_(e.values_).indexOf(g);return I>-1&&(this.splice(I,1),!0)}};function ME(g,e){"function"==typeof Array.prototype[g]&&(QE[g]=e(g))}function YE(g){return function(){var e=this[iQ];e.atom_.reportObserved();var I=e.dehanceValues_(e.values_);return I[g].apply(I,arguments)}}function EE(g){return function(e,I){var t=this,C=this[iQ];return C.atom_.reportObserved(),C.dehanceValues_(C.values_)[g]((function(g,C){return e.call(I,g,C,t)}))}}function yE(g){return function(){var e=this,I=this[iQ];I.atom_.reportObserved();var t=I.dehanceValues_(I.values_),C=arguments[0];return arguments[0]=function(g,I,t){return C(g,I,t,e)},t[g].apply(t,arguments)}}ME("at",YE),ME("concat",YE),ME("flat",YE),ME("includes",YE),ME("indexOf",YE),ME("join",YE),ME("lastIndexOf",YE),ME("slice",YE),ME("toString",YE),ME("toLocaleString",YE),ME("toSorted",YE),ME("toSpliced",YE),ME("with",YE),ME("every",EE),ME("filter",EE),ME("find",EE),ME("findIndex",EE),ME("findLast",EE),ME("findLastIndex",EE),ME("flatMap",EE),ME("forEach",EE),ME("map",EE),ME("some",EE),ME("toReversed",EE),ME("reduce",yE),ME("reduceRight",yE);var JE=kk("ObservableArrayAdministration",GE);function HE(g){return Sk(g)&&JE(g[iQ])}var wE,XE,KE={},zE="add",DE="delete";wE=Symbol.iterator,XE=Symbol.toStringTag;var vE=function(){function g(g,e,I){var t=this;void 0===e&&(e=cQ),void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableMap@"+mk():"ObservableMap"),this.enhancer_=void 0,this.name_=void 0,this[iQ]=KE,this.data_=void 0,this.hasMap_=void 0,this.keysAtom_=void 0,this.interceptors_=void 0,this.changeListeners_=void 0,this.dehancer=void 0,this.enhancer_=e,this.name_=I,Nk(Map)||Ak(18),Fy((function(){t.keysAtom_=AQ("production"!==fg.env.NODE_ENV?t.name_+".keys()":"ObservableMap.keys()"),t.data_=new Map,t.hasMap_=new Map,g&&t.merge(g)}))}var e=g.prototype;return e.has_=function(g){return this.data_.has(g)},e.has=function(g){var e=this;if(!eY.trackingDerivation)return this.has_(g);var I=this.hasMap_.get(g);if(!I){var t=I=new QM(this.has_(g),hQ,"production"!==fg.env.NODE_ENV?this.name_+"."+Jk(g)+"?":"ObservableMap.key?",!1);this.hasMap_.set(g,t),OY(t,(function(){return e.hasMap_.delete(g)}))}return I.get()},e.set=function(g,e){var I=this.has_(g);if(UE(this)){var t=RE(this,{type:I?bE:zE,object:this,newValue:e,name:g});if(!t)return this;e=t.newValue}return I?this.updateValue_(g,e):this.addValue_(g,e),this},e.delete=function(g){var e=this;if(KM(this.keysAtom_),UE(this)&&!RE(this,{type:DE,object:this,name:g}))return!1;if(this.has_(g)){var I=RY(),t=FE(this),C=t||I?{observableKind:"map",debugObjectName:this.name_,type:DE,object:this,oldValue:this.data_.get(g).value_,name:g}:null;return"production"!==fg.env.NODE_ENV&&I&&mY(C),VE((function(){var I;e.keysAtom_.reportChanged(),null==(I=e.hasMap_.get(g))||I.setNewValue_(!1),e.data_.get(g).setNewValue_(void 0),e.data_.delete(g)})),t&&BE(this,C),"production"!==fg.env.NODE_ENV&&I&&WY(),!0}return!1},e.updateValue_=function(g,e){var I=this.data_.get(g);if((e=I.prepareNewValue_(e))!==eY.UNCHANGED){var t=RY(),C=FE(this),i=C||t?{observableKind:"map",debugObjectName:this.name_,type:bE,object:this,oldValue:I.value_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&t&&mY(i),I.setNewValue_(e),C&&BE(this,i),"production"!==fg.env.NODE_ENV&&t&&WY()}},e.addValue_=function(g,e){var I=this;KM(this.keysAtom_),VE((function(){var t,C=new QM(e,I.enhancer_,"production"!==fg.env.NODE_ENV?I.name_+"."+Jk(g):"ObservableMap.key",!1);I.data_.set(g,C),e=C.value_,null==(t=I.hasMap_.get(g))||t.setNewValue_(!0),I.keysAtom_.reportChanged()}));var t=RY(),C=FE(this),i=C||t?{observableKind:"map",debugObjectName:this.name_,type:zE,object:this,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&t&&mY(i),C&&BE(this,i),"production"!==fg.env.NODE_ENV&&t&&WY()},e.get=function(g){return this.has(g)?this.dehanceValue_(this.data_.get(g).get()):this.dehanceValue_(void 0)},e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.keys=function(){return this.keysAtom_.reportObserved(),this.data_.keys()},e.values=function(){var g=this,e=this.keys();return py({next:function(){var I=e.next(),t=I.done,C=I.value;return{done:t,value:t?void 0:g.get(C)}}})},e.entries=function(){var g=this,e=this.keys();return py({next:function(){var I=e.next(),t=I.done,C=I.value;return{done:t,value:t?void 0:[C,g.get(C)]}}})},e[wE]=function(){return this.entries()},e.forEach=function(g,e){for(var I,t=Lk(this);!(I=t()).done;){var C=I.value,i=C[0],l=C[1];g.call(e,l,i,this)}},e.merge=function(g){var e=this;return xE(g)&&(g=new Map(g)),VE((function(){bk(g)?Ek(g).forEach((function(I){return e.set(I,g[I])})):Array.isArray(g)?g.forEach((function(g){var I=g[0],t=g[1];return e.set(I,t)})):Qk(g)?(g.constructor!==Map&&Ak(19,g),g.forEach((function(g,I){return e.set(I,g)}))):null!=g&&Ak(20,g)})),this},e.clear=function(){var g=this;VE((function(){fM((function(){for(var e,I=Lk(g.keys());!(e=I()).done;){var t=e.value;g.delete(t)}}))}))},e.replace=function(g){var e=this;return VE((function(){for(var I,t=OE(g),C=new Map,i=!1,l=Lk(e.data_.keys());!(I=l()).done;){var n=I.value;if(!t.has(n))if(e.delete(n))i=!0;else{var A=e.data_.get(n);C.set(n,A)}}for(var d,o=Lk(t.entries());!(d=o()).done;){var s=d.value,a=s[0],V=s[1],c=e.data_.has(a);if(e.set(a,V),e.data_.has(a)){var r=e.data_.get(a);C.set(a,r),c||(i=!0)}}if(!i)if(e.data_.size!==C.size)e.keysAtom_.reportChanged();else for(var h=e.data_.keys(),U=C.keys(),Z=h.next(),R=U.next();!Z.done;){if(Z.value!==R.value){e.keysAtom_.reportChanged();break}Z=h.next(),R=U.next()}e.data_=C})),this},e.toString=function(){return"[object ObservableMap]"},e.toJSON=function(){return Array.from(this)},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&Ak("`observe` doesn't support fireImmediately=true in combination with maps."),mE(this,g)},e.intercept_=function(g){return ZE(this,g)},zk(g,[{key:"size",get:function(){return this.keysAtom_.reportObserved(),this.data_.size}},{key:XE,get:function(){return"Map"}}]),g}(),xE=kk("ObservableMap",vE);function OE(g){if(Qk(g)||xE(g))return g;if(Array.isArray(g))return new Map(g);if(bk(g)){var e=new Map;for(var I in g)e.set(I,g[I]);return e}return Ak(21,g)}var fE,jE,LE={};fE=Symbol.iterator,jE=Symbol.toStringTag;var PE=function(){function g(g,e,I){var t=this;void 0===e&&(e=cQ),void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableSet@"+mk():"ObservableSet"),this.name_=void 0,this[iQ]=LE,this.data_=new Set,this.atom_=void 0,this.changeListeners_=void 0,this.interceptors_=void 0,this.dehancer=void 0,this.enhancer_=void 0,this.name_=I,Nk(Set)||Ak(22),this.enhancer_=function(g,t){return e(g,t,I)},Fy((function(){t.atom_=AQ(t.name_),g&&t.replace(g)}))}var e=g.prototype;return e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.clear=function(){var g=this;VE((function(){fM((function(){for(var e,I=Lk(g.data_.values());!(e=I()).done;){var t=e.value;g.delete(t)}}))}))},e.forEach=function(g,e){for(var I,t=Lk(this);!(I=t()).done;){var C=I.value;g.call(e,C,C,this)}},e.add=function(g){var e=this;if(KM(this.atom_),UE(this)&&!RE(this,{type:zE,object:this,newValue:g}))return this;if(!this.has(g)){VE((function(){e.data_.add(e.enhancer_(g,void 0)),e.atom_.reportChanged()}));var I="production"!==fg.env.NODE_ENV&&RY(),t=FE(this),C=t||I?{observableKind:"set",debugObjectName:this.name_,type:zE,object:this,newValue:g}:null;I&&"production"!==fg.env.NODE_ENV&&mY(C),t&&BE(this,C),I&&"production"!==fg.env.NODE_ENV&&WY()}return this},e.delete=function(g){var e=this;if(UE(this)&&!RE(this,{type:DE,object:this,oldValue:g}))return!1;if(this.has(g)){var I="production"!==fg.env.NODE_ENV&&RY(),t=FE(this),C=t||I?{observableKind:"set",debugObjectName:this.name_,type:DE,object:this,oldValue:g}:null;return I&&"production"!==fg.env.NODE_ENV&&mY(C),VE((function(){e.atom_.reportChanged(),e.data_.delete(g)})),t&&BE(this,C),I&&"production"!==fg.env.NODE_ENV&&WY(),!0}return!1},e.has=function(g){return this.atom_.reportObserved(),this.data_.has(this.dehanceValue_(g))},e.entries=function(){var g=0,e=Array.from(this.keys()),I=Array.from(this.values());return py({next:function(){var t=g;return g+=1,t<I.length?{value:[e[t],I[t]],done:!1}:{done:!0}}})},e.keys=function(){return this.values()},e.values=function(){this.atom_.reportObserved();var g=this,e=0,I=Array.from(this.data_.values());return py({next:function(){return e<I.length?{value:g.dehanceValue_(I[e++]),done:!1}:{done:!0}}})},e.replace=function(g){var e=this;return _E(g)&&(g=new Set(g)),VE((function(){Array.isArray(g)||Mk(g)?(e.clear(),g.forEach((function(g){return e.add(g)}))):null!=g&&Ak("Cannot initialize set from "+g)})),this},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&Ak("`observe` doesn't support fireImmediately=true in combination with sets."),mE(this,g)},e.intercept_=function(g){return ZE(this,g)},e.toJSON=function(){return Array.from(this)},e.toString=function(){return"[object ObservableSet]"},e[fE]=function(){return this.values()},zk(g,[{key:"size",get:function(){return this.atom_.reportObserved(),this.data_.size}},{key:jE,get:function(){return"Set"}}]),g}(),_E=kk("ObservableSet",PE),qE=Object.create(null),$E="remove",gy=function(){function g(g,e,I,t){void 0===e&&(e=new Map),void 0===t&&(t=DQ),this.target_=void 0,this.values_=void 0,this.name_=void 0,this.defaultAnnotation_=void 0,this.keysAtom_=void 0,this.changeListeners_=void 0,this.interceptors_=void 0,this.proxy_=void 0,this.isPlainObject_=void 0,this.appliedAnnotations_=void 0,this.pendingKeys_=void 0,this.target_=g,this.values_=e,this.name_=I,this.defaultAnnotation_=t,this.keysAtom_=new lQ("production"!==fg.env.NODE_ENV?this.name_+".keys":"ObservableObject.keys"),this.isPlainObject_=bk(this.target_),"production"!==fg.env.NODE_ENV&&!by(this.defaultAnnotation_)&&Ak("defaultAnnotation must be valid annotation"),"production"!==fg.env.NODE_ENV&&(this.appliedAnnotations_={})}var e=g.prototype;return e.getObservablePropValue_=function(g){return this.values_.get(g).get()},e.setObservablePropValue_=function(g,e){var I=this.values_.get(g);if(I instanceof yM)return I.set(e),!0;if(UE(this)){var t=RE(this,{type:bE,object:this.proxy_||this.target_,name:g,newValue:e});if(!t)return null;e=t.newValue}if((e=I.prepareNewValue_(e))!==eY.UNCHANGED){var C=FE(this),i="production"!==fg.env.NODE_ENV&&RY(),l=C||i?{type:bE,observableKind:"object",debugObjectName:this.name_,object:this.proxy_||this.target_,oldValue:I.value_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&i&&mY(l),I.setNewValue_(e),C&&BE(this,l),"production"!==fg.env.NODE_ENV&&i&&WY()}return!0},e.get_=function(g){return eY.trackingDerivation&&!wk(this.target_,g)&&this.has_(g),this.target_[g]},e.set_=function(g,e,I){return void 0===I&&(I=!1),wk(this.target_,g)?this.values_.has(g)?this.setObservablePropValue_(g,e):I?Reflect.set(this.target_,g,e):(this.target_[g]=e,!0):this.extend_(g,{value:e,enumerable:!0,writable:!0,configurable:!0},this.defaultAnnotation_,I)},e.has_=function(g){if(!eY.trackingDerivation)return g in this.target_;this.pendingKeys_||(this.pendingKeys_=new Map);var e=this.pendingKeys_.get(g);return e||(e=new QM(g in this.target_,hQ,"production"!==fg.env.NODE_ENV?this.name_+"."+Jk(g)+"?":"ObservableObject.key?",!1),this.pendingKeys_.set(g,e)),e.get()},e.make_=function(g,e){if(!0===e&&(e=this.defaultAnnotation_),!1!==e){if(ly(this,e,g),!(g in this.target_)){var I;if(null!=(I=this.target_[qk])&&I[g])return;Ak(1,e.annotationType_,this.name_+"."+g.toString())}for(var t=this.target_;t&&t!==ck;){var C=ak(t,g);if(C){var i=e.make_(this,g,C,t);if(0===i)return;if(1===i)break}t=Object.getPrototypeOf(t)}iy(this,e,g)}},e.extend_=function(g,e,I,t){if(void 0===t&&(t=!1),!0===I&&(I=this.defaultAnnotation_),!1===I)return this.defineProperty_(g,e,t);ly(this,I,g);var C=I.extend_(this,g,e,t);return C&&iy(this,I,g),C},e.defineProperty_=function(g,e,I){void 0===I&&(I=!1),KM(this.keysAtom_);try{iY();var t=this.delete_(g);if(!t)return t;if(UE(this)){var C=RE(this,{object:this.proxy_||this.target_,name:g,type:zE,newValue:e.value});if(!C)return null;var i=C.newValue;e.value!==i&&(e=Dk({},e,{value:i}))}if(I){if(!Reflect.defineProperty(this.target_,g,e))return!1}else Vk(this.target_,g,e);this.notifyPropertyAddition_(g,e.value)}finally{lY()}return!0},e.defineObservableProperty_=function(g,e,I,t){void 0===t&&(t=!1),KM(this.keysAtom_);try{iY();var C=this.delete_(g);if(!C)return C;if(UE(this)){var i=RE(this,{object:this.proxy_||this.target_,name:g,type:zE,newValue:e});if(!i)return null;e=i.newValue}var l=ty(g),n={configurable:!eY.safeDescriptors||this.isPlainObject_,enumerable:!0,get:l.get,set:l.set};if(t){if(!Reflect.defineProperty(this.target_,g,n))return!1}else Vk(this.target_,g,n);var A=new QM(e,I,"production"!==fg.env.NODE_ENV?this.name_+"."+g.toString():"ObservableObject.key",!1);this.values_.set(g,A),this.notifyPropertyAddition_(g,A.value_)}finally{lY()}return!0},e.defineComputedProperty_=function(g,e,I){void 0===I&&(I=!1),KM(this.keysAtom_);try{iY();var t=this.delete_(g);if(!t)return t;if(UE(this)&&!RE(this,{object:this.proxy_||this.target_,name:g,type:zE,newValue:void 0}))return null;e.name||(e.name="production"!==fg.env.NODE_ENV?this.name_+"."+g.toString():"ObservableObject.key"),e.context=this.proxy_||this.target_;var C=ty(g),i={configurable:!eY.safeDescriptors||this.isPlainObject_,enumerable:!1,get:C.get,set:C.set};if(I){if(!Reflect.defineProperty(this.target_,g,i))return!1}else Vk(this.target_,g,i);this.values_.set(g,new yM(e)),this.notifyPropertyAddition_(g,void 0)}finally{lY()}return!0},e.delete_=function(g,e){if(void 0===e&&(e=!1),KM(this.keysAtom_),!wk(this.target_,g))return!0;if(UE(this)&&!RE(this,{object:this.proxy_||this.target_,name:g,type:$E}))return null;try{var I,t;iY();var C,i=FE(this),l="production"!==fg.env.NODE_ENV&&RY(),n=this.values_.get(g),A=void 0;if(n||!i&&!l||(A=null==(C=ak(this.target_,g))?void 0:C.value),e){if(!Reflect.deleteProperty(this.target_,g))return!1}else delete this.target_[g];if("production"!==fg.env.NODE_ENV&&delete this.appliedAnnotations_[g],n&&(this.values_.delete(g),n instanceof QM&&(A=n.value_),AY(n)),this.keysAtom_.reportChanged(),null==(I=this.pendingKeys_)||null==(t=I.get(g))||t.set(g in this.target_),i||l){var d={type:$E,observableKind:"object",object:this.proxy_||this.target_,debugObjectName:this.name_,oldValue:A,name:g};"production"!==fg.env.NODE_ENV&&l&&mY(d),i&&BE(this,d),"production"!==fg.env.NODE_ENV&&l&&WY()}}finally{lY()}return!0},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&Ak("`observe` doesn't support the fire immediately property for observable objects."),mE(this,g)},e.intercept_=function(g){return ZE(this,g)},e.notifyPropertyAddition_=function(g,e){var I,t,C=FE(this),i="production"!==fg.env.NODE_ENV&&RY();if(C||i){var l=C||i?{type:zE,observableKind:"object",debugObjectName:this.name_,object:this.proxy_||this.target_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&i&&mY(l),C&&BE(this,l),"production"!==fg.env.NODE_ENV&&i&&WY()}null==(I=this.pendingKeys_)||null==(t=I.get(g))||t.set(!0),this.keysAtom_.reportChanged()},e.ownKeys_=function(){return this.keysAtom_.reportObserved(),yk(this.target_)},e.keys_=function(){return this.keysAtom_.reportObserved(),Object.keys(this.target_)},g}();function ey(g,e){var I;if("production"!==fg.env.NODE_ENV&&e&&Cy(g)&&Ak("Options can't be provided for already observable objects."),wk(g,iQ))return"production"!==fg.env.NODE_ENV&&!(Zy(g)instanceof gy)&&Ak("Cannot convert '"+Ry(g)+"' into observable object:\nThe target is already observable of different type.\nExtending builtins is not supported."),g;"production"!==fg.env.NODE_ENV&&!Object.isExtensible(g)&&Ak("Cannot make the designated object observable; it is not extensible");var t=null!=(I=null==e?void 0:e.name)?I:"production"!==fg.env.NODE_ENV?(bk(g)?"ObservableObject":g.constructor.name)+"@"+mk():"ObservableObject",C=new gy(g,new Map,String(t),lM(e));return Tk(g,iQ,C),g}var Iy=kk("ObservableObjectAdministration",gy);function ty(g){return qE[g]||(qE[g]={get:function(){return this[iQ].getObservablePropValue_(g)},set:function(e){return this[iQ].setObservablePropValue_(g,e)}})}function Cy(g){return!!Sk(g)&&Iy(g[iQ])}function iy(g,e,I){var t;"production"!==fg.env.NODE_ENV&&(g.appliedAnnotations_[I]=e),null==(t=g.target_[qk])||delete t[I]}function ly(g,e,I){if("production"!==fg.env.NODE_ENV&&!by(e)&&Ak("Cannot annotate '"+g.name_+"."+I.toString()+"': Invalid annotation."),"production"!==fg.env.NODE_ENV&&!RQ(e)&&wk(g.appliedAnnotations_,I)){var t=g.name_+"."+I.toString(),C=g.appliedAnnotations_[I].annotationType_;Ak("Cannot apply '"+e.annotationType_+"' to '"+t+"':\nThe field is already annotated with '"+C+"'.\nRe-annotating fields is not allowed.\nUse 'override' annotation for methods overridden by subclass.")}}var ny=Vy(0),Ay=function(){var g=!1,e={};return Object.defineProperty(e,"0",{set:function(){g=!0}}),Object.create(e)[0]=1,!1===g}(),dy=0,oy=function(){};function sy(g,e){Object.setPrototypeOf?Object.setPrototypeOf(g.prototype,e):void 0!==g.prototype.__proto__?g.prototype.__proto__=e:g.prototype=e}sy(oy,Array.prototype);var ay=function(g,e,I){function t(e,I,t,C){var i;return void 0===t&&(t="production"!==fg.env.NODE_ENV?"ObservableArray@"+mk():"ObservableArray"),void 0===C&&(C=!1),i=g.call(this)||this,Fy((function(){var g=new GE(t,I,C,!0);g.proxy_=Ok(i),Gk(Ok(i),iQ,g),e&&e.length&&i.spliceWithArray(0,0,e),Ay&&Object.defineProperty(Ok(i),"0",ny)})),i}vk(t,g);var C=t.prototype;return C.concat=function(){this[iQ].atom_.reportObserved();for(var g=arguments.length,e=new Array(g),I=0;I<g;I++)e[I]=arguments[I];return Array.prototype.concat.apply(this.slice(),e.map((function(g){return HE(g)?g.slice():g})))},C[I]=function(){var g=this,e=0;return py({next:function(){return e<g.length?{value:g[e++],done:!1}:{done:!0,value:void 0}}})},zk(t,[{key:"length",get:function(){return this[iQ].getArrayLength_()},set:function(g){this[iQ].setArrayLength_(g)}},{key:e,get:function(){return"Array"}}]),t}(oy,Symbol.toStringTag,Symbol.iterator);function Vy(g){return{enumerable:!1,configurable:!0,get:function(){return this[iQ].get_(g)},set:function(e){this[iQ].set_(g,e)}}}function cy(g){Vk(ay.prototype,""+g,Vy(g))}function ry(g){if(g>dy){for(var e=dy;e<g+100;e++)cy(e);dy=g}}function hy(g,e,I){return new ay(g,e,I)}function Uy(g,e){if("object"==typeof g&&null!==g){if(HE(g))return void 0!==e&&Ak(23),g[iQ].atom_;if(_E(g))return g.atom_;if(xE(g)){if(void 0===e)return g.keysAtom_;var I=g.data_.get(e)||g.hasMap_.get(e);return I||Ak(25,e,Ry(g)),I}if(Cy(g)){if(!e)return Ak(26);var t=g[iQ].values_.get(e);return t||Ak(27,e,Ry(g)),t}if(nQ(g)||JM(g)||ZY(g))return g}else if(Nk(g)&&ZY(g[iQ]))return g[iQ];Ak(28)}function Zy(g,e){return g||Ak(29),nQ(g)||JM(g)||ZY(g)||xE(g)||_E(g)?g:g[iQ]?g[iQ]:void Ak(24,g)}function Ry(g,e){var I;if(void 0!==e)I=Uy(g,e);else{if(JY(g))return g.name;I=Cy(g)||xE(g)||_E(g)?Zy(g):Uy(g)}return I.name_}function Fy(g){var e=jM(),I=bM(!0);iY();try{return g()}finally{lY(),uM(I),LM(e)}}Object.entries(QE).forEach((function(g){var e=g[0],I=g[1];"concat"!==e&&Tk(ay.prototype,e,I)})),ry(1e3);var my=ck.toString;function By(g,e,I){return void 0===I&&(I=-1),Wy(g,e,I)}function Wy(g,e,I,t,C){if(g===e)return 0!==g||1/g==1/e;if(null==g||null==e)return!1;if(g!=g)return e!=e;var i=typeof g;if("function"!==i&&"object"!==i&&"object"!=typeof e)return!1;var l=my.call(g);if(l!==my.call(e))return!1;switch(l){case"[object RegExp]":case"[object String]":return""+g==""+e;case"[object Number]":return+g!=+g?+e!=+e:0==+g?1/+g==1/e:+g==+e;case"[object Date]":case"[object Boolean]":return+g==+e;case"[object Symbol]":return typeof Symbol<"u"&&Symbol.valueOf.call(g)===Symbol.valueOf.call(e);case"[object Map]":case"[object Set]":I>=0&&I++}g=Ny(g),e=Ny(e);var n="[object Array]"===l;if(!n){if("object"!=typeof g||"object"!=typeof e)return!1;var A=g.constructor,d=e.constructor;if(A!==d&&!(Nk(A)&&A instanceof A&&Nk(d)&&d instanceof d)&&"constructor"in g&&"constructor"in e)return!1}if(0===I)return!1;I<0&&(I=-1),C=C||[];for(var o=(t=t||[]).length;o--;)if(t[o]===g)return C[o]===e;if(t.push(g),C.push(e),n){if((o=g.length)!==e.length)return!1;for(;o--;)if(!Wy(g[o],e[o],I-1,t,C))return!1}else{var s,a=Object.keys(g);if(o=a.length,Object.keys(e).length!==o)return!1;for(;o--;)if(!wk(e,s=a[o])||!Wy(g[s],e[s],I-1,t,C))return!1}return t.pop(),C.pop(),!0}function Ny(g){return HE(g)?g.slice():Qk(g)||xE(g)||Mk(g)||_E(g)?Array.from(g.entries()):g}function py(g){return g[Symbol.iterator]=Sy,g}function Sy(){return this}function by(g){return g instanceof Object&&"string"==typeof g.annotationType_&&Nk(g.make_)&&Nk(g.extend_)}["Symbol","Map","Set"].forEach((function(g){typeof ok()[g]>"u"&&Ak("MobX requires global '"+g+"' to be available or polyfilled")})),"object"==typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__&&__MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({spy:NY,extras:{getDebugName:Ry},$mobx:iQ});const uy="function"==typeof String.prototype.normalize?g=>g.normalize("NFKD"):g=>g;class Ty{constructor(g,e,I=0,t=g.length,C,i){this.test=i,this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=g.iterRange(I,t),this.bufferStart=I,this.normalize=C?g=>C(uy(g)):uy,this.query=this.normalize(e)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return-1;this.bufferPos=0,this.buffer=this.iter.value}return xI(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let g=this.peek();if(g<0)return this.done=!0,this;let e=OI(g),I=this.bufferStart+this.bufferPos;this.bufferPos+=fI(g);let t=this.normalize(e);for(let g=0,C=I;;g++){let i=t.charCodeAt(g),l=this.match(i,C,this.bufferPos+this.bufferStart);if(g==t.length-1){if(l)return this.value=l,this;break}C==I&&g<e.length&&e.charCodeAt(g)==i&&C++}}}match(g,e,I){let t=null;for(let e=0;e<this.matches.length;e+=2){let C=this.matches[e],i=!1;this.query.charCodeAt(C)==g&&(C==this.query.length-1?t={from:this.matches[e+1],to:I}:(this.matches[e]++,i=!0)),i||(this.matches.splice(e,2),e-=2)}return this.query.charCodeAt(0)==g&&(1==this.query.length?t={from:e,to:I}:this.matches.push(1,e)),t&&this.test&&!this.test(t.from,t.to,this.buffer,this.bufferStart)&&(t=null),t}}typeof Symbol<"u"&&(Ty.prototype[Symbol.iterator]=function(){return this});const Gy={from:-1,to:-1,match:/.*/.exec("")},ky="gm"+(null==/x/.unicode?"":"u");class Qy{constructor(g,e,I,t=0,C=g.length){if(this.text=g,this.to=C,this.curLine="",this.done=!1,this.value=Gy,/\\[sWDnr]|\n|\r|\[\^/.test(e))return new Ey(g,e,I,t,C);this.re=new RegExp(e,ky+(null!=I&&I.ignoreCase?"i":"")),this.test=null==I?void 0:I.test,this.iter=g.iter();let i=g.lineAt(t);this.curLineStart=i.from,this.matchPos=Jy(g,t),this.getLine(this.curLineStart)}getLine(g){this.iter.next(g),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let g=this.matchPos-this.curLineStart;;){this.re.lastIndex=g;let e=this.matchPos<=this.to&&this.re.exec(this.curLine);if(e){let I=this.curLineStart+e.index,t=I+e[0].length;if(this.matchPos=Jy(this.text,t+(I==t?1:0)),I==this.curLineStart+this.curLine.length&&this.nextLine(),(I<t||I>this.value.to)&&(!this.test||this.test(I,t,e)))return this.value={from:I,to:t,match:e},this;g=this.matchPos-this.curLineStart}else{if(!(this.curLineStart+this.curLine.length<this.to))return this.done=!0,this;this.nextLine(),g=0}}}}const My=new WeakMap;class Yy{constructor(g,e){this.from=g,this.text=e}get to(){return this.from+this.text.length}static get(g,e,I){let t=My.get(g);if(!t||t.from>=I||t.to<=e){let t=new Yy(e,g.sliceString(e,I));return My.set(g,t),t}if(t.from==e&&t.to==I)return t;let{text:C,from:i}=t;return i>e&&(C=g.sliceString(e,i)+C,i=e),t.to<I&&(C+=g.sliceString(t.to,I)),My.set(g,new Yy(i,C)),new Yy(e,C.slice(e-i,I-i))}}class Ey{constructor(g,e,I,t,C){this.text=g,this.to=C,this.done=!1,this.value=Gy,this.matchPos=Jy(g,t),this.re=new RegExp(e,ky+(null!=I&&I.ignoreCase?"i":"")),this.test=null==I?void 0:I.test,this.flat=Yy.get(g,t,this.chunkEnd(t+5e3))}chunkEnd(g){return g>=this.to?this.to:this.text.lineAt(g).to}next(){for(;;){let g=this.re.lastIndex=this.matchPos-this.flat.from,e=this.re.exec(this.flat.text);if(e&&!e[0]&&e.index==g&&(this.re.lastIndex=g+1,e=this.re.exec(this.flat.text)),e){let g=this.flat.from+e.index,I=g+e[0].length;if((this.flat.to>=this.to||e.index+e[0].length<=this.flat.text.length-10)&&(!this.test||this.test(g,I,e)))return this.value={from:g,to:I,match:e},this.matchPos=Jy(this.text,I+(g==I?1:0)),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=Yy.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+2*this.flat.text.length))}}}function yy(g){try{return new RegExp(g,ky),!0}catch{return!1}}function Jy(g,e){if(e>=g.length)return e;let I,t=g.lineAt(e);for(;e<t.to&&(I=t.text.charCodeAt(e-t.from))>=56320&&I<57344;)e++;return e}function Hy(g){let e=Gh("input",{class:"cm-textfield",name:"line",value:String(g.state.doc.lineAt(g.state.selection.main.head).number)});function I(){let I=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(e.value);if(!I)return;let{state:t}=g,C=t.doc.lineAt(t.selection.main.head),[,i,l,n,A]=I,d=n?+n.slice(1):0,o=l?+l:C.number;if(l&&A){let g=o/100;i&&(g=g*("-"==i?-1:1)+C.number/t.doc.lines),o=Math.round(t.doc.lines*g)}else l&&i&&(o=o*("-"==i?-1:1)+C.number);let s=t.doc.line(Math.max(1,Math.min(t.doc.lines,o))),a=it.cursor(s.from+Math.max(0,Math.min(d,s.length)));g.dispatch({effects:[wy.of(!1),Vd.scrollIntoView(a.from,{y:"center"})],selection:a}),g.focus()}return{dom:Gh("form",{class:"cm-gotoLine",onkeydown:e=>{27==e.keyCode?(e.preventDefault(),g.dispatch({effects:wy.of(!1)}),g.focus()):13==e.keyCode&&(e.preventDefault(),I())},onsubmit:g=>{g.preventDefault(),I()}},Gh("label",g.state.phrase("Go to line"),": ",e)," ",Gh("button",{class:"cm-button",type:"submit"},g.state.phrase("go")))}}typeof Symbol<"u"&&(Qy.prototype[Symbol.iterator]=Ey.prototype[Symbol.iterator]=function(){return this});const wy=yt.define(),Xy=rt.define({create:()=>!0,update(g,e){for(let I of e.effects)I.is(wy)&&(g=I.value);return g},provide:g=>_o.from(g,(g=>g?Hy:null))}),Ky=g=>{let e=fo(g,Hy);if(!e){let I=[wy.of(!0)];null==g.state.field(Xy,!1)&&I.push(yt.appendConfig.of([Xy,zy])),g.dispatch({effects:I}),e=fo(g,Hy)}return e&&e.dom.querySelector("input").select(),!0},zy=Vd.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),Dy={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100,wholeWords:!1},vy=At.define({combine:g=>qt(g,Dy,{highlightWordAroundCursor:(g,e)=>g||e,minSelectionLength:Math.min,maxMatches:Math.min})});function xy(g){return[_y,Py]}const Oy=Di.mark({class:"cm-selectionMatch"}),fy=Di.mark({class:"cm-selectionMatch cm-selectionMatch-main"});function jy(g,e,I,t){return!(0!=I&&g(e.sliceDoc(I-1,I))==Ot.Word||t!=e.doc.length&&g(e.sliceDoc(t,t+1))==Ot.Word)}function Ly(g,e,I,t){return g(e.sliceDoc(I,I+1))==Ot.Word&&g(e.sliceDoc(t-1,t))==Ot.Word}const Py=Hl.fromClass(class{constructor(g){this.decorations=this.getDeco(g)}update(g){(g.selectionSet||g.docChanged||g.viewportChanged)&&(this.decorations=this.getDeco(g.view))}getDeco(g){let e=g.state.facet(vy),{state:I}=g,t=I.selection;if(t.ranges.length>1)return Di.none;let C,i=t.main,l=null;if(i.empty){if(!e.highlightWordAroundCursor)return Di.none;let g=I.wordAt(i.head);if(!g)return Di.none;l=I.charCategorizer(i.head),C=I.sliceDoc(g.from,g.to)}else{let g=i.to-i.from;if(g<e.minSelectionLength||g>200)return Di.none;if(e.wholeWords){if(C=I.sliceDoc(i.from,i.to),l=I.charCategorizer(i.head),!jy(l,I,i.from,i.to)||!Ly(l,I,i.from,i.to))return Di.none}else if(C=I.sliceDoc(i.from,i.to),!C)return Di.none}let n=[];for(let t of g.visibleRanges){let g=new Ty(I.doc,C,t.from,t.to);for(;!g.next().done;){let{from:t,to:C}=g.value;if((!l||jy(l,I,t,C))&&(i.empty&&t<=i.from&&C>=i.to?n.push(fy.range(t,C)):(t>=i.to||C<=i.from)&&n.push(Oy.range(t,C)),n.length>e.maxMatches))return Di.none}}return Di.set(n)}},{decorations:g=>g.decorations}),_y=Vd.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}}),qy=({state:g,dispatch:e})=>{let{selection:I}=g,t=it.create(I.ranges.map((e=>g.wordAt(e.head)||it.cursor(e.head))),I.mainIndex);return!t.eq(I)&&(e(g.update({selection:t})),!0)};function $y(g,e){let{main:I,ranges:t}=g.selection,C=g.wordAt(I.head),i=C&&C.from==I.from&&C.to==I.to;for(let I=!1,C=new Ty(g.doc,e,t[t.length-1].to);;){if(C.next(),!C.done){if(I&&t.some((g=>g.from==C.value.from)))continue;if(i){let e=g.wordAt(C.value.from);if(!e||e.from!=C.value.from||e.to!=C.value.to)continue}return C.value}if(I)return null;C=new Ty(g.doc,e,0,Math.max(0,t[t.length-1].from-1)),I=!0}}const gJ=({state:g,dispatch:e})=>{let{ranges:I}=g.selection;if(I.some((g=>g.from===g.to)))return qy({state:g,dispatch:e});let t=g.sliceDoc(I[0].from,I[0].to);if(g.selection.ranges.some((e=>g.sliceDoc(e.from,e.to)!=t)))return!1;let C=$y(g,t);return!!C&&(e(g.update({selection:g.selection.addRange(it.range(C.from,C.to),!1),effects:Vd.scrollIntoView(C.to)})),!0)},eJ=At.define({combine:g=>qt(g,{top:!1,caseSensitive:!1,literal:!1,regexp:!1,wholeWord:!1,createPanel:g=>new MJ(g),scrollToMatch:g=>Vd.scrollIntoView(g)})});class IJ{constructor(g){this.search=g.search,this.caseSensitive=!!g.caseSensitive,this.literal=!!g.literal,this.regexp=!!g.regexp,this.replace=g.replace||"",this.valid=!!this.search&&(!this.regexp||yy(this.search)),this.unquoted=this.unquote(this.search),this.wholeWord=!!g.wholeWord}unquote(g){return this.literal?g:g.replace(/\\([nrt\\])/g,((g,e)=>"n"==e?"\n":"r"==e?"\r":"t"==e?"\t":"\\"))}eq(g){return this.search==g.search&&this.replace==g.replace&&this.caseSensitive==g.caseSensitive&&this.regexp==g.regexp&&this.wholeWord==g.wholeWord}create(){return this.regexp?new sJ(this):new lJ(this)}getCursor(g,e=0,I){let t=g.doc?g:_t.create({doc:g});return null==I&&(I=t.doc.length),this.regexp?nJ(this,t,e,I):CJ(this,t,e,I)}}class tJ{constructor(g){this.spec=g}}function CJ(g,e,I,t){return new Ty(e.doc,g.unquoted,I,t,g.caseSensitive?void 0:g=>g.toLowerCase(),g.wholeWord?iJ(e.doc,e.charCategorizer(e.selection.main.head)):void 0)}function iJ(g,e){return(I,t,C,i)=>((i>I||i+C.length<t)&&(i=Math.max(0,I-2),C=g.sliceString(i,Math.min(g.length,t+2))),!(e(AJ(C,I-i))==Ot.Word&&e(dJ(C,I-i))==Ot.Word||e(dJ(C,t-i))==Ot.Word&&e(AJ(C,t-i))==Ot.Word))}class lJ extends tJ{constructor(g){super(g)}nextMatch(g,e,I){let t=CJ(this.spec,g,I,g.doc.length).nextOverlapping();return t.done&&(t=CJ(this.spec,g,0,e).nextOverlapping()),t.done?null:t.value}prevMatchInRange(g,e,I){for(let t=I;;){let I=Math.max(e,t-1e4-this.spec.unquoted.length),C=CJ(this.spec,g,I,t),i=null;for(;!C.nextOverlapping().done;)i=C.value;if(i)return i;if(I==e)return null;t-=1e4}}prevMatch(g,e,I){return this.prevMatchInRange(g,0,e)||this.prevMatchInRange(g,I,g.doc.length)}getReplacement(g){return this.spec.unquote(this.spec.replace)}matchAll(g,e){let I=CJ(this.spec,g,0,g.doc.length),t=[];for(;!I.next().done;){if(t.length>=e)return null;t.push(I.value)}return t}highlight(g,e,I,t){let C=CJ(this.spec,g,Math.max(0,e-this.spec.unquoted.length),Math.min(I+this.spec.unquoted.length,g.doc.length));for(;!C.next().done;)t(C.value.from,C.value.to)}}function nJ(g,e,I,t){return new Qy(e.doc,g.search,{ignoreCase:!g.caseSensitive,test:g.wholeWord?oJ(e.charCategorizer(e.selection.main.head)):void 0},I,t)}function AJ(g,e){return g.slice(XI(g,e,!1),e)}function dJ(g,e){return g.slice(e,XI(g,e))}function oJ(g){return(e,I,t)=>!t[0].length||(g(AJ(t.input,t.index))!=Ot.Word||g(dJ(t.input,t.index))!=Ot.Word)&&(g(dJ(t.input,t.index+t[0].length))!=Ot.Word||g(AJ(t.input,t.index+t[0].length))!=Ot.Word)}class sJ extends tJ{nextMatch(g,e,I){let t=nJ(this.spec,g,I,g.doc.length).next();return t.done&&(t=nJ(this.spec,g,0,e).next()),t.done?null:t.value}prevMatchInRange(g,e,I){for(let t=1;;t++){let C=Math.max(e,I-1e4*t),i=nJ(this.spec,g,C,I),l=null;for(;!i.next().done;)l=i.value;if(l&&(C==e||l.from>C+10))return l;if(C==e)return null}}prevMatch(g,e,I){return this.prevMatchInRange(g,0,e)||this.prevMatchInRange(g,I,g.doc.length)}getReplacement(g){return this.spec.unquote(this.spec.replace).replace(/\$([$&\d+])/g,((e,I)=>"$"==I?"$":"&"==I?g.match[0]:"0"!=I&&+I<g.match.length?g.match[I]:e))}matchAll(g,e){let I=nJ(this.spec,g,0,g.doc.length),t=[];for(;!I.next().done;){if(t.length>=e)return null;t.push(I.value)}return t}highlight(g,e,I,t){let C=nJ(this.spec,g,Math.max(0,e-250),Math.min(I+250,g.doc.length));for(;!C.next().done;)t(C.value.from,C.value.to)}}const aJ=yt.define(),VJ=yt.define(),cJ=rt.define({create:g=>new rJ(bJ(g).create(),null),update(g,e){for(let I of e.effects)I.is(aJ)?g=new rJ(I.value.create(),g.panel):I.is(VJ)&&(g=new rJ(g.query,I.value?SJ:null));return g},provide:g=>_o.from(g,(g=>g.panel))});class rJ{constructor(g,e){this.query=g,this.panel=e}}const hJ=Di.mark({class:"cm-searchMatch"}),UJ=Di.mark({class:"cm-searchMatch cm-searchMatch-selected"}),ZJ=Hl.fromClass(class{constructor(g){this.view=g,this.decorations=this.highlight(g.state.field(cJ))}update(g){let e=g.state.field(cJ);(e!=g.startState.field(cJ)||g.docChanged||g.selectionSet||g.viewportChanged)&&(this.decorations=this.highlight(e))}highlight({query:g,panel:e}){if(!e||!g.spec.valid)return Di.none;let{view:I}=this,t=new iC;for(let e=0,C=I.visibleRanges,i=C.length;e<i;e++){let{from:l,to:n}=C[e];for(;e<i-1&&n>C[e+1].from-500;)n=C[++e].to;g.highlight(I.state,l,n,((g,e)=>{let C=I.state.selection.ranges.some((I=>I.from==g&&I.to==e));t.add(g,e,C?UJ:hJ)}))}return t.finish()}},{decorations:g=>g.decorations});function RJ(g){return e=>{let I=e.state.field(cJ,!1);return I&&I.query.spec.valid?g(e,I):GJ(e)}}const FJ=RJ(((g,{query:e})=>{let{to:I}=g.state.selection.main,t=e.nextMatch(g.state,I,I);if(!t)return!1;let C=it.single(t.from,t.to),i=g.state.facet(eJ);return g.dispatch({selection:C,effects:[JJ(g,t),i.scrollToMatch(C.main,g)],userEvent:"select.search"}),TJ(g),!0})),mJ=RJ(((g,{query:e})=>{let{state:I}=g,{from:t}=I.selection.main,C=e.prevMatch(I,t,t);if(!C)return!1;let i=it.single(C.from,C.to),l=g.state.facet(eJ);return g.dispatch({selection:i,effects:[JJ(g,C),l.scrollToMatch(i.main,g)],userEvent:"select.search"}),TJ(g),!0})),BJ=RJ(((g,{query:e})=>{let I=e.matchAll(g.state,1e3);return!(!I||!I.length||(g.dispatch({selection:it.create(I.map((g=>it.range(g.from,g.to)))),userEvent:"select.search.matches"}),0))})),WJ=({state:g,dispatch:e})=>{let I=g.selection;if(I.ranges.length>1||I.main.empty)return!1;let{from:t,to:C}=I.main,i=[],l=0;for(let e=new Ty(g.doc,g.sliceDoc(t,C));!e.next().done;){if(i.length>1e3)return!1;e.value.from==t&&(l=i.length),i.push(it.range(e.value.from,e.value.to))}return e(g.update({selection:it.create(i,l),userEvent:"select.search.matches"})),!0},NJ=RJ(((g,{query:e})=>{let{state:I}=g,{from:t,to:C}=I.selection.main;if(I.readOnly)return!1;let i=e.nextMatch(I,t,t);if(!i)return!1;let l,n,A=[],d=[];if(i.from==t&&i.to==C&&(n=I.toText(e.getReplacement(i)),A.push({from:i.from,to:i.to,insert:n}),i=e.nextMatch(I,i.from,i.to),d.push(Vd.announce.of(I.phrase("replaced match on line $",I.doc.lineAt(t).number)+"."))),i){let e=0==A.length||A[0].from>=i.to?0:i.to-i.from-n.length;l=it.single(i.from-e,i.to-e),d.push(JJ(g,i)),d.push(I.facet(eJ).scrollToMatch(l.main,g))}return g.dispatch({changes:A,selection:l,effects:d,userEvent:"input.replace"}),!0})),pJ=RJ(((g,{query:e})=>{if(g.state.readOnly)return!1;let I=e.matchAll(g.state,1e9).map((g=>{let{from:I,to:t}=g;return{from:I,to:t,insert:e.getReplacement(g)}}));if(!I.length)return!1;let t=g.state.phrase("replaced $ matches",I.length)+".";return g.dispatch({changes:I,effects:Vd.announce.of(t),userEvent:"input.replace.all"}),!0}));function SJ(g){return g.state.facet(eJ).createPanel(g)}function bJ(g,e){var I,t,C,i,l;let n=g.selection.main,A=n.empty||n.to>n.from+100?"":g.sliceDoc(n.from,n.to);if(e&&!A)return e;let d=g.facet(eJ);return new IJ({search:(null!==(I=null==e?void 0:e.literal)&&void 0!==I?I:d.literal)?A:A.replace(/\n/g,"\\n"),caseSensitive:null!==(t=null==e?void 0:e.caseSensitive)&&void 0!==t?t:d.caseSensitive,literal:null!==(C=null==e?void 0:e.literal)&&void 0!==C?C:d.literal,regexp:null!==(i=null==e?void 0:e.regexp)&&void 0!==i?i:d.regexp,wholeWord:null!==(l=null==e?void 0:e.wholeWord)&&void 0!==l?l:d.wholeWord})}function uJ(g){let e=fo(g,SJ);return e&&e.dom.querySelector("[main-field]")}function TJ(g){let e=uJ(g);e&&e==g.root.activeElement&&e.select()}const GJ=g=>{let e=g.state.field(cJ,!1);if(e&&e.panel){let I=uJ(g);if(I&&I!=g.root.activeElement){let t=bJ(g.state,e.query.spec);t.valid&&g.dispatch({effects:aJ.of(t)}),I.focus(),I.select()}}else g.dispatch({effects:[VJ.of(!0),e?aJ.of(bJ(g.state,e.query.spec)):yt.appendConfig.of(wJ)]});return!0},kJ=g=>{let e=g.state.field(cJ,!1);if(!e||!e.panel)return!1;let I=fo(g,SJ);return I&&I.dom.contains(g.root.activeElement)&&g.focus(),g.dispatch({effects:VJ.of(!1)}),!0},QJ=[{key:"Mod-f",run:GJ,scope:"editor search-panel"},{key:"F3",run:FJ,shift:mJ,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:FJ,shift:mJ,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:kJ,scope:"editor search-panel"},{key:"Mod-Shift-l",run:WJ},{key:"Mod-Alt-g",run:Ky},{key:"Mod-d",run:gJ,preventDefault:!0}];class MJ{constructor(g){this.view=g;let e=this.query=g.state.field(cJ).query.spec;function I(g,e,I){return Gh("button",{class:"cm-button",name:g,onclick:e,type:"button"},I)}this.commit=this.commit.bind(this),this.searchField=Gh("input",{value:e.search,placeholder:YJ(g,"Find"),"aria-label":YJ(g,"Find"),class:"cm-textfield",name:"search",form:"","main-field":"true",onchange:this.commit,onkeyup:this.commit}),this.replaceField=Gh("input",{value:e.replace,placeholder:YJ(g,"Replace"),"aria-label":YJ(g,"Replace"),class:"cm-textfield",name:"replace",form:"",onchange:this.commit,onkeyup:this.commit}),this.caseField=Gh("input",{type:"checkbox",name:"case",form:"",checked:e.caseSensitive,onchange:this.commit}),this.reField=Gh("input",{type:"checkbox",name:"re",form:"",checked:e.regexp,onchange:this.commit}),this.wordField=Gh("input",{type:"checkbox",name:"word",form:"",checked:e.wholeWord,onchange:this.commit}),this.dom=Gh("div",{onkeydown:g=>this.keydown(g),class:"cm-search"},[this.searchField,I("next",(()=>FJ(g)),[YJ(g,"next")]),I("prev",(()=>mJ(g)),[YJ(g,"previous")]),I("select",(()=>BJ(g)),[YJ(g,"all")]),Gh("label",null,[this.caseField,YJ(g,"match case")]),Gh("label",null,[this.reField,YJ(g,"regexp")]),Gh("label",null,[this.wordField,YJ(g,"by word")]),...g.state.readOnly?[]:[Gh("br"),this.replaceField,I("replace",(()=>NJ(g)),[YJ(g,"replace")]),I("replaceAll",(()=>pJ(g)),[YJ(g,"replace all")])],Gh("button",{name:"close",onclick:()=>kJ(g),"aria-label":YJ(g,"close"),type:"button"},["×"])])}commit(){let g=new IJ({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,wholeWord:this.wordField.checked,replace:this.replaceField.value});g.eq(this.query)||(this.query=g,this.view.dispatch({effects:aJ.of(g)}))}keydown(g){pd(this.view,g,"search-panel")?g.preventDefault():13==g.keyCode&&g.target==this.searchField?(g.preventDefault(),(g.shiftKey?mJ:FJ)(this.view)):13==g.keyCode&&g.target==this.replaceField&&(g.preventDefault(),NJ(this.view))}update(g){for(let e of g.transactions)for(let g of e.effects)g.is(aJ)&&!g.value.eq(this.query)&&this.setQuery(g.value)}setQuery(g){this.query=g,this.searchField.value=g.search,this.replaceField.value=g.replace,this.caseField.checked=g.caseSensitive,this.reField.checked=g.regexp,this.wordField.checked=g.wholeWord}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(eJ).top}}function YJ(g,e){return g.state.phrase(e)}const EJ=30,yJ=/[\s\.,:;?!]/;function JJ(g,{from:e,to:I}){let t=g.state.doc.lineAt(e),C=g.state.doc.lineAt(I).to,i=Math.max(t.from,e-EJ),l=Math.min(C,I+EJ),n=g.state.sliceDoc(i,l);if(i!=t.from)for(let g=0;g<EJ;g++)if(!yJ.test(n[g+1])&&yJ.test(n[g])){n=n.slice(g);break}if(l!=C)for(let g=n.length-1;g>n.length-EJ;g--)if(!yJ.test(n[g-1])&&yJ.test(n[g])){n=n.slice(0,g);break}return Vd.announce.of(`${g.state.phrase("current match")}. ${n} ${g.state.phrase("on line")} ${t.number}.`)}const HJ=Vd.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),wJ=[cJ,Zt.low(ZJ),HJ],XJ=g=>{let{state:e}=g,I=e.doc.lineAt(e.selection.main.from),t=fJ(g.state,I.from);return t.line?zJ(g):!!t.block&&OJ(g)};function KJ(g,e){return({state:I,dispatch:t})=>{if(I.readOnly)return!1;let C=g(e,I);return!!C&&(t(I.update(C)),!0)}}const zJ=KJ(qJ,0),DJ=KJ(qJ,1),vJ=KJ(qJ,2),xJ=KJ(_J,0),OJ=KJ(((g,e)=>_J(g,e,PJ(e))),0);function fJ(g,e){let I=g.languageDataAt("commentTokens",e);return I.length?I[0]:{}}const jJ=50;function LJ(g,{open:e,close:I},t,C){let i,l,n=g.sliceDoc(t-jJ,t),A=g.sliceDoc(C,C+jJ),d=/\s*$/.exec(n)[0].length,o=/^\s*/.exec(A)[0].length,s=n.length-d;if(n.slice(s-e.length,s)==e&&A.slice(o,o+I.length)==I)return{open:{pos:t-d,margin:d&&1},close:{pos:C+o,margin:o&&1}};C-t<=2*jJ?i=l=g.sliceDoc(t,C):(i=g.sliceDoc(t,t+jJ),l=g.sliceDoc(C-jJ,C));let a=/^\s*/.exec(i)[0].length,V=/\s*$/.exec(l)[0].length,c=l.length-V-I.length;return i.slice(a,a+e.length)==e&&l.slice(c,c+I.length)==I?{open:{pos:t+a+e.length,margin:/\s/.test(i.charAt(a+e.length))?1:0},close:{pos:C-V-I.length,margin:/\s/.test(l.charAt(c-1))?1:0}}:null}function PJ(g){let e=[];for(let I of g.selection.ranges){let t=g.doc.lineAt(I.from),C=I.to<=t.to?t:g.doc.lineAt(I.to),i=e.length-1;i>=0&&e[i].to>t.from?e[i].to=C.to:e.push({from:t.from+/^\s*/.exec(t.text)[0].length,to:C.to})}return e}function _J(g,e,I=e.selection.ranges){let t=I.map((g=>fJ(e,g.from).block));if(!t.every((g=>g)))return null;let C=I.map(((g,I)=>LJ(e,t[I],g.from,g.to)));if(2!=g&&!C.every((g=>g)))return{changes:e.changes(I.map(((g,e)=>C[e]?[]:[{from:g.from,insert:t[e].open+" "},{from:g.to,insert:" "+t[e].close}])))};if(1!=g&&C.some((g=>g))){let g=[];for(let e,I=0;I<C.length;I++)if(e=C[I]){let C=t[I],{open:i,close:l}=e;g.push({from:i.pos-C.open.length,to:i.pos+i.margin},{from:l.pos-l.margin,to:l.pos+C.close.length})}return{changes:g}}return null}function qJ(g,e,I=e.selection.ranges){let t=[],C=-1;for(let{from:g,to:i}of I){let I=t.length,l=1e9,n=fJ(e,g).line;if(n){for(let I=g;I<=i;){let A=e.doc.lineAt(I);if(A.from>C&&(g==i||i>A.from)){C=A.from;let g=/^\s*/.exec(A.text)[0].length,e=g==A.length,I=A.text.slice(g,g+n.length)==n?g:-1;g<A.text.length&&g<l&&(l=g),t.push({line:A,comment:I,token:n,indent:g,empty:e,single:!1})}I=A.to+1}if(l<1e9)for(let g=I;g<t.length;g++)t[g].indent<t[g].line.text.length&&(t[g].indent=l);t.length==I+1&&(t[I].single=!0)}}if(2!=g&&t.some((g=>g.comment<0&&(!g.empty||g.single)))){let g=[];for(let{line:e,token:I,indent:C,empty:i,single:l}of t)(l||!i)&&g.push({from:e.from+C,insert:I+" "});let I=e.changes(g);return{changes:I,selection:e.selection.map(I,1)}}if(1!=g&&t.some((g=>g.comment>=0))){let g=[];for(let{line:e,comment:I,token:C}of t)if(I>=0){let t=e.from+I,i=t+C.length;" "==e.text[i-e.from]&&i++,g.push({from:t,to:i})}return{changes:g}}return null}const $J=Mt.define(),gH=Mt.define(),eH=At.define(),IH=At.define({combine:g=>qt(g,{minDepth:100,newGroupDelay:500,joinToEvent:(g,e)=>e},{minDepth:Math.max,newGroupDelay:Math.min,joinToEvent:(g,e)=>(I,t)=>g(I,t)||e(I,t)})}),tH=rt.define({create:()=>BH.empty,update(g,e){let I=e.state.facet(IH),t=e.annotation($J);if(t){let C=oH.fromTransaction(e,t.selection),i=t.side,l=0==i?g.undone:g.done;return l=C?sH(l,l.length,I.minDepth,C):UH(l,e.startState.selection),new BH(0==i?t.rest:l,0==i?l:t.rest)}let C=e.annotation(gH);if(("full"==C||"before"==C)&&(g=g.isolate()),!1===e.annotation(Jt.addToHistory))return e.changes.empty?g:g.addMapping(e.changes.desc);let i=oH.fromTransaction(e),l=e.annotation(Jt.time),n=e.annotation(Jt.userEvent);return i?g=g.addChanges(i,l,n,I,e):e.selection&&(g=g.addSelection(e.startState.selection,l,n,I.newGroupDelay)),("full"==C||"after"==C)&&(g=g.isolate()),g},toJSON:g=>({done:g.done.map((g=>g.toJSON())),undone:g.undone.map((g=>g.toJSON()))}),fromJSON:g=>new BH(g.done.map(oH.fromJSON),g.undone.map(oH.fromJSON))});function CH(g={}){return[tH,IH.of(g),Vd.domEventHandlers({beforeinput(g,e){let I="historyUndo"==g.inputType?lH:"historyRedo"==g.inputType?nH:null;return!!I&&(g.preventDefault(),I(e))}})]}function iH(g,e){return function({state:I,dispatch:t}){if(!e&&I.readOnly)return!1;let C=I.field(tH,!1);if(!C)return!1;let i=C.pop(g,I,e);return!!i&&(t(i),!0)}}const lH=iH(0,!1),nH=iH(1,!1),AH=iH(0,!0),dH=iH(1,!0);class oH{constructor(g,e,I,t,C){this.changes=g,this.effects=e,this.mapped=I,this.startSelection=t,this.selectionsAfter=C}setSelAfter(g){return new oH(this.changes,this.effects,this.mapped,this.startSelection,g)}toJSON(){var g,e,I;return{changes:null===(g=this.changes)||void 0===g?void 0:g.toJSON(),mapped:null===(e=this.mapped)||void 0===e?void 0:e.toJSON(),startSelection:null===(I=this.startSelection)||void 0===I?void 0:I.toJSON(),selectionsAfter:this.selectionsAfter.map((g=>g.toJSON()))}}static fromJSON(g){return new oH(g.changes&&_I.fromJSON(g.changes),[],g.mapped&&PI.fromJSON(g.mapped),g.startSelection&&it.fromJSON(g.startSelection),g.selectionsAfter.map(it.fromJSON))}static fromTransaction(g,e){let I=rH;for(let e of g.startState.facet(eH)){let t=e(g);t.length&&(I=I.concat(t))}return!I.length&&g.changes.empty?null:new oH(g.changes.invert(g.startState.doc),I,void 0,e||g.startState.selection,rH)}static selection(g){return new oH(void 0,rH,void 0,void 0,g)}}function sH(g,e,I,t){let C=e+1>I+20?e-I-1:0,i=g.slice(C,e);return i.push(t),i}function aH(g,e){let I=[],t=!1;return g.iterChangedRanges(((g,e)=>I.push(g,e))),e.iterChangedRanges(((g,e,C,i)=>{for(let g=0;g<I.length;){let e=I[g++],l=I[g++];i>=e&&C<=l&&(t=!0)}})),t}function VH(g,e){return g.ranges.length==e.ranges.length&&0===g.ranges.filter(((g,I)=>g.empty!=e.ranges[I].empty)).length}function cH(g,e){return g.length?e.length?g.concat(e):g:e}const rH=[],hH=200;function UH(g,e){if(g.length){let I=g[g.length-1],t=I.selectionsAfter.slice(Math.max(0,I.selectionsAfter.length-hH));return t.length&&t[t.length-1].eq(e)?g:(t.push(e),sH(g,g.length-1,1e9,I.setSelAfter(t)))}return[oH.selection([e])]}function ZH(g){let e=g[g.length-1],I=g.slice();return I[g.length-1]=e.setSelAfter(e.selectionsAfter.slice(0,e.selectionsAfter.length-1)),I}function RH(g,e){if(!g.length)return g;let I=g.length,t=rH;for(;I;){let C=FH(g[I-1],e,t);if(C.changes&&!C.changes.empty||C.effects.length){let e=g.slice(0,I);return e[I-1]=C,e}e=C.mapped,I--,t=C.selectionsAfter}return t.length?[oH.selection(t)]:rH}function FH(g,e,I){let t=cH(g.selectionsAfter.length?g.selectionsAfter.map((g=>g.map(e))):rH,I);if(!g.changes)return oH.selection(t);let C=g.changes.map(e),i=e.mapDesc(g.changes,!0),l=g.mapped?g.mapped.composeDesc(i):i;return new oH(C,yt.mapEffects(g.effects,e),l,g.startSelection.map(i),t)}const mH=/^(input\.type|delete)($|\.)/;class BH{constructor(g,e,I=0,t=void 0){this.done=g,this.undone=e,this.prevTime=I,this.prevUserEvent=t}isolate(){return this.prevTime?new BH(this.done,this.undone):this}addChanges(g,e,I,t,C){let i=this.done,l=i[i.length-1];return i=l&&l.changes&&!l.changes.empty&&g.changes&&(!I||mH.test(I))&&(!l.selectionsAfter.length&&e-this.prevTime<t.newGroupDelay&&t.joinToEvent(C,aH(l.changes,g.changes))||"input.type.compose"==I)?sH(i,i.length-1,t.minDepth,new oH(g.changes.compose(l.changes),cH(g.effects,l.effects),l.mapped,l.startSelection,rH)):sH(i,i.length,t.minDepth,g),new BH(i,rH,e,I)}addSelection(g,e,I,t){let C=this.done.length?this.done[this.done.length-1].selectionsAfter:rH;return C.length>0&&e-this.prevTime<t&&I==this.prevUserEvent&&I&&/^select($|\.)/.test(I)&&VH(C[C.length-1],g)?this:new BH(UH(this.done,g),this.undone,e,I)}addMapping(g){return new BH(RH(this.done,g),RH(this.undone,g),this.prevTime,this.prevUserEvent)}pop(g,e,I){let t=0==g?this.done:this.undone;if(0==t.length)return null;let C=t[t.length-1],i=C.selectionsAfter[0]||e.selection;if(I&&C.selectionsAfter.length)return e.update({selection:C.selectionsAfter[C.selectionsAfter.length-1],annotations:$J.of({side:g,rest:ZH(t),selection:i}),userEvent:0==g?"select.undo":"select.redo",scrollIntoView:!0});if(C.changes){let I=1==t.length?rH:t.slice(0,t.length-1);return C.mapped&&(I=RH(I,C.mapped)),e.update({changes:C.changes,selection:C.startSelection,effects:C.effects,annotations:$J.of({side:g,rest:I,selection:i}),filter:!1,userEvent:0==g?"undo":"redo",scrollIntoView:!0})}return null}}BH.empty=new BH(rH,rH);const WH=[{key:"Mod-z",run:lH,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:nH,preventDefault:!0},{linux:"Ctrl-Shift-z",run:nH,preventDefault:!0},{key:"Mod-u",run:AH,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:dH,preventDefault:!0}];function NH(g,e){return it.create(g.ranges.map(e),g.mainIndex)}function pH(g,e){return g.update({selection:e,scrollIntoView:!0,userEvent:"select"})}function SH({state:g,dispatch:e},I){let t=NH(g.selection,I);return!t.eq(g.selection,!0)&&(e(pH(g,t)),!0)}function bH(g,e){return it.cursor(e?g.to:g.from)}function uH(g,e){return SH(g,(I=>I.empty?g.moveByChar(I,e):bH(I,e)))}function TH(g){return g.textDirectionAt(g.state.selection.main.head)==$i.LTR}const GH=g=>uH(g,!TH(g)),kH=g=>uH(g,TH(g)),QH=g=>uH(g,!1);function MH(g,e){return SH(g,(I=>I.empty?g.moveByGroup(I,e):bH(I,e)))}const YH=g=>MH(g,!TH(g)),EH=g=>MH(g,TH(g));function yH(g,e,I){if(e.type.prop(I))return!0;let t=e.to-e.from;return t&&(t>2||/[^\s,.;:]/.test(g.sliceDoc(e.from,e.to)))||e.firstChild}function JH(g,e,I){let t,C,i=Xa(g).resolveInner(e.head),l=I?ps.closedBy:ps.openedBy;for(let t=e.head;;){let e=I?i.childAfter(t):i.childBefore(t);if(!e)break;yH(g,e,l)?i=e:t=I?e.to:e.from}return C=i.type.prop(l)&&(t=I?hc(g,i.from,1):hc(g,i.to,-1))&&t.matched?I?t.end.to:t.end.from:I?i.to:i.from,it.cursor(C,I?-1:1)}const HH=g=>SH(g,(e=>JH(g.state,e,!TH(g)))),wH=g=>SH(g,(e=>JH(g.state,e,TH(g))));function XH(g,e){return SH(g,(I=>{if(!I.empty)return bH(I,e);let t=g.moveVertically(I,e);return t.head!=I.head?t:g.moveToLineBoundary(I,e)}))}const KH=g=>XH(g,!1),zH=g=>XH(g,!0);function DH(g){let e,I=g.scrollDOM.clientHeight<g.scrollDOM.scrollHeight-2,t=0,C=0;if(I){for(let e of g.state.facet(Vd.scrollMargins)){let I=e(g);null!=I&&I.top&&(t=Math.max(null==I?void 0:I.top,t)),null!=I&&I.bottom&&(C=Math.max(null==I?void 0:I.bottom,C))}e=g.scrollDOM.clientHeight-t-C}else e=(g.dom.ownerDocument.defaultView||window).innerHeight;return{marginTop:t,marginBottom:C,selfScroll:I,height:Math.max(g.defaultLineHeight,e-5)}}function vH(g,e){let I,t=DH(g),{state:C}=g,i=NH(C.selection,(I=>I.empty?g.moveVertically(I,e,t.height):bH(I,e)));if(i.eq(C.selection))return!1;if(t.selfScroll){let e=g.coordsAtPos(C.selection.main.head),l=g.scrollDOM.getBoundingClientRect(),n=l.top+t.marginTop,A=l.bottom-t.marginBottom;e&&e.top>n&&e.bottom<A&&(I=Vd.scrollIntoView(i.main.head,{y:"start",yMargin:e.top-n}))}return g.dispatch(pH(C,i),{effects:I}),!0}const xH=g=>vH(g,!1),OH=g=>vH(g,!0);function fH(g,e,I){let t=g.lineBlockAt(e.head),C=g.moveToLineBoundary(e,I);if(C.head==e.head&&C.head!=(I?t.to:t.from)&&(C=g.moveToLineBoundary(e,I,!1)),!I&&C.head==t.from&&t.length){let I=/^\s*/.exec(g.state.sliceDoc(t.from,Math.min(t.from+100,t.to)))[0].length;I&&e.head!=t.from+I&&(C=it.cursor(t.from+I))}return C}const jH=g=>SH(g,(e=>fH(g,e,!0))),LH=g=>SH(g,(e=>fH(g,e,!1))),PH=g=>SH(g,(e=>fH(g,e,!TH(g)))),_H=g=>SH(g,(e=>fH(g,e,TH(g)))),qH=g=>SH(g,(e=>it.cursor(g.lineBlockAt(e.head).from,1))),$H=g=>SH(g,(e=>it.cursor(g.lineBlockAt(e.head).to,-1)));function gw(g,e,I){let t=!1,C=NH(g.selection,(e=>{let I=hc(g,e.head,-1)||hc(g,e.head,1)||e.head>0&&hc(g,e.head-1,1)||e.head<g.doc.length&&hc(g,e.head+1,-1);if(!I||!I.end)return e;t=!0;let C=I.start.from==e.head?I.end.to:I.end.from;return it.cursor(C)}));return!!t&&(e(pH(g,C)),!0)}const ew=({state:g,dispatch:e})=>gw(g,e);function Iw(g,e){let I=NH(g.state.selection,(g=>{let I=e(g);return it.range(g.anchor,I.head,I.goalColumn,I.bidiLevel||void 0)}));return!I.eq(g.state.selection)&&(g.dispatch(pH(g.state,I)),!0)}function tw(g,e){return Iw(g,(I=>g.moveByChar(I,e)))}const Cw=g=>tw(g,!TH(g)),iw=g=>tw(g,TH(g));function lw(g,e){return Iw(g,(I=>g.moveByGroup(I,e)))}const nw=g=>lw(g,!TH(g)),Aw=g=>lw(g,TH(g)),dw=g=>Iw(g,(e=>JH(g.state,e,!TH(g)))),ow=g=>Iw(g,(e=>JH(g.state,e,TH(g))));function sw(g,e){return Iw(g,(I=>g.moveVertically(I,e)))}const aw=g=>sw(g,!1),Vw=g=>sw(g,!0);function cw(g,e){return Iw(g,(I=>g.moveVertically(I,e,DH(g).height)))}const rw=g=>cw(g,!1),hw=g=>cw(g,!0),Uw=g=>Iw(g,(e=>fH(g,e,!0))),Zw=g=>Iw(g,(e=>fH(g,e,!1))),Rw=g=>Iw(g,(e=>fH(g,e,!TH(g)))),Fw=g=>Iw(g,(e=>fH(g,e,TH(g)))),mw=g=>Iw(g,(e=>it.cursor(g.lineBlockAt(e.head).from))),Bw=g=>Iw(g,(e=>it.cursor(g.lineBlockAt(e.head).to))),Ww=({state:g,dispatch:e})=>(e(pH(g,{anchor:0})),!0),Nw=({state:g,dispatch:e})=>(e(pH(g,{anchor:g.doc.length})),!0),pw=({state:g,dispatch:e})=>(e(pH(g,{anchor:g.selection.main.anchor,head:0})),!0),Sw=({state:g,dispatch:e})=>(e(pH(g,{anchor:g.selection.main.anchor,head:g.doc.length})),!0),bw=({state:g,dispatch:e})=>(e(g.update({selection:{anchor:0,head:g.doc.length},userEvent:"select"})),!0),uw=({state:g,dispatch:e})=>{let I=xw(g).map((({from:e,to:I})=>it.range(e,Math.min(I+1,g.doc.length))));return e(g.update({selection:it.create(I),userEvent:"select"})),!0},Tw=({state:g,dispatch:e})=>{let I=NH(g.selection,(e=>{var I;for(let t=Xa(g).resolveStack(e.from,1);t;t=t.next){let{node:g}=t;if((g.from<e.from&&g.to>=e.to||g.to>e.to&&g.from<=e.from)&&null!==(I=g.parent)&&void 0!==I&&I.parent)return it.range(g.to,g.from)}return e}));return e(pH(g,I)),!0},Gw=({state:g,dispatch:e})=>{let I=g.selection,t=null;return I.ranges.length>1?t=it.create([I.main]):I.main.empty||(t=it.create([it.cursor(I.main.head)])),!!t&&(e(pH(g,t)),!0)};function kw(g,e){if(g.state.readOnly)return!1;let I="delete.selection",{state:t}=g,C=t.changeByRange((t=>{let{from:C,to:i}=t;if(C==i){let l=e(t);l<C?(I="delete.backward",l=Qw(g,l,!1)):l>C&&(I="delete.forward",l=Qw(g,l,!0)),C=Math.min(C,l),i=Math.max(i,l)}else C=Qw(g,C,!1),i=Qw(g,i,!0);return C==i?{range:t}:{changes:{from:C,to:i},range:it.cursor(C,C<t.head?-1:1)}}));return!C.changes.empty&&(g.dispatch(t.update(C,{scrollIntoView:!0,userEvent:I,effects:"delete.selection"==I?Vd.announce.of(t.phrase("Selection deleted")):void 0})),!0)}function Qw(g,e,I){if(g instanceof Vd)for(let t of g.state.facet(Vd.atomicRanges).map((e=>e(g))))t.between(e,e,((g,t)=>{g<e&&t>e&&(e=I?t:g)}));return e}const Mw=(g,e,I)=>kw(g,(t=>{let C,i,l=t.from,{state:n}=g,A=n.doc.lineAt(l);if(I&&!e&&l>A.from&&l<A.from+200&&!/[^ \t]/.test(C=A.text.slice(0,l-A.from))){if("\t"==C[C.length-1])return l-1;let g=hC(C,n.tabSize)%gV(n)||gV(n);for(let e=0;e<g&&" "==C[C.length-1-e];e++)l--;i=l}else i=XI(A.text,l-A.from,e,e)+A.from,i==l&&A.number!=(e?n.doc.lines:1)?i+=e?1:-1:!e&&/[\ufe00-\ufe0f]/.test(A.text.slice(i-A.from,l-A.from))&&(i=XI(A.text,i-A.from,!1,!1)+A.from);return i})),Yw=g=>Mw(g,!1,!0),Ew=g=>Mw(g,!0,!1),yw=(g,e)=>kw(g,(I=>{let t=I.head,{state:C}=g,i=C.doc.lineAt(t),l=C.charCategorizer(t);for(let g=null;;){if(t==(e?i.to:i.from)){t==I.head&&i.number!=(e?C.doc.lines:1)&&(t+=e?1:-1);break}let n=XI(i.text,t-i.from,e)+i.from,A=i.text.slice(Math.min(t,n)-i.from,Math.max(t,n)-i.from),d=l(A);if(null!=g&&d!=g)break;(" "!=A||t!=I.head)&&(g=d),t=n}return t})),Jw=g=>yw(g,!1),Hw=g=>yw(g,!0),ww=g=>kw(g,(e=>{let I=g.lineBlockAt(e.head).to;return e.head<I?I:Math.min(g.state.doc.length,e.head+1)})),Xw=g=>kw(g,(e=>{let I=g.lineBlockAt(e.head).from;return e.head>I?I:Math.max(0,e.head-1)})),Kw=g=>kw(g,(e=>{let I=g.moveToLineBoundary(e,!1).head;return e.head>I?I:Math.max(0,e.head-1)})),zw=g=>kw(g,(e=>{let I=g.moveToLineBoundary(e,!0).head;return e.head<I?I:Math.min(g.state.doc.length,e.head+1)})),Dw=({state:g,dispatch:e})=>{if(g.readOnly)return!1;let I=g.changeByRange((g=>({changes:{from:g.from,to:g.to,insert:pI.of(["",""])},range:it.cursor(g.from)})));return e(g.update(I,{scrollIntoView:!0,userEvent:"input"})),!0},vw=({state:g,dispatch:e})=>{if(g.readOnly)return!1;let I=g.changeByRange((e=>{if(!e.empty||0==e.from||e.from==g.doc.length)return{range:e};let I=e.from,t=g.doc.lineAt(I),C=I==t.from?I-1:XI(t.text,I-t.from,!1)+t.from,i=I==t.to?I+1:XI(t.text,I-t.from,!0)+t.from;return{changes:{from:C,to:i,insert:g.doc.slice(I,i).append(g.doc.slice(C,I))},range:it.cursor(i)}}));return!I.changes.empty&&(e(g.update(I,{scrollIntoView:!0,userEvent:"move.character"})),!0)};function xw(g){let e=[],I=-1;for(let t of g.selection.ranges){let C=g.doc.lineAt(t.from),i=g.doc.lineAt(t.to);if(!t.empty&&t.to==i.from&&(i=g.doc.lineAt(t.to-1)),I>=C.number){let g=e[e.length-1];g.to=i.to,g.ranges.push(t)}else e.push({from:C.from,to:i.to,ranges:[t]});I=i.number+1}return e}function Ow(g,e,I){if(g.readOnly)return!1;let t=[],C=[];for(let e of xw(g)){if(I?e.to==g.doc.length:0==e.from)continue;let i=g.doc.lineAt(I?e.to+1:e.from-1),l=i.length+1;if(I){t.push({from:e.to,to:i.to},{from:e.from,insert:i.text+g.lineBreak});for(let I of e.ranges)C.push(it.range(Math.min(g.doc.length,I.anchor+l),Math.min(g.doc.length,I.head+l)))}else{t.push({from:i.from,to:e.from},{from:e.to,insert:g.lineBreak+i.text});for(let g of e.ranges)C.push(it.range(g.anchor-l,g.head-l))}}return!!t.length&&(e(g.update({changes:t,scrollIntoView:!0,selection:it.create(C,g.selection.mainIndex),userEvent:"move.line"})),!0)}const fw=({state:g,dispatch:e})=>Ow(g,e,!1),jw=({state:g,dispatch:e})=>Ow(g,e,!0);function Lw(g,e,I){if(g.readOnly)return!1;let t=[];for(let e of xw(g))I?t.push({from:e.from,insert:g.doc.slice(e.from,e.to)+g.lineBreak}):t.push({from:e.to,insert:g.lineBreak+g.doc.slice(e.from,e.to)});return e(g.update({changes:t,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const Pw=({state:g,dispatch:e})=>Lw(g,e,!1),_w=({state:g,dispatch:e})=>Lw(g,e,!0),qw=g=>{if(g.state.readOnly)return!1;let{state:e}=g,I=e.changes(xw(e).map((({from:g,to:I})=>(g>0?g--:I<e.doc.length&&I++,{from:g,to:I})))),t=NH(e.selection,(e=>{let I;if(g.lineWrapping){let t=g.lineBlockAt(e.head),C=g.coordsAtPos(e.head,e.assoc||1);C&&(I=t.bottom+g.documentTop-C.bottom+g.defaultLineHeight/2)}return g.moveVertically(e,!0,I)})).map(I);return g.dispatch({changes:I,selection:t,scrollIntoView:!0,userEvent:"delete.line"}),!0};function $w(g,e){if(/\(\)|\[\]|\{\}/.test(g.sliceDoc(e-1,e+1)))return{from:e,to:e};let I,t=Xa(g).resolveInner(e),C=t.childBefore(e),i=t.childAfter(e);return C&&i&&C.to<=e&&i.from>=e&&(I=C.type.prop(ps.closedBy))&&I.indexOf(i.name)>-1&&g.doc.lineAt(C.to).from==g.doc.lineAt(i.from).from&&!/\S/.test(g.sliceDoc(C.to,i.from))?{from:C.to,to:i.from}:null}const gX=IX(!1),eX=IX(!0);function IX(g){return({state:e,dispatch:I})=>{if(e.readOnly)return!1;let t=e.changeByRange((I=>{let{from:t,to:C}=I,i=e.doc.lineAt(t),l=!g&&t==C&&$w(e,t);g&&(t=C=(C<=i.to?i:e.doc.lineAt(C)).to);let n=new tV(e,{simulateBreak:t,simulateDoubleBreak:!!l}),A=IV(n,t);for(null==A&&(A=hC(/^\s*/.exec(e.doc.lineAt(t).text)[0],e.tabSize));C<i.to&&/\s/.test(i.text[C-i.from]);)C++;l?({from:t,to:C}=l):t>i.from&&t<i.from+100&&!/\S/.test(i.text.slice(0,t))&&(t=i.from);let d=["",eV(e,A)];return l&&d.push(eV(e,n.lineIndent(i.from,-1))),{changes:{from:t,to:C,insert:pI.of(d)},range:it.cursor(t+1+d[1].length)}}));return I(e.update(t,{scrollIntoView:!0,userEvent:"input"})),!0}}function tX(g,e){let I=-1;return g.changeByRange((t=>{let C=[];for(let i=t.from;i<=t.to;){let l=g.doc.lineAt(i);l.number>I&&(t.empty||t.to>l.from)&&(e(l,C,t),I=l.number),i=l.to+1}let i=g.changes(C);return{changes:C,range:it.range(i.mapPos(t.anchor,1),i.mapPos(t.head,1))}}))}const CX=({state:g,dispatch:e})=>{if(g.readOnly)return!1;let I=Object.create(null),t=new tV(g,{overrideIndentation:g=>I[g]??-1}),C=tX(g,((e,C,i)=>{let l=IV(t,e.from);if(null==l)return;/\S/.test(e.text)||(l=0);let n=/^\s*/.exec(e.text)[0],A=eV(g,l);(n!=A||i.from<e.from+n.length)&&(I[e.from]=l,C.push({from:e.from,to:e.from+n.length,insert:A}))}));return C.changes.empty||e(g.update(C,{userEvent:"indent"})),!0},iX=({state:g,dispatch:e})=>!g.readOnly&&(e(g.update(tX(g,((e,I)=>{I.push({from:e.from,insert:g.facet($a)})})),{userEvent:"input.indent"})),!0),lX=({state:g,dispatch:e})=>!g.readOnly&&(e(g.update(tX(g,((e,I)=>{let t=/^\s*/.exec(e.text)[0];if(!t)return;let C=hC(t,g.tabSize),i=0,l=eV(g,Math.max(0,C-gV(g)));for(;i<t.length&&i<l.length&&t.charCodeAt(i)==l.charCodeAt(i);)i++;I.push({from:e.from+i,to:e.from+t.length,insert:l.slice(i)})})),{userEvent:"delete.dedent"})),!0),nX=[{key:"Ctrl-b",run:GH,shift:Cw,preventDefault:!0},{key:"Ctrl-f",run:kH,shift:iw},{key:"Ctrl-p",run:KH,shift:aw},{key:"Ctrl-n",run:zH,shift:Vw},{key:"Ctrl-a",run:qH,shift:mw},{key:"Ctrl-e",run:$H,shift:Bw},{key:"Ctrl-d",run:Ew},{key:"Ctrl-h",run:Yw},{key:"Ctrl-k",run:ww},{key:"Ctrl-Alt-h",run:Jw},{key:"Ctrl-o",run:Dw},{key:"Ctrl-t",run:vw},{key:"Ctrl-v",run:OH}],AX=[{key:"ArrowLeft",run:GH,shift:Cw,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:YH,shift:nw,preventDefault:!0},{mac:"Cmd-ArrowLeft",run:PH,shift:Rw,preventDefault:!0},{key:"ArrowRight",run:kH,shift:iw,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:EH,shift:Aw,preventDefault:!0},{mac:"Cmd-ArrowRight",run:_H,shift:Fw,preventDefault:!0},{key:"ArrowUp",run:KH,shift:aw,preventDefault:!0},{mac:"Cmd-ArrowUp",run:Ww,shift:pw},{mac:"Ctrl-ArrowUp",run:xH,shift:rw},{key:"ArrowDown",run:zH,shift:Vw,preventDefault:!0},{mac:"Cmd-ArrowDown",run:Nw,shift:Sw},{mac:"Ctrl-ArrowDown",run:OH,shift:hw},{key:"PageUp",run:xH,shift:rw},{key:"PageDown",run:OH,shift:hw},{key:"Home",run:LH,shift:Zw,preventDefault:!0},{key:"Mod-Home",run:Ww,shift:pw},{key:"End",run:jH,shift:Uw,preventDefault:!0},{key:"Mod-End",run:Nw,shift:Sw},{key:"Enter",run:gX},{key:"Mod-a",run:bw},{key:"Backspace",run:Yw,shift:Yw},{key:"Delete",run:Ew},{key:"Mod-Backspace",mac:"Alt-Backspace",run:Jw},{key:"Mod-Delete",mac:"Alt-Delete",run:Hw},{mac:"Mod-Backspace",run:Kw},{mac:"Mod-Delete",run:zw}].concat(nX.map((g=>({mac:g.key,run:g.run,shift:g.shift})))),dX=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:HH,shift:dw},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:wH,shift:ow},{key:"Alt-ArrowUp",run:fw},{key:"Shift-Alt-ArrowUp",run:Pw},{key:"Alt-ArrowDown",run:jw},{key:"Shift-Alt-ArrowDown",run:_w},{key:"Escape",run:Gw},{key:"Mod-Enter",run:eX},{key:"Alt-l",mac:"Ctrl-l",run:uw},{key:"Mod-i",run:Tw,preventDefault:!0},{key:"Mod-[",run:lX},{key:"Mod-]",run:iX},{key:"Mod-Alt-\\",run:CX},{key:"Shift-Mod-k",run:qw},{key:"Shift-Mod-\\",run:ew},{key:"Mod-/",run:XJ},{key:"Alt-A",run:xJ}].concat(AX),oX={key:"Tab",run:iX,shift:lX};function sX(g){var e=g.Pos;function I(g,e,I){if(e.line===I.line&&e.ch>=I.ch-1){var t=g.getLine(e.line).charCodeAt(e.ch);55296<=t&&t<=55551&&(I.ch+=1)}return{start:e,end:I}}var t=[{keys:"<Left>",type:"keyToKey",toKeys:"h"},{keys:"<Right>",type:"keyToKey",toKeys:"l"},{keys:"<Up>",type:"keyToKey",toKeys:"k"},{keys:"<Down>",type:"keyToKey",toKeys:"j"},{keys:"g<Up>",type:"keyToKey",toKeys:"gk"},{keys:"g<Down>",type:"keyToKey",toKeys:"gj"},{keys:"<Space>",type:"keyToKey",toKeys:"l"},{keys:"<BS>",type:"keyToKey",toKeys:"h"},{keys:"<Del>",type:"keyToKey",toKeys:"x"},{keys:"<C-Space>",type:"keyToKey",toKeys:"W"},{keys:"<C-BS>",type:"keyToKey",toKeys:"B"},{keys:"<S-Space>",type:"keyToKey",toKeys:"w"},{keys:"<S-BS>",type:"keyToKey",toKeys:"b"},{keys:"<C-n>",type:"keyToKey",toKeys:"j"},{keys:"<C-p>",type:"keyToKey",toKeys:"k"},{keys:"<C-[>",type:"keyToKey",toKeys:"<Esc>"},{keys:"<C-c>",type:"keyToKey",toKeys:"<Esc>"},{keys:"<C-[>",type:"keyToKey",toKeys:"<Esc>",context:"insert"},{keys:"<C-c>",type:"keyToKey",toKeys:"<Esc>",context:"insert"},{keys:"<C-Esc>",type:"keyToKey",toKeys:"<Esc>"},{keys:"<C-Esc>",type:"keyToKey",toKeys:"<Esc>",context:"insert"},{keys:"s",type:"keyToKey",toKeys:"cl",context:"normal"},{keys:"s",type:"keyToKey",toKeys:"c",context:"visual"},{keys:"S",type:"keyToKey",toKeys:"cc",context:"normal"},{keys:"S",type:"keyToKey",toKeys:"VdO",context:"visual"},{keys:"<Home>",type:"keyToKey",toKeys:"0"},{keys:"<End>",type:"keyToKey",toKeys:"$"},{keys:"<PageUp>",type:"keyToKey",toKeys:"<C-b>"},{keys:"<PageDown>",type:"keyToKey",toKeys:"<C-f>"},{keys:"<CR>",type:"keyToKey",toKeys:"j^",context:"normal"},{keys:"<Ins>",type:"keyToKey",toKeys:"i",context:"normal"},{keys:"<Ins>",type:"action",action:"toggleOverwrite",context:"insert"},{keys:"H",type:"motion",motion:"moveToTopLine",motionArgs:{linewise:!0,toJumplist:!0}},{keys:"M",type:"motion",motion:"moveToMiddleLine",motionArgs:{linewise:!0,toJumplist:!0}},{keys:"L",type:"motion",motion:"moveToBottomLine",motionArgs:{linewise:!0,toJumplist:!0}},{keys:"h",type:"motion",motion:"moveByCharacters",motionArgs:{forward:!1}},{keys:"l",type:"motion",motion:"moveByCharacters",motionArgs:{forward:!0}},{keys:"j",type:"motion",motion:"moveByLines",motionArgs:{forward:!0,linewise:!0}},{keys:"k",type:"motion",motion:"moveByLines",motionArgs:{forward:!1,linewise:!0}},{keys:"gj",type:"motion",motion:"moveByDisplayLines",motionArgs:{forward:!0}},{keys:"gk",type:"motion",motion:"moveByDisplayLines",motionArgs:{forward:!1}},{keys:"w",type:"motion",motion:"moveByWords",motionArgs:{forward:!0,wordEnd:!1}},{keys:"W",type:"motion",motion:"moveByWords",motionArgs:{forward:!0,wordEnd:!1,bigWord:!0}},{keys:"e",type:"motion",motion:"moveByWords",motionArgs:{forward:!0,wordEnd:!0,inclusive:!0}},{keys:"E",type:"motion",motion:"moveByWords",motionArgs:{forward:!0,wordEnd:!0,bigWord:!0,inclusive:!0}},{keys:"b",type:"motion",motion:"moveByWords",motionArgs:{forward:!1,wordEnd:!1}},{keys:"B",type:"motion",motion:"moveByWords",motionArgs:{forward:!1,wordEnd:!1,bigWord:!0}},{keys:"ge",type:"motion",motion:"moveByWords",motionArgs:{forward:!1,wordEnd:!0,inclusive:!0}},{keys:"gE",type:"motion",motion:"moveByWords",motionArgs:{forward:!1,wordEnd:!0,bigWord:!0,inclusive:!0}},{keys:"{",type:"motion",motion:"moveByParagraph",motionArgs:{forward:!1,toJumplist:!0}},{keys:"}",type:"motion",motion:"moveByParagraph",motionArgs:{forward:!0,toJumplist:!0}},{keys:"(",type:"motion",motion:"moveBySentence",motionArgs:{forward:!1}},{keys:")",type:"motion",motion:"moveBySentence",motionArgs:{forward:!0}},{keys:"<C-f>",type:"motion",motion:"moveByPage",motionArgs:{forward:!0}},{keys:"<C-b>",type:"motion",motion:"moveByPage",motionArgs:{forward:!1}},{keys:"<C-d>",type:"motion",motion:"moveByScroll",motionArgs:{forward:!0,explicitRepeat:!0}},{keys:"<C-u>",type:"motion",motion:"moveByScroll",motionArgs:{forward:!1,explicitRepeat:!0}},{keys:"gg",type:"motion",motion:"moveToLineOrEdgeOfDocument",motionArgs:{forward:!1,explicitRepeat:!0,linewise:!0,toJumplist:!0}},{keys:"G",type:"motion",motion:"moveToLineOrEdgeOfDocument",motionArgs:{forward:!0,explicitRepeat:!0,linewise:!0,toJumplist:!0}},{keys:"g$",type:"motion",motion:"moveToEndOfDisplayLine"},{keys:"g^",type:"motion",motion:"moveToStartOfDisplayLine"},{keys:"g0",type:"motion",motion:"moveToStartOfDisplayLine"},{keys:"0",type:"motion",motion:"moveToStartOfLine"},{keys:"^",type:"motion",motion:"moveToFirstNonWhiteSpaceCharacter"},{keys:"+",type:"motion",motion:"moveByLines",motionArgs:{forward:!0,toFirstChar:!0}},{keys:"-",type:"motion",motion:"moveByLines",motionArgs:{forward:!1,toFirstChar:!0}},{keys:"_",type:"motion",motion:"moveByLines",motionArgs:{forward:!0,toFirstChar:!0,repeatOffset:-1}},{keys:"$",type:"motion",motion:"moveToEol",motionArgs:{inclusive:!0}},{keys:"%",type:"motion",motion:"moveToMatchedSymbol",motionArgs:{inclusive:!0,toJumplist:!0}},{keys:"f<character>",type:"motion",motion:"moveToCharacter",motionArgs:{forward:!0,inclusive:!0}},{keys:"F<character>",type:"motion",motion:"moveToCharacter",motionArgs:{forward:!1}},{keys:"t<character>",type:"motion",motion:"moveTillCharacter",motionArgs:{forward:!0,inclusive:!0}},{keys:"T<character>",type:"motion",motion:"moveTillCharacter",motionArgs:{forward:!1}},{keys:";",type:"motion",motion:"repeatLastCharacterSearch",motionArgs:{forward:!0}},{keys:",",type:"motion",motion:"repeatLastCharacterSearch",motionArgs:{forward:!1}},{keys:"'<register>",type:"motion",motion:"goToMark",motionArgs:{toJumplist:!0,linewise:!0}},{keys:"`<register>",type:"motion",motion:"goToMark",motionArgs:{toJumplist:!0}},{keys:"]`",type:"motion",motion:"jumpToMark",motionArgs:{forward:!0}},{keys:"[`",type:"motion",motion:"jumpToMark",motionArgs:{forward:!1}},{keys:"]'",type:"motion",motion:"jumpToMark",motionArgs:{forward:!0,linewise:!0}},{keys:"['",type:"motion",motion:"jumpToMark",motionArgs:{forward:!1,linewise:!0}},{keys:"]p",type:"action",action:"paste",isEdit:!0,actionArgs:{after:!0,isEdit:!0,matchIndent:!0}},{keys:"[p",type:"action",action:"paste",isEdit:!0,actionArgs:{after:!1,isEdit:!0,matchIndent:!0}},{keys:"]<character>",type:"motion",motion:"moveToSymbol",motionArgs:{forward:!0,toJumplist:!0}},{keys:"[<character>",type:"motion",motion:"moveToSymbol",motionArgs:{forward:!1,toJumplist:!0}},{keys:"|",type:"motion",motion:"moveToColumn"},{keys:"o",type:"motion",motion:"moveToOtherHighlightedEnd",context:"visual"},{keys:"O",type:"motion",motion:"moveToOtherHighlightedEnd",motionArgs:{sameLine:!0},context:"visual"},{keys:"d",type:"operator",operator:"delete"},{keys:"y",type:"operator",operator:"yank"},{keys:"c",type:"operator",operator:"change"},{keys:"=",type:"operator",operator:"indentAuto"},{keys:">",type:"operator",operator:"indent",operatorArgs:{indentRight:!0}},{keys:"<",type:"operator",operator:"indent",operatorArgs:{indentRight:!1}},{keys:"g~",type:"operator",operator:"changeCase"},{keys:"gu",type:"operator",operator:"changeCase",operatorArgs:{toLower:!0},isEdit:!0},{keys:"gU",type:"operator",operator:"changeCase",operatorArgs:{toLower:!1},isEdit:!0},{keys:"n",type:"motion",motion:"findNext",motionArgs:{forward:!0,toJumplist:!0}},{keys:"N",type:"motion",motion:"findNext",motionArgs:{forward:!1,toJumplist:!0}},{keys:"gn",type:"motion",motion:"findAndSelectNextInclusive",motionArgs:{forward:!0}},{keys:"gN",type:"motion",motion:"findAndSelectNextInclusive",motionArgs:{forward:!1}},{keys:"gq",type:"operator",operator:"hardWrap"},{keys:"gw",type:"operator",operator:"hardWrap",operatorArgs:{keepCursor:!0}},{keys:"x",type:"operatorMotion",operator:"delete",motion:"moveByCharacters",motionArgs:{forward:!0},operatorMotionArgs:{visualLine:!1}},{keys:"X",type:"operatorMotion",operator:"delete",motion:"moveByCharacters",motionArgs:{forward:!1},operatorMotionArgs:{visualLine:!0}},{keys:"D",type:"operatorMotion",operator:"delete",motion:"moveToEol",motionArgs:{inclusive:!0},context:"normal"},{keys:"D",type:"operator",operator:"delete",operatorArgs:{linewise:!0},context:"visual"},{keys:"Y",type:"operatorMotion",operator:"yank",motion:"expandToLine",motionArgs:{linewise:!0},context:"normal"},{keys:"Y",type:"operator",operator:"yank",operatorArgs:{linewise:!0},context:"visual"},{keys:"C",type:"operatorMotion",operator:"change",motion:"moveToEol",motionArgs:{inclusive:!0},context:"normal"},{keys:"C",type:"operator",operator:"change",operatorArgs:{linewise:!0},context:"visual"},{keys:"~",type:"operatorMotion",operator:"changeCase",motion:"moveByCharacters",motionArgs:{forward:!0},operatorArgs:{shouldMoveCursor:!0},context:"normal"},{keys:"~",type:"operator",operator:"changeCase",context:"visual"},{keys:"<C-u>",type:"operatorMotion",operator:"delete",motion:"moveToStartOfLine",context:"insert"},{keys:"<C-w>",type:"operatorMotion",operator:"delete",motion:"moveByWords",motionArgs:{forward:!1,wordEnd:!1},context:"insert"},{keys:"<C-w>",type:"idle",context:"normal"},{keys:"<C-i>",type:"action",action:"jumpListWalk",actionArgs:{forward:!0}},{keys:"<C-o>",type:"action",action:"jumpListWalk",actionArgs:{forward:!1}},{keys:"<C-e>",type:"action",action:"scroll",actionArgs:{forward:!0,linewise:!0}},{keys:"<C-y>",type:"action",action:"scroll",actionArgs:{forward:!1,linewise:!0}},{keys:"a",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"charAfter"},context:"normal"},{keys:"A",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"eol"},context:"normal"},{keys:"A",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"endOfSelectedArea"},context:"visual"},{keys:"i",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"inplace"},context:"normal"},{keys:"gi",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"lastEdit"},context:"normal"},{keys:"I",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"firstNonBlank"},context:"normal"},{keys:"gI",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"bol"},context:"normal"},{keys:"I",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{insertAt:"startOfSelectedArea"},context:"visual"},{keys:"o",type:"action",action:"newLineAndEnterInsertMode",isEdit:!0,interlaceInsertRepeat:!0,actionArgs:{after:!0},context:"normal"},{keys:"O",type:"action",action:"newLineAndEnterInsertMode",isEdit:!0,interlaceInsertRepeat:!0,actionArgs:{after:!1},context:"normal"},{keys:"v",type:"action",action:"toggleVisualMode"},{keys:"V",type:"action",action:"toggleVisualMode",actionArgs:{linewise:!0}},{keys:"<C-v>",type:"action",action:"toggleVisualMode",actionArgs:{blockwise:!0}},{keys:"<C-q>",type:"action",action:"toggleVisualMode",actionArgs:{blockwise:!0}},{keys:"gv",type:"action",action:"reselectLastSelection"},{keys:"J",type:"action",action:"joinLines",isEdit:!0},{keys:"gJ",type:"action",action:"joinLines",actionArgs:{keepSpaces:!0},isEdit:!0},{keys:"p",type:"action",action:"paste",isEdit:!0,actionArgs:{after:!0,isEdit:!0}},{keys:"P",type:"action",action:"paste",isEdit:!0,actionArgs:{after:!1,isEdit:!0}},{keys:"r<character>",type:"action",action:"replace",isEdit:!0},{keys:"@<register>",type:"action",action:"replayMacro"},{keys:"q<register>",type:"action",action:"enterMacroRecordMode"},{keys:"R",type:"action",action:"enterInsertMode",isEdit:!0,actionArgs:{replace:!0},context:"normal"},{keys:"R",type:"operator",operator:"change",operatorArgs:{linewise:!0,fullLine:!0},context:"visual",exitVisualBlock:!0},{keys:"u",type:"action",action:"undo",context:"normal"},{keys:"u",type:"operator",operator:"changeCase",operatorArgs:{toLower:!0},context:"visual",isEdit:!0},{keys:"U",type:"operator",operator:"changeCase",operatorArgs:{toLower:!1},context:"visual",isEdit:!0},{keys:"<C-r>",type:"action",action:"redo"},{keys:"m<register>",type:"action",action:"setMark"},{keys:'"<register>',type:"action",action:"setRegister"},{keys:"<C-r><register>",type:"action",action:"insertRegister",context:"insert",isEdit:!0},{keys:"<C-o>",type:"action",action:"oneNormalCommand",context:"insert"},{keys:"zz",type:"action",action:"scrollToCursor",actionArgs:{position:"center"}},{keys:"z.",type:"action",action:"scrollToCursor",actionArgs:{position:"center"},motion:"moveToFirstNonWhiteSpaceCharacter"},{keys:"zt",type:"action",action:"scrollToCursor",actionArgs:{position:"top"}},{keys:"z<CR>",type:"action",action:"scrollToCursor",actionArgs:{position:"top"},motion:"moveToFirstNonWhiteSpaceCharacter"},{keys:"zb",type:"action",action:"scrollToCursor",actionArgs:{position:"bottom"}},{keys:"z-",type:"action",action:"scrollToCursor",actionArgs:{position:"bottom"},motion:"moveToFirstNonWhiteSpaceCharacter"},{keys:".",type:"action",action:"repeatLastEdit"},{keys:"<C-a>",type:"action",action:"incrementNumberToken",isEdit:!0,actionArgs:{increase:!0,backtrack:!1}},{keys:"<C-x>",type:"action",action:"incrementNumberToken",isEdit:!0,actionArgs:{increase:!1,backtrack:!1}},{keys:"<C-t>",type:"action",action:"indent",actionArgs:{indentRight:!0},context:"insert"},{keys:"<C-d>",type:"action",action:"indent",actionArgs:{indentRight:!1},context:"insert"},{keys:"a<register>",type:"motion",motion:"textObjectManipulation"},{keys:"i<register>",type:"motion",motion:"textObjectManipulation",motionArgs:{textObjectInner:!0}},{keys:"/",type:"search",searchArgs:{forward:!0,querySrc:"prompt",toJumplist:!0}},{keys:"?",type:"search",searchArgs:{forward:!1,querySrc:"prompt",toJumplist:!0}},{keys:"*",type:"search",searchArgs:{forward:!0,querySrc:"wordUnderCursor",wholeWordOnly:!0,toJumplist:!0}},{keys:"#",type:"search",searchArgs:{forward:!1,querySrc:"wordUnderCursor",wholeWordOnly:!0,toJumplist:!0}},{keys:"g*",type:"search",searchArgs:{forward:!0,querySrc:"wordUnderCursor",toJumplist:!0}},{keys:"g#",type:"search",searchArgs:{forward:!1,querySrc:"wordUnderCursor",toJumplist:!0}},{keys:":",type:"ex"}],C=t.length,i=[{name:"colorscheme",shortName:"colo"},{name:"map"},{name:"imap",shortName:"im"},{name:"nmap",shortName:"nm"},{name:"vmap",shortName:"vm"},{name:"omap",shortName:"om"},{name:"noremap",shortName:"no"},{name:"nnoremap",shortName:"nn"},{name:"vnoremap",shortName:"vn"},{name:"inoremap",shortName:"ino"},{name:"onoremap",shortName:"ono"},{name:"unmap"},{name:"mapclear",shortName:"mapc"},{name:"nmapclear",shortName:"nmapc"},{name:"vmapclear",shortName:"vmapc"},{name:"imapclear",shortName:"imapc"},{name:"omapclear",shortName:"omapc"},{name:"write",shortName:"w"},{name:"undo",shortName:"u"},{name:"redo",shortName:"red"},{name:"set",shortName:"se"},{name:"setlocal",shortName:"setl"},{name:"setglobal",shortName:"setg"},{name:"sort",shortName:"sor"},{name:"substitute",shortName:"s",possiblyAsync:!0},{name:"startinsert",shortName:"start"},{name:"nohlsearch",shortName:"noh"},{name:"yank",shortName:"y"},{name:"delmarks",shortName:"delm"},{name:"registers",shortName:"reg",excludeFromCommandHistory:!0},{name:"vglobal",shortName:"v"},{name:"delete",shortName:"d"},{name:"join",shortName:"j"},{name:"normal",shortName:"norm"},{name:"global",shortName:"g"}],l=x("");function n(g){var e=g.state.vim;return e.onPasteFn||(e.onPasteFn=function(){e.insertMode||(g.setCursor(ig(g.getCursor(),0,1)),Ig.enterInsertMode(g,{},e))}),e.onPasteFn}var A,d=/[\d]/,o=[g.isWordChar,function(e){return e&&!g.isWordChar(e)&&!/\s/.test(e)}],s=[function(g){return/\S/.test(g)}],a=["<",">"],V=["-",'"',".",":","_","/","+"],c=/^\w$/;try{A=new RegExp("^[\\p{Lu}]$","u")}catch{A=/^[A-Z]$/}function r(g,e){return e>=g.firstLine()&&e<=g.lastLine()}function h(g){return/^[a-z]$/.test(g)}function U(g){return-1!="()[]{}".indexOf(g)}function Z(g){return d.test(g)}function R(g){return A.test(g)}function F(g){return/^\s*$/.test(g)}function m(g){return-1!=".?!".indexOf(g)}function B(g,e){for(var I=0;I<e.length;I++)if(e[I]==g)return!0;return!1}var W={};function N(g,e,I,t,C){if(void 0===e&&!C)throw Error("defaultValue is required unless callback is provided");if(I||(I="string"),W[g]={type:I,defaultValue:e,callback:C},t)for(var i=0;i<t.length;i++)W[t[i]]=W[g];e&&p(g,e)}function p(g,e,I,t){var C=W[g],i=(t=t||{}).scope;if(!C)return new Error("Unknown option: "+g);if("boolean"==C.type){if(e&&!0!==e)return new Error("Invalid argument: "+g+"="+e);!1!==e&&(e=!0)}C.callback?("local"!==i&&C.callback(e,void 0),"global"!==i&&I&&C.callback(e,I)):("local"!==i&&(C.value="boolean"==C.type?!!e:e),"global"!==i&&I&&(I.state.vim.options[g]={value:e}))}function S(g,e,I){var t=W[g],C=(I=I||{}).scope;if(!t)return new Error("Unknown option: "+g);if(t.callback){let g=e&&t.callback(void 0,e);return"global"!==C&&void 0!==g?g:"local"!==C?t.callback():void 0}return("global"!==C&&e&&e.state.vim.options[g]||"local"!==C&&t||{}).value}N("filetype",void 0,"string",["ft"],(function(g,e){if(void 0!==e){if(void 0===g){let g=e.getOption("mode");return"null"==g?"":g}{let I=""==g?"null":g;e.setOption("mode",I)}}})),N("textwidth",80,"number",["tw"],(function(g,e){if(void 0!==e){if(void 0===g)return e.getOption("textwidth");var I=Math.round(g);I>1&&e.setOption("textwidth",I)}}));var b,u=function(){var g=100,e=-1,I=0,t=0,C=new Array(g);function i(i,l){(e+=l)>I?e=I:e<t&&(e=t);var n=C[(g+e)%g];if(n&&!n.find()){var A,d=l>0?1:-1,o=i.getCursor();do{if((n=C[(g+(e+=d))%g])&&(A=n.find())&&!dg(o,A))break}while(e<I&&e>t)}return n}return{cachedCursor:void 0,add:function(i,l,n){var A=C[e%g];function d(I){var t=++e%g,l=C[t];l&&l.clear(),C[t]=i.setBookmark(I)}if(A){var o=A.find();o&&!dg(o,l)&&d(l)}else d(l);d(n),I=e,(t=e-g+1)<0&&(t=0)},find:function(g,I){var t=e,C=i(g,I);return e=t,C&&C.find()},move:i}},T=function(g){return g?{changes:g.changes,expectCursorActivityForChange:g.expectCursorActivityForChange}:{changes:[],expectCursorActivityForChange:!1}};class G{constructor(){this.latestRegister=void 0,this.isPlaying=!1,this.isRecording=!1,this.replaySearchQueries=[],this.onRecordingDone=void 0,this.lastInsertModeChanges=T()}exitMacroRecordMode(){var g=b.macroModeState;g.onRecordingDone&&g.onRecordingDone(),g.onRecordingDone=void 0,g.isRecording=!1}enterMacroRecordMode(g,e){var I=b.registerController.getRegister(e);if(I){if(I.clear(),this.latestRegister=e,g.openDialog){var t=Dg("span",{class:"cm-vim-message"},"recording @"+e);this.onRecordingDone=g.openDialog(t,null,{bottom:!0})}this.isRecording=!0}}}function k(g){return g.state.vim||(g.state.vim={inputState:new O,lastEditInputState:void 0,lastEditActionCommand:void 0,lastHPos:-1,lastHSPos:-1,lastMotion:null,marks:{},insertMode:!1,insertModeReturn:!1,insertModeRepeat:void 0,visualMode:!1,visualLine:!1,visualBlock:!1,lastSelection:null,lastPastedText:null,sel:{},options:{},expectLiteralNext:!1}),g.state.vim}function Q(){for(var g in b={searchQuery:null,searchIsReversed:!1,lastSubstituteReplacePart:void 0,jumpList:u(),macroModeState:new G,lastCharacterSearch:{increment:0,forward:!0,selectedCharacter:""},registerController:new P({}),searchHistoryController:new _,exCommandHistoryController:new _},W){var e=W[g];e.value=e.defaultValue}}var M,Y,E={enterVimMode:function(e){e.setOption("disableInput",!0),e.setOption("showCursorWhenSelecting",!1),g.signal(e,"vim-mode-change",{mode:"normal"}),e.on("cursorActivity",ne),k(e),g.on(e.getInputField(),"paste",n(e))},leaveVimMode:function(e){e.setOption("disableInput",!1),e.off("cursorActivity",ne),g.off(e.getInputField(),"paste",n(e)),e.state.vim=null,fg&&clearTimeout(fg)},buildKeyMap:function(){},getRegisterController:function(){return b.registerController},resetVimGlobalState_:Q,getVimGlobalState_:function(){return b},maybeInitVimState_:k,suppressErrorLogging:!1,InsertModeKey:de,map:function(g,e,I){Ie.map(g,e,I)},unmap:function(g,e){return Ie.unmap(g,e)},noremap:function(g,e,I){Ie.map(g,e,I,!0)},mapclear:function(g){var e=t.length,I=C,i=t.slice(0,e-I);if(t=t.slice(e-I),g)for(var l=i.length-1;l>=0;l--){var n=i[l];if(g!==n.context)if(n.context)this._mapCommand(n);else{var A=["normal","insert","visual"];for(var d in A)if(A[d]!==g){var o=Object.assign({},n);o.context=A[d],this._mapCommand(o)}}}},langmap:v,vimKeyFromEvent:D,setOption:p,getOption:S,defineOption:N,defineEx:function(g,e,I){if(e){if(0!==g.indexOf(e))throw new Error('(Vim.defineEx) "'+e+'" is not a prefix of "'+g+'", command not registered')}else e=g;ee[g]=I,Ie.commandMap_[e]={name:g,shortName:e,type:"api"}},handleKey:function(g,e,I){var t=this.findKey(g,e,I);if("function"==typeof t)return t()},multiSelectHandleKey:function(g,e,I){var t=k(g),C=g,i=!1,l=(t=E.maybeInitVimState_(C)).visualBlock||t.wasInVisualBlock,n=C.isInMultiSelectMode();if(t.wasInVisualBlock&&!n?t.wasInVisualBlock=!1:n&&t.visualBlock&&(t.wasInVisualBlock=!0),"<Esc>"!=e||t.insertMode||t.visualMode||!n||"<Esc>"!=t.status)if(l||!n||C.inVirtualSelectionMode)i=E.handleKey(C,e,I);else{var A=ce(t),d=t.inputState.changeQueueList||[];C.operation((function(){var g;C.curOp&&(C.curOp.isVimOp=!0);var l=0;C.forEachSelection((function(){C.state.vim.inputState.changeQueue=d[l];var g=C.getCursor("head"),t=C.getCursor("anchor"),n=og(g,t)?0:-1,o=og(g,t)?-1:0;g=ig(g,0,n),t=ig(t,0,o),C.state.vim.sel.head=g,C.state.vim.sel.anchor=t,i=E.handleKey(C,e,I),C.virtualSelection&&(d[l]=C.state.vim.inputState.changeQueue,C.state.vim=ce(A)),l++})),null!=(g=C.curOp)&&g.cursorActivity&&!i&&(C.curOp.cursorActivity=!1),C.state.vim=t,t.inputState.changeQueueList=d,t.inputState.changeQueue=null}),!0)}else f(C);return i&&!t.visualMode&&!t.insert&&t.visualMode!=C.somethingSelected()&&Ae(C,t),i},findKey:function(g,e,I){var C,i=k(g),l=g;function n(){if("<Esc>"==e){if(i.visualMode)Bg(l);else{if(!i.insertMode)return;te(l)}return f(l),!0}}return!1===(C=i.insertMode?function(){if(n())return!0;i.inputState.keyBuffer.push(e);var g=i.inputState.keyBuffer.join(""),I=1==e.length,C=q.matchCommand(g,t,i.inputState,"insert"),A=i.inputState.changeQueue;if("none"==C.type)return f(l),!1;if("partial"==C.type){if(C.expectLiteralNext&&(i.expectLiteralNext=!0),M&&window.clearTimeout(M),M=I&&window.setTimeout((function(){i.insertMode&&i.inputState.keyBuffer.length&&f(l)}),S("insertModeEscKeysTimeout")),I){var d=l.listSelections();(!A||A.removed.length!=d.length)&&(A=i.inputState.changeQueue=new j),A.inserted+=e;for(var o=0;o<d.length;o++){var s=sg(d[o].anchor,d[o].head),a=ag(d[o].anchor,d[o].head),V=l.getRange(s,l.state.overwrite?ig(a,0,1):a);A.removed[o]=(A.removed[o]||"")+V}}return!I}if(i.expectLiteralNext=!1,M&&window.clearTimeout(M),C.command&&A){for(d=l.listSelections(),o=0;o<d.length;o++){var c=d[o].head;l.replaceRange(A.removed[o]||"",ig(c,0,-A.inserted.length),c,"+input")}b.macroModeState.lastInsertModeChanges.changes.pop()}return C.command||f(l),C.command}():function(){if(function(){var g=b.macroModeState;if(g.isRecording){if("q"==e)return g.exitMacroRecordMode(),f(l),!0;"mapping"!=I&&function(g,e){if(!g.isPlaying){var I=g.latestRegister,t=b.registerController.getRegister(I);t&&t.pushText(e)}}(g,e)}}()||n())return!0;i.inputState.keyBuffer.push(e);var g=i.inputState.keyBuffer.join("");if(/^[1-9]\d*$/.test(g))return!0;var C=/^(\d*)(.*)$/.exec(g);if(!C)return f(l),!1;var A=i.visualMode?"visual":"normal",d=C[2]||C[1];i.inputState.operatorShortcut&&i.inputState.operatorShortcut.slice(-1)==d&&(d=i.inputState.operatorShortcut);var o=q.matchCommand(d,t,i.inputState,A);return"none"==o.type?(f(l),!1):"partial"==o.type?(o.expectLiteralNext&&(i.expectLiteralNext=!0),!0):"clear"==o.type?(f(l),!0):(i.expectLiteralNext=!1,i.inputState.keyBuffer.length=0,(C=/^(\d*)(.*)$/.exec(g))&&C[1]&&"0"!=C[1]&&i.inputState.pushRepeatDigit(C[1]),o.command)}())?i.insertMode||1!==e.length?void 0:function(){return!0}:!0===C?function(){return!0}:function(){return l.operation((function(){l.curOp.isVimOp=!0;try{"keyToKey"==C.type?w(l,C.toKeys,C):q.processCommand(l,i,C)}catch(g){throw l.state.vim=void 0,k(l),E.suppressErrorLogging,g}return!0}))}},handleEx:function(g,e){Ie.processCommand(g,e)},defineMotion:function(g,e){$[g]=e},defineAction:function(g,e){Ig[g]=e},defineOperator:function(g,e){eg[g]=e},mapCommand:function(g,e,I,t,C){var i={keys:g,type:e};for(var l in i[e]=I,i[e+"Args"]=t,C)i[l]=C[l];Ce(i)},_mapCommand:Ce,defineRegister:function(g,e){var I=b.registerController.registers;if(!g||1!=g.length)throw Error("Register name must be 1 character");if(I[g])throw Error("Register already defined "+g);I[g]=e,V.push(g)},exitVisualMode:Bg,exitInsertMode:te},y=[],J=!1;function H(g){if("<"==g[0]){var e=g.toLowerCase().slice(1,-1),I=e.split("-");if("lt"==(e=I.pop()||""))g="<";else if("space"==e)g=" ";else if("cr"==e)g="\n";else if(z[e]){var t=Y.value,C={key:z[e],target:{value:t,selectionEnd:t.length,selectionStart:t.length}};return Y.onKeyDown&&Y.onKeyDown(C,Y.value,l),void(Y&&Y.onKeyUp&&Y.onKeyUp(C,Y.value,l))}}if("\n"==g){var i=Y;Y=null,i.onClose&&i.onClose(i.value)}else Y.value=(Y.value||"")+g;function l(g){"string"==typeof g?Y.value=g:Y=null}}function w(g,e,I){var t=J;if(I){if(-1!=y.indexOf(I))return;y.push(I),J=0!=I.noremap}try{for(var C,i=k(g),l=/<(?:[CSMA]-)*\w+>|./gi;C=l.exec(e);){var n=C[0],A=i.insertMode;if(Y)H(n);else if(!E.handleKey(g,n,"mapping")&&A&&i.insertMode){if("<"==n[0]){var d=n.toLowerCase().slice(1,-1),o=d.split("-");if("lt"==(d=o.pop()||""))n="<";else if("space"==d)n=" ";else if("cr"==d)n="\n";else{if(z.hasOwnProperty(d)){ae(g,n=z[d]);continue}n=n[0],l.lastIndex=C.index+1}}g.replaceSelection(n)}}}finally{if(y.pop(),J=!!y.length&&t,!y.length&&Y){var s=Y;Y=null,xg(g,s)}}}var X={Return:"CR",Backspace:"BS",Delete:"Del",Escape:"Esc",Insert:"Ins",ArrowLeft:"Left",ArrowRight:"Right",ArrowUp:"Up",ArrowDown:"Down",Enter:"CR"," ":"Space"},K={Shift:1,Alt:1,Command:1,Control:1,CapsLock:1,AltGraph:1,Dead:1,Unidentified:1},z={};function D(e,I){var t,C=e.key;if(!K[C]){C.length>1&&"n"==C[0]&&(C=C.replace("Numpad","")),C=X[C]||C;var i="";if(e.ctrlKey&&(i+="C-"),e.altKey&&(i+="A-"),e.metaKey&&(i+="M-"),g.isMac&&e.altKey&&!e.metaKey&&!e.ctrlKey&&(i=i.slice(2)),(i||C.length>1)&&e.shiftKey&&(i+="S-"),I&&!I.expectLiteralNext&&1==C.length)if(l.keymap&&C in l.keymap)(0!=l.remapCtrl||!i)&&(C=l.keymap[C]);else if(C.charCodeAt(0)>255){var n=(null==(t=e.code)?void 0:t.slice(-1))||"";e.shiftKey||(n=n.toLowerCase()),n&&(C=n)}return(i+=C).length>1&&(i="<"+i+">"),i}}function v(g,e){l.string!==g&&(l=x(g)),l.remapCtrl=e}function x(g){let e={};if(!g)return{keymap:e,string:""};function I(g){return g.split(/\\?(.)/).filter(Boolean)}return g.split(/((?:[^\\,]|\\.)+),/).map((g=>{if(!g)return;const t=g.split(/((?:[^\\;]|\\.)+);/);if(3==t.length){const g=I(t[1]),C=I(t[2]);if(g.length!==C.length)return;for(let I=0;I<g.length;++I)e[g[I]]=C[I]}else if(1==t.length){const t=I(g);if(t.length%2!=0)return;for(let g=0;g<t.length;g+=2)e[t[g]]=t[g+1]}})),{keymap:e,string:g}}"Left|Right|Up|Down|End|Home".split("|").concat(Object.keys(X)).forEach((function(g){z[(X[g]||"").toLowerCase()]=z[g.toLowerCase()]=g})),N("langmap",void 0,"string",["lmap"],(function(g,e){if(void 0===g)return l.string;v(g)}));class O{constructor(){this.prefixRepeat=[],this.motionRepeat=[],this.operator=null,this.operatorArgs=null,this.motion=null,this.motionArgs=null,this.keyBuffer=[],this.registerName=null,this.changeQueue=null}pushRepeatDigit(g){this.operator?this.motionRepeat=this.motionRepeat.concat(g):this.prefixRepeat=this.prefixRepeat.concat(g)}getRepeat(){var g=0;return(this.prefixRepeat.length>0||this.motionRepeat.length>0)&&(g=1,this.prefixRepeat.length>0&&(g*=parseInt(this.prefixRepeat.join(""),10)),this.motionRepeat.length>0&&(g*=parseInt(this.motionRepeat.join(""),10))),g}}function f(e,I){e.state.vim.inputState=new O,e.state.vim.expectLiteralNext=!1,g.signal(e,"vim-command-done",I)}function j(){this.removed=[],this.inserted=""}class L{constructor(g,e,I){this.clear(),this.keyBuffer=[g||""],this.insertModeChanges=[],this.searchQueries=[],this.linewise=!!e,this.blockwise=!!I}setText(g,e,I){this.keyBuffer=[g||""],this.linewise=!!e,this.blockwise=!!I}pushText(g,e){e&&(this.linewise||this.keyBuffer.push("\n"),this.linewise=!0),this.keyBuffer.push(g)}pushInsertModeChanges(g){this.insertModeChanges.push(T(g))}pushSearchQuery(g){this.searchQueries.push(g)}clear(){this.keyBuffer=[],this.insertModeChanges=[],this.searchQueries=[],this.linewise=!1}toString(){return this.keyBuffer.join("")}}class P{constructor(g){this.registers=g,this.unnamedRegister=g['"']=new L,g["."]=new L,g[":"]=new L,g["/"]=new L,g["+"]=new L}pushText(g,e,I,t,C){if("_"!==g){t&&"\n"!==I.charAt(I.length-1)&&(I+="\n");var i=this.isValidRegister(g)?this.getRegister(g):null;if(!i){switch(e){case"yank":this.registers[0]=new L(I,t,C);break;case"delete":case"change":-1==I.indexOf("\n")?this.registers["-"]=new L(I,t):(this.shiftNumericRegisters_(),this.registers[1]=new L(I,t))}return void this.unnamedRegister.setText(I,t,C)}R(g)?i.pushText(I,t):i.setText(I,t,C),"+"===g&&navigator.clipboard.writeText(I),this.unnamedRegister.setText(i.toString(),t)}}getRegister(g){return this.isValidRegister(g)?(g=g.toLowerCase(),this.registers[g]||(this.registers[g]=new L),this.registers[g]):this.unnamedRegister}isValidRegister(g){return g&&(B(g,V)||c.test(g))}shiftNumericRegisters_(){for(var g=9;g>=2;g--)this.registers[g]=this.getRegister(""+(g-1))}}class _{constructor(){this.historyBuffer=[],this.iterator=0,this.initialPrefix=null}nextMatch(g,e){var I=this.historyBuffer,t=e?-1:1;null===this.initialPrefix&&(this.initialPrefix=g);for(var C=this.iterator+t;e?C>=0:C<I.length;C+=t)for(var i=I[C],l=0;l<=i.length;l++)if(this.initialPrefix==i.substring(0,l))return this.iterator=C,i;return C>=I.length?(this.iterator=I.length,this.initialPrefix):C<0?g:void 0}pushInput(g){var e=this.historyBuffer.indexOf(g);e>-1&&this.historyBuffer.splice(e,1),g.length&&this.historyBuffer.push(g)}reset(){this.initialPrefix=null,this.iterator=this.historyBuffer.length}}var q={matchCommand:function(g,e,I,t){var i=function(g,e,I,t){t.operator&&(I="operatorPending");for(var i,l=[],n=[],A=J?e.length-C:0;A<e.length;A++){var d=e[A];"insert"==I&&"insert"!=d.context||d.context&&d.context!=I||t.operator&&"action"==d.type||!(i=lg(g,d.keys))||("partial"==i&&l.push(d),"full"==i&&n.push(d))}return{partial:l.length&&l,full:n.length&&n}}(g,e,t,I);if(!i.full&&!i.partial)return{type:"none"};if(!i.full&&i.partial)return{type:"partial",expectLiteralNext:1==i.partial.length&&"<character>"==i.partial[0].keys.slice(-11)};for(var l,n=0;n<i.full.length;n++){var A=i.full[n];l||(l=A)}if("<character>"==l.keys.slice(-11)||"<register>"==l.keys.slice(-10)){var d=function(g){var e=/^.*(<[^>]+>)$/.exec(g),I=e?e[1]:g.slice(-1);if(I.length>1)switch(I){case"<CR>":case"<S-CR>":I="\n";break;case"<Space>":case"<S-Space>":I=" ";break;default:I=""}return I}(g);if(!d||d.length>1)return{type:"clear"};I.selectedCharacter=d}return{type:"full",command:l}},processCommand:function(g,e,I){switch(e.inputState.repeatOverride=I.repeatOverride,I.type){case"motion":this.processMotion(g,e,I);break;case"operator":this.processOperator(g,e,I);break;case"operatorMotion":this.processOperatorMotion(g,e,I);break;case"action":this.processAction(g,e,I);break;case"search":this.processSearch(g,e,I);break;case"ex":case"keyToEx":this.processEx(g,e,I)}},processMotion:function(g,e,I){e.inputState.motion=I.motion,e.inputState.motionArgs=Cg(I.motionArgs),this.evalInput(g,e)},processOperator:function(g,e,I){var t=e.inputState;if(t.operator){if(t.operator==I.operator)return t.motion="expandToLine",t.motionArgs={linewise:!0,repeat:1},void this.evalInput(g,e);f(g)}t.operator=I.operator,t.operatorArgs=Cg(I.operatorArgs),I.keys.length>1&&(t.operatorShortcut=I.keys),I.exitVisualBlock&&(e.visualBlock=!1,Fg(g)),e.visualMode&&this.evalInput(g,e)},processOperatorMotion:function(g,e,I){var t=e.visualMode,C=Cg(I.operatorMotionArgs);C&&t&&C.visualLine&&(e.visualLine=!0),this.processOperator(g,e,I),t||this.processMotion(g,e,I)},processAction:function(g,e,I){var t=e.inputState,C=t.getRepeat(),i=!!C,l=Cg(I.actionArgs)||{repeat:1};t.selectedCharacter&&(l.selectedCharacter=t.selectedCharacter),I.operator&&this.processOperator(g,e,I),I.motion&&this.processMotion(g,e,I),(I.motion||I.operator)&&this.evalInput(g,e),l.repeat=C||1,l.repeatIsExplicit=i,l.registerName=t.registerName,f(g),e.lastMotion=null,I.isEdit&&this.recordLastEdit(e,t,I),Ig[I.action](g,l,e)},processSearch:function(e,I,t){if(e.getSearchCursor){var C=t.searchArgs.forward,i=t.searchArgs.wholeWordOnly;Hg(e).setReversed(!C);var l=C?"/":"?",n=Hg(e).getQuery(),A=e.getScrollInfo();switch(t.searchArgs.querySrc){case"prompt":var d=b.macroModeState;d.isPlaying?a(d.replaySearchQueries.shift(),!0,!1):xg(e,{onClose:function(g){e.scrollTo(A.left,A.top),a(g,!0,!0);var I=b.macroModeState;I.isRecording&&function(g,e){if(!g.isPlaying){var I=g.latestRegister,t=b.registerController.getRegister(I);t&&t.pushSearchQuery&&t.pushSearchQuery(e)}}(I,g)},prefix:l,desc:"(JavaScript regexp)",onKeyUp:function(g,I,t){var i,l,n,d=D(g);"<Up>"==d||"<Down>"==d?(i="<Up>"==d,l=g.target?g.target.selectionEnd:0,t(I=b.searchHistoryController.nextMatch(I,i)||""),l&&g.target&&(g.target.selectionEnd=g.target.selectionStart=Math.min(l,g.target.value.length))):d&&"<Left>"!=d&&"<Right>"!=d&&b.searchHistoryController.reset();try{n=Og(e,I,!0,!0)}catch{}n?e.scrollIntoView(Lg(e,!C,n),30):(Pg(e),e.scrollTo(A.left,A.top))},onKeyDown:function(I,t,C){var i=D(I);"<Esc>"==i||"<C-c>"==i||"<C-[>"==i||"<BS>"==i&&""==t?(b.searchHistoryController.pushInput(t),b.searchHistoryController.reset(),Og(e,n),Pg(e),e.scrollTo(A.left,A.top),g.e_stop(I),f(e),C(),e.focus()):"<Up>"==i||"<Down>"==i?g.e_stop(I):"<C-u>"==i&&(g.e_stop(I),C(""))}});break;case"wordUnderCursor":var o=Ng(e,{noSymbol:!0}),s=!0;if(o||(o=Ng(e,{noSymbol:!1}),s=!1),!o)return vg(e,"No word under cursor"),void f(e);let I=e.getLine(o.start.line).substring(o.start.ch,o.end.ch);I=s&&i?"\\b"+I+"\\b":function(g){return g.replace(/([.?*+$\[\]\/\\(){}|\-])/g,"\\$1")}(I),b.jumpList.cachedCursor=e.getCursor(),e.setCursor(o.start),a(I,!0,!1)}}function a(g,C,i){b.searchHistoryController.pushInput(g),b.searchHistoryController.reset();try{Og(e,g,C,i)}catch{return vg(e,"Invalid regex: "+g),void f(e)}q.processMotion(e,I,{keys:"",type:"motion",motion:"findNext",motionArgs:{forward:!0,toJumplist:t.searchArgs.toJumplist}})}},processEx:function(e,I,t){function C(g){b.exCommandHistoryController.pushInput(g),b.exCommandHistoryController.reset(),Ie.processCommand(e,g),e.state.vim&&f(e)}function i(I,t,C){var i,l,n=D(I);("<Esc>"==n||"<C-c>"==n||"<C-[>"==n||"<BS>"==n&&""==t)&&(b.exCommandHistoryController.pushInput(t),b.exCommandHistoryController.reset(),g.e_stop(I),f(e),C(),e.focus()),"<Up>"==n||"<Down>"==n?(g.e_stop(I),i="<Up>"==n,l=I.target?I.target.selectionEnd:0,C(t=b.exCommandHistoryController.nextMatch(t,i)||""),l&&I.target&&(I.target.selectionEnd=I.target.selectionStart=Math.min(l,I.target.value.length))):"<C-u>"==n?(g.e_stop(I),C("")):n&&"<Left>"!=n&&"<Right>"!=n&&b.exCommandHistoryController.reset()}"keyToEx"==t.type?Ie.processCommand(e,t.exArgs.input):I.visualMode?xg(e,{onClose:C,prefix:":",value:"'<,'>",onKeyDown:i,selectValueOnOpen:!1}):xg(e,{onClose:C,prefix:":",onKeyDown:i})},evalInput:function(g,t){var C,i,l,n=t.inputState,A=n.motion,d=n.motionArgs||{repeat:1},o=n.operator,s=n.operatorArgs||{},a=n.registerName,V=t.sel,c=Ag(t.visualMode?tg(g,V.head):g.getCursor("head")),r=Ag(t.visualMode?tg(g,V.anchor):g.getCursor("anchor")),h=Ag(c),U=Ag(r);if(o&&this.recordLastEdit(t,n),(l=void 0!==n.repeatOverride?n.repeatOverride:n.getRepeat())>0&&d.explicitRepeat?d.repeatIsExplicit=!0:(d.noRepeat||!d.explicitRepeat&&0===l)&&(l=1,d.repeatIsExplicit=!1),n.selectedCharacter&&(d.selectedCharacter=s.selectedCharacter=n.selectedCharacter),d.repeat=l,f(g),A){var Z=$[A](g,c,d,t,n);if(t.lastMotion=$[A],!Z)return;if(d.toJumplist){var R=b.jumpList,m=R.cachedCursor;m?(pg(g,m,Z),delete R.cachedCursor):pg(g,c,Z)}Z instanceof Array?(i=Z[0],C=Z[1]):C=Z,C||(C=Ag(c)),t.visualMode?(t.visualBlock&&C.ch===1/0||(C=tg(g,C,h)),i&&(i=tg(g,i)),i=i||U,V.anchor=i,V.head=C,Fg(g),Qg(g,t,"<",og(i,C)?i:C),Qg(g,t,">",og(i,C)?C:i)):o||(C=tg(g,C,h),g.setCursor(C.line,C.ch))}if(o){if(s.lastSel){i=U;var B=s.lastSel,W=Math.abs(B.head.line-B.anchor.line),N=Math.abs(B.head.ch-B.anchor.ch);C=B.visualLine?new e(U.line+W,U.ch):B.visualBlock?new e(U.line+W,U.ch+N):B.head.line==B.anchor.line?new e(U.line,U.ch+N):new e(U.line+W,U.ch),t.visualMode=!0,t.visualLine=B.visualLine,t.visualBlock=B.visualBlock,V=t.sel={anchor:i,head:C},Fg(g)}else t.visualMode&&(s.lastSel={anchor:Ag(V.anchor),head:Ag(V.head),visualBlock:t.visualBlock,visualLine:t.visualLine});var p,S,u,T,G;if(t.visualMode){if(p=sg(V.head,V.anchor),S=ag(V.head,V.anchor),u=t.visualLine||s.linewise,T=t.visualBlock?"block":u?"line":"char",G=mg(g,{anchor:(Y=I(g,p,S)).start,head:Y.end},T),u){var k=G.ranges;if("block"==T)for(var Q=0;Q<k.length;Q++)k[Q].head.ch=cg(g,k[Q].head.line);else"line"==T&&(k[0].head=new e(k[0].head.line+1,0))}}else{if(p=Ag(i||U),og(S=Ag(C||h),p)){var M=p;p=S,S=M}(u=d.linewise||s.linewise)?function(g,e,I){e.ch=0,I.ch=0,I.line++}(0,p,S):d.forward&&function(g,e,I){var t=g.getRange(e,I);if(/\n\s*$/.test(t)){var C=t.split("\n");C.pop();for(var i=C.pop();C.length>0&&i&&F(i);i=C.pop())I.line--,I.ch=0;i?(I.line--,I.ch=cg(g,I.line)):I.ch=0}}(g,p,S),T="char";var Y,E=!d.inclusive||u;G=mg(g,{anchor:(Y=I(g,p,S)).start,head:Y.end},T,E)}g.setSelections(G.ranges,G.primary),t.lastMotion=null,s.repeat=l,s.registerName=a,s.linewise=u;var y=eg[o](g,s,G.ranges,U,C);t.visualMode&&Bg(g,null!=y),y&&g.setCursor(y)}},recordLastEdit:function(g,e,I){var t=b.macroModeState;t.isPlaying||(g.lastEditInputState=e,g.lastEditActionCommand=I,t.lastInsertModeChanges.changes=[],t.lastInsertModeChanges.expectCursorActivityForChange=!1,t.lastInsertModeChanges.visualBlock=g.visualBlock?g.sel.head.line-g.sel.anchor.line:0)}},$={moveToTopLine:function(g,I,t){var C=qg(g).top+t.repeat-1;return new e(C,Wg(g.getLine(C)))},moveToMiddleLine:function(g){var I=qg(g),t=Math.floor(.5*(I.top+I.bottom));return new e(t,Wg(g.getLine(t)))},moveToBottomLine:function(g,I,t){var C=qg(g).bottom-t.repeat+1;return new e(C,Wg(g.getLine(C)))},expandToLine:function(g,I,t){return new e(I.line+t.repeat-1,1/0)},findNext:function(g,e,I){var t=Hg(g),C=t.getQuery();if(C){var i=!I.forward;return i=t.isReversed()?!i:i,jg(g,C),Lg(g,i,C,I.repeat)}},findAndSelectNextInclusive:function(I,t,C,i,l){var n=Hg(I),A=n.getQuery();if(A){var d=!C.forward,o=function(g,I,t,C,i){return g.operation((function(){void 0===C&&(C=1);var l=g.getCursor(),n=g.getSearchCursor(t,l),A=n.find(!I);!i.visualMode&&A&&dg(n.from(),l)&&n.find(!I);for(var d=0;d<C;d++)if(!(A=n.find(I))&&!(n=g.getSearchCursor(t,I?new e(g.lastLine()):new e(g.firstLine(),0))).find(I))return;return[n.from(),n.to()]}))}(I,d=n.isReversed()?!d:d,A,C.repeat,i);if(o){if(l.operator)return o;var s=o[0],a=new e(o[1].line,o[1].ch-1);if(i.visualMode){(i.visualLine||i.visualBlock)&&(i.visualLine=!1,i.visualBlock=!1,g.signal(I,"vim-mode-change",{mode:"visual",subMode:""}));var V=i.sel.anchor;if(V)return n.isReversed()?C.forward?[V,s]:[V,a]:C.forward?[V,a]:[V,s]}else i.visualMode=!0,i.visualLine=!1,i.visualBlock=!1,g.signal(I,"vim-mode-change",{mode:"visual",subMode:""});return d?[a,s]:[s,a]}}},goToMark:function(g,e,I,t){var C=$g(g,t,I.selectedCharacter||"");return C?I.linewise?{line:C.line,ch:Wg(g.getLine(C.line))}:C:null},moveToOtherHighlightedEnd:function(g,I,t,C){if(C.visualBlock&&t.sameLine){var i=C.sel;return[tg(g,new e(i.anchor.line,i.head.ch)),tg(g,new e(i.head.line,i.anchor.ch))]}return[C.sel.head,C.sel.anchor]},jumpToMark:function(g,I,t,C){for(var i=I,l=0;l<t.repeat;l++){var n=i;for(var A in C.marks)if(h(A)){var d=C.marks[A].find();if(!((t.forward?og(d,n):og(n,d))||t.linewise&&d.line==n.line)){var o=dg(n,i),s=t.forward?Vg(n,d,i):Vg(i,d,n);(o||s)&&(i=d)}}}return t.linewise&&(i=new e(i.line,Wg(g.getLine(i.line)))),i},moveByCharacters:function(g,I,t){var C=I,i=t.repeat,l=t.forward?C.ch+i:C.ch-i;return new e(C.line,l)},moveByLines:function(g,I,t,C){var i=I,l=i.ch;switch(C.lastMotion){case this.moveByLines:case this.moveByDisplayLines:case this.moveByScroll:case this.moveToColumn:case this.moveToEol:l=C.lastHPos;break;default:C.lastHPos=l}var n=t.repeat+(t.repeatOffset||0),A=t.forward?i.line+n:i.line-n,d=g.firstLine(),o=g.lastLine(),s=g.findPosV(i,t.forward?n:-n,"line",C.lastHSPos);return(t.forward?s.line>A:s.line<A)&&(A=s.line,l=s.ch),A<d&&i.line==d?this.moveToStartOfLine(g,I,t,C):A>o&&i.line==o?Gg(g,I,t,C,!0):(t.toFirstChar&&(l=Wg(g.getLine(A)),C.lastHPos=l),C.lastHSPos=g.charCoords(new e(A,l),"div").left,new e(A,l))},moveByDisplayLines:function(g,I,t,C){var i=I;switch(C.lastMotion){case this.moveByDisplayLines:case this.moveByScroll:case this.moveByLines:case this.moveToColumn:case this.moveToEol:break;default:C.lastHSPos=g.charCoords(i,"div").left}var l=t.repeat,n=g.findPosV(i,t.forward?l:-l,"line",C.lastHSPos);if(n.hitSide)if(t.forward){var A={top:g.charCoords(n,"div").top+8,left:C.lastHSPos};n=g.coordsChar(A,"div")}else{var d=g.charCoords(new e(g.firstLine(),0),"div");d.left=C.lastHSPos,n=g.coordsChar(d,"div")}return C.lastHPos=n.ch,n},moveByPage:function(g,e,I){var t=e,C=I.repeat;return g.findPosV(t,I.forward?C:-C,"page")},moveByParagraph:function(g,e,I){var t=I.forward?1:-1;return Yg(g,e,I.repeat,t).start},moveBySentence:function(g,I,t){var C=t.forward?1:-1;return function(g,I,t,C){function i(g,e){if(e.pos+e.dir<0||e.pos+e.dir>=e.line.length){if(e.ln+=e.dir,!r(g,e.ln))return e.line=null,e.ln=null,void(e.pos=null);e.line=g.getLine(e.ln),e.pos=e.dir>0?0:e.line.length-1}else e.pos+=e.dir}function l(g,e,I,t){var C=""===(d=g.getLine(e)),l={line:d,ln:e,pos:I,dir:t},n={ln:l.ln,pos:l.pos},A=""===l.line;for(i(g,l);null!==l.line;){if(n.ln=l.ln,n.pos=l.pos,""===l.line&&!A)return{ln:l.ln,pos:l.pos};if(C&&""!==l.line&&!F(l.line[l.pos]))return{ln:l.ln,pos:l.pos};m(l.line[l.pos])&&!C&&(l.pos===l.line.length-1||F(l.line[l.pos+1]))&&(C=!0),i(g,l)}var d=g.getLine(n.ln);n.pos=0;for(var o=d.length-1;o>=0;--o)if(!F(d[o])){n.pos=o;break}return n}function n(g,e,I,t){var C={line:g.getLine(e),ln:e,pos:I,dir:t},l={ln:C.ln,pos:null},n=""===C.line;for(i(g,C);null!==C.line;){if(""===C.line&&!n)return null!==l.pos?l:{ln:C.ln,pos:C.pos};if(m(C.line[C.pos])&&null!==l.pos&&(C.ln!==l.ln||C.pos+1!==l.pos))return l;""!==C.line&&!F(C.line[C.pos])&&(n=!1,l={ln:C.ln,pos:C.pos}),i(g,C)}var A=g.getLine(l.ln);l.pos=0;for(var d=0;d<A.length;++d)if(!F(A[d])){l.pos=d;break}return l}for(var A={ln:I.line,pos:I.ch};t>0;)A=C<0?n(g,A.ln,A.pos,C):l(g,A.ln,A.pos,C),t--;return new e(A.ln,A.pos)}(g,I,t.repeat,C)},moveByScroll:function(g,e,I,t){var C,i=g.getScrollInfo(),l=I.repeat;l||(l=i.clientHeight/(2*g.defaultTextHeight()));var n=g.charCoords(e,"local");if(I.repeat=l,!(C=$.moveByDisplayLines(g,e,I,t)))return null;var A=g.charCoords(C,"local");return g.scrollTo(null,i.top+A.top-n.top),C},moveByWords:function(g,I,t){return function(g,I,t,C,i,l){var n=Ag(I),A=[];(C&&!i||!C&&i)&&t++;for(var d=!(C&&i),o=0;o<t;o++){var s=Tg(g,I,C,l,d);if(!s){var a=cg(g,g.lastLine());A.push(C?{line:g.lastLine(),from:a,to:a}:{line:0,from:0,to:0});break}A.push(s),I=new e(s.line,C?s.to-1:s.from)}var V=A.length!=t,c=A[0],r=A.pop();return C&&!i?(!V&&(c.from!=n.ch||c.line!=n.line)&&(r=A.pop()),r&&new e(r.line,r.from)):C&&i?r&&new e(r.line,r.to-1):!C&&i?(!V&&(c.to!=n.ch||c.line!=n.line)&&(r=A.pop()),r&&new e(r.line,r.to)):r&&new e(r.line,r.from)}(g,I,t.repeat,!!t.forward,!!t.wordEnd,!!t.bigWord)},moveTillCharacter:function(g,e,I){var t=kg(g,I.repeat,I.forward,I.selectedCharacter,e),C=I.forward?-1:1;return Sg(C,I),t?(t.ch+=C,t):null},moveToCharacter:function(g,e,I){var t=I.repeat;return Sg(0,I),kg(g,t,I.forward,I.selectedCharacter,e)||e},moveToSymbol:function(g,I,t){var C=t.repeat;return t.selectedCharacter&&function(g,I,t,C){var i=Ag(g.getCursor()),l=t?1:-1,n=t?g.lineCount():-1,A=i.ch,d=i.line,o=g.getLine(d),s={lineText:o,nextCh:o.charAt(A),lastCh:null,index:A,symb:C,reverseSymb:(t?{")":"(","}":"{"}:{"(":")","{":"}"})[C],forward:t,depth:0,curMoveThrough:!1},a=bg[C];if(!a)return i;var V=ug[a].init,c=ug[a].isComplete;for(V&&V(s);d!==n&&I;){if(s.index+=l,s.nextCh=s.lineText.charAt(s.index),!s.nextCh){if(d+=l,s.lineText=g.getLine(d)||"",l>0)s.index=0;else{var r=s.lineText.length;s.index=r>0?r-1:0}s.nextCh=s.lineText.charAt(s.index)}c(s)&&(i.line=d,i.ch=s.index,I--)}return s.nextCh||s.curMoveThrough?new e(d,s.index):i}(g,C,t.forward,t.selectedCharacter)||I},moveToColumn:function(g,I,t,C){var i=t.repeat;return C.lastHPos=i-1,C.lastHSPos=g.charCoords(I,"div").left,function(g,I){var t=g.getCursor().line;return tg(g,new e(t,I-1))}(g,i)},moveToEol:function(g,e,I,t){return Gg(g,e,I,t,!1)},moveToFirstNonWhiteSpaceCharacter:function(g,I){var t=I;return new e(t.line,Wg(g.getLine(t.line)))},moveToMatchedSymbol:function(g,I){for(var t,C=I,i=C.line,l=C.ch,n=g.getLine(i);l<n.length;l++)if((t=n.charAt(l))&&U(t)){var A=g.getTokenTypeAt(new e(i,l+1));if("string"!==A&&"comment"!==A)break}if(l<n.length){var d="<"===t||">"===t?/[(){}[\]<>]/:/[(){}[\]]/;return g.findMatchingBracket(new e(i,l),{bracketRegex:d}).to}return C},moveToStartOfLine:function(g,I){return new e(I.line,0)},moveToLineOrEdgeOfDocument:function(g,I,t){var C=t.forward?g.lastLine():g.firstLine();return t.repeatIsExplicit&&(C=t.repeat-g.getOption("firstLineNumber")),new e(C,Wg(g.getLine(C)))},moveToStartOfDisplayLine:function(g){return g.execCommand("goLineLeft"),g.getCursor()},moveToEndOfDisplayLine:function(g){g.execCommand("goLineRight");var e=g.getCursor();return"before"==e.sticky&&e.ch--,e},textObjectManipulation:function(I,t,C,i){var l=C.selectedCharacter||"";"b"==l?l="(":"B"==l&&(l="{");var n,A,d=!C.textObjectInner;if({"(":")",")":"(","{":"}","}":"{","[":"]","]":"[","<":">",">":"<"}[l]){if(A=!0,!(n=yg(I,t,l,d))){var o=I.getSearchCursor(new RegExp("\\"+l,"g"),t);o.find()&&(n=yg(I,o.from(),l,d))}}else if({"'":!0,'"':!0,"`":!0}[l])A=!0,n=function(g,I,t,C){var i,l,n,A,d=Ag(I),o=g.getLine(d.line).split(""),s=o.indexOf(t);if(d.ch<s)d.ch=s;else if(s<d.ch&&o[d.ch]==t){var a=/string/.test(g.getTokenTypeAt(ig(I,0,1))),V=/string/.test(g.getTokenTypeAt(I));a&&!V||(l=d.ch,--d.ch)}if(o[d.ch]!=t||l)for(n=d.ch;n>-1&&!i;n--)o[n]==t&&(i=n+1);else i=d.ch+1;if(i&&!l)for(n=i,A=o.length;n<A&&!l;n++)o[n]==t&&(l=n);return i&&l?(C&&(--i,++l),{start:new e(d.line,i),end:new e(d.line,l)}):{start:d,end:d}}(I,t,l,d);else if("W"===l||"w"===l)for(var s=C.repeat||1;s-- >0;){var a=Ng(I,{inclusive:d,innerWord:!d,bigWord:"W"===l,noSymbol:"W"===l,multiline:!0},n&&n.end);a&&(n||(n=a),n.end=a.end)}else if("p"===l)if(n=Yg(I,t,C.repeat,0,d),C.linewise=!0,i.visualMode)i.visualLine||(i.visualLine=!0);else{var V=i.inputState.operatorArgs;V&&(V.linewise=!0),n.end.line--}else if("t"===l)n=function(e,I,t){var C=I;if(!g.findMatchingTag||!g.findEnclosingTag)return{start:C,end:C};var i=g.findMatchingTag(e,I)||g.findEnclosingTag(e,I);return i&&i.open&&i.close?t?{start:i.open.from,end:i.close.to}:{start:i.open.to,end:i.close.from}:{start:C,end:C}}(I,t,d);else if("s"===l){var c=I.getLine(t.line);t.ch>0&&m(c[t.ch])&&(t.ch-=1);var r=Eg(I,t,C.repeat,1,d),h=Eg(I,t,C.repeat,-1,d);F(I.getLine(h.line)[h.ch])&&F(I.getLine(r.line)[r.ch-1])&&(h={line:h.line,ch:h.ch+1}),n={start:h,end:r}}return n?I.state.vim.visualMode?function(g,I,t,C){var i,l=g.state.vim.sel,n=C?I:l.head,A=C?I:l.anchor;return og(t,I)&&(i=t,t=I,I=i),og(n,A)?(n=sg(I,n),A=ag(A,t)):(A=sg(I,A),-1==(n=ig(n=ag(n,t),0,-1)).ch&&n.line!=g.firstLine()&&(n=new e(n.line-1,cg(g,n.line-1)))),[A,n]}(I,n.start,n.end,A):[n.start,n.end]:null},repeatLastCharacterSearch:function(g,e,I){var t=b.lastCharacterSearch,C=I.repeat,i=I.forward===t.forward,l=(t.increment?1:0)*(i?-1:1);g.moveH(-l,"char"),I.inclusive=!!i;var n=kg(g,C,i,t.selectedCharacter);return n?(n.ch+=l,n):(g.moveH(l,"char"),e)}};function gg(g,e){for(var I=[],t=0;t<e;t++)I.push(g);return I}var eg={change:function(g,I,t){var C,i,l=g.state.vim,n=t[0].anchor,A=t[0].head;if(l.visualMode)if(I.fullLine)A.ch=Number.MAX_VALUE,A.line--,g.setSelection(n,A),i=g.getSelection(),g.replaceSelection(""),C=n;else{i=g.getSelection();var d=gg("",t.length);g.replaceSelections(d),C=sg(t[0].head,t[0].anchor)}else{i=g.getRange(n,A);var o=l.lastEditInputState;if("moveByWords"==(null==o?void 0:o.motion)&&!F(i)){var s=/\s+$/.exec(i);s&&o.motionArgs&&o.motionArgs.forward&&(A=ig(A,0,-s[0].length),i=i.slice(0,-s[0].length))}I.linewise&&(n=new e(n.line,Wg(g.getLine(n.line))),A.line>n.line&&(A=new e(A.line-1,Number.MAX_VALUE))),g.replaceRange("",n,A),C=n}b.registerController.pushText(I.registerName,"change",i,I.linewise,t.length>1),Ig.enterInsertMode(g,{head:C},g.state.vim)},delete:function(g,I,t){var C,i,l=g.state.vim;if(l.visualBlock){i=g.getSelection();var n=gg("",t.length);g.replaceSelections(n),C=sg(t[0].head,t[0].anchor)}else{var A=t[0].anchor,d=t[0].head;I.linewise&&d.line!=g.firstLine()&&A.line==g.lastLine()&&A.line==d.line-1&&(A.line==g.firstLine()?A.ch=0:A=new e(A.line-1,cg(g,A.line-1))),i=g.getRange(A,d),g.replaceRange("",A,d),C=A,I.linewise&&(C=$.moveToFirstNonWhiteSpaceCharacter(g,A))}return b.registerController.pushText(I.registerName,"delete",i,I.linewise,l.visualBlock),tg(g,C)},indent:function(g,e,I){var t=g.state.vim,C=t.visualMode?e.repeat||0:1;if(g.indentMore)for(var i=0;i<C;i++)e.indentRight?g.indentMore():g.indentLess();else{var l=I[0].anchor.line,n=t.visualBlock?I[I.length-1].anchor.line:I[0].head.line;e.linewise&&n--;for(var A=l;A<=n;A++)for(i=0;i<C;i++)g.indentLine(A,e.indentRight)}return $.moveToFirstNonWhiteSpaceCharacter(g,I[0].anchor)},indentAuto:function(g,e,I){return g.execCommand("indentAuto"),$.moveToFirstNonWhiteSpaceCharacter(g,I[0].anchor)},hardWrap:function(g,I,t,C){if(g.hardWrap){var i=t[0].anchor.line,l=t[0].head.line;I.linewise&&l--;var n=g.hardWrap({from:i,to:l});return n>i&&I.linewise&&n--,I.keepCursor?C:new e(n,0)}},changeCase:function(g,e,I,t,C){for(var i=g.getSelections(),l=[],n=e.toLower,A=0;A<i.length;A++){var d=i[A],o="";if(!0===n)o=d.toLowerCase();else if(!1===n)o=d.toUpperCase();else for(var s=0;s<d.length;s++){var a=d.charAt(s);o+=R(a)?a.toLowerCase():a.toUpperCase()}l.push(o)}return g.replaceSelections(l),e.shouldMoveCursor?C:!g.state.vim.visualMode&&e.linewise&&I[0].anchor.line+1==I[0].head.line?$.moveToFirstNonWhiteSpaceCharacter(g,t):e.linewise?t:sg(I[0].anchor,I[0].head)},yank:function(g,e,I,t){var C=g.state.vim,i=g.getSelection(),l=C.visualMode?sg(C.sel.anchor,C.sel.head,I[0].head,I[0].anchor):t;return b.registerController.pushText(e.registerName,"yank",i,e.linewise,C.visualBlock),l}},Ig={jumpListWalk:function(g,e,I){if(!I.visualMode){var t=e.repeat||1,C=e.forward,i=b.jumpList.move(g,C?t:-t),l=i?i.find():void 0;l=l||g.getCursor(),g.setCursor(l)}},scroll:function(g,e,I){if(!I.visualMode){var t=e.repeat||1,C=g.defaultTextHeight(),i=g.getScrollInfo().top,l=C*t,n=e.forward?i+l:i-l,A=Ag(g.getCursor()),d=g.charCoords(A,"local");if(e.forward)n>d.top?(A.line+=(n-d.top)/C,A.line=Math.ceil(A.line),g.setCursor(A),d=g.charCoords(A,"local"),g.scrollTo(null,d.top)):g.scrollTo(null,n);else{var o=n+g.getScrollInfo().clientHeight;o<d.bottom?(A.line-=(d.bottom-o)/C,A.line=Math.floor(A.line),g.setCursor(A),d=g.charCoords(A,"local"),g.scrollTo(null,d.bottom-g.getScrollInfo().clientHeight)):g.scrollTo(null,n)}}},scrollToCursor:function(g,I){var t=g.getCursor().line,C=g.charCoords(new e(t,0),"local"),i=g.getScrollInfo().clientHeight,l=C.top;switch(I.position){case"center":l=C.bottom-i/2;break;case"bottom":var n=new e(t,g.getLine(t).length-1);l=l-i+(g.charCoords(n,"local").bottom-l)}g.scrollTo(null,l)},replayMacro:function(g,e,I){var t=e.selectedCharacter||"",C=e.repeat||1,i=b.macroModeState;for("@"==t?t=i.latestRegister:i.latestRegister=t;C--;)ie(g,I,i,t)},enterMacroRecordMode:function(g,e){var I=b.macroModeState,t=e.selectedCharacter;b.registerController.isValidRegister(t)&&I.enterMacroRecordMode(g,t)},toggleOverwrite:function(e){e.state.overwrite?(e.toggleOverwrite(!1),e.setOption("keyMap","vim-insert"),g.signal(e,"vim-mode-change",{mode:"insert"})):(e.toggleOverwrite(!0),e.setOption("keyMap","vim-replace"),g.signal(e,"vim-mode-change",{mode:"replace"}))},enterInsertMode:function(t,C,i){if(!t.getOption("readOnly")){i.insertMode=!0,i.insertModeRepeat=C&&C.repeat||1;var l=C?C.insertAt:null,n=i.sel,A=C.head||t.getCursor("head"),d=t.listSelections().length;if("eol"==l)A=new e(A.line,cg(t,A.line));else if("bol"==l)A=new e(A.line,0);else if("charAfter"==l)A=I(t,A,ig(A,0,1)).end;else if("firstNonBlank"==l)A=I(t,A,$.moveToFirstNonWhiteSpaceCharacter(t,A)).end;else if("startOfSelectedArea"==l){if(!i.visualMode)return;i.visualBlock?(A=new e(Math.min(n.head.line,n.anchor.line),Math.min(n.head.ch,n.anchor.ch)),d=Math.abs(n.head.line-n.anchor.line)+1):A=n.head.line<n.anchor.line?n.head:new e(n.anchor.line,0)}else if("endOfSelectedArea"==l){if(!i.visualMode)return;i.visualBlock?(A=new e(Math.min(n.head.line,n.anchor.line),Math.max(n.head.ch,n.anchor.ch)+1),d=Math.abs(n.head.line-n.anchor.line)+1):A=n.head.line>=n.anchor.line?ig(n.head,0,1):new e(n.anchor.line,0)}else if("inplace"==l){if(i.visualMode)return}else"lastEdit"==l&&(A=ge(t)||A);t.setOption("disableInput",!1),C&&C.replace?(t.toggleOverwrite(!0),t.setOption("keyMap","vim-replace"),g.signal(t,"vim-mode-change",{mode:"replace"})):(t.toggleOverwrite(!1),t.setOption("keyMap","vim-insert"),g.signal(t,"vim-mode-change",{mode:"insert"})),b.macroModeState.isPlaying||(t.on("change",le),i.insertEnd&&i.insertEnd.clear(),i.insertEnd=t.setBookmark(A,{insertLeft:!0}),g.on(t.getInputField(),"keydown",oe)),i.visualMode&&Bg(t),Zg(t,A,d)}},toggleVisualMode:function(t,C,i){var l,n=C.repeat,A=t.getCursor();if(i.visualMode)i.visualLine!=!!C.linewise||i.visualBlock!=!!C.blockwise?(i.visualLine=!!C.linewise,i.visualBlock=!!C.blockwise,g.signal(t,"vim-mode-change",{mode:"visual",subMode:i.visualLine?"linewise":i.visualBlock?"blockwise":""}),Fg(t)):Bg(t);else{i.visualMode=!0,i.visualLine=!!C.linewise,i.visualBlock=!!C.blockwise;var d=I(t,A,l=tg(t,new e(A.line,A.ch+n-1)));i.sel={anchor:d.start,head:d.end},g.signal(t,"vim-mode-change",{mode:"visual",subMode:i.visualLine?"linewise":i.visualBlock?"blockwise":""}),Fg(t),Qg(t,i,"<",sg(A,l)),Qg(t,i,">",ag(A,l))}},reselectLastSelection:function(e,I,t){var C=t.lastSelection;if(t.visualMode&&Rg(e,t),C){var i=C.anchorMark.find(),l=C.headMark.find();if(!i||!l)return;t.sel={anchor:i,head:l},t.visualMode=!0,t.visualLine=C.visualLine,t.visualBlock=C.visualBlock,Fg(e),Qg(e,t,"<",sg(i,l)),Qg(e,t,">",ag(i,l)),g.signal(e,"vim-mode-change",{mode:"visual",subMode:t.visualLine?"linewise":t.visualBlock?"blockwise":""})}},joinLines:function(g,I,t){var C,i;if(t.visualMode){if(C=g.getCursor("anchor"),og(i=g.getCursor("head"),C)){var l=i;i=C,C=l}i.ch=cg(g,i.line)-1}else{var n=Math.max(I.repeat,2);C=g.getCursor(),i=tg(g,new e(C.line+n-1,1/0))}for(var A=0,d=C.line;d<i.line;d++){A=cg(g,C.line);var o="",s=0;if(!I.keepSpaces){var a=g.getLine(C.line+1);-1==(s=a.search(/\S/))?s=a.length:o=" "}g.replaceRange(o,new e(C.line,A),new e(C.line+1,s))}var V=tg(g,new e(C.line,A));t.visualMode&&Bg(g,!1),g.setCursor(V)},newLineAndEnterInsertMode:function(I,t,C){C.insertMode=!0;var i=Ag(I.getCursor());i.line!==I.firstLine()||t.after?(i.line=t.after?i.line:i.line-1,i.ch=cg(I,i.line),I.setCursor(i),(g.commands.newlineAndIndentContinueComment||g.commands.newlineAndIndent)(I)):(I.replaceRange("\n",new e(I.firstLine(),0)),I.setCursor(I.firstLine(),0)),this.enterInsertMode(I,{repeat:t.repeat},C)},paste:function(g,e,I){var t=b.registerController.getRegister(e.registerName);if("+"===e.registerName)navigator.clipboard.readText().then((C=>{this.continuePaste(g,e,I,C,t)}));else{var C=t.toString();this.continuePaste(g,e,I,C,t)}},continuePaste:function(g,I,t,C,i){var l=Ag(g.getCursor());if(C){if(I.matchIndent){var n=g.getOption("tabSize"),A=function(g){var e=g.split("\t").length-1,I=g.split(" ").length-1;return e*n+1*I},d=g.getLine(g.getCursor().line),o=A(d.match(/^\s*/)[0]),s=C.replace(/\n$/,""),a=C!==s,V=A(C.match(/^\s*/)[0]);C=s.replace(/^\s*/gm,(function(e){var I=o+(A(e)-V);if(I<0)return"";if(g.getOption("indentWithTabs")){var t=Math.floor(I/n);return Array(t+1).join("\t")}return Array(I+1).join(" ")})),C+=a?"\n":""}I.repeat>1&&(C=Array(I.repeat+1).join(C));var c,r=i.linewise,h=i.blockwise;if(h){C=C.split("\n"),r&&C.pop();for(var U=0;U<C.length;U++)C[U]=""==C[U]?" ":C[U];l.ch+=I.after?1:0,l.ch=Math.min(cg(g,l.line),l.ch)}else r?t.visualMode?C=t.visualLine?C.slice(0,-1):"\n"+C.slice(0,C.length-1)+"\n":I.after?(C="\n"+C.slice(0,C.length-1),l.ch=cg(g,l.line)):l.ch=0:l.ch+=I.after?1:0;if(t.visualMode){t.lastPastedText=C;var Z,R=function(g,I){var t=I.lastSelection;return I.visualMode?function(){var e=g.listSelections(),I=e[0],t=e[e.length-1];return[og(I.anchor,I.head)?I.anchor:I.head,og(t.anchor,t.head)?t.head:t.anchor]}():function(){var I=g.getCursor(),C=g.getCursor(),i=t.visualBlock;if(i){var l=i.width,n=i.height;C=new e(I.line+n,I.ch+l);for(var A=[],d=I.line;d<C.line;d++){var o={anchor:new e(d,I.ch),head:new e(d,C.ch)};A.push(o)}g.setSelections(A)}else{var s=t.anchorMark.find(),a=t.headMark.find(),V=a.line-s.line,c=a.ch-s.ch;C={line:C.line+V,ch:V?C.ch:c+C.ch},t.visualLine&&(I=new e(I.line,0),C=new e(C.line,cg(g,C.line))),g.setSelection(I,C)}return[I,C]}()}(g,t),F=R[0],m=R[1],B=g.getSelection(),W=g.listSelections(),N=new Array(W.length).join("1").split("1");t.lastSelection&&(Z=t.lastSelection.headMark.find()),b.registerController.unnamedRegister.setText(B),h?(g.replaceSelections(N),m=new e(F.line+C.length-1,F.ch),g.setCursor(F),Ug(g,m),g.replaceSelections(C),c=F):t.visualBlock?(g.replaceSelections(N),g.setCursor(F),g.replaceRange(C,F,F),c=F):(g.replaceRange(C,F,m),c=g.posFromIndex(g.indexFromPos(F)+C.length-1)),Z&&(t.lastSelection.headMark=g.setBookmark(Z)),r&&(c.ch=0)}else if(h){for(g.setCursor(l),U=0;U<C.length;U++)(p=l.line+U)>g.lastLine()&&g.replaceRange("\n",new e(p,0)),cg(g,p)<l.ch&&hg(g,p,l.ch);g.setCursor(l),Ug(g,new e(l.line+C.length-1,l.ch)),g.replaceSelections(C),c=l}else if(g.replaceRange(C,l),r){var p=I.after?l.line+1:l.line;c=new e(p,Wg(g.getLine(p)))}else c=Ag(l),/\n/.test(C)||(c.ch+=C.length-(I.after?1:0));t.visualMode&&Bg(g,!1),g.setCursor(c)}},undo:function(e,I){e.operation((function(){ng(e,g.commands.undo,I.repeat)(),e.setCursor(tg(e,e.getCursor("start")))}))},redo:function(e,I){ng(e,g.commands.redo,I.repeat)()},setRegister:function(g,e,I){I.inputState.registerName=e.selectedCharacter},insertRegister:function(g,e,I){var t=e.selectedCharacter,C=b.registerController.getRegister(t),i=C&&C.toString();i&&g.replaceSelection(i)},oneNormalCommand:function(e,I,t){te(e,!0),t.insertModeReturn=!0,g.on(e,"vim-command-done",(function I(){t.visualMode||(t.insertModeReturn&&(t.insertModeReturn=!1,t.insertMode||Ig.enterInsertMode(e,{},t)),g.off(e,"vim-command-done",I))}))},setMark:function(g,e,I){var t=e.selectedCharacter;t&&Qg(g,I,t,g.getCursor())},replace:function(t,C,i){var l,n,A=C.selectedCharacter||"",d=t.getCursor(),o=t.listSelections();if(i.visualMode)d=t.getCursor("start"),n=t.getCursor("end");else{var s=t.getLine(d.line);(l=d.ch+C.repeat)>s.length&&(l=s.length),n=new e(d.line,l)}var a=I(t,d,n);if(d=a.start,n=a.end,"\n"==A)i.visualMode||t.replaceRange("",d,n),(g.commands.newlineAndIndentContinueComment||g.commands.newlineAndIndent)(t);else{var V=t.getRange(d,n);if(V=(V=V.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,A)).replace(/[^\n]/g,A),i.visualBlock){var c=new Array(t.getOption("tabSize")+1).join(" "),r=(V=(V=t.getSelection()).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,A)).replace(/\t/g,c).replace(/[^\n]/g,A).split("\n");t.replaceSelections(r)}else t.replaceRange(V,d,n);i.visualMode?(d=og(o[0].anchor,o[0].head)?o[0].anchor:o[0].head,t.setCursor(d),Bg(t,!1)):t.setCursor(ig(n,0,-1))}},incrementNumberToken:function(g,I){for(var t,C,i,l,n=g.getCursor(),A=g.getLine(n.line),d=/(-?)(?:(0x)([\da-f]+)|(0b|0|)(\d+))/gi;null!==(t=d.exec(A))&&(i=(C=t.index)+t[0].length,!(n.ch<i)););if(I.backtrack||!(i<=n.ch)){if(!t)return;var o=t[2]||t[4],s=t[3]||t[5],a=I.increase?1:-1,V={"0b":2,0:8,"":10,"0x":16}[o.toLowerCase()];l=(parseInt(t[1]+s,V)+a*I.repeat).toString(V);var c=o?new Array(s.length-l.length+1+t[1].length).join("0"):"";l="-"===l.charAt(0)?"-"+o+c+l.substr(1):o+c+l;var r=new e(n.line,C),h=new e(n.line,i);g.replaceRange(l,r,h),g.setCursor(new e(n.line,C+l.length-1))}},repeatLastEdit:function(g,e,I){var t=I.lastEditInputState;if(t){var C=e.repeat;C&&e.repeatIsExplicit?t.repeatOverride=C:C=t.repeatOverride||C,se(g,I,C,!1)}},indent:function(g,e){g.indentLine(g.getCursor().line,e.indentRight)},exitInsertMode:function(g,e){te(g)}};function tg(g,I,t){var C=g.state.vim,i=C.insertMode||C.visualMode,l=Math.min(Math.max(g.firstLine(),I.line),g.lastLine()),n=g.getLine(l),A=n.length-1+ +!!i,d=Math.min(Math.max(0,I.ch),A),o=n.charCodeAt(d);if(56320<=o&&o<=57343){var s=1;t&&t.line==l&&t.ch>d&&(s=-1),(d+=s)>A&&(d-=2)}return new e(l,d)}function Cg(g){var e={};for(var I in g)g.hasOwnProperty(I)&&(e[I]=g[I]);return e}function ig(g,I,t){return"object"==typeof I&&(t=I.ch,I=I.line),new e(g.line+I,g.ch+t)}function lg(g,e){const I="<character>"==e.slice(-11),t="<register>"==e.slice(-10);if(I||t){var C=e.length-(I?11:10),i=g.slice(0,C),l=e.slice(0,C);return i==l&&g.length>C?"full":0==l.indexOf(i)&&"partial"}return g==e?"full":0==e.indexOf(g)&&"partial"}function ng(g,e,I){return function(){for(var t=0;t<I;t++)e(g)}}function Ag(g){return new e(g.line,g.ch)}function dg(g,e){return g.ch==e.ch&&g.line==e.line}function og(g,e){return g.line<e.line||g.line==e.line&&g.ch<e.ch}function sg(g,e){return arguments.length>2&&(e=sg.apply(void 0,Array.prototype.slice.call(arguments,1))),og(g,e)?g:e}function ag(g,e){return arguments.length>2&&(e=ag.apply(void 0,Array.prototype.slice.call(arguments,1))),og(g,e)?e:g}function Vg(g,e,I){var t=og(g,e),C=og(e,I);return t&&C}function cg(g,e){return g.getLine(e).length}function rg(g){return g.trim?g.trim():g.replace(/^\s+|\s+$/g,"")}function hg(g,I,t){var C=cg(g,I),i=new Array(t-C+1).join(" ");g.setCursor(new e(I,C)),g.replaceRange(i,g.getCursor())}function Ug(g,I){var t=[],C=g.listSelections(),i=Ag(g.clipPos(I)),l=!dg(I,i),n=function(g,e,I){for(var t=0;t<g.length;t++){var C=dg(g[t].anchor,e),i=dg(g[t].head,e);if(C||i)return t}return-1}(C,g.getCursor("head")),A=dg(C[n].head,C[n].anchor),d=C.length-1,o=d-n>n?d:0,s=C[o].anchor,a=Math.min(s.line,i.line),V=Math.max(s.line,i.line),c=s.ch,r=i.ch,h=C[o].head.ch-c,U=r-c;h>0&&U<=0?(c++,l||r--):h<0&&U>=0?(c--,A||r++):h<0&&-1==U&&(c--,r++);for(var Z=a;Z<=V;Z++){var R={anchor:new e(Z,c),head:new e(Z,r)};t.push(R)}return g.setSelections(t),I.ch=r,s.ch=c,s}function Zg(g,e,I){for(var t=[],C=0;C<I;C++){var i=ig(e,C,0);t.push({anchor:i,head:i})}g.setSelections(t,0)}function Rg(g,e){var I=e.sel.anchor,t=e.sel.head;e.lastPastedText&&(t=g.posFromIndex(g.indexFromPos(I)+e.lastPastedText.length),e.lastPastedText=null),e.lastSelection={anchorMark:g.setBookmark(I),headMark:g.setBookmark(t),anchor:Ag(I),head:Ag(t),visualMode:e.visualMode,visualLine:e.visualLine,visualBlock:e.visualBlock}}function Fg(g,e,I){var t=g.state.vim;e=e||t.sel,I||(I=t.visualLine?"line":t.visualBlock?"block":"char");var C=mg(g,e,I);g.setSelections(C.ranges,C.primary)}function mg(g,I,t,C){var i=Ag(I.head),l=Ag(I.anchor);if("char"==t){var n=C||og(I.head,I.anchor)?0:1,A=og(I.head,I.anchor)?1:0;return i=ig(I.head,0,n),{ranges:[{anchor:l=ig(I.anchor,0,A),head:i}],primary:0}}if("line"==t){if(og(I.head,I.anchor))i.ch=0,l.ch=cg(g,l.line);else{l.ch=0;var d=g.lastLine();i.line>d&&(i.line=d),i.ch=cg(g,i.line)}return{ranges:[{anchor:l,head:i}],primary:0}}if("block"==t){var o=Math.min(l.line,i.line),s=l.ch,a=Math.max(l.line,i.line),V=i.ch;s<V?V+=1:s+=1;for(var c=a-o+1,r=i.line==o?0:c-1,h=[],U=0;U<c;U++)h.push({anchor:new e(o+U,s),head:new e(o+U,V)});return{ranges:h,primary:r}}throw"never happens"}function Bg(e,I){var t=e.state.vim;!1!==I&&e.setCursor(tg(e,t.sel.head)),Rg(e,t),t.visualMode=!1,t.visualLine=!1,t.visualBlock=!1,t.insertMode||g.signal(e,"vim-mode-change",{mode:"normal"})}function Wg(g){if(!g)return 0;var e=g.search(/\S/);return-1==e?g.length:e}function Ng(g,{inclusive:I,innerWord:t,bigWord:C,noSymbol:i,multiline:l},n){var A,d=n||function(g){var e=g.getCursor("head");return 1==g.getSelection().length&&(e=sg(e,g.getCursor("anchor"))),e}(g),a=g.getLine(d.line),V=a,c=d.line,r=c,h=d.ch,U=i?o[0]:s[0];if(t&&/\s/.test(a.charAt(h)))U=function(g){return/\s/.test(g)};else{for(;!U(a.charAt(h));)if(++h>=a.length){if(!l)return null;h--,A=Tg(g,d,!0,C,!0);break}C?U=s[0]:(U=o[0])(a.charAt(h))||(U=o[1])}for(var Z=h,R=h;U(a.charAt(R))&&R>=0;)R--;if(R++,A)Z=A.to,r=A.line,!(V=g.getLine(r))&&0==Z&&Z++;else for(;U(a.charAt(Z))&&Z<a.length;)Z++;if(I){var F=Z,m=d.ch<=R&&/\s/.test(a.charAt(d.ch));if(!m)for(;/\s/.test(V.charAt(Z))&&Z<V.length;)Z++;if(F==Z||m){for(var B=R;/\s/.test(a.charAt(R-1))&&R>0;)R--;!R&&!m&&(R=B)}}return{start:new e(c,R),end:new e(r,Z)}}function pg(g,e,I){dg(e,I)||b.jumpList.add(g,e,I)}function Sg(g,e){b.lastCharacterSearch.increment=g,b.lastCharacterSearch.forward=e.forward,b.lastCharacterSearch.selectedCharacter=e.selectedCharacter}var bg={"(":"bracket",")":"bracket","{":"bracket","}":"bracket","[":"section","]":"section","*":"comment","/":"comment",m:"method",M:"method","#":"preprocess"},ug={bracket:{isComplete:function(g){if(g.nextCh===g.symb){if(g.depth++,g.depth>=1)return!0}else g.nextCh===g.reverseSymb&&g.depth--;return!1}},section:{init:function(g){g.curMoveThrough=!0,g.symb=(g.forward?"]":"[")===g.symb?"{":"}"},isComplete:function(g){return 0===g.index&&g.nextCh===g.symb}},comment:{isComplete:function(g){var e="*"===g.lastCh&&"/"===g.nextCh;return g.lastCh=g.nextCh,e}},method:{init:function(g){g.symb="m"===g.symb?"{":"}",g.reverseSymb="{"===g.symb?"}":"{"},isComplete:function(g){return g.nextCh===g.symb}},preprocess:{init:function(g){g.index=0},isComplete:function(g){if("#"===g.nextCh){var e=g.lineText.match(/^#(\w+)/)[1];if("endif"===e){if(g.forward&&0===g.depth)return!0;g.depth++}else if("if"===e){if(!g.forward&&0===g.depth)return!0;g.depth--}if("else"===e&&0===g.depth)return!0}return!1}}};function Tg(g,e,I,t,C){var i=e.line,l=e.ch,n=g.getLine(i),A=I?1:-1,d=t?s:o;if(C&&""==n){if(i+=A,n=g.getLine(i),!r(g,i))return null;l=I?0:n.length}for(;;){if(C&&""==n)return{from:0,to:0,line:i};for(var a=A>0?n.length:-1,V=a,c=a;l!=a;){for(var h=!1,U=0;U<d.length&&!h;++U)if(d[U](n.charAt(l))){for(V=l;l!=a&&d[U](n.charAt(l));)l+=A;if(h=V!=(c=l),V==e.ch&&i==e.line&&c==V+A)continue;return{from:Math.min(V,c+1),to:Math.max(V,c),line:i}}h||(l+=A)}if(!r(g,i+=A))return null;n=g.getLine(i),l=A>0?0:n.length}}function Gg(g,I,t,C,i){var l=new e(I.line+t.repeat-1,1/0),n=g.clipPos(l);return n.ch--,i||(C.lastHPos=1/0,C.lastHSPos=g.charCoords(n,"div").left),l}function kg(g,I,t,C,i){if(C){for(var l,n=i||g.getCursor(),A=n.ch,d=0;d<I;d++){if(-1==(l=Mg(A,g.getLine(n.line),C,t,!0)))return;A=l}if(null!=l)return new e(g.getCursor().line,l)}}function Qg(g,e,I,t){!B(I,a)&&!c.test(I)||(e.marks[I]&&e.marks[I].clear(),e.marks[I]=g.setBookmark(t))}function Mg(g,e,I,t,C){var i;return t?-1!=(i=e.indexOf(I,g+1))&&!C&&(i-=1):-1!=(i=e.lastIndexOf(I,g-1))&&!C&&(i+=1),i}function Yg(g,I,t,C,i){var l,n=I.line,A=g.firstLine(),d=g.lastLine(),o=n;function s(e){return!g.getLine(e)}function a(g,e,I){return I?s(g)!=s(g+e):!s(g)&&s(g+e)}if(C){for(;A<=o&&o<=d&&t>0;)a(o,C)&&t--,o+=C;return{start:new e(o,0),end:I}}var V=g.state.vim;if(V.visualLine&&a(n,1,!0)){var c=V.sel.anchor;a(c.line,-1,!0)&&(!i||c.line!=n)&&(n+=1)}var r=s(n);for(o=n;o<=d&&t;o++)a(o,1,!0)&&(!i||s(o)!=r)&&t--;for(l=new e(o,0),o>d&&!r?r=!0:i=!1,o=n;o>A&&(i&&s(o)!=r&&o!=n||!a(o,-1,!0));o--);return{start:new e(o,0),end:l}}function Eg(g,I,t,C,i){function l(g){g.pos+g.dir<0||g.pos+g.dir>=g.line.length?g.line=null:g.pos+=g.dir}function n(g,e,I,t){var C={line:g.getLine(e),ln:e,pos:I,dir:t};if(""===C.line)return{ln:C.ln,pos:C.pos};var n=C.pos;for(l(C);null!==C.line;){if(n=C.pos,m(C.line[C.pos])){if(i){for(l(C);null!==C.line&&F(C.line[C.pos]);)n=C.pos,l(C);return{ln:C.ln,pos:n+1}}return{ln:C.ln,pos:C.pos+1}}l(C)}return{ln:C.ln,pos:n+1}}function A(g,e,I,t){var C=g.getLine(e),n={line:C,ln:e,pos:I,dir:t};if(""===n.line)return{ln:n.ln,pos:n.pos};var A=n.pos;for(l(n);null!==n.line;){if(F(n.line[n.pos])||m(n.line[n.pos])){if(m(n.line[n.pos]))return i&&F(n.line[n.pos+1])?{ln:n.ln,pos:n.pos+1}:{ln:n.ln,pos:A}}else A=n.pos;l(n)}return n.line=C,i&&F(n.line[n.pos])?{ln:n.ln,pos:n.pos}:{ln:n.ln,pos:A}}for(var d={ln:I.line,pos:I.ch};t>0;)d=C<0?A(g,d.ln,d.pos,C):n(g,d.ln,d.pos,C),t--;return new e(d.ln,d.pos)}function yg(g,I,t,C){var i=I,l={"(":/[()]/,")":/[()]/,"[":/[[\]]/,"]":/[[\]]/,"{":/[{}]/,"}":/[{}]/,"<":/[<>]/,">":/[<>]/}[t],n={"(":"(",")":"(","[":"[","]":"[","{":"{","}":"{","<":"<",">":"<"}[t],A=g.getLine(i.line).charAt(i.ch)===n?1:0,d=g.scanForBracket(new e(i.line,i.ch+A),-1,void 0,{bracketRegex:l}),o=g.scanForBracket(new e(i.line,i.ch+A),1,void 0,{bracketRegex:l});if(!d||!o)return null;var s=d.pos,a=o.pos;if(s.line==a.line&&s.ch>a.ch||s.line>a.line){var V=s;s=a,a=V}return C?a.ch+=1:s.ch+=1,{start:s,end:a}}N("pcre",!0,"boolean");class Jg{getQuery(){return b.query}setQuery(g){b.query=g}getOverlay(){return this.searchOverlay}setOverlay(g){this.searchOverlay=g}isReversed(){return b.isReversed}setReversed(g){b.isReversed=g}getScrollbarAnnotate(){return this.annotate}setScrollbarAnnotate(g){this.annotate=g}}function Hg(g){var e=g.state.vim;return e.searchState_||(e.searchState_=new Jg)}function wg(g,e){var I=Xg(g,e)||[];if(!I.length)return[];var t=[];if(0===I[0]){for(var C=0;C<I.length;C++)"number"==typeof I[C]&&t.push(g.substring(I[C]+1,I[C+1]));return t}}function Xg(g,e){e||(e="/");for(var I=!1,t=[],C=0;C<g.length;C++){var i=g.charAt(C);!I&&i==e&&t.push(C),I=!I&&"\\"==i}return t}var Kg={"\\n":"\n","\\r":"\r","\\t":"\t"},zg={"\\/":"/","\\\\":"\\","\\n":"\n","\\r":"\r","\\t":"\t","\\&":"&"};function Dg(g){"string"==typeof g&&(g=document.createElement(g));for(var e,I=1;I<arguments.length;I++)if(e=arguments[I])if("object"!=typeof e&&(e=document.createTextNode(e)),e.nodeType)g.appendChild(e);else for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&("$"===t[0]?g.style[t.slice(1)]=e[t]:g.setAttribute(t,e[t]));return g}function vg(g,e){var I=Dg("div",{$color:"red",$whiteSpace:"pre",class:"cm-vim-message"},e);g.openNotification?g.openNotification(I,{bottom:!0,duration:5e3}):alert(I.innerText)}function xg(g,e){if(y.length)return e.value||(e.value=""),void(Y=e);var I=function(g,e){return Dg("div",{$display:"flex"},Dg("span",{$fontFamily:"monospace",$whiteSpace:"pre",$flex:1},g,Dg("input",{type:"text",autocorrect:"off",autocapitalize:"off",spellcheck:"false",$width:"100%"})),e&&Dg("span",{$color:"#888"},e))}(e.prefix,e.desc);if(g.openDialog)g.openDialog(I,e.onClose,{onKeyDown:e.onKeyDown,onKeyUp:e.onKeyUp,bottom:!0,selectValueOnOpen:!1,value:e.value});else{var t="";"string"!=typeof e.prefix&&e.prefix&&(t+=e.prefix.textContent),e.desc&&(t+=" "+e.desc),e.onClose(prompt(t,""))}}function Og(g,e,I,t){if(e){var C=Hg(g),i=function(g,e,I){if(b.registerController.getRegister("/").setText(g),g instanceof RegExp)return g;var t,C,i=function(g){return Xg(g,"/")}(g);return i.length?(t=g.substring(0,i[0]),C=-1!=g.substring(i[0]).indexOf("i")):t=g,t?(S("pcre")||(t=function(g){for(var e=!1,I=[],t=-1;t<g.length;t++){var C=g.charAt(t)||"",i=g.charAt(t+1)||"",l=i&&-1!="|(){".indexOf(i);e?(("\\"!==C||!l)&&I.push(C),e=!1):"\\"===C?(e=!0,i&&-1!="}".indexOf(i)&&(l=!0),(!l||"\\"===i)&&I.push(C)):(I.push(C),l&&"\\"!==i&&I.push("\\"))}return I.join("")}(t)),I&&(e=/^[^A-Z]*$/.test(t)),new RegExp(t,e||C?"im":"m")):null}(e,!!I,!!t);if(i)return jg(g,i),function(g,e){if(g instanceof RegExp&&e instanceof RegExp){for(var I=["global","multiline","ignoreCase","source"],t=0;t<I.length;t++){var C=I[t];if(g[C]!==e[C])return!1}return!0}return!1}(i,C.getQuery())||C.setQuery(i),i}}var fg=0;function jg(g,e){clearTimeout(fg),Hg(g).highlightTimeout=fg,fg=setTimeout((function(){if(g.state.vim){var I=Hg(g);I.highlightTimeout=null;var t=I.getOverlay();(!t||e!=t.query)&&(t&&g.removeOverlay(t),t=function(g){if("^"==g.source.charAt(0))var e=!0;return{token:function(I){if(!e||I.sol()){var t=I.match(g,!1);if(t)return 0==t[0].length?(I.next(),"searching"):I.sol()||(I.backUp(1),g.exec(I.next()+t[0]))?(I.match(g),"searching"):(I.next(),null);for(;!I.eol()&&(I.next(),!I.match(g,!1)););}else I.skipToEnd()},query:g}}(e),g.addOverlay(t),g.showMatchesOnScrollbar&&(I.getScrollbarAnnotate()&&I.getScrollbarAnnotate().clear(),I.setScrollbarAnnotate(g.showMatchesOnScrollbar(e))),I.setOverlay(t))}}),50)}function Lg(g,I,t,C){return g.operation((function(){void 0===C&&(C=1);for(var i=g.getCursor(),l=g.getSearchCursor(t,i),n=0;n<C;n++){var A=l.find(I);if(0==n&&A&&dg(l.from(),i)){var d=I?l.from():l.to();(A=l.find(I))&&!A[0]&&dg(l.from(),d)&&g.getLine(d.line).length==d.ch&&(A=l.find(I))}if(!A&&!(l=g.getSearchCursor(t,I?new e(g.lastLine()):new e(g.firstLine(),0))).find(I))return}return l.from()}))}function Pg(g){var e=Hg(g);e.highlightTimeout&&(clearTimeout(e.highlightTimeout),e.highlightTimeout=null),g.removeOverlay(Hg(g).getOverlay()),e.setOverlay(null),e.getScrollbarAnnotate()&&(e.getScrollbarAnnotate().clear(),e.setScrollbarAnnotate(null))}function _g(g,e,I){return"number"!=typeof g&&(g=g.line),e instanceof Array?B(g,e):"number"==typeof I?g>=e&&g<=I:g==e}function qg(g){var e=g.getScrollInfo(),I=g.coordsChar({left:0,top:6+e.top},"local"),t=e.clientHeight-10+e.top,C=g.coordsChar({left:0,top:t},"local");return{top:I.line,bottom:C.line}}function $g(g,I,t){if("'"==t||"`"==t)return b.jumpList.find(g,-1)||new e(0,0);if("."==t)return ge(g);var C=I.marks[t];return C&&C.find()}function ge(g){if(g.getLastEditEnd)return g.getLastEditEnd();for(var e=g.doc.history.done,I=e.length;I--;)if(e[I].changes)return Ag(e[I].changes[0].to)}var ee={colorscheme:function(g,e){!e.args||e.args.length<1?vg(g,g.getOption("theme")):g.setOption("theme",e.args[0])},map:function(g,e,I,t){var C=e.args;!C||C.length<2?g&&vg(g,"Invalid mapping: "+e.input):Ie.map(C[0],C[1],I,t)},imap:function(g,e){this.map(g,e,"insert")},nmap:function(g,e){this.map(g,e,"normal")},vmap:function(g,e){this.map(g,e,"visual")},omap:function(g,e){this.map(g,e,"operatorPending")},noremap:function(g,e){this.map(g,e,void 0,!0)},inoremap:function(g,e){this.map(g,e,"insert",!0)},nnoremap:function(g,e){this.map(g,e,"normal",!0)},vnoremap:function(g,e){this.map(g,e,"visual",!0)},onoremap:function(g,e){this.map(g,e,"operatorPending",!0)},unmap:function(g,e,I){var t=e.args;(!t||t.length<1||!Ie.unmap(t[0],I))&&g&&vg(g,"No such mapping: "+e.input)},mapclear:function(g,e){E.mapclear()},imapclear:function(g,e){E.mapclear("insert")},nmapclear:function(g,e){E.mapclear("normal")},vmapclear:function(g,e){E.mapclear("visual")},omapclear:function(g,e){E.mapclear("operatorPending")},move:function(g,e){q.processCommand(g,g.state.vim,{keys:"",type:"motion",motion:"moveToLineOrEdgeOfDocument",motionArgs:{forward:!1,explicitRepeat:!0,linewise:!0},repeatOverride:e.line+1})},set:function(g,e){var I=e.args,t=e.setCfg||{};if(!I||I.length<1)g&&vg(g,"Invalid mapping: "+e.input);else{var C=I[0].split("="),i=C.shift()||"",l=C.length>0?C.join("="):void 0,n=!1,A=!1;if("?"==i.charAt(i.length-1)){if(l)throw Error("Trailing characters: "+e.argString);i=i.substring(0,i.length-1),n=!0}else"!"==i.charAt(i.length-1)&&(i=i.substring(0,i.length-1),A=!0);void 0===l&&"no"==i.substring(0,2)&&(i=i.substring(2),l=!1);var d=W[i]&&"boolean"==W[i].type;if(d&&(A?l=!S(i,g,t):null==l&&(l=!0)),!d&&void 0===l||n){var o=S(i,g,t);o instanceof Error?vg(g,o.message):vg(g,!0===o||!1===o?" "+(o?"":"no")+i:"  "+i+"="+o)}else{var s=p(i,l,g,t);s instanceof Error&&vg(g,s.message)}}},setlocal:function(g,e){e.setCfg={scope:"local"},this.set(g,e)},setglobal:function(g,e){e.setCfg={scope:"global"},this.set(g,e)},registers:function(g,e){var I=e.args,t=b.registerController.registers,C="----------Registers----------\n\n";if(I)for(var i=I.join(""),l=0;l<i.length;l++){var n=i.charAt(l);b.registerController.isValidRegister(n)&&(C+='"'+n+"    "+(t[n]||new L).toString()+"\n")}else for(var n in t){var A=t[n].toString();A.length&&(C+='"'+n+"    "+A+"\n")}vg(g,C)},sort:function(I,t){var C,i,l,n,A,d=function(){if(t.argString){var e=new g.StringStream(t.argString);if(e.eat("!")&&(C=!0),e.eol())return;if(!e.eatSpace())return"Invalid arguments";var I=e.match(/([dinuox]+)?\s*(\/.+\/)?\s*/);if(!I||!e.eol())return"Invalid arguments";if(I[1]){i=-1!=I[1].indexOf("i"),l=-1!=I[1].indexOf("u");var d=-1!=I[1].indexOf("d")||-1!=I[1].indexOf("n"),o=-1!=I[1].indexOf("x"),s=-1!=I[1].indexOf("o");if(Number(d)+Number(o)+Number(s)>1)return"Invalid arguments";n=(d?"decimal":o&&"hex")||s&&"octal"}I[2]&&(A=new RegExp(I[2].substr(1,I[2].length-2),i?"i":""))}}();if(d)vg(I,d+": "+t.argString);else{var o=t.line||I.firstLine(),s=t.lineEnd||t.line||I.lastLine();if(o!=s){var a=new e(o,0),V=new e(s,cg(I,s)),c=I.getRange(a,V).split("\n"),r="decimal"==n?/(-?)([\d]+)/:"hex"==n?/(-?)(?:0x)?([0-9a-f]+)/i:"octal"==n?/([0-7]+)/:null,h="decimal"==n?10:"hex"==n?16:"octal"==n?8:void 0,U=[],Z=[];if(n||A)for(var R=0;R<c.length;R++){var F=A?c[R].match(A):null;F&&""!=F[0]?U.push(F):r&&r.exec(c[R])?U.push(c[R]):Z.push(c[R])}else Z=c;if(U.sort(A?function(g,e){var I;return C&&(I=g,g=e,e=I),i&&(g[0]=g[0].toLowerCase(),e[0]=e[0].toLowerCase()),g[0]<e[0]?-1:1}:W),A)for(R=0;R<U.length;R++)U[R]=U[R].input;else n||Z.sort(W);if(c=C?U.concat(Z):Z.concat(U),l){var m,B=c;for(c=[],R=0;R<B.length;R++)B[R]!=m&&c.push(B[R]),m=B[R]}I.replaceRange(c.join("\n"),a,V)}}function W(g,e){var I;C&&(I=g,g=e,e=I),i&&(g=g.toLowerCase(),e=e.toLowerCase());var t=r&&r.exec(g),l=r&&r.exec(e);return t&&l?parseInt((t[1]+t[2]).toLowerCase(),h)-parseInt((l[1]+l[2]).toLowerCase(),h):g<e?-1:1}},vglobal:function(g,e){this.global(g,e)},normal:function(g,e){var I=e.argString;if(I&&"!"==I[0]&&(I=I.slice(1),J=!0),I=I.trimStart()){var t=e.line;if("number"==typeof t)for(var C=isNaN(e.lineEnd)?t:e.lineEnd,i=t;i<=C;i++)g.setCursor(i,0),w(g,e.argString.trimStart()),g.state.vim.insertMode&&te(g,!0);else w(g,e.argString.trimStart()),g.state.vim.insertMode&&te(g,!0)}else vg(g,"Argument is required.")},global:function(g,e){var I=e.argString;if(I){var t="v"===e.commandName[0];"!"===I[0]&&"g"===e.commandName[0]&&(t=!0,I=I.slice(1));var C=void 0!==e.line?e.line:g.firstLine(),i=e.lineEnd||e.line||g.lastLine(),l=function(g){return wg(g,"/")}(I),n=I,A="";if(l&&l.length&&(n=l[0],A=l.slice(1,l.length).join("/")),n)try{Og(g,n,!0,!0)}catch{return void vg(g,"Invalid regex: "+n)}for(var d=Hg(g).getQuery(),o=[],s=C;s<=i;s++){var a=g.getLine(s);d.test(a)!==t&&o.push(A?g.getLineHandle(s):a)}if(A){var V=0,c=function(){if(V<o.length){var e=o[V++],I=g.getLineNumber(e);if(null==I)return void c();var t=I+1+A;Ie.processCommand(g,t,{callback:c})}else g.releaseLineHandles&&g.releaseLineHandles()};c()}else vg(g,o.join("\n"))}else vg(g,"Regular Expression missing from global")},substitute:function(I,t){if(!I.getSearchCursor)throw new Error("Search feature not available. Requires searchcursor.js or any other getSearchCursor implementation.");var C,i,l,n=t.argString,A=n?wg(n,n[0]):[],d="",o="",s=!1,a=!1;if(A&&A.length)d=A[0],S("pcre")&&""!==d&&(d=new RegExp(d).source),void 0!==(o=A[1])&&(o=S("pcre")?function(e){for(var I=new g.StringStream(e),t=[];!I.eol();){for(;I.peek()&&"\\"!=I.peek();)t.push(I.next());var C=!1;for(var i in zg)if(I.match(i,!0)){C=!0,t.push(zg[i]);break}C||t.push(I.next())}return t.join("")}(o.replace(/([^\\])&/g,"$1$$&")):function(g){for(var e=!1,I=[],t=-1;t<g.length;t++){var C=g.charAt(t)||"",i=g.charAt(t+1)||"";Kg[C+i]?(I.push(Kg[C+i]),t++):e?(I.push(C),e=!1):"\\"===C?(e=!0,Z(i)||"$"===i?I.push("$"):"/"!==i&&"\\"!==i&&I.push("\\")):("$"===C&&I.push("$"),I.push(C),"/"===i&&I.push("\\"))}return I.join("")}(o),b.lastSubstituteReplacePart=o),C=A[2]?A[2].split(" "):[];else if(n&&n.length)return void vg(I,"Substitutions should be of the form :s/pattern/replace/");if(C&&(i=C[0],l=parseInt(C[1]),i&&(-1!=i.indexOf("c")&&(s=!0),-1!=i.indexOf("g")&&(a=!0),d=S("pcre")?d+"/"+i:d.replace(/\//g,"\\/")+"/"+i)),d)try{Og(I,d,!0,!0)}catch{return void vg(I,"Invalid regex: "+d)}if(void 0!==(o=o||b.lastSubstituteReplacePart)){var V=Hg(I).getQuery(),c=void 0!==t.line?t.line:I.getCursor().line,r=t.lineEnd||c;c==I.firstLine()&&r==I.lastLine()&&(r=1/0),l&&(r=(c=r)+l-1);var h=tg(I,new e(c,0)),U=I.getSearchCursor(V,h);!function(e,I,t,C,i,l,n,A,d){e.state.vim.exMode=!0;var o,s,a,V=!1;function c(){e.operation((function(){for(;!V;)r(),h();U()}))}function r(){var g=e.getRange(l.from(),l.to()).replace(n,A),I=l.to().line;l.replace(g),s=l.to().line,i+=s-I,a=s<I}function h(){for(;I=void 0,g=o&&Ag(l.to()),(I=l.findNext())&&!I[0]&&g&&dg(l.from(),g)&&(I=l.findNext()),I&&_g(l.from(),C,i);)if(t||l.from().line!=s||a)return e.scrollIntoView(l.from(),30),e.setSelection(l.from(),l.to()),o=l.from(),void(V=!1);var g,I;V=!0}function U(g){if(g&&g(),e.focus(),o){e.setCursor(o);var I=e.state.vim;I.exMode=!1,I.lastHPos=I.lastHSPos=o.ch}d&&d()}if(h(),!V)return I?void xg(e,{prefix:Dg("span","replace with ",Dg("strong",A)," (y/n/a/q/l)"),onKeyDown:function(I,t,C){switch(g.e_stop(I),D(I)){case"y":r(),h();break;case"n":h();break;case"a":var i=d;d=void 0,e.operation(c),d=i;break;case"l":r();case"q":case"<Esc>":case"<C-c>":case"<C-[>":U(C)}return V&&U(C),!0}}):(c(),void(d&&d()));vg(e,"No matches for "+n.source)}(I,s,a,c,r,U,V,o,t.callback)}else vg(I,"No previous substitute regular expression")},startinsert:function(g,e){w(g,"!"==e.argString?"A":"i",{})},redo:g.commands.redo,undo:g.commands.undo,write:function(e){g.commands.save?g.commands.save(e):e.save&&e.save()},nohlsearch:function(g){Pg(g)},yank:function(g){var e=Ag(g.getCursor()).line,I=g.getLine(e);b.registerController.pushText("0","yank",I,!0,!0)},delete:function(g,I){var t=I.selectionLine,C=isNaN(I.selectionLineEnd)?t:I.selectionLineEnd;eg.delete(g,{linewise:!0},[{anchor:new e(t,0),head:new e(C+1,0)}])},join:function(g,I){var t=I.selectionLine,C=isNaN(I.selectionLineEnd)?t:I.selectionLineEnd;g.setCursor(new e(t,0)),Ig.joinLines(g,{repeat:C-t},g.state.vim)},delmarks:function(e,I){if(I.argString&&rg(I.argString))for(var t=e.state.vim,C=new g.StringStream(rg(I.argString));!C.eol();){C.eatSpace();var i=C.pos;if(!C.match(/[a-zA-Z]/,!1))return void vg(e,"Invalid argument: "+I.argString.substring(i));var l=C.next();if(C.match("-",!0)){if(!C.match(/[a-zA-Z]/,!1))return void vg(e,"Invalid argument: "+I.argString.substring(i));var n=l,A=C.next();if(!n||!A||h(n)!=h(A))return void vg(e,"Invalid argument: "+n+"-");var d=n.charCodeAt(0),o=A.charCodeAt(0);if(d>=o)return void vg(e,"Invalid argument: "+I.argString.substring(i));for(var s=0;s<=o-d;s++){var a=String.fromCharCode(d+s);delete t.marks[a]}}else l&&delete t.marks[l]}else vg(e,"Argument required")}},Ie=new class{constructor(){this.commandMap_,this.buildCommandMap_()}processCommand(g,e,I){var t=this;g.operation((function(){g.curOp.isVimOp=!0,t._processCommand(g,e,I)}))}_processCommand(e,I,t){var C=e.state.vim,i=b.registerController.getRegister(":"),l=i.toString(),n=new g.StringStream(I);i.setText(I);var A,d,o=t||{};o.input=I;try{this.parseInput_(e,n,o)}catch(g){throw vg(e,g+""),g}if(C.visualMode&&Bg(e),o.commandName){if(A=this.matchCommand_(o.commandName)){if(d=A.name,A.excludeFromCommandHistory&&i.setText(l),this.parseCommandArgs_(n,o,A),"exToKey"==A.type)return void w(e,A.toKeys,A);if("exToEx"==A.type)return void this.processCommand(e,A.toInput)}}else void 0!==o.line&&(d="move");if(d)try{ee[d](e,o),(!A||!A.possiblyAsync)&&o.callback&&o.callback()}catch(g){throw vg(e,g+""),g}else vg(e,'Not an editor command ":'+I+'"')}parseInput_(g,e,I){var t,C;e.eatWhile(":"),e.eat("%")?(I.line=g.firstLine(),I.lineEnd=g.lastLine()):(I.line=this.parseLineSpec_(g,e),void 0!==I.line&&e.eat(",")&&(I.lineEnd=this.parseLineSpec_(g,e))),null==I.line?g.state.vim.visualMode?(I.selectionLine=null==(t=$g(g,g.state.vim,"<"))?void 0:t.line,I.selectionLineEnd=null==(C=$g(g,g.state.vim,">"))?void 0:C.line):I.selectionLine=g.getCursor().line:(I.selectionLine=I.line,I.selectionLineEnd=I.lineEnd);var i=e.match(/^(\w+|!!|@@|[!#&*<=>@~])/);return I.commandName=i?i[1]:e.match(/.*/)[0],I}parseLineSpec_(g,e){var I=e.match(/^(\d+)/);if(I)return parseInt(I[1],10)-1;switch(e.next()){case".":return this.parseLineSpecOffset_(e,g.getCursor().line);case"$":return this.parseLineSpecOffset_(e,g.lastLine());case"'":var t=e.next(),C=$g(g,g.state.vim,t);if(!C)throw new Error("Mark not set");return this.parseLineSpecOffset_(e,C.line);case"-":case"+":return e.backUp(1),this.parseLineSpecOffset_(e,g.getCursor().line);default:return void e.backUp(1)}}parseLineSpecOffset_(g,e){var I=g.match(/^([+-])?(\d+)/);if(I){var t=parseInt(I[2],10);"-"==I[1]?e-=t:e+=t}return e}parseCommandArgs_(g,e,I){if(!g.eol()){e.argString=g.match(/.*/)[0];var t=I.argDelimiter||/\s+/,C=rg(e.argString).split(t);C.length&&C[0]&&(e.args=C)}}matchCommand_(g){for(var e=g.length;e>0;e--){var I=g.substring(0,e);if(this.commandMap_[I]){var t=this.commandMap_[I];if(0===t.name.indexOf(g))return t}}return null}buildCommandMap_(){this.commandMap_={};for(var g=0;g<i.length;g++){var e=i[g],I=e.shortName||e.name;this.commandMap_[I]=e}}map(g,e,I,C){if(":"!=g&&":"==g.charAt(0)){if(I)throw Error("Mode not supported for ex mappings");var i=g.substring(1);":"!=e&&":"==e.charAt(0)?this.commandMap_[i]={name:i,type:"exToEx",toInput:e.substring(1),user:!0}:this.commandMap_[i]={name:i,type:"exToKey",toKeys:e,user:!0}}else{var l={keys:g,type:"keyToKey",toKeys:e,noremap:!!C};I&&(l.context=I),t.unshift(l)}}unmap(g,e){if(":"!=g&&":"==g.charAt(0)){if(e)throw Error("Mode not supported for ex mappings");var I=g.substring(1);if(this.commandMap_[I]&&this.commandMap_[I].user)return delete this.commandMap_[I],!0}else for(var C=g,i=0;i<t.length;i++)if(C==t[i].keys&&t[i].context===e)return t.splice(i,1),!0}};function te(e,I){var t=e.state.vim,C=b.macroModeState,i=b.registerController.getRegister("."),l=C.isPlaying,n=C.lastInsertModeChanges;l||(e.off("change",le),t.insertEnd&&t.insertEnd.clear(),t.insertEnd=void 0,g.off(e.getInputField(),"keydown",oe)),!l&&t.insertModeRepeat>1&&(se(e,t,t.insertModeRepeat-1,!0),t.lastEditInputState.repeatOverride=t.insertModeRepeat),delete t.insertModeRepeat,t.insertMode=!1,I||e.setCursor(e.getCursor().line,e.getCursor().ch-1),e.setOption("keyMap","vim"),e.setOption("disableInput",!0),e.toggleOverwrite(!1),i.setText(n.changes.join("")),g.signal(e,"vim-mode-change",{mode:"normal"}),C.isRecording&&function(g){if(!g.isPlaying){var e=g.latestRegister,I=b.registerController.getRegister(e);I&&I.pushInsertModeChanges&&I.pushInsertModeChanges(g.lastInsertModeChanges)}}(C)}function Ce(g){t.unshift(g)}function ie(g,e,I,t){var C=b.registerController.getRegister(t);if(":"==t)return C.keyBuffer[0]&&Ie.processCommand(g,C.keyBuffer[0]),void(I.isPlaying=!1);var i=C.keyBuffer,l=0;I.isPlaying=!0,I.replaySearchQueries=C.searchQueries.slice(0);for(var n=0;n<i.length;n++)for(var A,d,o=i[n],s=/<(?:[CSMA]-)*\w+>|./gi;A=s.exec(o);)if(d=A[0],E.handleKey(g,d,"macro"),e.insertMode){var a=C.insertModeChanges[l++].changes;b.macroModeState.lastInsertModeChanges.changes=a,Ve(g,a,1),te(g)}I.isPlaying=!1}function le(g,e){var I=b.macroModeState,t=I.lastInsertModeChanges;if(!I.isPlaying)for(var C=g.state.vim;e;){if(t.expectCursorActivityForChange=!0,t.ignoreCount>1)t.ignoreCount--;else if("+input"==e.origin||"paste"==e.origin||void 0===e.origin){var i=g.listSelections().length;i>1&&(t.ignoreCount=i);var l=e.text.join("\n");if(t.maybeReset&&(t.changes=[],t.maybeReset=!1),l)if(g.state.overwrite&&!/\n/.test(l))t.changes.push([l]);else{if(l.length>1){var n=C&&C.insertEnd&&C.insertEnd.find(),A=g.getCursor();if(n&&n.line==A.line){var d=n.ch-A.ch;d>0&&d<l.length&&(t.changes.push([l,d]),l="")}}l&&t.changes.push(l)}}e=e.next}}function ne(g){var e,I=g.state.vim;if(I.insertMode){var t=b.macroModeState;if(t.isPlaying)return;var C=t.lastInsertModeChanges;C.expectCursorActivityForChange?C.expectCursorActivityForChange=!1:(C.maybeReset=!0,I.insertEnd&&I.insertEnd.clear(),I.insertEnd=g.setBookmark(g.getCursor(),{insertLeft:!0}))}else null!=(e=g.curOp)&&e.isVimOp||Ae(g,I)}function Ae(e,I){var t=e.getCursor("anchor"),C=e.getCursor("head");if(I.visualMode&&!e.somethingSelected()?Bg(e,!1):!I.visualMode&&!I.insertMode&&e.somethingSelected()&&(I.visualMode=!0,I.visualLine=!1,g.signal(e,"vim-mode-change",{mode:"visual"})),I.visualMode){var i=og(C,t)?0:-1,l=og(C,t)?-1:0;C=ig(C,0,i),t=ig(t,0,l),I.sel={anchor:t,head:C},Qg(e,I,"<",sg(C,t)),Qg(e,I,">",ag(C,t))}else I.insertMode||(I.lastHPos=e.getCursor().ch)}function de(g,e){this.keyName=g,this.key=e.key,this.ctrlKey=e.ctrlKey,this.altKey=e.altKey,this.metaKey=e.metaKey,this.shiftKey=e.shiftKey}function oe(e){var I=b.macroModeState.lastInsertModeChanges,t=g.keyName?g.keyName(e):e.key;t&&(-1!=t.indexOf("Delete")||-1!=t.indexOf("Backspace"))&&(I.maybeReset&&(I.changes=[],I.maybeReset=!1),I.changes.push(new de(t,e)))}function se(g,e,I,t){var C=b.macroModeState;C.isPlaying=!0;var i=e.lastEditActionCommand,l=e.inputState;function n(){i?q.processAction(g,e,i):q.evalInput(g,e)}function A(I){if(C.lastInsertModeChanges.changes.length>0){I=e.lastEditActionCommand?I:1;var t=C.lastInsertModeChanges;Ve(g,t.changes,I)}}if(e.inputState=e.lastEditInputState,i&&i.interlaceInsertRepeat)for(var d=0;d<I;d++)n(),A(1);else t||n(),A(I);e.inputState=l,e.insertMode&&!t&&te(g),C.isPlaying=!1}function ae(e,I){g.lookupKey(I,"vim-insert",(function(I){return"string"==typeof I?g.commands[I](e):I(e),!0}))}function Ve(g,e,I){var t=g.getCursor("head"),C=b.macroModeState.lastInsertModeChanges.visualBlock;C&&(Zg(g,t,C+1),I=g.listSelections().length,g.setCursor(t));for(var i=0;i<I;i++){C&&g.setCursor(ig(t,i,0));for(var l=0;l<e.length;l++){var n=e[l];if(n instanceof de)ae(g,n.keyName);else if("string"==typeof n)g.replaceSelection(n);else{var A=g.getCursor(),d=ig(A,0,n[0].length-(n[1]||0));g.replaceRange(n[0],A,n[1]?A:d),g.setCursor(d)}}}C&&g.setCursor(ig(t,0,1))}function ce(g){var e=new g.constructor;return Object.keys(g).forEach((function(I){if("insertEnd"!=I){var t=g[I];Array.isArray(t)?t=t.slice():t&&"object"==typeof t&&t.constructor!=Object&&(t=ce(t)),e[I]=t}})),g.sel&&(e.sel={head:g.sel.head&&Ag(g.sel.head),anchor:g.sel.anchor&&Ag(g.sel.anchor)}),e}return N("insertModeEscKeysTimeout",200,"number"),Q(),E}function aX(g,e){var I=e.ch,t=e.line+1;t<1&&(t=1,I=0),t>g.lines&&(t=g.lines,I=Number.MAX_VALUE);var C=g.line(t);return Math.min(C.from+Math.max(0,I),C.to)}function VX(g,e){let I=g.lineAt(e);return{line:I.number-1,ch:e-I.from}}class cX{constructor(g,e){this.line=g,this.ch=e}}function rX(g,e,I){if(g.addEventListener)g.addEventListener(e,I,!1);else{var t=g._handlers||(g._handlers={});t[e]=(t[e]||[]).concat(I)}}function hX(g,e,I){if(g.removeEventListener)g.removeEventListener(e,I,!1);else{var t=g._handlers,C=t&&t[e];if(C){var i=C.indexOf(I);i>-1&&(t[e]=C.slice(0,i).concat(C.slice(i+1)))}}}function UX(g,e,...I){var t,C=null===(t=g._handlers)||void 0===t?void 0:t[e];if(C)for(var i=0;i<C.length;++i)C[i](...I)}function ZX(g,...e){if(g)for(var I=0;I<g.length;++I)g[I](...e)}let RX;try{RX=new RegExp("[\\w\\p{Alphabetic}\\p{Number}_]","u")}catch{RX=/[\w]/}function FX(g,e){var I=g.cm6;if(!I.state.readOnly){var t="input.type.compose";if(g.curOp&&(g.curOp.lastChange||(t="input.type.compose.start")),e.annotations)try{e.annotations.some((function(g){"input"==g.value&&(g.value=t)}))}catch(g){}else e.userEvent=t;return I.dispatch(e)}}function mX(g,e){var I;g.curOp&&(g.curOp.$changeStart=void 0),(e?lH:nH)(g.cm6);let t=null===(I=g.curOp)||void 0===I?void 0:I.$changeStart;null!=t&&g.cm6.dispatch({selection:{anchor:t}})}var BX={};class WX{constructor(g){this.state={},this.marks=Object.create(null),this.$mid=0,this.options={},this._handlers={},this.$lastChangeEndOffset=0,this.virtualSelection=null,this.cm6=g,this.onChange=this.onChange.bind(this),this.onSelectionChange=this.onSelectionChange.bind(this)}openDialog(g,e,I){return TX(this,g,e,I)}openNotification(g,e){return SX(this,g,e)}on(g,e){rX(this,g,e)}off(g,e){hX(this,g,e)}signal(g,e,I){UX(this,g,e,I)}indexFromPos(g){return aX(this.cm6.state.doc,g)}posFromIndex(g){return VX(this.cm6.state.doc,g)}foldCode(g){let e=this.cm6,I=e.state.selection.ranges,t=aX(this.cm6.state.doc,g),C=it.create([it.range(t,t)],0).ranges;e.state.selection.ranges=C,MV(e),e.state.selection.ranges=I}firstLine(){return 0}lastLine(){return this.cm6.state.doc.lines-1}lineCount(){return this.cm6.state.doc.lines}setCursor(g,e){"object"==typeof g&&(e=g.ch,g=g.line);var I=aX(this.cm6.state.doc,{line:g,ch:e||0});this.cm6.dispatch({selection:{anchor:I}},{scrollIntoView:!this.curOp}),this.curOp&&!this.curOp.isVimOp&&this.onBeforeEndOperation()}getCursor(g){var e=this.cm6.state.selection.main,I="head"!=g&&g?"anchor"==g?e.anchor:"start"==g?e.from:"end"==g?e.to:null:e.head;if(null==I)throw new Error("Invalid cursor type");return this.posFromIndex(I)}listSelections(){var g=this.cm6.state.doc;return this.cm6.state.selection.ranges.map((e=>({anchor:VX(g,e.anchor),head:VX(g,e.head)})))}setSelections(g,e){var I=this.cm6.state.doc,t=g.map((g=>{var e=aX(I,g.head),t=aX(I,g.anchor);return e==t?it.cursor(e,1):it.range(t,e)}));this.cm6.dispatch({selection:it.create(t,e)})}setSelection(g,e,I){this.setSelections([{anchor:g,head:e}],0),I&&"*mouse"==I.origin&&this.onBeforeEndOperation()}getLine(g){var e=this.cm6.state.doc;return g<0||g>=e.lines?"":this.cm6.state.doc.line(g+1).text}getLineHandle(g){return this.$lineHandleChanges||(this.$lineHandleChanges=[]),{row:g,index:this.indexFromPos(new cX(g,0))}}getLineNumber(g){var e=this.$lineHandleChanges;if(!e)return null;for(var I=g.index,t=0;t<e.length;t++)if(null==(I=e[t].changes.mapPos(I,1,LI.TrackAfter)))return null;var C=this.posFromIndex(I);return 0==C.ch?C.line:null}releaseLineHandles(){this.$lineHandleChanges=void 0}getRange(g,e){var I=this.cm6.state.doc;return this.cm6.state.sliceDoc(aX(I,g),aX(I,e))}replaceRange(g,e,I,t){I||(I=e);var C=this.cm6.state.doc;FX(this,{changes:{from:aX(C,e),to:aX(C,I),insert:g}})}replaceSelection(g){FX(this,this.cm6.state.replaceSelection(g))}replaceSelections(g){FX(this,{changes:this.cm6.state.selection.ranges.map(((e,I)=>({from:e.from,to:e.to,insert:g[I]||""})))})}getSelection(){return this.getSelections().join("\n")}getSelections(){var g=this.cm6;return g.state.selection.ranges.map((e=>g.state.sliceDoc(e.from,e.to)))}somethingSelected(){return this.cm6.state.selection.ranges.some((g=>!g.empty))}getInputField(){return this.cm6.contentDOM}clipPos(g){var e=this.cm6.state.doc,I=g.ch,t=g.line+1;t<1&&(t=1,I=0),t>e.lines&&(t=e.lines,I=Number.MAX_VALUE);var C=e.line(t);return I=Math.min(Math.max(0,I),C.to-C.from),new cX(t-1,I)}getValue(){return this.cm6.state.doc.toString()}setValue(g){var e=this.cm6;return e.dispatch({changes:{from:0,to:e.state.doc.length,insert:g},selection:it.range(0,0)})}focus(){return this.cm6.focus()}blur(){return this.cm6.contentDOM.blur()}defaultTextHeight(){return this.cm6.defaultLineHeight}findMatchingBracket(g,e){var I=this.cm6.state,t=aX(I.doc,g),C=hc(I,t+1,-1);return C&&C.end||(C=hc(I,t,1))&&C.end?{to:VX(I.doc,C.end.from)}:{to:void 0}}scanForBracket(g,e,I,t){return QX(this,g,e,I,t)}indentLine(g,e){e?this.indentMore():this.indentLess()}indentMore(){iX(this.cm6)}indentLess(){lX(this.cm6)}execCommand(g){if("indentAuto"==g)WX.commands.indentAuto(this);else if("goLineLeft"==g)LH(this.cm6);else if("goLineRight"==g){jH(this.cm6);let g=this.cm6.state,e=g.selection.main.head;e<g.doc.length&&"\n"!==g.sliceDoc(e,e+1)&&QH(this.cm6)}}setBookmark(g,e){var I=null!=e&&e.insertLeft?1:-1,t=this.indexFromPos(g);return new yX(this,t,I)}addOverlay({query:g}){let e=new IJ({regexp:!0,search:g.source,caseSensitive:!/i/.test(g.flags)});if(e.valid){e.forVim=!0,this.cm6Query=e;let g=aJ.of(e);return this.cm6.dispatch({effects:g}),e}}removeOverlay(g){if(!this.cm6Query)return;this.cm6Query.forVim=!1;let e=aJ.of(this.cm6Query);this.cm6.dispatch({effects:e})}getSearchCursor(g,e){var I=this,t=null,C=null;null==e.ch&&(e.ch=Number.MAX_VALUE);var i=aX(I.cm6.state.doc,e),l=g.source.replace(/(\\.|{(?:\d+(?:,\d*)?|,\d+)})|[{}]/g,(function(g,e){return e||"\\"+g}));function n(e,I=0,t=e.length){return new Qy(e,l,{ignoreCase:g.ignoreCase},I,t)}return{findNext:function(){return this.find(!1)},findPrevious:function(){return this.find(!0)},find:function(g){var e=I.cm6.state.doc;if(g){let g=t?t.from==t.to?t.to-1:t.from:i;t=function(g,e){var t=I.cm6.state.doc;for(let g=1;;g++){let I=Math.max(0,e-1e4*g),C=n(t,I,e),i=null;for(;!C.next().done;)i=C.value;if(i&&(0==I||i.from>I+10))return i;if(0==I)return null}}(0,g)}else{let g=t?t.from==t.to?t.to+1:t.to:i;t=function(g){var e=I.cm6.state.doc;if(g>e.length)return null;let t=n(e,g).next();return t.done?null:t.value}(g)}return C=t&&{from:VX(e,t.from),to:VX(e,t.to),match:t.match},t&&t.match},from:function(){return null==C?void 0:C.from},to:function(){return null==C?void 0:C.to},replace:function(g){t&&(FX(I,{changes:{from:t.from,to:t.to,insert:g}}),t.to=t.from+g.length,C&&(C.to=VX(I.cm6.state.doc,t.to)))}}}findPosV(g,e,I,t){let{cm6:C}=this;const i=C.state.doc;let l="page"==I?C.dom.clientHeight:0;const n=aX(i,g);let A=it.cursor(n,1,void 0,t),d=Math.round(Math.abs(e));for(let g=0;g<d;g++)"page"==I?A=C.moveVertically(A,e>0,l):"line"==I&&(A=C.moveVertically(A,e>0));let o=VX(i,A.head);return(e<0&&0==A.head&&0!=t&&0==g.line&&0!=g.ch||e>0&&A.head==i.length&&o.ch!=t&&g.line==o.line)&&(o.hitSide=!0),o}charCoords(g,e){var I=this.cm6.contentDOM.getBoundingClientRect(),t=aX(this.cm6.state.doc,g),C=this.cm6.coordsAtPos(t),i=-I.top;return{left:((null==C?void 0:C.left)||0)-I.left,top:((null==C?void 0:C.top)||0)+i,bottom:((null==C?void 0:C.bottom)||0)+i}}coordsChar(g,e){var I=this.cm6.contentDOM.getBoundingClientRect(),t=this.cm6.posAtCoords({x:g.left+I.left,y:g.top+I.top})||0;return VX(this.cm6.state.doc,t)}getScrollInfo(){var g=this.cm6.scrollDOM;return{left:g.scrollLeft,top:g.scrollTop,height:g.scrollHeight,width:g.scrollWidth,clientHeight:g.clientHeight,clientWidth:g.clientWidth}}scrollTo(g,e){null!=g&&(this.cm6.scrollDOM.scrollLeft=g),null!=e&&(this.cm6.scrollDOM.scrollTop=e)}scrollIntoView(g,e){if(g){var I=this.indexFromPos(g);this.cm6.dispatch({effects:Vd.scrollIntoView(I)})}else this.cm6.dispatch({scrollIntoView:!0,userEvent:"scroll"})}getWrapperElement(){return this.cm6.dom}getMode(){return{name:this.getOption("mode")}}setSize(g,e){this.cm6.dom.style.width=g+4+"px",this.cm6.dom.style.height=e+"px",this.refresh()}refresh(){this.cm6.measure()}destroy(){this.removeOverlay()}getLastEditEnd(){return this.posFromIndex(this.$lastChangeEndOffset)}onChange(g){this.$lineHandleChanges&&this.$lineHandleChanges.push(g);for(let e in this.marks)this.marks[e].update(g.changes);this.virtualSelection&&(this.virtualSelection.ranges=this.virtualSelection.ranges.map((e=>e.map(g.changes))));var e=this.curOp=this.curOp||{};g.changes.iterChanges(((g,I,t,C,i)=>{(null==e.$changeStart||e.$changeStart>t)&&(e.$changeStart=t),this.$lastChangeEndOffset=C;var l={text:i.toJSON()};e.lastChange?e.lastChange.next=e.lastChange=l:e.lastChange=e.change=l}),!0),e.changeHandlers||(e.changeHandlers=this._handlers.change&&this._handlers.change.slice())}onSelectionChange(){var g=this.curOp=this.curOp||{};g.cursorActivityHandlers||(g.cursorActivityHandlers=this._handlers.cursorActivity&&this._handlers.cursorActivity.slice()),this.curOp.cursorActivity=!0}operation(g,e){this.curOp||(this.curOp={$d:0}),this.curOp.$d++;try{var I=g()}finally{this.curOp&&(this.curOp.$d--,this.curOp.$d||this.onBeforeEndOperation())}return I}onBeforeEndOperation(){var g=this.curOp,e=!1;g&&(g.change&&ZX(g.changeHandlers,this,g.change),g&&g.cursorActivity&&(ZX(g.cursorActivityHandlers,this,null),g.isVimOp&&(e=!0)),this.curOp=null),e&&this.scrollIntoView()}moveH(g,e){if("char"==e){var I=this.getCursor();this.setCursor(I.line,I.ch+g)}}setOption(g,e){switch(g){case"keyMap":this.state.keyMap=e;break;case"textwidth":this.state.textwidth=e}}getOption(g){switch(g){case"firstLineNumber":return 1;case"tabSize":return this.cm6.state.tabSize||4;case"readOnly":return this.cm6.state.readOnly;case"indentWithTabs":return"\t"==this.cm6.state.facet($a);case"indentUnit":return this.cm6.state.facet($a).length||2;case"textwidth":return this.state.textwidth;case"keyMap":return this.state.keyMap||"vim"}}toggleOverwrite(g){this.state.overwrite=g}getTokenTypeAt(g){var e,I=this.indexFromPos(g),t=Ka(this.cm6.state,I),C=null==t?void 0:t.resolve(I),i=(null===(e=null==C?void 0:C.type)||void 0===e?void 0:e.name)||"";return/comment/i.test(i)?"comment":/string/i.test(i)?"string":""}overWriteSelection(g){var e=this.cm6.state.doc,I=this.cm6.state.selection,t=I.ranges.map((g=>{if(g.empty){var I=g.to<e.length?e.sliceString(g.from,g.to+1):"";if(I&&!/\n/.test(I))return it.range(g.from,g.to+1)}return g}));this.cm6.dispatch({selection:it.create(t,I.mainIndex)}),this.replaceSelection(g)}isInMultiSelectMode(){return this.cm6.state.selection.ranges.length>1}virtualSelectionMode(){return!!this.virtualSelection}forEachSelection(g){var e=this.cm6.state.selection;this.virtualSelection=it.create(e.ranges,e.mainIndex);for(var I=0;I<this.virtualSelection.ranges.length;I++){var t=this.virtualSelection.ranges[I];t&&(this.cm6.dispatch({selection:it.create([t])}),g(),this.virtualSelection.ranges[I]=this.cm6.state.selection.ranges[0])}this.cm6.dispatch({selection:this.virtualSelection}),this.virtualSelection=null}hardWrap(g){return JX(this,g)}}function NX(g,e,I){var t=document.createElement("div");return t.appendChild(e),t}function pX(g,e){g.state.currentNotificationClose&&g.state.currentNotificationClose(),g.state.currentNotificationClose=e}function SX(g,e,I){pX(g,n);var t,C=NX(g,e,I&&I.bottom),i=!1,l=I&&typeof I.duration<"u"?I.duration:5e3;function n(){i||(i=!0,clearTimeout(t),C.remove(),uX(g,C))}return C.onclick=function(g){g.preventDefault(),n()},bX(g,C),l&&(t=setTimeout(n,l)),n}function bX(g,e){var I=g.state.dialog;g.state.dialog=e,e&&I!==e&&(I&&I.contains(document.activeElement)&&g.focus(),I&&I.parentElement?I.parentElement.replaceChild(e,I):I&&I.remove(),WX.signal(g,"dialog"))}function uX(g,e){g.state.dialog==e&&(g.state.dialog=null,WX.signal(g,"dialog"))}function TX(g,e,I,t){t||(t={}),pX(g,void 0);var C=NX(g,e,t.bottom),i=!1;function l(e){if("string"==typeof e)n.value=e;else{if(i)return;i=!0,uX(g,C),g.state.dialog||g.focus(),t.onClose&&t.onClose(C)}}bX(g,C);var n=C.getElementsByTagName("input")[0];return n&&(t.value&&(n.value=t.value,!1!==t.selectValueOnOpen&&n.select()),t.onInput&&WX.on(n,"input",(function(g){t.onInput(g,n.value,l)})),t.onKeyUp&&WX.on(n,"keyup",(function(g){t.onKeyUp(g,n.value,l)})),WX.on(n,"keydown",(function(g){t&&t.onKeyDown&&t.onKeyDown(g,n.value,l)||(13==g.keyCode&&I(n.value),(27==g.keyCode||!1!==t.closeOnEnter&&13==g.keyCode)&&(n.blur(),WX.e_stop(g),l()))})),!1!==t.closeOnBlur&&WX.on(n,"blur",(function(){setTimeout((function(){document.activeElement!==n&&l()}))})),n.focus()),l}WX.isMac=typeof navigator<"u"&&/Mac/.test(navigator.platform),WX.Pos=cX,WX.StringStream=Fc,WX.commands={cursorCharLeft:function(g){GH(g.cm6)},redo:function(g){mX(g,!1)},undo:function(g){mX(g,!0)},newlineAndIndent:function(g){gX({state:g.cm6.state,dispatch:e=>FX(g,e)})},indentAuto:function(g){CX(g.cm6)},newlineAndIndentContinueComment:void 0,save:void 0},WX.isWordChar=function(g){return RX.test(g)},WX.keys=BX,WX.addClass=function(g,e){},WX.rmClass=function(g,e){},WX.e_preventDefault=function(g){g.preventDefault()},WX.e_stop=function(g){var e,I;null===(e=null==g?void 0:g.stopPropagation)||void 0===e||e.call(g),null===(I=null==g?void 0:g.preventDefault)||void 0===I||I.call(g)},WX.lookupKey=function(g,e,I){var t=WX.keys[g];t&&I(t)},WX.on=rX,WX.off=hX,WX.signal=UX,WX.findMatchingTag=MX,WX.findEnclosingTag=YX,WX.keyName=void 0;var GX={"(":")>",")":"(<","[":"]>","]":"[<","{":"}>","}":"{<","<":">>",">":"<<"};function kX(g){return g&&g.bracketRegex||/[(){}[\]]/}function QX(g,e,I,t,C){for(var i=C&&C.maxScanLineLength||1e4,l=C&&C.maxScanLines||1e3,n=[],A=kX(C),d=I>0?Math.min(e.line+l,g.lastLine()+1):Math.max(g.firstLine()-1,e.line-l),o=e.line;o!=d;o+=I){var s=g.getLine(o);if(s){var a=I>0?0:s.length-1,V=I>0?s.length:-1;if(!(s.length>i))for(o==e.line&&(a=e.ch-(I<0?1:0));a!=V;a+=I){var c=s.charAt(a);if(A.test(c)){var r=GX[c];if(r&&">"==r.charAt(1)==I>0)n.push(c);else{if(!n.length)return{pos:new cX(o,a),ch:c};n.pop()}}}}}return o-I!=(I>0?g.lastLine():g.firstLine())&&null}function MX(g,e){}function YX(g,e){var I,t,C=g.cm6.state,i=g.indexFromPos(e);i<C.doc.length&&"<"==C.sliceDoc(i,i+1)&&i++;for(var l=Ka(C,i),n=(null==l?void 0:l.resolve(i))||null;n;){if("OpenTag"==(null===(I=n.firstChild)||void 0===I?void 0:I.type.name)&&"CloseTag"==(null===(t=n.lastChild)||void 0===t?void 0:t.type.name))return{open:EX(C.doc,n.firstChild),close:EX(C.doc,n.lastChild)};n=n.parent}}function EX(g,e){return{from:VX(g,e.from),to:VX(g,e.to)}}class yX{constructor(g,e,I){this.cm=g,this.id=g.$mid++,this.offset=e,this.assoc=I,g.marks[this.id]=this}clear(){delete this.cm.marks[this.id]}find(){return null==this.offset?null:this.cm.posFromIndex(this.offset)}update(g){null!=this.offset&&(this.offset=g.mapPos(this.offset,this.assoc,LI.TrackDel))}}function JX(g,e){for(var I,t=e.column||g.getOption("textwidth")||80,C=0!=e.allowMerge,i=Math.min(e.from,e.to),l=Math.max(e.from,e.to);i<=l;){var n=g.getLine(i);if(n.length>t){if(o=c(n,t,5)){var A=null===(I=/^\s*/.exec(n))||void 0===I?void 0:I[0];g.replaceRange("\n"+A,new cX(i,o.start),new cX(i,o.end))}l++}else if(C&&/\S/.test(n)&&i!=l){var d=g.getLine(i+1);if(d&&/\S/.test(d)){var o,s=n.replace(/\s+$/,""),a=d.replace(/^\s+/,""),V=s+" "+a;(o=c(V,t,5))&&o.start>s.length||V.length<t?(g.replaceRange(" ",new cX(i,s.length),new cX(i+1,d.length-a.length)),i--,l--):s.length<n.length&&g.replaceRange("",new cX(i,s.length),new cX(i,n.length))}}i++}return i;function c(g,e,I){if(!(g.length<e)){var t=g.slice(0,e),C=g.slice(e),i=/^(?:(\s+)|(\S+)(\s+))/.exec(C),l=/(?:(\s+)|(\s+)(\S+))$/.exec(t),n=0,A=0;if(l&&!l[2]&&(n=e-l[1].length,A=e),i&&!i[2]&&(n||(n=e),A=e+i[1].length),n)return{start:n,end:A};if(l&&l[2]&&l.index>I)return{start:l.index,end:l.index+l[2].length};if(i&&i[2])return{start:n=e+i[2].length,end:n+i[3].length}}}}let HX=Kd||function(){let g={cursorBlinkRate:1200};return function(){return g}}(),wX=class{constructor(g,e,I,t,C,i,l,n,A,d){this.left=g,this.top=e,this.height=I,this.fontFamily=t,this.fontSize=C,this.fontWeight=i,this.color=l,this.className=n,this.letter=A,this.partial=d}draw(){let g=document.createElement("div");return g.className=this.className,this.adjust(g),g}adjust(g){g.style.left=this.left+"px",g.style.top=this.top+"px",g.style.height=this.height+"px",g.style.lineHeight=this.height+"px",g.style.fontFamily=this.fontFamily,g.style.fontSize=this.fontSize,g.style.fontWeight=this.fontWeight,g.style.color=this.partial?"transparent":this.color,g.className=this.className,g.textContent=this.letter}eq(g){return this.left==g.left&&this.top==g.top&&this.height==g.height&&this.fontFamily==g.fontFamily&&this.fontSize==g.fontSize&&this.fontWeight==g.fontWeight&&this.color==g.color&&this.className==g.className&&this.letter==g.letter}},XX=class{constructor(g,e){this.view=g,this.rangePieces=[],this.cursors=[],this.cm=e,this.measureReq={read:this.readPos.bind(this),write:this.drawSel.bind(this)},this.cursorLayer=g.scrollDOM.appendChild(document.createElement("div")),this.cursorLayer.className="cm-cursorLayer cm-vimCursorLayer",this.cursorLayer.setAttribute("aria-hidden","true"),g.requestMeasure(this.measureReq),this.setBlinkRate()}setBlinkRate(){let g=HX(this.cm.cm6.state).cursorBlinkRate;this.cursorLayer.style.animationDuration=g+"ms"}update(g){(g.selectionSet||g.geometryChanged||g.viewportChanged)&&(this.view.requestMeasure(this.measureReq),this.cursorLayer.style.animationName="cm-blink"==this.cursorLayer.style.animationName?"cm-blink2":"cm-blink"),KX(g)&&this.setBlinkRate()}scheduleRedraw(){this.view.requestMeasure(this.measureReq)}readPos(){let{state:g}=this.view,e=[];for(let I of g.selection.ranges){let t=I==g.selection.main,C=xX(this.cm,this.view,I,t);C&&e.push(C)}return{cursors:e}}drawSel({cursors:g}){if(g.length!=this.cursors.length||g.some(((g,e)=>!g.eq(this.cursors[e])))){let e=this.cursorLayer.children;if(e.length!==g.length){this.cursorLayer.textContent="";for(const e of g)this.cursorLayer.appendChild(e.draw())}else g.forEach(((g,I)=>g.adjust(e[I])));this.cursors=g}}destroy(){this.cursorLayer.remove()}};function KX(g){return HX(g.startState)!=HX(g.state)}const zX={".cm-vimMode .cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"},caretColor:"transparent !important"},".cm-fat-cursor":{position:"absolute",background:"#ff9696",border:"none",whiteSpace:"pre"},"&:not(.cm-focused) .cm-fat-cursor":{background:"none",outline:"solid 1px #ff9696",color:"transparent !important"}},DX=Zt.highest(Vd.theme(zX));function vX(g){let e=g.scrollDOM.getBoundingClientRect();return{left:(g.textDirection==$i.LTR?e.left:e.right-g.scrollDOM.clientWidth)-g.scrollDOM.scrollLeft,top:e.top-g.scrollDOM.scrollTop}}function xX(g,e,I,t){var C,i;let l=I.head,n=!1,A=1,d=g.state.vim;if(d&&(!d.insertMode||g.state.overwrite)){if(n=!0,d.visualBlock&&!t)return null;I.anchor<I.head&&l--,g.state.overwrite?A=.2:d.status&&(A=.5)}if(n){let g=l<e.state.doc.length&&e.state.sliceDoc(l,l+1);g&&/[\uDC00-\uDFFF]/.test(g)&&l>1&&(l--,g=e.state.sliceDoc(l,l+1));let I=e.coordsAtPos(l,1);if(!I)return null;let n=vX(e),d=e.domAtPos(l),s=d?d.node:e.contentDOM;for(;d&&d.node instanceof HTMLElement;)s=d.node,d={node:d.node.childNodes[d.offset],offset:0};if(!(s instanceof HTMLElement)){if(!s.parentNode)return null;s=s.parentNode}let a=getComputedStyle(s),V=I.left,c=null===(i=(C=e).coordsForChar)||void 0===i?void 0:i.call(C,l);if(c&&(V=c.left),g&&"\n"!=g&&"\r"!=g)if("\t"==g){g=" ";var o=e.coordsAtPos(l+1,-1);o&&(V=o.left-(o.left-I.left)/parseInt(a.tabSize))}else/[\uD800-\uDBFF]/.test(g)&&l<e.state.doc.length-1&&(g+=e.state.sliceDoc(l+1,l+2));else g=" ";let r=I.bottom-I.top;return new wX(V-n.left,I.top-n.top+r*(1-A),r*A,a.fontFamily,a.fontSize,a.fontWeight,a.color,t?"cm-fat-cursor cm-cursor-primary":"cm-fat-cursor cm-cursor-secondary",g,1!=A)}return null}var OX=typeof navigator<"u"&&/linux/i.test(navigator.platform)&&/ Gecko\/\d+/.exec(navigator.userAgent);const fX=sX(WX),jX=250,LX=Vd.baseTheme({".cm-vimMode .cm-cursorLayer:not(.cm-vimCursorLayer)":{display:"none"},".cm-vim-panel":{padding:"0px 10px",fontFamily:"monospace",minHeight:"1.3em"},".cm-vim-panel input":{border:"none",outline:"none",backgroundColor:"inherit"},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"}}),PX=Hl.fromClass(class{constructor(g){this.status="",this.query=null,this.decorations=Di.none,this.waitForCopy=!1,this.lastKeydown="",this.useNextTextInput=!1,this.compositionText="",this.view=g;const e=this.cm=new WX(g);fX.enterVimMode(this.cm),this.view.cm=this.cm,this.cm.state.vimPlugin=this,this.blockCursor=new XX(g,e),this.updateClass(),this.cm.on("vim-command-done",(()=>{e.state.vim&&(e.state.vim.status=""),this.blockCursor.scheduleRedraw(),this.updateStatus()})),this.cm.on("vim-mode-change",(g=>{e.state.vim&&(e.state.vim.mode=g.mode,g.subMode&&(e.state.vim.mode+=" block"),e.state.vim.status="",this.blockCursor.scheduleRedraw(),this.updateClass(),this.updateStatus())})),this.cm.on("dialog",(()=>{this.cm.state.statusbar?this.updateStatus():g.dispatch({effects:$X.of(!!this.cm.state.dialog)})})),this.dom=document.createElement("span"),this.dom.style.cssText="position: absolute; right: 10px; top: 1px",this.statusButton=document.createElement("span"),this.statusButton.onclick=g=>{fX.handleKey(this.cm,"<Esc>","user"),this.cm.focus()},this.statusButton.style.cssText="cursor: pointer"}update(g){var e;if((g.viewportChanged||g.docChanged)&&this.query&&this.highlight(this.query),g.docChanged&&this.cm.onChange(g),g.selectionSet&&this.cm.onSelectionChange(),g.viewportChanged,this.cm.curOp&&!this.cm.curOp.isVimOp&&this.cm.onBeforeEndOperation(),g.transactions)for(let I of g.transactions)for(let g of I.effects)if(g.is(aJ))if(null===(e=g.value)||void 0===e?void 0:e.forVim){let e=g.value.create();this.highlight(e)}else this.highlight(null);this.blockCursor.update(g)}updateClass(){const g=this.cm.state;!g.vim||g.vim.insertMode&&!g.overwrite?this.view.scrollDOM.classList.remove("cm-vimMode"):this.view.scrollDOM.classList.add("cm-vimMode")}updateStatus(){let g=this.cm.state.statusbar,e=this.cm.state.vim;if(!g||!e)return;let I=this.cm.state.dialog;if(I)I.parentElement!=g&&(g.textContent="",g.appendChild(I));else{g.textContent="";var t=(e.mode||"normal").toUpperCase();e.insertModeReturn&&(t+="(C-O)"),this.statusButton.textContent=`--${t}--`,g.appendChild(this.statusButton)}this.dom.textContent=e.status,g.appendChild(this.dom)}destroy(){fX.leaveVimMode(this.cm),this.updateClass(),this.blockCursor.destroy(),delete this.view.cm}highlight(g){if(this.query=g,!g)return this.decorations=Di.none;let{view:e}=this,I=new iC;for(let t=0,C=e.visibleRanges,i=C.length;t<i;t++){let{from:l,to:n}=C[t];for(;t<i-1&&n>C[t+1].from-500;)n=C[++t].to;g.highlight(e.state,l,n,((g,e)=>{I.add(g,e,qX)}))}return this.decorations=I.finish()}handleKey(g,e){const I=this.cm;let t=I.state.vim;if(!t)return;const C=fX.vimKeyFromEvent(g,t);if(WX.signal(this.cm,"inputEvent",{type:"handleKey",key:C}),!C)return;if("<Esc>"==C&&!t.insertMode&&!t.visualMode&&this.query){const g=t.searchState_;g&&(I.removeOverlay(g.getOverlay()),g.setOverlay(null))}if("<C-c>"===C&&!WX.isMac&&I.somethingSelected())return this.waitForCopy=!0,!0;t.status=(t.status||"")+C;let i=fX.multiSelectHandleKey(I,C,"user");return t=fX.maybeInitVimState_(I),!i&&t.insertMode&&I.state.overwrite&&(g.key&&1==g.key.length&&!/\n/.test(g.key)?(i=!0,I.overWriteSelection(g.key)):"Backspace"==g.key&&(i=!0,WX.commands.cursorCharLeft(I))),i&&(WX.signal(this.cm,"vim-keypress",C),g.preventDefault(),g.stopPropagation(),this.blockCursor.scheduleRedraw()),this.updateStatus(),!!i}},{eventHandlers:{copy:function(g,e){this.waitForCopy&&(this.waitForCopy=!1,Promise.resolve().then((()=>{var g=this.cm,e=g.state.vim;e&&(e.insertMode?g.setSelection(g.getCursor(),g.getCursor()):g.operation((()=>{g.curOp&&(g.curOp.isVimOp=!0),fX.handleKey(g,"<Esc>","user")})))})))},compositionstart:function(g,e){this.useNextTextInput=!0,WX.signal(this.cm,"inputEvent",g)},compositionupdate:function(g,e){WX.signal(this.cm,"inputEvent",g)},compositionend:function(g,e){WX.signal(this.cm,"inputEvent",g)},keypress:function(g,e){WX.signal(this.cm,"inputEvent",g),"Dead"==this.lastKeydown&&this.handleKey(g,e)},keydown:function(g,e){WX.signal(this.cm,"inputEvent",g),this.lastKeydown=g.key,"Unidentified"==this.lastKeydown||"Process"==this.lastKeydown||"Dead"==this.lastKeydown?this.useNextTextInput=!0:(this.useNextTextInput=!1,this.handleKey(g,e))}},provide:()=>[Vd.inputHandler.of(((g,e,I,t)=>{var C,i,l=CK(g);if(!l)return!1;var n=null===(C=l.state)||void 0===C?void 0:C.vim,A=l.state.vimPlugin;if(n&&!n.insertMode&&(null===(i=l.curOp)||void 0===i||!i.isVimOp)){if("\0\0"===t)return!0;if(WX.signal(l,"inputEvent",{type:"text",text:t,from:e,to:I}),1==t.length&&A.useNextTextInput){if(n.expectLiteralNext&&g.composing)return A.compositionText=t,!1;if(A.compositionText){var d=A.compositionText;A.compositionText="";var o=g.state.selection.main.head;if(d===g.state.sliceDoc(o-d.length,o)){var s=l.getCursor();l.replaceRange("",l.posFromIndex(o-d.length),s)}}return A.handleKey({key:t,preventDefault:()=>{},stopPropagation:()=>{}}),_X(g),!0}}return!1}))],decorations:g=>g.decorations});function _X(g){var e=g.scrollDOM.parentElement;if(e){if(OX)return g.contentDOM.textContent="\0\0",void g.contentDOM.dispatchEvent(new CustomEvent("compositionend"));var I=g.scrollDOM.nextSibling,t=window.getSelection(),C=t&&{anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset};g.scrollDOM.remove(),e.insertBefore(g.scrollDOM,I);try{C&&t&&(t.setPosition(C.anchorNode,C.anchorOffset),C.focusNode&&t.extend(C.focusNode,C.focusOffset))}catch(g){}g.focus(),g.contentDOM.dispatchEvent(new CustomEvent("compositionend"))}}const qX=Di.mark({class:"cm-searchMatch"}),$X=yt.define(),gK=rt.define({create:()=>!1,update(g,e){for(let I of e.effects)I.is($X)&&(g=I.value);return g},provide:g=>_o.from(g,(g=>g?eK:null))});function eK(g){let e=document.createElement("div");e.className="cm-vim-panel";let I=g.cm;return I.state.dialog&&e.appendChild(I.state.dialog),{top:!1,dom:e}}function IK(g){let e=document.createElement("div");e.className="cm-vim-panel";let I=g.cm;return I.state.statusbar=e,I.state.vimPlugin.updateStatus(),{dom:e}}function tK(g={}){return[LX,PX,DX,g.status?_o.of(IK):gK]}function CK(g){return g.cm||null}var iK=g=>{var{theme:e,settings:I={},styles:t=[]}=g,C={".cm-gutters":{}},i={};I.background&&(i.backgroundColor=I.background),I.backgroundImage&&(i.backgroundImage=I.backgroundImage),I.foreground&&(i.color=I.foreground),I.fontSize&&(i.fontSize=I.fontSize),(I.background||I.foreground)&&(C["&"]=i),I.fontFamily&&(C["&.cm-editor .cm-scroller"]={fontFamily:I.fontFamily}),I.gutterBackground&&(C[".cm-gutters"].backgroundColor=I.gutterBackground),I.gutterForeground&&(C[".cm-gutters"].color=I.gutterForeground),I.gutterBorder&&(C[".cm-gutters"].borderRightColor=I.gutterBorder),I.caret&&(C[".cm-content"]={caretColor:I.caret},C[".cm-cursor, .cm-dropCursor"]={borderLeftColor:I.caret});var l={};return I.gutterActiveForeground&&(l.color=I.gutterActiveForeground),I.lineHighlight&&(C[".cm-activeLine"]={backgroundColor:I.lineHighlight},l.backgroundColor=I.lineHighlight),C[".cm-activeLineGutter"]=l,I.selection&&(C["&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"]={background:I.selection+" !important"}),I.selectionMatch&&(C["& .cm-selectionMatch"]={backgroundColor:I.selectionMatch}),[Vd.theme(C,{dark:"dark"===e}),$V(LV.define(t))]},lK={background:"#ffffff",foreground:"#383a42",caret:"#000",selection:"#add6ff",selectionMatch:"#a8ac94",lineHighlight:"#f0f0f0",gutterBackground:"#fff",gutterForeground:"#237893",gutterActiveForeground:"#0b216f",fontFamily:'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'},nK=[{tag:[Qa.keyword,Qa.operatorKeyword,Qa.modifier,Qa.color,Qa.constant(Qa.name),Qa.standard(Qa.name),Qa.standard(Qa.tagName),Qa.special(Qa.brace),Qa.atom,Qa.bool,Qa.special(Qa.variableName)],color:"#0000ff"},{tag:[Qa.moduleKeyword,Qa.controlKeyword],color:"#af00db"},{tag:[Qa.name,Qa.deleted,Qa.character,Qa.macroName,Qa.propertyName,Qa.variableName,Qa.labelName,Qa.definition(Qa.name)],color:"#0070c1"},{tag:Qa.heading,fontWeight:"bold",color:"#0070c1"},{tag:[Qa.typeName,Qa.className,Qa.tagName,Qa.number,Qa.changed,Qa.annotation,Qa.self,Qa.namespace],color:"#267f99"},{tag:[Qa.function(Qa.variableName),Qa.function(Qa.propertyName)],color:"#795e26"},{tag:[Qa.number],color:"#098658"},{tag:[Qa.operator,Qa.punctuation,Qa.separator,Qa.url,Qa.escape,Qa.regexp],color:"#383a42"},{tag:[Qa.regexp],color:"#af00db"},{tag:[Qa.special(Qa.string),Qa.processingInstruction,Qa.string,Qa.inserted],color:"#a31515"},{tag:[Qa.angleBracket],color:"#383a42"},{tag:Qa.strong,fontWeight:"bold"},{tag:Qa.emphasis,fontStyle:"italic"},{tag:Qa.strikethrough,textDecoration:"line-through"},{tag:[Qa.meta,Qa.comment],color:"#008000"},{tag:Qa.link,color:"#4078f2",textDecoration:"underline"},{tag:Qa.invalid,color:"#e45649"}];function AK(g){var{theme:e="dark",settings:I={},styles:t=[]}={};return iK({theme:e,settings:_g({},lK,I),styles:[...nK,...t]})}var dK=AK(),oK={background:"#1e1e1e",foreground:"#9cdcfe",caret:"#c6c6c6",selection:"#6199ff2f",selectionMatch:"#72a1ff59",lineHighlight:"#ffffff0f",gutterBackground:"#1e1e1e",gutterForeground:"#838383",gutterActiveForeground:"#fff",fontFamily:'Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace'},sK=[{tag:[Qa.keyword,Qa.operatorKeyword,Qa.modifier,Qa.color,Qa.constant(Qa.name),Qa.standard(Qa.name),Qa.standard(Qa.tagName),Qa.special(Qa.brace),Qa.atom,Qa.bool,Qa.special(Qa.variableName)],color:"#569cd6"},{tag:[Qa.controlKeyword,Qa.moduleKeyword],color:"#c586c0"},{tag:[Qa.name,Qa.deleted,Qa.character,Qa.macroName,Qa.propertyName,Qa.variableName,Qa.labelName,Qa.definition(Qa.name)],color:"#9cdcfe"},{tag:Qa.heading,fontWeight:"bold",color:"#9cdcfe"},{tag:[Qa.typeName,Qa.className,Qa.tagName,Qa.number,Qa.changed,Qa.annotation,Qa.self,Qa.namespace],color:"#4ec9b0"},{tag:[Qa.function(Qa.variableName),Qa.function(Qa.propertyName)],color:"#dcdcaa"},{tag:[Qa.number],color:"#b5cea8"},{tag:[Qa.operator,Qa.punctuation,Qa.separator,Qa.url,Qa.escape,Qa.regexp],color:"#d4d4d4"},{tag:[Qa.regexp],color:"#d16969"},{tag:[Qa.special(Qa.string),Qa.processingInstruction,Qa.string,Qa.inserted],color:"#ce9178"},{tag:[Qa.angleBracket],color:"#808080"},{tag:Qa.strong,fontWeight:"bold"},{tag:Qa.emphasis,fontStyle:"italic"},{tag:Qa.strikethrough,textDecoration:"line-through"},{tag:[Qa.meta,Qa.comment],color:"#6a9955"},{tag:Qa.link,color:"#6a9955",textDecoration:"underline"},{tag:Qa.invalid,color:"#ff0000"}];function aK(g){var{theme:e="dark",settings:I={},styles:t=[]}={};return iK({theme:e,settings:_g({},oK,I),styles:[...sK,...t]})}var VK=aK();const cK=sK,rK={line:"line--highlighted",gutter:"gutter--highlighted"},hK=Vd.theme({"&":{height:"100%",flex:"1 1 auto"},"& .cm-scroller":{height:"100% !important"},[`& .${rK.line}`]:{background:"var(--gno-highlighted-line-bg, rgba(255, 255, 0, 0.25))"}}),UK=new Ft,ZK=g=>"dark"===g?VK:dK,RK=g=>UK.of(ZK(g)),FK=g=>UK.reconfigure(ZK(g)),mK=yt.define({map:(g,e)=>(e.mapPos(g),g)}),BK=yt.define(),WK=yt.define({map:g=>g}),NK=()=>WK.of(null),pK=rt.define({create:()=>Di.none,update(g,e){g=g.map(e.changes);for(const I of e.effects)if(I.is(mK)){const e=Di.line({attributes:{class:rK.line}});g=g.update({add:[e.range(I.value)]})}else if(I.is(BK))g=g.update({filter:g=>g!==I.value});else if(I.is(WK))return Di.none;return g},provide:g=>Vd.decorations.from(g)}),SK=(g,e)=>{var I;const t=g.doc.line(e).from;let C=!1;return null==(I=g.field(pK,!1))||I.between(t,t+1,((g,e,I)=>{if(I.spec.attributes.class===rK.line)return C=!0,!1})),C},bK=new Ft,uK=g=>bK.reconfigure(_t.readOnly.of(g)),TK=(g=!1)=>bK.of(_t.readOnly.of(g)),GK=()=>Nc.define({token:g=>g.eatSpace()?null:g.match(/v(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-[\da-z-]+(?:\.[\da-z-]+)*)?(?:\+[\da-z-]+(?:\.[\da-z-]+)*)?/)?"constant name":g.match(/\/\/.*/)?"comment":g.match(/(=>)/)?"operator":g.match(/^(go|module|replace|require)\s/)?"keyword":g.match(/\(|\)/)?"bracket paren":g.match(/([^\s]|(?!))+/)?"string":(g.next(),null)}),kK=()=>new _a(GK());var QK=(g=>(g[g.Gno=0]="Gno",g[g.ModFile=1]="ModFile",g))(QK||{});const MK=0,YK=g=>{var e;const I=(null==g?void 0:g.lastIndexOf("."))??-1;return-1!==I&&(null==(e=null==g?void 0:g.toLowerCase())?void 0:e.slice(I))},EK=g=>".mod"===YK(g)?1:0,yK=g=>{switch(g){case 0:return yN();case 1:return kK()}},JK=new Ft,HK=g=>JK.of(yK(EK(g))),wK=g=>JK.reconfigure(yK(g)),XK={theme:"light",syntax:0,inputMode:"classic"},KK=yt.define(),zK=rt.define({create:()=>XK,update(g,e){for(const I of e.effects)if(I.is(KK))return{...g,initialized:!0,...I.value};return g}});class DK{constructor(g,e,I,t,C,i){this.left=g,this.top=e,this.height=I,this.className=t,this.letter=C,this.partial=i}draw(){let g=document.createElement("div");return g.className=this.className,this.adjust(g),g}adjust(g){g.style.left=this.left+"px",g.style.top=this.top+"px",g.style.height=this.height+"px",g.style.lineHeight=this.height+"px",g.style.color=this.partial?"transparent":"",g.className=this.className,g.textContent=this.letter}eq(g){return this.left==g.left&&this.top==g.top&&this.letter==g.letter&&this.height==g.height&&this.className==g.className}}class vK{constructor(g){this.view=g,this.rangePieces=[],this.cursors=[],this.measureReq={read:this.readPos.bind(this),write:this.drawSel.bind(this)},this.cursorLayer=g.scrollDOM.appendChild(document.createElement("div")),this.cursorLayer.className="cm-cursorLayer cm-vimCursorLayer",this.cursorLayer.setAttribute("aria-hidden","true"),g.requestMeasure(this.measureReq),this.setBlinkRate()}setBlinkRate(){this.cursorLayer.style.animationDuration="1200ms"}update(g){(g.selectionSet||g.geometryChanged||g.viewportChanged)&&(this.view.requestMeasure(this.measureReq),this.cursorLayer.style.animationName="cm-blink"==this.cursorLayer.style.animationName?"cm-blink2":"cm-blink")}scheduleRedraw(){this.view.requestMeasure(this.measureReq)}readPos(){let{state:g}=this.view,e=[];for(let I of g.selection.ranges){let t=I==g.selection.main,C=jK(null,this.view,I,t);C&&e.push(C)}return{cursors:e}}drawSel({cursors:g}){if(g.length!=this.cursors.length||g.some(((g,e)=>!g.eq(this.cursors[e])))){let e=this.cursorLayer.children;if(e.length!==g.length){this.cursorLayer.textContent="";for(const e of g)this.cursorLayer.appendChild(e.draw())}else g.forEach(((g,I)=>g.adjust(e[I])));this.cursors=g}}destroy(){this.cursorLayer.remove()}}const xK={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"},caretColor:"transparent !important"},".cm-fat-cursor":{position:"absolute",background:"#ff9696",border:"none",whiteSpace:"pre"},"&:not(.cm-focused) .cm-fat-cursor":{background:"none",outline:"solid 1px #ff9696"}},OK=Zt.highest(Vd.theme(xK));function fK(g){let e=g.scrollDOM.getBoundingClientRect();return{left:(g.textDirection==$i.LTR?e.left:e.right-g.scrollDOM.clientWidth)-g.scrollDOM.scrollLeft,top:e.top-g.scrollDOM.scrollTop}}function jK(g,e,I,t){let C=I.head,i=e.coordsAtPos(C,1);if(!i)return null;let l=fK(e),n=C<e.state.doc.length&&e.state.sliceDoc(C,C+1);(!n||"\n"==n||"\r"==n)&&(n=" ");let A=i.bottom-i.top;return new DK(i.left-l.left,i.top-l.top+0*A,1*A,t?"cm-fat-cursor cm-cursor-primary":"cm-fat-cursor cm-cursor-secondary",n,!1)}const LK=Vd.theme({".cm-emacsMode .cm-cursorLayer:not(.cm-vimCursorLayer)":{display:"none"},".cm-vim-panel":{padding:"5px 10px",backgroundColor:"#fffa8f",fontFamily:"monospace"},".cm-vim-panel input":{border:"none",outline:"none",backgroundColor:"#fffa8f"}}),PK=Hl.fromClass(class{constructor(g){this.status="",this.view=g,this.em=new Cz(g),this.blockCursor=new vK(g),this.view.scrollDOM.classList.add("cm-emacsMode")}update(g){g.docChanged&&(this.em.$emacsMark=null,this.em.updateMarksOnChange(g.changes)),this.blockCursor.update(g)}destroy(){this.view.scrollDOM.classList.remove("cm-emacsMode"),this.blockCursor.destroy()}},{eventHandlers:{mousedown:function(){this.em.$emacsMark=null}},provide:g=>Bd.of([{any:function(e,I){var t;return!(null===(t=e.plugin(g))||void 0===t||!t.em.handleKeyboard(I))}}])}),_K=yt.define(),qK=rt.define({create:()=>!1,update(g,e){for(let I of e.effects)I.is(_K)&&(g=I.value);return g},provide:g=>_o.from(g,(g=>g?$K:null))});function $K(g){let e=document.createElement("div");return e.className="cm-vim-panel",{top:!1,dom:e}}function gz(g={}){return[LK,PK,OK,qK]}var ez={Return:"Return",Escape:"Esc",Insert:"Ins",ArrowLeft:"Left",ArrowRight:"Right",ArrowUp:"Up",ArrowDown:"Down",Enter:"Return",Divide:"/",Slash:"/",Multiply:"*",Subtract:"-",Minus:"-",Equal:"="},Iz={Shift:1,Alt:1,Command:1,Control:1,CapsLock:1};const tz={};class Cz{constructor(g){this.view=g,this.$data={count:0,keyChain:"",lastCommand:""},this.$emacsMarkRing=[],this.$emacsMark=null}static bindKey(g,e){g.split("|").forEach((function(g){let I="",t=g.split(/\s+/);t.forEach((function(g,C){let i=g.split(/-(?=.)/),l=i.pop();i.length&&(I+=i.sort().join("-")+"-"),I+=l,C===t.length-1?tz[I]=e:(tz[I]="null",I+=" ")}))}))}static getKey(g){var e=g.code,I=g.key;if(Iz[I])return["","",""];e.length>1&&("N"==e[0]&&(e=e.replace(/^Numpad/,"")),"K"==e[0]&&(e=e.replace(/^Key/,""))),1==(e=ez[e]||e).length&&(e=e.toLowerCase());var t="";return g.ctrlKey&&(t+="C-"),g.metaKey&&(t+="CMD-"),g.altKey&&(t+="M-"),g.shiftKey&&(t+="S-"),[e,t,I]}static addCommands(g){Object.keys(g).forEach((function(e){var I=g[e];"function"==typeof I&&(I={exec:I}),Cz.commands[e]=I}))}static execCommand(g,e,I,t=1){var C=void 0;if("function"==typeof g)for(var i=0;i<t;i++)g(e.view);else if("null"!==g){if(!g.exec)throw new Error("missformed command");for(t>1&&g.handlesCount&&(I||(I={}),"object"==typeof I&&(I.count=t),t=1),i=0;i<t;i++)C=g.exec(e,I||{})}return C}handleKeyboard(g){var e=Cz.getKey(g),I=this.findCommand(e);if(!I||!I.command||!1!==Cz.execCommand(I.command,this,I.args,I.count))return I}findCommand([g,e,I]){if(g){var t=this.$data;if(!e&&1==g.length&&(this.pushEmacsMark(),t.count)){var C=new Array(t.count+1).join(I);return t.count=null,{command:"insertstring",args:C}}if(("C-"==e||t.count)&&"number"==typeof(n=parseInt(g[g.length-1]))&&!isNaN(n))return t.count=Math.max(t.count||0,0),t.count=10*t.count+n,{command:"null"};e&&(g=e+g),t.keyChain&&(g=t.keyChain+=" "+g);var i=tz[g];if(t.keyChain="null"==i?g:"",i){if("null"===i)return{command:"null"};if("universalArgument"===i)return t.count=-4,{command:"null"};var l;if("string"!=typeof i&&(l=i.args,i.command&&(i=i.command)),("insertstring"===i||i===Dw||i===XJ)&&this.pushEmacsMark(),"string"!=typeof i||(i=Cz.commands[i])){!i.readOnly&&!i.isYank&&(t.lastCommand=null);var n=t.count||1;return t.count&&(t.count=0),{command:i,args:l,count:n}}}}}showCommandLine(g){}updateMarksOnChange(g){this.$emacsMark&&(this.$emacsMark=this.updateMark(this.$emacsMark,g)),this.$emacsMarkRing=this.$emacsMarkRing.map((e=>this.updateMark(e,g))).filter(Boolean)}updateMark(g,e){if(g){var I=g.map((function(g){return e.mapPos(g,1,LI.TrackDel)})).filter((g=>null!=g));return 0==I.length?null:I}}emacsMark(){return this.$emacsMark}setEmacsMark(g){this.$emacsMark=g}pushEmacsMark(g,e){var I=this.$emacsMark;I&&this.$emacsMarkRing.push(I),!g||e?this.setEmacsMark(g):this.$emacsMarkRing.push(g)}popEmacsMark(){var g=this.emacsMark();return g?(this.setEmacsMark(null),g):this.$emacsMarkRing.pop()}getLastEmacsMark(){return this.$emacsMark||this.$emacsMarkRing.slice(-1)[0]}getCopyText(){var g=this.view.state;return g.selection.ranges.map((e=>g.sliceDoc(e.from,e.to))).join("\n")}clearSelection(){var g=this.view,e=g.state.selection;if(!e.ranges.some((g=>g.from!=g.to)))return!1;var I=e.ranges.map((g=>it.range(g.head,g.head)));return g.dispatch({selection:it.create(I,e.mainIndex)}),!0}onPaste(g){var e,I=this.view,t=I.state.selection;if(t.ranges.length>1){var C=g.split("\n");C.length==t.ranges.length&&(e=C)}var i=0,l=I.state.changeByRange((I=>{var t=e?e[i]:g;return i++,{changes:{from:I.from,to:I.to,insert:t},range:it.cursor(I.from+t.length)}}));I.dispatch(l)}}Cz.commands={};const iz=g=>e=>{const I="down"===g;let t=e.state.selection;for(const g of t.ranges)t=t.addRange(e.moveVertically(g,I));return e.dispatch({selection:t}),!0},lz=iz("up"),nz=iz("down"),Az=g=>{let e=null;for(const I of g.state.selection.ranges)if(!I.empty)for(let t=I.from;t<=I.to;){const C=g.state.doc.lineAt(t),i=Math.min(C.to,I.to);e=e?e.addRange(it.range(i,i)):it.single(i),t=C.to+1}return!!e&&(g.dispatch({selection:e}),!0)},dz=[{key:"Ctrl-Space",run:Gr},{key:"Escape",run:kr},{key:"ArrowDown",run:ur(!0)},{key:"ArrowUp",run:ur(!1)},{key:"PageDown",run:ur(!0,"page")},{key:"PageUp",run:ur(!1,"page")},{key:"Enter",run:Tr},{key:"Tab",run:Tr},{key:"Mod-f",run:GJ,scope:"editor search-panel"},{key:"Escape",run:kJ,scope:"editor search-panel"},{key:"Alt-Enter",run:BJ,scope:"editor search-panel"},{key:"Mod-Alt-Enter",run:pJ,scope:"editor search-panel"},{key:"Ctrl-g",run:Ky},{key:"Mod-d",run:gJ,preventDefault:!0},{key:"Shift-Mod-l",run:WJ},{key:"Enter",run:gX,shift:gX},{key:"ArrowLeft",run:GH,shift:Cw,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:YH,shift:nw},{key:"ArrowRight",run:kH,shift:iw,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:EH,shift:Aw},{key:"ArrowUp",run:KH,shift:aw,preventDefault:!0},{key:"ArrowDown",run:zH,shift:Vw,preventDefault:!0},{key:"Home",run:LH,shift:Zw},{mac:"Cmd-ArrowLeft",run:LH,shift:Zw},{key:"Mod-Home",run:Ww,shift:pw},{mac:"Cmd-ArrowUp",run:Ww,shift:pw},{key:"PageUp",run:xH,shift:rw},{mac:"Ctrl-ArrowUp",run:xH,shift:rw},{key:"PageDown",run:OH,shift:hw},{mac:"Ctrl-ArrowDown",run:OH,shift:hw},{key:"End",run:jH,shift:Uw},{mac:"Cmd-ArrowRight",run:jH,shift:Uw},{key:"Mod-Alt-ArrowUp",linux:"Shift-Alt-ArrowUp",run:lz,preventDefault:!0},{key:"Mod-Alt-ArrowDown",linux:"Shift-Alt-ArrowDown",run:nz,preventDefault:!0},{key:"Shift-Alt-i",run:Az},{key:"Mod-End",run:Nw,shift:Sw},{mac:"Cmd-ArrowDown",run:Nw,shift:Sw},{key:"Mod-a",run:bw},{key:"Backspace",run:rh},{key:"Backspace",run:Yw,shift:Yw},{key:"Delete",run:Ew},{key:"Mod-Backspace",mac:"Alt-Backspace",run:Jw},{key:"Mod-Delete",mac:"Alt-Delete",run:Hw},{mac:"Mod-Backspace",run:Xw},{mac:"Mod-Delete",run:ww},{mac:"Ctrl-b",run:GH,shift:Cw,preventDefault:!0},{mac:"Ctrl-f",run:kH,shift:iw},{mac:"Ctrl-p",run:KH,shift:aw},{mac:"Ctrl-n",run:zH,shift:Vw},{mac:"Ctrl-a",run:qH,shift:mw},{mac:"Ctrl-e",run:$H,shift:Bw},{mac:"Ctrl-d",run:Ew},{mac:"Ctrl-h",run:Yw},{mac:"Ctrl-k",run:ww},{mac:"Ctrl-Alt-h",run:Jw},{mac:"Ctrl-o",run:Dw},{mac:"Ctrl-t",run:vw},{mac:"Ctrl-v",run:OH},{mac:"Alt-v",run:xH},{key:"Shift-Mod-k",run:qw},{key:"Alt-ArrowDown",run:jw},{key:"Alt-ArrowUp",run:fw},{win:"Shift-Alt-ArrowDown",mac:"Shift-Alt-ArrowDown",run:_w},{win:"Shift-Alt-ArrowUp",mac:"Shift-Alt-ArrowUp",run:Pw},{key:"Mod-l",run:uw,preventDefault:!0},{key:"Shift-Mod-\\",run:ew},{key:"Tab",run:iX,shift:lX,preventDefault:!0},{key:"Mod-[",run:lX},{key:"Mod-]",run:iX},{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:MV},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:YV},{key:"Mod-k Mod-0",run:yV},{key:"Mod-k Mod-j",run:JV},{key:"Mod-k Mod-c",run:DJ},{key:"Mod-k Mod-u",run:vJ},{key:"Mod-/",run:XJ},{key:"Shift-Alt-a",run:xJ},{key:"Mod-z",run:lH,preventDefault:!0},{key:"Mod-y",run:nH,preventDefault:!0},{key:"Mod-Shift-z",run:nH,preventDefault:!0},{key:"Mod-u",run:AH,preventDefault:!0},{key:"Mod-Shift-m",run:xh},{key:"F8",run:fh}],oz=()=>Bd.of(dz),sz=g=>{switch(g){case"emacs":return gz();case"vim":return tK();default:return oz()}},az=new Ft,Vz=g=>az.of(sz(g)),cz=g=>az.reconfigure(sz(g)),rz=[],hz=aW({highlightStyles:cK}),Uz={languageId:"gno",theme:hz},Zz=new Ft,Rz=g=>Zz.of(rz),Fz=g=>Zz.reconfigure(BT(g)),mz=()=>Zz.reconfigure(rz),Bz=({theme:g,inputMode:e,readonly:I=!1,value:t},C=XK)=>{var i;return{isInitialised:!1,theme:g??C.theme,inputMode:e??C.inputMode,fileName:null==(i=null==t?void 0:t.path)?void 0:i.toString(),syntax:EK(null==t?void 0:t.path),readOnly:I}},Wz=g=>zK.init((()=>Bz(g()))),Nz=g=>{const e=Bz(g);return e.isInitialised=!0,KK.of(e)},pz=g=>g.field(zK,!1),Sz=g=>!!pz(g).isInitialised,bz=(g,e,I)=>{const{value:t,theme:C="light",inputMode:i="classic",readonly:l=!1}=e,n=[],A={isInitialised:!0},{isInitialised:d}=I,o=EK(null==t?void 0:t.path);if((!d||I.fileName!==(null==t?void 0:t.path))&&(n.push(NK()),A.fileName=null==t?void 0:t.path,t&&e.lsp&&g.lspClient&&o!==QK.ModFile?n.push(Fz({...Uz,languageId:"gno",documentUri:`${e.lsp.rootUri}/${t.path}`,client:g.lspClient})):n.push(mz())),(!d||I.theme!==C)&&(n.push(FK(C)),A.theme=C),(!d||I.syntax!==o)&&(n.push(wK(o)),A.syntax=o),(!d||I.readOnly!==l)&&(n.push(uK(l)),A.readOnly=l),!d||I.inputMode!==i){const g=cz(i);A.inputMode=i,n.push(g)}const s=Object.keys(A).length>0;return s&&n.unshift(KK.of(A)),{isChanged:s,effects:n,changes:A}},uz=(g,e)=>({...g?pz(g):XK,isInitialised:!1,fileName:e}),Tz=(g,e)=>g.length&&g[g.length-1]===e?g.slice(0,g.length-1):g,Gz=g=>pI.of(g.split("\n").map((g=>Tz(g,"\r")))),kz=(g,e)=>({from:0,to:g.doc.length,insert:Gz(e)}),Qz=(g,e)=>e.map((e=>{const I=g.line(e.line);let{from:t,to:C}=I;return e.column>0&&(t+=e.column-1,C=t+1),{from:t,to:C,severity:e.severity??"error",message:e.message}}));class Mz{constructor(g,e){I(this,"isFormatting",!1),I(this,"currentInputMode","classic"),I(this,"onCursorPositionChange"),I(this,"onGutterClick"),I(this,"onInputModeChange"),I(this,"onLoadingStateChange"),this.editor=g,this.formatter=e}async doFormat(){var g;try{if(!this.formatter)return;const{doc:g}=this.editor.state,{text:e,markers:I}=await this.formatter(g.toString()),t=[uK(!1)];I&&t.push(KK.of({diagnostics:Qz(g,I)}));const{anchor:C,head:i}=this.editor.state.selection.main,l={changes:{from:0,to:g.length,insert:e?Gz(e):g.toString()},effects:t};this.editor.dispatch(l),C!==i&&this.editor.dispatch({selection:{anchor:C,head:Math.min(i,(null==e?void 0:e.length)??g.length,g.length)}})}catch(g){}finally{this.isFormatting=!1,null==(g=this.onLoadingStateChange)||g.call(this,!1)}}get doc(){return this.editor.state.doc.toString()}focus(){this.editor.focus()}setFormatter(g){this.formatter=g}formatDocument(){var g;this.isFormatting||!this.formatter||(this.isFormatting=!0,this.editor.dispatch({effects:uK(!0)}),null==(g=this.onLoadingStateChange)||g.call(this,!0),this.doFormat())}highlightLine(g){const e=SK(this.editor.state,g);if(this.removeHighlight(),e)return;const I=this.editor.state.doc.line(g).from;this.editor.dispatch({effects:mK.of(I)})}removeHighlight(){this.editor.dispatch({effects:NK()})}dispose(){}broadcastCursorState(g){var e,I;if(!g)return void(null==(e=this.onCursorPositionChange)||e.call(this,{lineNumber:0,column:0}));const{doc:t,selection:C}=g,i=t.lineAt(C.main.head),l=i.number,n=C.main.head-i.from;null==(I=this.onCursorPositionChange)||I.call(this,{lineNumber:l,column:n})}handleViewUpdate({selectionSet:g,state:e}){g&&this.broadcastCursorState(e)}checkInputModeChanges(g){var e;const{inputMode:I}=g;if(!I||this.currentInputMode===I)return;this.currentInputMode=I;let t=null;switch(g.inputMode){case"vim":{const g=CK(this.editor);t={mode:"vim",onModeChange:e=>null==g?void 0:g.on("vim-mode-change",(g=>e(g.mode))),onKeyPress:e=>null==g?void 0:g.on("vim-keypress",e),onCommandDone:e=>null==g?void 0:g.on("vim-command-done",e),onDispose:e=>null==g?void 0:g.on("dispose",e)};break}case"emacs":t={mode:"emacs",onDidMarkChange:g=>{},onDidChangeKey:g=>{}}}null==(e=this.onInputModeChange)||e.call(this,t)}}const Yz=g=>{const e=[hh,dX,QJ,WH,HV,uh,jh].flat();return[ms(),no(),CH(),fV(null==g?void 0:g.foldGutter),Xd(),_d(),_t.allowMultipleSelections.of(!0),ZV(),$V(Ic,{fallback:!0}),ac(),dh(),bh(),Wo(),So(),ro(),xy(),Bd.of(e)]};var Ez=(g=>(g.OpenRunPrompt="gnovm.expr.prompt",g.RunLastAction="gnovm.expr.replay",g))(Ez||{});const yz=({onSave:g,onFormat:e,onContextMenuAction:I})=>Zt.highest(Bd.of([{key:"Mod-s",preventDefault:!0,run:e=>{const I=null==g?void 0:g(e.state.doc.toString());return I&&(e.dispatch({effects:uK(!0)}),I.then((g=>{e.dispatch({changes:kz(e.state,g)})})).finally((()=>{e.dispatch({effects:uK(!1)})}))),!0}},{key:"Mod-Enter",preventDefault:!0,run:()=>(null==I||I(Ez.RunLastAction),!0)},{key:"Mod-Shift-Enter",preventDefault:!0,run:()=>(null==I||I(Ez.OpenRunPrompt),!0)},{key:"Mod-Shift-f",run:()=>(null==e||e(),!0)}])),Jz=()=>_h((g=>{const{diagnostics:e}=pz(g.state);return e??[]})),Hz=[oX,...dz],wz=[hK,pK,Bd.of(Hz)],Xz={showLineNumbers:!0},Kz=g=>{var e;g={...Xz,...g};const I=Vd.updateListener.of((e=>{var I,t;e.docChanged&&(null==(I=null==g?void 0:g.onDocumentChange)||I.call(g,e.state.doc.toString())),null==(t=g.onViewUpdate)||t.call(g,e)})),t=[yz({onSave:e=>{var I;return null==(I=null==g?void 0:g.onSave)?void 0:I.call(g,e)},onContextMenuAction:e=>{var I;return null==(I=null==g?void 0:g.onContextMenuAction)?void 0:I.call(g,e)},onFormat:()=>{var e;return null==(e=null==g?void 0:g.onFormatDocument)?void 0:e.call(g)}}),TK(),Vz(null==g?void 0:g.getState().inputMode),Wz(g.getState),Jz(),...Yz(),...wz,HK(null==(e=null==g?void 0:g.getState().value)?void 0:e.path),RK(null==g?void 0:g.getState().theme),Rz(),I];return g.showLineNumbers&&t.unshift(Us({domEventHandlers:{click:(e,I)=>{var t;const C=e.state.doc.lineAt(I.from).number;return null==(t=null==g?void 0:g.onGutterClick)||t.call(g,C),!0}}})),t};class zz{constructor(){I(this,"fileStates",new Map)}replaceFileState(g,e){this.fileStates.set(g,e)}deleteFileState(g){this.fileStates.delete(g)}getFileState(g){return this.fileStates.get(g)}clear(){this.fileStates.clear()}}var Dz=(g=>(g[g.Debug=0]="Debug",g[g.Log=1]="Log",g[g.Info=2]="Info",g[g.Warning=3]="Warning",g[g.Error=4]="Error",g))(Dz||{}),vz=(g=>(g[g.Progress=0]="Progress",g[g.Notification=1]="Notification",g))(vz||{});const xz={[nU.MessageType.Debug]:Dz.Debug,[nU.MessageType.Log]:Dz.Log,[nU.MessageType.Info]:Dz.Info,[nU.MessageType.Warning]:Dz.Warning,[nU.MessageType.Error]:Dz.Error},Oz=g=>({type:vz.Notification,tag:"LSP",severity:xz[g.type],message:g.message}),fz=g=>({type:vz.Progress,tag:"LSP",finished:"end"===g.kind,message:"title"in g?g.title:g.message,percentage:"percentage"in g?g.percentage:void 0}),jz=()=>({type:vz.Notification,severity:Dz.Error,tag:"LSP",message:"Failed to start language server"}),Lz=()=>({type:vz.Progress,tag:"LSP",message:"Starting language server"}),Pz=()=>({type:vz.Progress});class _z{constructor(g){I(this,"extensions"),I(this,"stateMgr"),I(this,"remoteCtrl"),I(this,"lspClient"),I(this,"previousRaf"),I(this,"view"),I(this,"props",{});const{manager:e}=g;this.props=g,this.stateMgr=e??new zz,this.updateLspClientFromProps(),this.extensions=Kz({getState:()=>this.props,onDocumentChange:g=>{var e,I;return null==(I=(e=this.props).onChange)?void 0:I.call(e,g)},onGutterClick:g=>{var e,I;return null==(I=null==(e=this.remoteCtrl)?void 0:e.onGutterClick)?void 0:I.call(e,{startLineNumber:g,startColumn:0,endLineNumber:g,endColumn:0})},onSave:g=>{var e,I;return null==(I=(e=this.props).onSave)?void 0:I.call(e,g)},onContextMenuAction:g=>{var e,I;return null==(I=(e=this.props).onContextMenuAction)?void 0:I.call(e,g)},onFormatDocument:()=>{var g;return null==(g=this.remoteCtrl)?void 0:g.formatDocument()},onViewUpdate:g=>{var e;return null==(e=this.remoteCtrl)?void 0:e.handleViewUpdate(g)},showLineNumbers:g.showLineNumbers}),WE(this,{props:oM,updateProps:EY}),KY((()=>oE(this.props)),((g,e)=>this.updated(e)))}updateProps(g){this.props={...this.props,...g}}getStateForFile(g){var e,I;if(!g){const g=uz(null==(e=this.view)?void 0:e.state,void 0);return{state:this.getInitialEditorState(),stateData:g,isCached:!1}}const{path:t,content:C}=g,i=this.stateMgr.getFileState(t);return i&&Sz(i)?{state:i,stateData:pz(i),isCached:!0}:{state:_t.create({doc:Gz(C),extensions:this.extensions}),stateData:uz(null==(I=this.view)?void 0:I.state,t),isCached:!1}}getInitialEditorState(){return _t.create({extensions:this.extensions})}mount(g){var e,I;const{value:t,lsp:C}=this.props;this.view=new Vd({parent:g,state:t&&this.getStateForFile(t).state});const i=new Mz(this.view,this.props.formatter);null==(I=(e=this.props).onMount)||I.call(e,i),this.remoteCtrl=i;const l=[Nz(this.props)];this.lspClient&&C&&t&&l.push(Fz({...Uz,languageId:"gno",documentUri:`${C.rootUri}/${t.path}`,client:this.lspClient})),this.view.dispatch({effects:l})}scheduleNotification(g){this.previousRaf&&cancelAnimationFrame(this.previousRaf),this.previousRaf=requestAnimationFrame((()=>{var e,I;null==(I=null==(e=this.props)?void 0:e.onEvent)||I.call(e,g)}))}updateLspClientFromProps(g){var e,I,t,C;if(g&&g.workspaceId!==this.props.workspaceId&&(null==(e=this.lspClient)||e.close(),this.lspClient=void 0),!this.props.lsp||this.lspClient)this.props.lsp||(null==(I=this.lspClient)||I.close(),this.lspClient=void 0,null==(C=null==(t=this.props)?void 0:t.onEvent)||C.call(t,Pz()));else{const{rootUri:g,transport:e}=this.props.lsp;this.scheduleNotification(Lz());try{this.lspClient=new ik({rootUri:g,transport:e,windowNotificationHandler:{showMessage:g=>this.scheduleNotification(Oz(g)),onProgress:g=>this.scheduleNotification(fz(g)),onInitError:g=>{this.scheduleNotification(jz())}}})}catch(g){this.scheduleNotification(jz())}}}updated(g){var e,I,t,C,i,l;if(!this.view)return;let{value:n}=g;const{value:A,formatter:d}=this.props;this.updateLspClientFromProps(g),null==(e=this.remoteCtrl)||e.setFormatter(d);const o=g.workspaceId!==this.props.workspaceId;o&&(this.stateMgr.clear(),n=void 0);const s=(null==n?void 0:n.path)!==(null==A?void 0:A.path);if(!o&&s&&n){const{state:g}=this.view;Sz(this.view.state)&&this.stateMgr.replaceFileState(n.path,g)}let a;if(s){const{state:g,stateData:e}=this.getStateForFile(A);a=e,this.view.setState(g)}else a=pz(this.view.state);const V={lspClient:this.lspClient},{effects:c,changes:r,isChanged:h}=bz(V,this.props,a);h&&(this.view.dispatch({effects:c}),null==(I=this.remoteCtrl)||I.checkInputModeChanges(r),s&&(null==(i=null==(t=this.remoteCtrl)?void 0:t.broadcastCursorState)||i.call(t,null==(C=this.view)?void 0:C.state),null==(l=this.view)||l.focus()))}unmount(){var g,e,I,t;null==(e=null==(g=this.props)?void 0:g.onEvent)||e.call(g,Pz()),this.stateMgr.clear(),null==(I=this.remoteCtrl)||I.dispose(),null==(t=this.view)||t.destroy()}}const qz=Symbol("Comlink.proxy"),$z=Symbol("Comlink.endpoint"),gD=Symbol("Comlink.releaseProxy"),eD=Symbol("Comlink.finalizer"),ID=Symbol("Comlink.thrown"),tD=g=>"object"==typeof g&&null!==g||"function"==typeof g,CD={canHandle:g=>tD(g)&&g[qz],serialize(g){const{port1:e,port2:I}=new MessageChannel;return AD(g,e),[I,[I]]},deserialize:g=>(g.start(),sD(g))},iD={canHandle:g=>tD(g)&&ID in g,serialize({value:g}){let e;return e=g instanceof Error?{isError:!0,value:{message:g.message,name:g.name,stack:g.stack}}:{isError:!1,value:g},[e,[]]},deserialize(g){throw g.isError?Object.assign(new Error(g.value.message),g.value):g.value}},lD=new Map([["proxy",CD],["throw",iD]]);function nD(g,e){for(const I of g)if(e===I||"*"===I||I instanceof RegExp&&I.test(e))return!0;return!1}function AD(g,e=globalThis,I=["*"]){e.addEventListener("message",(function t(C){if(!C||!C.data)return;if(!nD(I,C.origin))return;const{id:i,type:l,path:n}=Object.assign({path:[]},C.data),A=(C.data.argumentList||[]).map(pD);let d;try{const e=n.slice(0,-1).reduce(((g,e)=>g[e]),g),I=n.reduce(((g,e)=>g[e]),g);switch(l){case"GET":d=I;break;case"SET":e[n.slice(-1)[0]]=pD(C.data.value),d=!0;break;case"APPLY":d=I.apply(e,A);break;case"CONSTRUCT":d=WD(new I(...A));break;case"ENDPOINT":{const{port1:e,port2:I}=new MessageChannel;AD(g,I),d=BD(e,[e])}break;case"RELEASE":d=void 0;break;default:return}}catch(g){d={value:g,[ID]:0}}Promise.resolve(d).catch((g=>({value:g,[ID]:0}))).then((I=>{const[C,n]=ND(I);e.postMessage(Object.assign(Object.assign({},C),{id:i}),n),"RELEASE"===l&&(e.removeEventListener("message",t),oD(e),eD in g&&"function"==typeof g[eD]&&g[eD]())})).catch((g=>{const[I,t]=ND({value:new TypeError("Unserializable return value"),[ID]:0});e.postMessage(Object.assign(Object.assign({},I),{id:i}),t)}))})),e.start&&e.start()}function dD(g){return"MessagePort"===g.constructor.name}function oD(g){dD(g)&&g.close()}function sD(g,e){return ZD(g,[],e)}function aD(g){if(g)throw new Error("Proxy has been released and is not useable")}function VD(g){return SD(g,{type:"RELEASE"}).then((()=>{oD(g)}))}const cD=new WeakMap,rD="FinalizationRegistry"in globalThis&&new FinalizationRegistry((g=>{const e=(cD.get(g)||0)-1;cD.set(g,e),0===e&&VD(g)}));function hD(g,e){const I=(cD.get(e)||0)+1;cD.set(e,I),rD&&rD.register(g,e,g)}function UD(g){rD&&rD.unregister(g)}function ZD(g,e=[],I=function(){}){let t=!1;const C=new Proxy(I,{get(I,i){if(aD(t),i===gD)return()=>{UD(C),VD(g),t=!0};if("then"===i){if(0===e.length)return{then:()=>C};const I=SD(g,{type:"GET",path:e.map((g=>g.toString()))}).then(pD);return I.then.bind(I)}return ZD(g,[...e,i])},set(I,C,i){aD(t);const[l,n]=ND(i);return SD(g,{type:"SET",path:[...e,C].map((g=>g.toString())),value:l},n).then(pD)},apply(I,C,i){aD(t);const l=e[e.length-1];if(l===$z)return SD(g,{type:"ENDPOINT"}).then(pD);if("bind"===l)return ZD(g,e.slice(0,-1));const[n,A]=FD(i);return SD(g,{type:"APPLY",path:e.map((g=>g.toString())),argumentList:n},A).then(pD)},construct(I,C){aD(t);const[i,l]=FD(C);return SD(g,{type:"CONSTRUCT",path:e.map((g=>g.toString())),argumentList:i},l).then(pD)}});return hD(C,g),C}function RD(g){return Array.prototype.concat.apply([],g)}function FD(g){const e=g.map(ND);return[e.map((g=>g[0])),RD(e.map((g=>g[1])))]}const mD=new WeakMap;function BD(g,e){return mD.set(g,e),g}function WD(g){return Object.assign(g,{[qz]:!0})}function ND(g){for(const[e,I]of lD)if(I.canHandle(g)){const[t,C]=I.serialize(g);return[{type:"HANDLER",name:e,value:t},C]}return[{type:"RAW",value:g},mD.get(g)||[]]}function pD(g){switch(g.type){case"HANDLER":return lD.get(g.name).deserialize(g.value);case"RAW":return g.value}}function SD(g,e,I){return new Promise((t=>{const C=bD();g.addEventListener("message",(function e(I){!I.data||!I.data.id||I.data.id!==C||(g.removeEventListener("message",e),t(I.data))})),g.start&&g.start(),g.postMessage(Object.assign({id:C},e),I)}))}function bD(){return new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-")}const uD="",TD=g=>Uint8Array.from(atob(g),(g=>g.charCodeAt(0))),GD=typeof self<"u"&&self.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",TD(uD)],{type:"text/javascript;charset=utf-8"});function kD(g){let e;try{if(e=GD&&(self.URL||self.webkitURL).createObjectURL(GD),!e)throw"";const I=new Worker(e,{type:"module",name:null==g?void 0:g.name});return I.addEventListener("error",(()=>{(self.URL||self.webkitURL).revokeObjectURL(e)})),I}catch{return new Worker("data:text/javascript;base64,"+uD,{type:"module",name:null==g?void 0:g.name})}}const QD=g=>e=>g(BD(e,[e.stdioPort])),MD=()=>{const g=new kD,e=sD(g),{gnotest:I,gnorepl:t,gnorun:C}=e;return Object.setPrototypeOf({gnotest:QD(I),gnorepl:QD(t),gnorun:QD(C),terminate:()=>g.terminate(),[gD]:()=>e[gD]()},e)};var YD={exports:{}};!function(g,e){var I;self,I=()=>{return g=e={},Object.defineProperty(g,"__esModule",{value:!0}),g.FitAddon=void 0,g.FitAddon=class{activate(g){this._terminal=g}dispose(){}fit(){const g=this.proposeDimensions();if(!g||!this._terminal||isNaN(g.cols)||isNaN(g.rows))return;const e=this._terminal._core;this._terminal.rows===g.rows&&this._terminal.cols===g.cols||(e._renderService.clear(),this._terminal.resize(g.cols,g.rows))}proposeDimensions(){if(!this._terminal||!this._terminal.element||!this._terminal.element.parentElement)return;const g=this._terminal._core,e=g._renderService.dimensions;if(0===e.css.cell.width||0===e.css.cell.height)return;const I=0===this._terminal.options.scrollback?0:g.viewport.scrollBarWidth,t=window.getComputedStyle(this._terminal.element.parentElement),C=parseInt(t.getPropertyValue("height")),i=Math.max(0,parseInt(t.getPropertyValue("width"))),l=window.getComputedStyle(this._terminal.element),n=C-(parseInt(l.getPropertyValue("padding-top"))+parseInt(l.getPropertyValue("padding-bottom"))),A=i-(parseInt(l.getPropertyValue("padding-right"))+parseInt(l.getPropertyValue("padding-left")))-I;return{cols:Math.max(2,Math.floor(A/e.css.cell.width)),rows:Math.max(1,Math.floor(n/e.css.cell.height))}}},e;var g,e},YD.exports=I()}();var ED=YD.exports,yD={exports:{}};!function(g,e){var I;globalThis,I=()=>(()=>{var g={4567:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.AccessibilityManager=void 0;const i=I(9042),l=I(9924),n=I(844),A=I(4725),d=I(2585),o=I(3656);let s=e.AccessibilityManager=class extends n.Disposable{constructor(g,e,I,t){super(),this._terminal=g,this._coreBrowserService=I,this._renderService=t,this._rowColumns=new WeakMap,this._liveRegionLineCount=0,this._charsToConsume=[],this._charsToAnnounce="",this._accessibilityContainer=this._coreBrowserService.mainDocument.createElement("div"),this._accessibilityContainer.classList.add("xterm-accessibility"),this._rowContainer=this._coreBrowserService.mainDocument.createElement("div"),this._rowContainer.setAttribute("role","list"),this._rowContainer.classList.add("xterm-accessibility-tree"),this._rowElements=[];for(let g=0;g<this._terminal.rows;g++)this._rowElements[g]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[g]);if(this._topBoundaryFocusListener=g=>this._handleBoundaryFocus(g,0),this._bottomBoundaryFocusListener=g=>this._handleBoundaryFocus(g,1),this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions(),this._accessibilityContainer.appendChild(this._rowContainer),this._liveRegion=this._coreBrowserService.mainDocument.createElement("div"),this._liveRegion.classList.add("live-region"),this._liveRegion.setAttribute("aria-live","assertive"),this._accessibilityContainer.appendChild(this._liveRegion),this._liveRegionDebouncer=this.register(new l.TimeBasedDebouncer(this._renderRows.bind(this))),!this._terminal.element)throw new Error("Cannot enable accessibility before Terminal.open");this._terminal.element.insertAdjacentElement("afterbegin",this._accessibilityContainer),this.register(this._terminal.onResize((g=>this._handleResize(g.rows)))),this.register(this._terminal.onRender((g=>this._refreshRows(g.start,g.end)))),this.register(this._terminal.onScroll((()=>this._refreshRows()))),this.register(this._terminal.onA11yChar((g=>this._handleChar(g)))),this.register(this._terminal.onLineFeed((()=>this._handleChar("\n")))),this.register(this._terminal.onA11yTab((g=>this._handleTab(g)))),this.register(this._terminal.onKey((g=>this._handleKey(g.key)))),this.register(this._terminal.onBlur((()=>this._clearLiveRegion()))),this.register(this._renderService.onDimensionsChange((()=>this._refreshRowsDimensions()))),this.register((0,o.addDisposableDomListener)(document,"selectionchange",(()=>this._handleSelectionChange()))),this.register(this._coreBrowserService.onDprChange((()=>this._refreshRowsDimensions()))),this._refreshRows(),this.register((0,n.toDisposable)((()=>{this._accessibilityContainer.remove(),this._rowElements.length=0})))}_handleTab(g){for(let e=0;e<g;e++)this._handleChar(" ")}_handleChar(g){this._liveRegionLineCount<21&&(this._charsToConsume.length>0?this._charsToConsume.shift()!==g&&(this._charsToAnnounce+=g):this._charsToAnnounce+=g,"\n"===g&&(this._liveRegionLineCount++,21===this._liveRegionLineCount&&(this._liveRegion.textContent+=i.tooMuchOutput)))}_clearLiveRegion(){this._liveRegion.textContent="",this._liveRegionLineCount=0}_handleKey(g){this._clearLiveRegion(),new RegExp("\\p{Control}","u").test(g)||this._charsToConsume.push(g)}_refreshRows(g,e){this._liveRegionDebouncer.refresh(g,e,this._terminal.rows)}_renderRows(g,e){const I=this._terminal.buffer,t=I.lines.length.toString();for(let C=g;C<=e;C++){const g=I.lines.get(I.ydisp+C),e=[],i=(null==g?void 0:g.translateToString(!0,void 0,void 0,e))||"",l=(I.ydisp+C+1).toString(),n=this._rowElements[C];n&&(0===i.length?(n.innerText=" ",this._rowColumns.set(n,[0,1])):(n.textContent=i,this._rowColumns.set(n,e)),n.setAttribute("aria-posinset",l),n.setAttribute("aria-setsize",t))}this._announceCharacters()}_announceCharacters(){0!==this._charsToAnnounce.length&&(this._liveRegion.textContent+=this._charsToAnnounce,this._charsToAnnounce="")}_handleBoundaryFocus(g,e){const I=g.target,t=this._rowElements[0===e?1:this._rowElements.length-2];if(I.getAttribute("aria-posinset")===(0===e?"1":`${this._terminal.buffer.lines.length}`)||g.relatedTarget!==t)return;let C,i;if(0===e?(C=I,i=this._rowElements.pop(),this._rowContainer.removeChild(i)):(C=this._rowElements.shift(),i=I,this._rowContainer.removeChild(C)),C.removeEventListener("focus",this._topBoundaryFocusListener),i.removeEventListener("focus",this._bottomBoundaryFocusListener),0===e){const g=this._createAccessibilityTreeNode();this._rowElements.unshift(g),this._rowContainer.insertAdjacentElement("afterbegin",g)}else{const g=this._createAccessibilityTreeNode();this._rowElements.push(g),this._rowContainer.appendChild(g)}this._rowElements[0].addEventListener("focus",this._topBoundaryFocusListener),this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._terminal.scrollLines(0===e?-1:1),this._rowElements[0===e?1:this._rowElements.length-2].focus(),g.preventDefault(),g.stopImmediatePropagation()}_handleSelectionChange(){var g;if(0===this._rowElements.length)return;const e=document.getSelection();if(!e)return;if(e.isCollapsed)return void(this._rowContainer.contains(e.anchorNode)&&this._terminal.clearSelection());if(!e.anchorNode||!e.focusNode)return;let I={node:e.anchorNode,offset:e.anchorOffset},t={node:e.focusNode,offset:e.focusOffset};if((I.node.compareDocumentPosition(t.node)&Node.DOCUMENT_POSITION_PRECEDING||I.node===t.node&&I.offset>t.offset)&&([I,t]=[t,I]),I.node.compareDocumentPosition(this._rowElements[0])&(Node.DOCUMENT_POSITION_CONTAINED_BY|Node.DOCUMENT_POSITION_FOLLOWING)&&(I={node:this._rowElements[0].childNodes[0],offset:0}),!this._rowContainer.contains(I.node))return;const C=this._rowElements.slice(-1)[0];if(t.node.compareDocumentPosition(C)&(Node.DOCUMENT_POSITION_CONTAINED_BY|Node.DOCUMENT_POSITION_PRECEDING)&&(t={node:C,offset:(null==(g=C.textContent)?void 0:g.length)??0}),!this._rowContainer.contains(t.node))return;const i=({node:g,offset:e})=>{const I=g instanceof Text?g.parentNode:g;let t=parseInt(null==I?void 0:I.getAttribute("aria-posinset"),10)-1;if(isNaN(t))return null;const C=this._rowColumns.get(I);if(!C)return null;let i=e<C.length?C[e]:C.slice(-1)[0]+1;return i>=this._terminal.cols&&(++t,i=0),{row:t,column:i}},l=i(I),n=i(t);if(l&&n){if(l.row>n.row||l.row===n.row&&l.column>=n.column)throw new Error("invalid range");this._terminal.select(l.column,l.row,(n.row-l.row)*this._terminal.cols-l.column+n.column)}}_handleResize(g){this._rowElements[this._rowElements.length-1].removeEventListener("focus",this._bottomBoundaryFocusListener);for(let g=this._rowContainer.children.length;g<this._terminal.rows;g++)this._rowElements[g]=this._createAccessibilityTreeNode(),this._rowContainer.appendChild(this._rowElements[g]);for(;this._rowElements.length>g;)this._rowContainer.removeChild(this._rowElements.pop());this._rowElements[this._rowElements.length-1].addEventListener("focus",this._bottomBoundaryFocusListener),this._refreshRowsDimensions()}_createAccessibilityTreeNode(){const g=this._coreBrowserService.mainDocument.createElement("div");return g.setAttribute("role","listitem"),g.tabIndex=-1,this._refreshRowDimensions(g),g}_refreshRowsDimensions(){if(this._renderService.dimensions.css.cell.height){this._accessibilityContainer.style.width=`${this._renderService.dimensions.css.canvas.width}px`,this._rowElements.length!==this._terminal.rows&&this._handleResize(this._terminal.rows);for(let g=0;g<this._terminal.rows;g++)this._refreshRowDimensions(this._rowElements[g])}}_refreshRowDimensions(g){g.style.height=`${this._renderService.dimensions.css.cell.height}px`}};e.AccessibilityManager=s=t([C(1,d.IInstantiationService),C(2,A.ICoreBrowserService),C(3,A.IRenderService)],s)},3614:(g,e)=>{function I(g){return g.replace(/\r?\n/g,"\r")}function t(g,e){return e?"[200~"+g+"[201~":g}function C(g,e,C,i){g=t(g=I(g),C.decPrivateModes.bracketedPasteMode&&!0!==i.rawOptions.ignoreBracketedPasteMode),C.triggerDataEvent(g,!0),e.value=""}function i(g,e,I){const t=I.getBoundingClientRect(),C=g.clientX-t.left-10,i=g.clientY-t.top-10;e.style.width="20px",e.style.height="20px",e.style.left=`${C}px`,e.style.top=`${i}px`,e.style.zIndex="1000",e.focus()}Object.defineProperty(e,"__esModule",{value:!0}),e.rightClickHandler=e.moveTextAreaUnderMouseCursor=e.paste=e.handlePasteEvent=e.copyHandler=e.bracketTextForPaste=e.prepareTextForTerminal=void 0,e.prepareTextForTerminal=I,e.bracketTextForPaste=t,e.copyHandler=function(g,e){g.clipboardData&&g.clipboardData.setData("text/plain",e.selectionText),g.preventDefault()},e.handlePasteEvent=function(g,e,I,t){g.stopPropagation(),g.clipboardData&&C(g.clipboardData.getData("text/plain"),e,I,t)},e.paste=C,e.moveTextAreaUnderMouseCursor=i,e.rightClickHandler=function(g,e,I,t,C){i(g,e,I),C&&t.rightClickSelect(g),e.value=t.selectionText,e.select()}},7239:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ColorContrastCache=void 0;const t=I(1505);e.ColorContrastCache=class{constructor(){this._color=new t.TwoKeyMap,this._css=new t.TwoKeyMap}setCss(g,e,I){this._css.set(g,e,I)}getCss(g,e){return this._css.get(g,e)}setColor(g,e,I){this._color.set(g,e,I)}getColor(g,e){return this._color.get(g,e)}clear(){this._color.clear(),this._css.clear()}}},3656:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.addDisposableDomListener=void 0,e.addDisposableDomListener=function(g,e,I,t){g.addEventListener(e,I,t);let C=!1;return{dispose:()=>{C||(C=!0,g.removeEventListener(e,I,t))}}}},3551:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.Linkifier=void 0;const i=I(3656),l=I(8460),n=I(844),A=I(2585),d=I(4725);let o=e.Linkifier=class extends n.Disposable{get currentLink(){return this._currentLink}constructor(g,e,I,t,C){super(),this._element=g,this._mouseService=e,this._renderService=I,this._bufferService=t,this._linkProviderService=C,this._linkCacheDisposables=[],this._isMouseOut=!0,this._wasResized=!1,this._activeLine=-1,this._onShowLinkUnderline=this.register(new l.EventEmitter),this.onShowLinkUnderline=this._onShowLinkUnderline.event,this._onHideLinkUnderline=this.register(new l.EventEmitter),this.onHideLinkUnderline=this._onHideLinkUnderline.event,this.register((0,n.getDisposeArrayDisposable)(this._linkCacheDisposables)),this.register((0,n.toDisposable)((()=>{var g;this._lastMouseEvent=void 0,null==(g=this._activeProviderReplies)||g.clear()}))),this.register(this._bufferService.onResize((()=>{this._clearCurrentLink(),this._wasResized=!0}))),this.register((0,i.addDisposableDomListener)(this._element,"mouseleave",(()=>{this._isMouseOut=!0,this._clearCurrentLink()}))),this.register((0,i.addDisposableDomListener)(this._element,"mousemove",this._handleMouseMove.bind(this))),this.register((0,i.addDisposableDomListener)(this._element,"mousedown",this._handleMouseDown.bind(this))),this.register((0,i.addDisposableDomListener)(this._element,"mouseup",this._handleMouseUp.bind(this)))}_handleMouseMove(g){this._lastMouseEvent=g;const e=this._positionFromMouseEvent(g,this._element,this._mouseService);if(!e)return;this._isMouseOut=!1;const I=g.composedPath();for(let g=0;g<I.length;g++){const e=I[g];if(e.classList.contains("xterm"))break;if(e.classList.contains("xterm-hover"))return}this._lastBufferCell&&e.x===this._lastBufferCell.x&&e.y===this._lastBufferCell.y||(this._handleHover(e),this._lastBufferCell=e)}_handleHover(g){if(this._activeLine!==g.y||this._wasResized)return this._clearCurrentLink(),this._askForLink(g,!1),void(this._wasResized=!1);this._currentLink&&this._linkAtPosition(this._currentLink.link,g)||(this._clearCurrentLink(),this._askForLink(g,!0))}_askForLink(g,e){var I,t;this._activeProviderReplies&&e||(null==(I=this._activeProviderReplies)||I.forEach((g=>{null==g||g.forEach((g=>{g.link.dispose&&g.link.dispose()}))})),this._activeProviderReplies=new Map,this._activeLine=g.y);let C=!1;for(const[I,i]of this._linkProviderService.linkProviders.entries())e?null!=(t=this._activeProviderReplies)&&t.get(I)&&(C=this._checkLinkProviderResult(I,g,C)):i.provideLinks(g.y,(e=>{var t,i;if(this._isMouseOut)return;const l=null==e?void 0:e.map((g=>({link:g})));null==(t=this._activeProviderReplies)||t.set(I,l),C=this._checkLinkProviderResult(I,g,C),(null==(i=this._activeProviderReplies)?void 0:i.size)===this._linkProviderService.linkProviders.length&&this._removeIntersectingLinks(g.y,this._activeProviderReplies)}))}_removeIntersectingLinks(g,e){const I=new Set;for(let t=0;t<e.size;t++){const C=e.get(t);if(C)for(let e=0;e<C.length;e++){const t=C[e],i=t.link.range.start.y<g?0:t.link.range.start.x,l=t.link.range.end.y>g?this._bufferService.cols:t.link.range.end.x;for(let g=i;g<=l;g++){if(I.has(g)){C.splice(e--,1);break}I.add(g)}}}}_checkLinkProviderResult(g,e,I){var t;if(!this._activeProviderReplies)return I;const C=this._activeProviderReplies.get(g);let i=!1;for(let e=0;e<g;e++)this._activeProviderReplies.has(e)&&!this._activeProviderReplies.get(e)||(i=!0);if(!i&&C){const g=C.find((g=>this._linkAtPosition(g.link,e)));g&&(I=!0,this._handleNewLink(g))}if(this._activeProviderReplies.size===this._linkProviderService.linkProviders.length&&!I)for(let g=0;g<this._activeProviderReplies.size;g++){const C=null==(t=this._activeProviderReplies.get(g))?void 0:t.find((g=>this._linkAtPosition(g.link,e)));if(C){I=!0,this._handleNewLink(C);break}}return I}_handleMouseDown(){this._mouseDownLink=this._currentLink}_handleMouseUp(g){if(!this._currentLink)return;const e=this._positionFromMouseEvent(g,this._element,this._mouseService);e&&this._mouseDownLink===this._currentLink&&this._linkAtPosition(this._currentLink.link,e)&&this._currentLink.link.activate(g,this._currentLink.link.text)}_clearCurrentLink(g,e){this._currentLink&&this._lastMouseEvent&&(!g||!e||this._currentLink.link.range.start.y>=g&&this._currentLink.link.range.end.y<=e)&&(this._linkLeave(this._element,this._currentLink.link,this._lastMouseEvent),this._currentLink=void 0,(0,n.disposeArray)(this._linkCacheDisposables))}_handleNewLink(g){if(!this._lastMouseEvent)return;const e=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);e&&this._linkAtPosition(g.link,e)&&(this._currentLink=g,this._currentLink.state={decorations:{underline:void 0===g.link.decorations||g.link.decorations.underline,pointerCursor:void 0===g.link.decorations||g.link.decorations.pointerCursor},isHovered:!0},this._linkHover(this._element,g.link,this._lastMouseEvent),g.link.decorations={},Object.defineProperties(g.link.decorations,{pointerCursor:{get:()=>{var g,e;return null==(e=null==(g=this._currentLink)?void 0:g.state)?void 0:e.decorations.pointerCursor},set:g=>{var e;null!=(e=this._currentLink)&&e.state&&this._currentLink.state.decorations.pointerCursor!==g&&(this._currentLink.state.decorations.pointerCursor=g,this._currentLink.state.isHovered&&this._element.classList.toggle("xterm-cursor-pointer",g))}},underline:{get:()=>{var g,e;return null==(e=null==(g=this._currentLink)?void 0:g.state)?void 0:e.decorations.underline},set:e=>{var I,t,C;null!=(I=this._currentLink)&&I.state&&(null==(C=null==(t=this._currentLink)?void 0:t.state)?void 0:C.decorations.underline)!==e&&(this._currentLink.state.decorations.underline=e,this._currentLink.state.isHovered&&this._fireUnderlineEvent(g.link,e))}}}),this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((g=>{if(!this._currentLink)return;const e=0===g.start?0:g.start+1+this._bufferService.buffer.ydisp,I=this._bufferService.buffer.ydisp+1+g.end;if(this._currentLink.link.range.start.y>=e&&this._currentLink.link.range.end.y<=I&&(this._clearCurrentLink(e,I),this._lastMouseEvent)){const g=this._positionFromMouseEvent(this._lastMouseEvent,this._element,this._mouseService);g&&this._askForLink(g,!1)}}))))}_linkHover(g,e,I){var t;null!=(t=this._currentLink)&&t.state&&(this._currentLink.state.isHovered=!0,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(e,!0),this._currentLink.state.decorations.pointerCursor&&g.classList.add("xterm-cursor-pointer")),e.hover&&e.hover(I,e.text)}_fireUnderlineEvent(g,e){const I=g.range,t=this._bufferService.buffer.ydisp,C=this._createLinkUnderlineEvent(I.start.x-1,I.start.y-t-1,I.end.x,I.end.y-t-1,void 0);(e?this._onShowLinkUnderline:this._onHideLinkUnderline).fire(C)}_linkLeave(g,e,I){var t;null!=(t=this._currentLink)&&t.state&&(this._currentLink.state.isHovered=!1,this._currentLink.state.decorations.underline&&this._fireUnderlineEvent(e,!1),this._currentLink.state.decorations.pointerCursor&&g.classList.remove("xterm-cursor-pointer")),e.leave&&e.leave(I,e.text)}_linkAtPosition(g,e){const I=g.range.start.y*this._bufferService.cols+g.range.start.x,t=g.range.end.y*this._bufferService.cols+g.range.end.x,C=e.y*this._bufferService.cols+e.x;return I<=C&&C<=t}_positionFromMouseEvent(g,e,I){const t=I.getCoords(g,e,this._bufferService.cols,this._bufferService.rows);if(t)return{x:t[0],y:t[1]+this._bufferService.buffer.ydisp}}_createLinkUnderlineEvent(g,e,I,t,C){return{x1:g,y1:e,x2:I,y2:t,cols:this._bufferService.cols,fg:C}}};e.Linkifier=o=t([C(1,d.IMouseService),C(2,d.IRenderService),C(3,A.IBufferService),C(4,d.ILinkProviderService)],o)},9042:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.tooMuchOutput=e.promptLabel=void 0,e.promptLabel="Terminal input",e.tooMuchOutput="Too much output to announce, navigate to rows manually to read"},3730:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.OscLinkProvider=void 0;const i=I(511),l=I(2585);let n=e.OscLinkProvider=class{constructor(g,e,I){this._bufferService=g,this._optionsService=e,this._oscLinkService=I}provideLinks(g,e){var I;const t=this._bufferService.buffer.lines.get(g-1);if(!t)return void e(void 0);const C=[],l=this._optionsService.rawOptions.linkHandler,n=new i.CellData,d=t.getTrimmedLength();let o=-1,s=-1,a=!1;for(let e=0;e<d;e++)if(-1!==s||t.hasContent(e)){if(t.loadCell(e,n),n.hasExtendedAttrs()&&n.extended.urlId){if(-1===s){s=e,o=n.extended.urlId;continue}a=n.extended.urlId!==o}else-1!==s&&(a=!0);if(a||-1!==s&&e===d-1){const t=null==(I=this._oscLinkService.getLinkData(o))?void 0:I.uri;if(t){const I={start:{x:s+1,y:g},end:{x:e+(a||e!==d-1?0:1),y:g}};let i=!1;if(null==l||!l.allowNonHttpProtocols)try{const g=new URL(t);["http:","https:"].includes(g.protocol)||(i=!0)}catch{i=!0}i||C.push({text:t,range:I,activate:(g,e)=>l?l.activate(g,e,I):A(0,e),hover:(g,e)=>{var t;return null==(t=null==l?void 0:l.hover)?void 0:t.call(l,g,e,I)},leave:(g,e)=>{var t;return null==(t=null==l?void 0:l.leave)?void 0:t.call(l,g,e,I)}})}a=!1,n.hasExtendedAttrs()&&n.extended.urlId?(s=e,o=n.extended.urlId):(s=-1,o=-1)}}e(C)}};function A(g,e){if(confirm(`Do you want to navigate to ${e}?\n\nWARNING: This link could potentially be dangerous`)){const g=window.open();if(g){try{g.opener=null}catch{}g.location.href=e}}}e.OscLinkProvider=n=t([C(0,l.IBufferService),C(1,l.IOptionsService),C(2,l.IOscLinkService)],n)},6193:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.RenderDebouncer=void 0,e.RenderDebouncer=class{constructor(g,e){this._renderCallback=g,this._coreBrowserService=e,this._refreshCallbacks=[]}dispose(){this._animationFrame&&(this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame),this._animationFrame=void 0)}addRefreshCallback(g){return this._refreshCallbacks.push(g),this._animationFrame||(this._animationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh()))),this._animationFrame}refresh(g,e,I){this._rowCount=I,g=void 0!==g?g:0,e=void 0!==e?e:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,g):g,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,e):e,this._animationFrame||(this._animationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._animationFrame=void 0,void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return void this._runRefreshCallbacks();const g=Math.max(this._rowStart,0),e=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(g,e),this._runRefreshCallbacks()}_runRefreshCallbacks(){for(const g of this._refreshCallbacks)g(0);this._refreshCallbacks=[]}}},3236:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Terminal=void 0;const t=I(3614),C=I(3656),i=I(3551),l=I(9042),n=I(3730),A=I(1680),d=I(3107),o=I(5744),s=I(2950),a=I(1296),V=I(428),c=I(4269),r=I(5114),h=I(8934),U=I(3230),Z=I(9312),R=I(4725),F=I(6731),m=I(8055),B=I(8969),W=I(8460),N=I(844),p=I(6114),S=I(8437),b=I(2584),u=I(7399),T=I(5941),G=I(9074),k=I(2585),Q=I(5435),M=I(4567),Y=I(779);class E extends B.CoreTerminal{get onFocus(){return this._onFocus.event}get onBlur(){return this._onBlur.event}get onA11yChar(){return this._onA11yCharEmitter.event}get onA11yTab(){return this._onA11yTabEmitter.event}get onWillOpen(){return this._onWillOpen.event}constructor(g={}){super(g),this.browser=p,this._keyDownHandled=!1,this._keyDownSeen=!1,this._keyPressHandled=!1,this._unprocessedDeadKey=!1,this._accessibilityManager=this.register(new N.MutableDisposable),this._onCursorMove=this.register(new W.EventEmitter),this.onCursorMove=this._onCursorMove.event,this._onKey=this.register(new W.EventEmitter),this.onKey=this._onKey.event,this._onRender=this.register(new W.EventEmitter),this.onRender=this._onRender.event,this._onSelectionChange=this.register(new W.EventEmitter),this.onSelectionChange=this._onSelectionChange.event,this._onTitleChange=this.register(new W.EventEmitter),this.onTitleChange=this._onTitleChange.event,this._onBell=this.register(new W.EventEmitter),this.onBell=this._onBell.event,this._onFocus=this.register(new W.EventEmitter),this._onBlur=this.register(new W.EventEmitter),this._onA11yCharEmitter=this.register(new W.EventEmitter),this._onA11yTabEmitter=this.register(new W.EventEmitter),this._onWillOpen=this.register(new W.EventEmitter),this._setup(),this._decorationService=this._instantiationService.createInstance(G.DecorationService),this._instantiationService.setService(k.IDecorationService,this._decorationService),this._linkProviderService=this._instantiationService.createInstance(Y.LinkProviderService),this._instantiationService.setService(R.ILinkProviderService,this._linkProviderService),this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(n.OscLinkProvider)),this.register(this._inputHandler.onRequestBell((()=>this._onBell.fire()))),this.register(this._inputHandler.onRequestRefreshRows(((g,e)=>this.refresh(g,e)))),this.register(this._inputHandler.onRequestSendFocus((()=>this._reportFocus()))),this.register(this._inputHandler.onRequestReset((()=>this.reset()))),this.register(this._inputHandler.onRequestWindowsOptionsReport((g=>this._reportWindowsOptions(g)))),this.register(this._inputHandler.onColor((g=>this._handleColorEvent(g)))),this.register((0,W.forwardEvent)(this._inputHandler.onCursorMove,this._onCursorMove)),this.register((0,W.forwardEvent)(this._inputHandler.onTitleChange,this._onTitleChange)),this.register((0,W.forwardEvent)(this._inputHandler.onA11yChar,this._onA11yCharEmitter)),this.register((0,W.forwardEvent)(this._inputHandler.onA11yTab,this._onA11yTabEmitter)),this.register(this._bufferService.onResize((g=>this._afterResize(g.cols,g.rows)))),this.register((0,N.toDisposable)((()=>{var g,e;this._customKeyEventHandler=void 0,null==(e=null==(g=this.element)?void 0:g.parentNode)||e.removeChild(this.element)})))}_handleColorEvent(g){if(this._themeService)for(const e of g){let g,I="";switch(e.index){case 256:g="foreground",I="10";break;case 257:g="background",I="11";break;case 258:g="cursor",I="12";break;default:g="ansi",I="4;"+e.index}switch(e.type){case 0:const t=m.color.toColorRGB("ansi"===g?this._themeService.colors.ansi[e.index]:this._themeService.colors[g]);this.coreService.triggerDataEvent(`${b.C0.ESC}]${I};${(0,T.toRgbString)(t)}${b.C1_ESCAPED.ST}`);break;case 1:if("ansi"===g)this._themeService.modifyColors((g=>g.ansi[e.index]=m.channels.toColor(...e.color)));else{const I=g;this._themeService.modifyColors((g=>g[I]=m.channels.toColor(...e.color)))}break;case 2:this._themeService.restoreColor(e.index)}}}_setup(){super._setup(),this._customKeyEventHandler=void 0}get buffer(){return this.buffers.active}focus(){this.textarea&&this.textarea.focus({preventScroll:!0})}_handleScreenReaderModeOptionChange(g){g?!this._accessibilityManager.value&&this._renderService&&(this._accessibilityManager.value=this._instantiationService.createInstance(M.AccessibilityManager,this)):this._accessibilityManager.clear()}_handleTextAreaFocus(g){this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(b.C0.ESC+"[I"),this.element.classList.add("focus"),this._showCursor(),this._onFocus.fire()}blur(){var g;return null==(g=this.textarea)?void 0:g.blur()}_handleTextAreaBlur(){this.textarea.value="",this.refresh(this.buffer.y,this.buffer.y),this.coreService.decPrivateModes.sendFocus&&this.coreService.triggerDataEvent(b.C0.ESC+"[O"),this.element.classList.remove("focus"),this._onBlur.fire()}_syncTextArea(){if(!this.textarea||!this.buffer.isCursorInViewport||this._compositionHelper.isComposing||!this._renderService)return;const g=this.buffer.ybase+this.buffer.y,e=this.buffer.lines.get(g);if(!e)return;const I=Math.min(this.buffer.x,this.cols-1),t=this._renderService.dimensions.css.cell.height,C=e.getWidth(I),i=this._renderService.dimensions.css.cell.width*C,l=this.buffer.y*this._renderService.dimensions.css.cell.height,n=I*this._renderService.dimensions.css.cell.width;this.textarea.style.left=n+"px",this.textarea.style.top=l+"px",this.textarea.style.width=i+"px",this.textarea.style.height=t+"px",this.textarea.style.lineHeight=t+"px",this.textarea.style.zIndex="-5"}_initGlobal(){this._bindKeys(),this.register((0,C.addDisposableDomListener)(this.element,"copy",(g=>{this.hasSelection()&&(0,t.copyHandler)(g,this._selectionService)})));const g=g=>(0,t.handlePasteEvent)(g,this.textarea,this.coreService,this.optionsService);this.register((0,C.addDisposableDomListener)(this.textarea,"paste",g)),this.register((0,C.addDisposableDomListener)(this.element,"paste",g)),p.isFirefox?this.register((0,C.addDisposableDomListener)(this.element,"mousedown",(g=>{2===g.button&&(0,t.rightClickHandler)(g,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))):this.register((0,C.addDisposableDomListener)(this.element,"contextmenu",(g=>{(0,t.rightClickHandler)(g,this.textarea,this.screenElement,this._selectionService,this.options.rightClickSelectsWord)}))),p.isLinux&&this.register((0,C.addDisposableDomListener)(this.element,"auxclick",(g=>{1===g.button&&(0,t.moveTextAreaUnderMouseCursor)(g,this.textarea,this.screenElement)})))}_bindKeys(){this.register((0,C.addDisposableDomListener)(this.textarea,"keyup",(g=>this._keyUp(g)),!0)),this.register((0,C.addDisposableDomListener)(this.textarea,"keydown",(g=>this._keyDown(g)),!0)),this.register((0,C.addDisposableDomListener)(this.textarea,"keypress",(g=>this._keyPress(g)),!0)),this.register((0,C.addDisposableDomListener)(this.textarea,"compositionstart",(()=>this._compositionHelper.compositionstart()))),this.register((0,C.addDisposableDomListener)(this.textarea,"compositionupdate",(g=>this._compositionHelper.compositionupdate(g)))),this.register((0,C.addDisposableDomListener)(this.textarea,"compositionend",(()=>this._compositionHelper.compositionend()))),this.register((0,C.addDisposableDomListener)(this.textarea,"input",(g=>this._inputEvent(g)),!0)),this.register(this.onRender((()=>this._compositionHelper.updateCompositionElements())))}open(g){var e;if(!g)throw new Error("Terminal requires a parent element.");if(g.isConnected||this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"),(null==(e=this.element)?void 0:e.ownerDocument.defaultView)&&this._coreBrowserService)return void(this.element.ownerDocument.defaultView!==this._coreBrowserService.window&&(this._coreBrowserService.window=this.element.ownerDocument.defaultView));this._document=g.ownerDocument,this.options.documentOverride&&this.options.documentOverride instanceof Document&&(this._document=this.optionsService.rawOptions.documentOverride),this.element=this._document.createElement("div"),this.element.dir="ltr",this.element.classList.add("terminal"),this.element.classList.add("xterm"),g.appendChild(this.element);const I=this._document.createDocumentFragment();this._viewportElement=this._document.createElement("div"),this._viewportElement.classList.add("xterm-viewport"),I.appendChild(this._viewportElement),this._viewportScrollArea=this._document.createElement("div"),this._viewportScrollArea.classList.add("xterm-scroll-area"),this._viewportElement.appendChild(this._viewportScrollArea),this.screenElement=this._document.createElement("div"),this.screenElement.classList.add("xterm-screen"),this.register((0,C.addDisposableDomListener)(this.screenElement,"mousemove",(g=>this.updateCursorStyle(g)))),this._helperContainer=this._document.createElement("div"),this._helperContainer.classList.add("xterm-helpers"),this.screenElement.appendChild(this._helperContainer),I.appendChild(this.screenElement),this.textarea=this._document.createElement("textarea"),this.textarea.classList.add("xterm-helper-textarea"),this.textarea.setAttribute("aria-label",l.promptLabel),p.isChromeOS||this.textarea.setAttribute("aria-multiline","false"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.tabIndex=0,this._coreBrowserService=this.register(this._instantiationService.createInstance(r.CoreBrowserService,this.textarea,g.ownerDocument.defaultView??window,this._document??typeof window<"u"?window.document:null)),this._instantiationService.setService(R.ICoreBrowserService,this._coreBrowserService),this.register((0,C.addDisposableDomListener)(this.textarea,"focus",(g=>this._handleTextAreaFocus(g)))),this.register((0,C.addDisposableDomListener)(this.textarea,"blur",(()=>this._handleTextAreaBlur()))),this._helperContainer.appendChild(this.textarea),this._charSizeService=this._instantiationService.createInstance(V.CharSizeService,this._document,this._helperContainer),this._instantiationService.setService(R.ICharSizeService,this._charSizeService),this._themeService=this._instantiationService.createInstance(F.ThemeService),this._instantiationService.setService(R.IThemeService,this._themeService),this._characterJoinerService=this._instantiationService.createInstance(c.CharacterJoinerService),this._instantiationService.setService(R.ICharacterJoinerService,this._characterJoinerService),this._renderService=this.register(this._instantiationService.createInstance(U.RenderService,this.rows,this.screenElement)),this._instantiationService.setService(R.IRenderService,this._renderService),this.register(this._renderService.onRenderedViewportChange((g=>this._onRender.fire(g)))),this.onResize((g=>this._renderService.resize(g.cols,g.rows))),this._compositionView=this._document.createElement("div"),this._compositionView.classList.add("composition-view"),this._compositionHelper=this._instantiationService.createInstance(s.CompositionHelper,this.textarea,this._compositionView),this._helperContainer.appendChild(this._compositionView),this._mouseService=this._instantiationService.createInstance(h.MouseService),this._instantiationService.setService(R.IMouseService,this._mouseService),this.linkifier=this.register(this._instantiationService.createInstance(i.Linkifier,this.screenElement)),this.element.appendChild(I);try{this._onWillOpen.fire(this.element)}catch{}this._renderService.hasRenderer()||this._renderService.setRenderer(this._createRenderer()),this.viewport=this._instantiationService.createInstance(A.Viewport,this._viewportElement,this._viewportScrollArea),this.viewport.onRequestScrollLines((g=>this.scrollLines(g.amount,g.suppressScrollEvent,1))),this.register(this._inputHandler.onRequestSyncScrollBar((()=>this.viewport.syncScrollArea()))),this.register(this.viewport),this.register(this.onCursorMove((()=>{this._renderService.handleCursorMove(),this._syncTextArea()}))),this.register(this.onResize((()=>this._renderService.handleResize(this.cols,this.rows)))),this.register(this.onBlur((()=>this._renderService.handleBlur()))),this.register(this.onFocus((()=>this._renderService.handleFocus()))),this.register(this._renderService.onDimensionsChange((()=>this.viewport.syncScrollArea()))),this._selectionService=this.register(this._instantiationService.createInstance(Z.SelectionService,this.element,this.screenElement,this.linkifier)),this._instantiationService.setService(R.ISelectionService,this._selectionService),this.register(this._selectionService.onRequestScrollLines((g=>this.scrollLines(g.amount,g.suppressScrollEvent)))),this.register(this._selectionService.onSelectionChange((()=>this._onSelectionChange.fire()))),this.register(this._selectionService.onRequestRedraw((g=>this._renderService.handleSelectionChanged(g.start,g.end,g.columnSelectMode)))),this.register(this._selectionService.onLinuxMouseSelection((g=>{this.textarea.value=g,this.textarea.focus(),this.textarea.select()}))),this.register(this._onScroll.event((g=>{this.viewport.syncScrollArea(),this._selectionService.refresh()}))),this.register((0,C.addDisposableDomListener)(this._viewportElement,"scroll",(()=>this._selectionService.refresh()))),this.register(this._instantiationService.createInstance(d.BufferDecorationRenderer,this.screenElement)),this.register((0,C.addDisposableDomListener)(this.element,"mousedown",(g=>this._selectionService.handleMouseDown(g)))),this.coreMouseService.areMouseEventsActive?(this._selectionService.disable(),this.element.classList.add("enable-mouse-events")):this._selectionService.enable(),this.options.screenReaderMode&&(this._accessibilityManager.value=this._instantiationService.createInstance(M.AccessibilityManager,this)),this.register(this.optionsService.onSpecificOptionChange("screenReaderMode",(g=>this._handleScreenReaderModeOptionChange(g)))),this.options.overviewRulerWidth&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(o.OverviewRulerRenderer,this._viewportElement,this.screenElement))),this.optionsService.onSpecificOptionChange("overviewRulerWidth",(g=>{!this._overviewRulerRenderer&&g&&this._viewportElement&&this.screenElement&&(this._overviewRulerRenderer=this.register(this._instantiationService.createInstance(o.OverviewRulerRenderer,this._viewportElement,this.screenElement)))})),this._charSizeService.measure(),this.refresh(0,this.rows-1),this._initGlobal(),this.bindMouse()}_createRenderer(){return this._instantiationService.createInstance(a.DomRenderer,this,this._document,this.element,this.screenElement,this._viewportElement,this._helperContainer,this.linkifier)}bindMouse(){const g=this,e=this.element;function I(e){const I=g._mouseService.getMouseReportCoords(e,g.screenElement);if(!I)return!1;let t,C;switch(e.overrideType||e.type){case"mousemove":C=32,void 0===e.buttons?(t=3,void 0!==e.button&&(t=e.button<3?e.button:3)):t=1&e.buttons?0:4&e.buttons?1:2&e.buttons?2:3;break;case"mouseup":C=0,t=e.button<3?e.button:3;break;case"mousedown":C=1,t=e.button<3?e.button:3;break;case"wheel":if(g._customWheelEventHandler&&!1===g._customWheelEventHandler(e)||0===g.viewport.getLinesScrolled(e))return!1;C=e.deltaY<0?0:1,t=4;break;default:return!1}return!(void 0===C||void 0===t||t>4)&&g.coreMouseService.triggerMouseEvent({col:I.col,row:I.row,x:I.x,y:I.y,button:t,action:C,ctrl:e.ctrlKey,alt:e.altKey,shift:e.shiftKey})}const t={mouseup:null,wheel:null,mousedrag:null,mousemove:null},i={mouseup:g=>(I(g),g.buttons||(this._document.removeEventListener("mouseup",t.mouseup),t.mousedrag&&this._document.removeEventListener("mousemove",t.mousedrag)),this.cancel(g)),wheel:g=>(I(g),this.cancel(g,!0)),mousedrag:g=>{g.buttons&&I(g)},mousemove:g=>{g.buttons||I(g)}};this.register(this.coreMouseService.onProtocolChange((g=>{g?("debug"===this.optionsService.rawOptions.logLevel&&this._logService.debug("Binding to mouse events:",this.coreMouseService.explainEvents(g)),this.element.classList.add("enable-mouse-events"),this._selectionService.disable()):(this._logService.debug("Unbinding from mouse events."),this.element.classList.remove("enable-mouse-events"),this._selectionService.enable()),8&g?t.mousemove||(e.addEventListener("mousemove",i.mousemove),t.mousemove=i.mousemove):(e.removeEventListener("mousemove",t.mousemove),t.mousemove=null),16&g?t.wheel||(e.addEventListener("wheel",i.wheel,{passive:!1}),t.wheel=i.wheel):(e.removeEventListener("wheel",t.wheel),t.wheel=null),2&g?t.mouseup||(t.mouseup=i.mouseup):(this._document.removeEventListener("mouseup",t.mouseup),t.mouseup=null),4&g?t.mousedrag||(t.mousedrag=i.mousedrag):(this._document.removeEventListener("mousemove",t.mousedrag),t.mousedrag=null)}))),this.coreMouseService.activeProtocol=this.coreMouseService.activeProtocol,this.register((0,C.addDisposableDomListener)(e,"mousedown",(g=>{if(g.preventDefault(),this.focus(),this.coreMouseService.areMouseEventsActive&&!this._selectionService.shouldForceSelection(g))return I(g),t.mouseup&&this._document.addEventListener("mouseup",t.mouseup),t.mousedrag&&this._document.addEventListener("mousemove",t.mousedrag),this.cancel(g)}))),this.register((0,C.addDisposableDomListener)(e,"wheel",(g=>{if(!t.wheel){if(this._customWheelEventHandler&&!1===this._customWheelEventHandler(g))return!1;if(!this.buffer.hasScrollback){const e=this.viewport.getLinesScrolled(g);if(0===e)return;const I=b.C0.ESC+(this.coreService.decPrivateModes.applicationCursorKeys?"O":"[")+(g.deltaY<0?"A":"B");let t="";for(let g=0;g<Math.abs(e);g++)t+=I;return this.coreService.triggerDataEvent(t,!0),this.cancel(g,!0)}return this.viewport.handleWheel(g)?this.cancel(g):void 0}}),{passive:!1})),this.register((0,C.addDisposableDomListener)(e,"touchstart",(g=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.handleTouchStart(g),this.cancel(g)}),{passive:!0})),this.register((0,C.addDisposableDomListener)(e,"touchmove",(g=>{if(!this.coreMouseService.areMouseEventsActive)return this.viewport.handleTouchMove(g)?void 0:this.cancel(g)}),{passive:!1}))}refresh(g,e){var I;null==(I=this._renderService)||I.refreshRows(g,e)}updateCursorStyle(g){var e;null!=(e=this._selectionService)&&e.shouldColumnSelect(g)?this.element.classList.add("column-select"):this.element.classList.remove("column-select")}_showCursor(){this.coreService.isCursorInitialized||(this.coreService.isCursorInitialized=!0,this.refresh(this.buffer.y,this.buffer.y))}scrollLines(g,e,I=0){var t;1===I?(super.scrollLines(g,e,I),this.refresh(0,this.rows-1)):null==(t=this.viewport)||t.scrollLines(g)}paste(g){(0,t.paste)(g,this.textarea,this.coreService,this.optionsService)}attachCustomKeyEventHandler(g){this._customKeyEventHandler=g}attachCustomWheelEventHandler(g){this._customWheelEventHandler=g}registerLinkProvider(g){return this._linkProviderService.registerLinkProvider(g)}registerCharacterJoiner(g){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");const e=this._characterJoinerService.register(g);return this.refresh(0,this.rows-1),e}deregisterCharacterJoiner(g){if(!this._characterJoinerService)throw new Error("Terminal must be opened first");this._characterJoinerService.deregister(g)&&this.refresh(0,this.rows-1)}get markers(){return this.buffer.markers}registerMarker(g){return this.buffer.addMarker(this.buffer.ybase+this.buffer.y+g)}registerDecoration(g){return this._decorationService.registerDecoration(g)}hasSelection(){return!!this._selectionService&&this._selectionService.hasSelection}select(g,e,I){this._selectionService.setSelection(g,e,I)}getSelection(){return this._selectionService?this._selectionService.selectionText:""}getSelectionPosition(){if(this._selectionService&&this._selectionService.hasSelection)return{start:{x:this._selectionService.selectionStart[0],y:this._selectionService.selectionStart[1]},end:{x:this._selectionService.selectionEnd[0],y:this._selectionService.selectionEnd[1]}}}clearSelection(){var g;null==(g=this._selectionService)||g.clearSelection()}selectAll(){var g;null==(g=this._selectionService)||g.selectAll()}selectLines(g,e){var I;null==(I=this._selectionService)||I.selectLines(g,e)}_keyDown(g){if(this._keyDownHandled=!1,this._keyDownSeen=!0,this._customKeyEventHandler&&!1===this._customKeyEventHandler(g))return!1;const e=this.browser.isMac&&this.options.macOptionIsMeta&&g.altKey;if(!e&&!this._compositionHelper.keydown(g))return this.options.scrollOnUserInput&&this.buffer.ybase!==this.buffer.ydisp&&this.scrollToBottom(),!1;e||"Dead"!==g.key&&"AltGraph"!==g.key||(this._unprocessedDeadKey=!0);const I=(0,u.evaluateKeyboardEvent)(g,this.coreService.decPrivateModes.applicationCursorKeys,this.browser.isMac,this.options.macOptionIsMeta);if(this.updateCursorStyle(g),3===I.type||2===I.type){const e=this.rows-1;return this.scrollLines(2===I.type?-e:e),this.cancel(g,!0)}return 1===I.type&&this.selectAll(),!!this._isThirdLevelShift(this.browser,g)||(I.cancel&&this.cancel(g,!0),!I.key||!!(g.key&&!g.ctrlKey&&!g.altKey&&!g.metaKey&&1===g.key.length&&g.key.charCodeAt(0)>=65&&g.key.charCodeAt(0)<=90)||(this._unprocessedDeadKey?(this._unprocessedDeadKey=!1,!0):(I.key!==b.C0.ETX&&I.key!==b.C0.CR||(this.textarea.value=""),this._onKey.fire({key:I.key,domEvent:g}),this._showCursor(),this.coreService.triggerDataEvent(I.key,!0),!this.optionsService.rawOptions.screenReaderMode||g.altKey||g.ctrlKey?this.cancel(g,!0):void(this._keyDownHandled=!0))))}_isThirdLevelShift(g,e){const I=g.isMac&&!this.options.macOptionIsMeta&&e.altKey&&!e.ctrlKey&&!e.metaKey||g.isWindows&&e.altKey&&e.ctrlKey&&!e.metaKey||g.isWindows&&e.getModifierState("AltGraph");return"keypress"===e.type?I:I&&(!e.keyCode||e.keyCode>47)}_keyUp(g){var e;this._keyDownSeen=!1,this._customKeyEventHandler&&!1===this._customKeyEventHandler(g)||(16===(e=g).keyCode||17===e.keyCode||18===e.keyCode||this.focus(),this.updateCursorStyle(g),this._keyPressHandled=!1)}_keyPress(g){let e;if(this._keyPressHandled=!1,this._keyDownHandled||this._customKeyEventHandler&&!1===this._customKeyEventHandler(g))return!1;if(this.cancel(g),g.charCode)e=g.charCode;else if(null===g.which||void 0===g.which)e=g.keyCode;else{if(0===g.which||0===g.charCode)return!1;e=g.which}return!(!e||(g.altKey||g.ctrlKey||g.metaKey)&&!this._isThirdLevelShift(this.browser,g)||(e=String.fromCharCode(e),this._onKey.fire({key:e,domEvent:g}),this._showCursor(),this.coreService.triggerDataEvent(e,!0),this._keyPressHandled=!0,this._unprocessedDeadKey=!1,0))}_inputEvent(g){if(g.data&&"insertText"===g.inputType&&(!g.composed||!this._keyDownSeen)&&!this.optionsService.rawOptions.screenReaderMode){if(this._keyPressHandled)return!1;this._unprocessedDeadKey=!1;const e=g.data;return this.coreService.triggerDataEvent(e,!0),this.cancel(g),!0}return!1}resize(g,e){g!==this.cols||e!==this.rows?super.resize(g,e):this._charSizeService&&!this._charSizeService.hasValidSize&&this._charSizeService.measure()}_afterResize(g,e){var I,t;null==(I=this._charSizeService)||I.measure(),null==(t=this.viewport)||t.syncScrollArea(!0)}clear(){var g;if(0!==this.buffer.ybase||0!==this.buffer.y){this.buffer.clearAllMarkers(),this.buffer.lines.set(0,this.buffer.lines.get(this.buffer.ybase+this.buffer.y)),this.buffer.lines.length=1,this.buffer.ydisp=0,this.buffer.ybase=0,this.buffer.y=0;for(let g=1;g<this.rows;g++)this.buffer.lines.push(this.buffer.getBlankLine(S.DEFAULT_ATTR_DATA));this._onScroll.fire({position:this.buffer.ydisp,source:0}),null==(g=this.viewport)||g.reset(),this.refresh(0,this.rows-1)}}reset(){var g,e;this.options.rows=this.rows,this.options.cols=this.cols;const I=this._customKeyEventHandler;this._setup(),super.reset(),null==(g=this._selectionService)||g.reset(),this._decorationService.reset(),null==(e=this.viewport)||e.reset(),this._customKeyEventHandler=I,this.refresh(0,this.rows-1)}clearTextureAtlas(){var g;null==(g=this._renderService)||g.clearTextureAtlas()}_reportFocus(){var g;null!=(g=this.element)&&g.classList.contains("focus")?this.coreService.triggerDataEvent(b.C0.ESC+"[I"):this.coreService.triggerDataEvent(b.C0.ESC+"[O")}_reportWindowsOptions(g){if(this._renderService)switch(g){case Q.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:const g=this._renderService.dimensions.css.canvas.width.toFixed(0),e=this._renderService.dimensions.css.canvas.height.toFixed(0);this.coreService.triggerDataEvent(`${b.C0.ESC}[4;${e};${g}t`);break;case Q.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:const I=this._renderService.dimensions.css.cell.width.toFixed(0),t=this._renderService.dimensions.css.cell.height.toFixed(0);this.coreService.triggerDataEvent(`${b.C0.ESC}[6;${t};${I}t`)}}cancel(g,e){if(this.options.cancelEvents||e)return g.preventDefault(),g.stopPropagation(),!1}}e.Terminal=E},9924:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TimeBasedDebouncer=void 0,e.TimeBasedDebouncer=class{constructor(g,e=1e3){this._renderCallback=g,this._debounceThresholdMS=e,this._lastRefreshMs=0,this._additionalRefreshRequested=!1}dispose(){this._refreshTimeoutID&&clearTimeout(this._refreshTimeoutID)}refresh(g,e,I){this._rowCount=I,g=void 0!==g?g:0,e=void 0!==e?e:this._rowCount-1,this._rowStart=void 0!==this._rowStart?Math.min(this._rowStart,g):g,this._rowEnd=void 0!==this._rowEnd?Math.max(this._rowEnd,e):e;const t=Date.now();if(t-this._lastRefreshMs>=this._debounceThresholdMS)this._lastRefreshMs=t,this._innerRefresh();else if(!this._additionalRefreshRequested){const g=t-this._lastRefreshMs,e=this._debounceThresholdMS-g;this._additionalRefreshRequested=!0,this._refreshTimeoutID=window.setTimeout((()=>{this._lastRefreshMs=Date.now(),this._innerRefresh(),this._additionalRefreshRequested=!1,this._refreshTimeoutID=void 0}),e)}}_innerRefresh(){if(void 0===this._rowStart||void 0===this._rowEnd||void 0===this._rowCount)return;const g=Math.max(this._rowStart,0),e=Math.min(this._rowEnd,this._rowCount-1);this._rowStart=void 0,this._rowEnd=void 0,this._renderCallback(g,e)}}},1680:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.Viewport=void 0;const i=I(3656),l=I(4725),n=I(8460),A=I(844),d=I(2585);let o=e.Viewport=class extends A.Disposable{constructor(g,e,I,t,C,l,A,d){super(),this._viewportElement=g,this._scrollArea=e,this._bufferService=I,this._optionsService=t,this._charSizeService=C,this._renderService=l,this._coreBrowserService=A,this.scrollBarWidth=0,this._currentRowHeight=0,this._currentDeviceCellHeight=0,this._lastRecordedBufferLength=0,this._lastRecordedViewportHeight=0,this._lastRecordedBufferHeight=0,this._lastTouchY=0,this._lastScrollTop=0,this._wheelPartialScroll=0,this._refreshAnimationFrame=null,this._ignoreNextScrollEvent=!1,this._smoothScrollState={startTime:0,origin:-1,target:-1},this._onRequestScrollLines=this.register(new n.EventEmitter),this.onRequestScrollLines=this._onRequestScrollLines.event,this.scrollBarWidth=this._viewportElement.offsetWidth-this._scrollArea.offsetWidth||15,this.register((0,i.addDisposableDomListener)(this._viewportElement,"scroll",this._handleScroll.bind(this))),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((g=>this._activeBuffer=g.activeBuffer))),this._renderDimensions=this._renderService.dimensions,this.register(this._renderService.onDimensionsChange((g=>this._renderDimensions=g))),this._handleThemeChange(d.colors),this.register(d.onChangeColors((g=>this._handleThemeChange(g)))),this.register(this._optionsService.onSpecificOptionChange("scrollback",(()=>this.syncScrollArea()))),setTimeout((()=>this.syncScrollArea()))}_handleThemeChange(g){this._viewportElement.style.backgroundColor=g.background.css}reset(){this._currentRowHeight=0,this._currentDeviceCellHeight=0,this._lastRecordedBufferLength=0,this._lastRecordedViewportHeight=0,this._lastRecordedBufferHeight=0,this._lastTouchY=0,this._lastScrollTop=0,this._coreBrowserService.window.requestAnimationFrame((()=>this.syncScrollArea()))}_refresh(g){if(g)return this._innerRefresh(),void(null!==this._refreshAnimationFrame&&this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));null===this._refreshAnimationFrame&&(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._innerRefresh())))}_innerRefresh(){if(this._charSizeService.height>0){this._currentRowHeight=this._renderDimensions.device.cell.height/this._coreBrowserService.dpr,this._currentDeviceCellHeight=this._renderDimensions.device.cell.height,this._lastRecordedViewportHeight=this._viewportElement.offsetHeight;const g=Math.round(this._currentRowHeight*this._lastRecordedBufferLength)+(this._lastRecordedViewportHeight-this._renderDimensions.css.canvas.height);this._lastRecordedBufferHeight!==g&&(this._lastRecordedBufferHeight=g,this._scrollArea.style.height=this._lastRecordedBufferHeight+"px")}const g=this._bufferService.buffer.ydisp*this._currentRowHeight;this._viewportElement.scrollTop!==g&&(this._ignoreNextScrollEvent=!0,this._viewportElement.scrollTop=g),this._refreshAnimationFrame=null}syncScrollArea(g=!1){if(this._lastRecordedBufferLength!==this._bufferService.buffer.lines.length)return this._lastRecordedBufferLength=this._bufferService.buffer.lines.length,void this._refresh(g);this._lastRecordedViewportHeight===this._renderService.dimensions.css.canvas.height&&this._lastScrollTop===this._activeBuffer.ydisp*this._currentRowHeight&&this._renderDimensions.device.cell.height===this._currentDeviceCellHeight||this._refresh(g)}_handleScroll(g){if(this._lastScrollTop=this._viewportElement.scrollTop,!this._viewportElement.offsetParent)return;if(this._ignoreNextScrollEvent)return this._ignoreNextScrollEvent=!1,void this._onRequestScrollLines.fire({amount:0,suppressScrollEvent:!0});const e=Math.round(this._lastScrollTop/this._currentRowHeight)-this._bufferService.buffer.ydisp;this._onRequestScrollLines.fire({amount:e,suppressScrollEvent:!0})}_smoothScroll(){if(this._isDisposed||-1===this._smoothScrollState.origin||-1===this._smoothScrollState.target)return;const g=this._smoothScrollPercent();this._viewportElement.scrollTop=this._smoothScrollState.origin+Math.round(g*(this._smoothScrollState.target-this._smoothScrollState.origin)),g<1?this._coreBrowserService.window.requestAnimationFrame((()=>this._smoothScroll())):this._clearSmoothScrollState()}_smoothScrollPercent(){return this._optionsService.rawOptions.smoothScrollDuration&&this._smoothScrollState.startTime?Math.max(Math.min((Date.now()-this._smoothScrollState.startTime)/this._optionsService.rawOptions.smoothScrollDuration,1),0):1}_clearSmoothScrollState(){this._smoothScrollState.startTime=0,this._smoothScrollState.origin=-1,this._smoothScrollState.target=-1}_bubbleScroll(g,e){const I=this._viewportElement.scrollTop+this._lastRecordedViewportHeight;return!(e<0&&0!==this._viewportElement.scrollTop||e>0&&I<this._lastRecordedBufferHeight)||(g.cancelable&&g.preventDefault(),!1)}handleWheel(g){const e=this._getPixelsScrolled(g);return 0!==e&&(this._optionsService.rawOptions.smoothScrollDuration?(this._smoothScrollState.startTime=Date.now(),this._smoothScrollPercent()<1?(this._smoothScrollState.origin=this._viewportElement.scrollTop,-1===this._smoothScrollState.target?this._smoothScrollState.target=this._viewportElement.scrollTop+e:this._smoothScrollState.target+=e,this._smoothScrollState.target=Math.max(Math.min(this._smoothScrollState.target,this._viewportElement.scrollHeight),0),this._smoothScroll()):this._clearSmoothScrollState()):this._viewportElement.scrollTop+=e,this._bubbleScroll(g,e))}scrollLines(g){if(0!==g)if(this._optionsService.rawOptions.smoothScrollDuration){const e=g*this._currentRowHeight;this._smoothScrollState.startTime=Date.now(),this._smoothScrollPercent()<1?(this._smoothScrollState.origin=this._viewportElement.scrollTop,this._smoothScrollState.target=this._smoothScrollState.origin+e,this._smoothScrollState.target=Math.max(Math.min(this._smoothScrollState.target,this._viewportElement.scrollHeight),0),this._smoothScroll()):this._clearSmoothScrollState()}else this._onRequestScrollLines.fire({amount:g,suppressScrollEvent:!1})}_getPixelsScrolled(g){if(0===g.deltaY||g.shiftKey)return 0;let e=this._applyScrollModifier(g.deltaY,g);return g.deltaMode===WheelEvent.DOM_DELTA_LINE?e*=this._currentRowHeight:g.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(e*=this._currentRowHeight*this._bufferService.rows),e}getBufferElements(g,e){var I;let t,C="";const i=[],l=e??this._bufferService.buffer.lines.length,n=this._bufferService.buffer.lines;for(let e=g;e<l;e++){const g=n.get(e);if(!g)continue;const l=null==(I=n.get(e+1))?void 0:I.isWrapped;if(C+=g.translateToString(!l),!l||e===n.length-1){const g=document.createElement("div");g.textContent=C,i.push(g),C.length>0&&(t=g),C=""}}return{bufferElements:i,cursorElement:t}}getLinesScrolled(g){if(0===g.deltaY||g.shiftKey)return 0;let e=this._applyScrollModifier(g.deltaY,g);return g.deltaMode===WheelEvent.DOM_DELTA_PIXEL?(e/=this._currentRowHeight+0,this._wheelPartialScroll+=e,e=Math.floor(Math.abs(this._wheelPartialScroll))*(this._wheelPartialScroll>0?1:-1),this._wheelPartialScroll%=1):g.deltaMode===WheelEvent.DOM_DELTA_PAGE&&(e*=this._bufferService.rows),e}_applyScrollModifier(g,e){const I=this._optionsService.rawOptions.fastScrollModifier;return"alt"===I&&e.altKey||"ctrl"===I&&e.ctrlKey||"shift"===I&&e.shiftKey?g*this._optionsService.rawOptions.fastScrollSensitivity*this._optionsService.rawOptions.scrollSensitivity:g*this._optionsService.rawOptions.scrollSensitivity}handleTouchStart(g){this._lastTouchY=g.touches[0].pageY}handleTouchMove(g){const e=this._lastTouchY-g.touches[0].pageY;return this._lastTouchY=g.touches[0].pageY,0!==e&&(this._viewportElement.scrollTop+=e,this._bubbleScroll(g,e))}};e.Viewport=o=t([C(2,d.IBufferService),C(3,d.IOptionsService),C(4,l.ICharSizeService),C(5,l.IRenderService),C(6,l.ICoreBrowserService),C(7,l.IThemeService)],o)},3107:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.BufferDecorationRenderer=void 0;const i=I(4725),l=I(844),n=I(2585);let A=e.BufferDecorationRenderer=class extends l.Disposable{constructor(g,e,I,t,C){super(),this._screenElement=g,this._bufferService=e,this._coreBrowserService=I,this._decorationService=t,this._renderService=C,this._decorationElements=new Map,this._altBufferIsActive=!1,this._dimensionsChanged=!1,this._container=document.createElement("div"),this._container.classList.add("xterm-decoration-container"),this._screenElement.appendChild(this._container),this.register(this._renderService.onRenderedViewportChange((()=>this._doRefreshDecorations()))),this.register(this._renderService.onDimensionsChange((()=>{this._dimensionsChanged=!0,this._queueRefresh()}))),this.register(this._coreBrowserService.onDprChange((()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._altBufferIsActive=this._bufferService.buffer===this._bufferService.buffers.alt}))),this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh()))),this.register(this._decorationService.onDecorationRemoved((g=>this._removeDecoration(g)))),this.register((0,l.toDisposable)((()=>{this._container.remove(),this._decorationElements.clear()})))}_queueRefresh(){void 0===this._animationFrame&&(this._animationFrame=this._renderService.addRefreshCallback((()=>{this._doRefreshDecorations(),this._animationFrame=void 0})))}_doRefreshDecorations(){for(const g of this._decorationService.decorations)this._renderDecoration(g);this._dimensionsChanged=!1}_renderDecoration(g){this._refreshStyle(g),this._dimensionsChanged&&this._refreshXPosition(g)}_createElement(g){var e;const I=this._coreBrowserService.mainDocument.createElement("div");I.classList.add("xterm-decoration"),I.classList.toggle("xterm-decoration-top-layer","top"===(null==(e=null==g?void 0:g.options)?void 0:e.layer)),I.style.width=`${Math.round((g.options.width||1)*this._renderService.dimensions.css.cell.width)}px`,I.style.height=(g.options.height||1)*this._renderService.dimensions.css.cell.height+"px",I.style.top=(g.marker.line-this._bufferService.buffers.active.ydisp)*this._renderService.dimensions.css.cell.height+"px",I.style.lineHeight=`${this._renderService.dimensions.css.cell.height}px`;const t=g.options.x??0;return t&&t>this._bufferService.cols&&(I.style.display="none"),this._refreshXPosition(g,I),I}_refreshStyle(g){const e=g.marker.line-this._bufferService.buffers.active.ydisp;if(e<0||e>=this._bufferService.rows)g.element&&(g.element.style.display="none",g.onRenderEmitter.fire(g.element));else{let I=this._decorationElements.get(g);I||(I=this._createElement(g),g.element=I,this._decorationElements.set(g,I),this._container.appendChild(I),g.onDispose((()=>{this._decorationElements.delete(g),I.remove()}))),I.style.top=e*this._renderService.dimensions.css.cell.height+"px",I.style.display=this._altBufferIsActive?"none":"block",g.onRenderEmitter.fire(I)}}_refreshXPosition(g,e=g.element){if(!e)return;const I=g.options.x??0;"right"===(g.options.anchor||"left")?e.style.right=I?I*this._renderService.dimensions.css.cell.width+"px":"":e.style.left=I?I*this._renderService.dimensions.css.cell.width+"px":""}_removeDecoration(g){var e;null==(e=this._decorationElements.get(g))||e.remove(),this._decorationElements.delete(g),g.dispose()}};e.BufferDecorationRenderer=A=t([C(1,n.IBufferService),C(2,i.ICoreBrowserService),C(3,n.IDecorationService),C(4,i.IRenderService)],A)},5871:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ColorZoneStore=void 0,e.ColorZoneStore=class{constructor(){this._zones=[],this._zonePool=[],this._zonePoolIndex=0,this._linePadding={full:0,left:0,center:0,right:0}}get zones(){return this._zonePool.length=Math.min(this._zonePool.length,this._zones.length),this._zones}clear(){this._zones.length=0,this._zonePoolIndex=0}addDecoration(g){if(g.options.overviewRulerOptions){for(const e of this._zones)if(e.color===g.options.overviewRulerOptions.color&&e.position===g.options.overviewRulerOptions.position){if(this._lineIntersectsZone(e,g.marker.line))return;if(this._lineAdjacentToZone(e,g.marker.line,g.options.overviewRulerOptions.position))return void this._addLineToZone(e,g.marker.line)}if(this._zonePoolIndex<this._zonePool.length)return this._zonePool[this._zonePoolIndex].color=g.options.overviewRulerOptions.color,this._zonePool[this._zonePoolIndex].position=g.options.overviewRulerOptions.position,this._zonePool[this._zonePoolIndex].startBufferLine=g.marker.line,this._zonePool[this._zonePoolIndex].endBufferLine=g.marker.line,void this._zones.push(this._zonePool[this._zonePoolIndex++]);this._zones.push({color:g.options.overviewRulerOptions.color,position:g.options.overviewRulerOptions.position,startBufferLine:g.marker.line,endBufferLine:g.marker.line}),this._zonePool.push(this._zones[this._zones.length-1]),this._zonePoolIndex++}}setPadding(g){this._linePadding=g}_lineIntersectsZone(g,e){return e>=g.startBufferLine&&e<=g.endBufferLine}_lineAdjacentToZone(g,e,I){return e>=g.startBufferLine-this._linePadding[I||"full"]&&e<=g.endBufferLine+this._linePadding[I||"full"]}_addLineToZone(g,e){g.startBufferLine=Math.min(g.startBufferLine,e),g.endBufferLine=Math.max(g.endBufferLine,e)}}},5744:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.OverviewRulerRenderer=void 0;const i=I(5871),l=I(4725),n=I(844),A=I(2585),d={full:0,left:0,center:0,right:0},o={full:0,left:0,center:0,right:0},s={full:0,left:0,center:0,right:0};let a=e.OverviewRulerRenderer=class extends n.Disposable{get _width(){return this._optionsService.options.overviewRulerWidth||0}constructor(g,e,I,t,C,l,A){var d;super(),this._viewportElement=g,this._screenElement=e,this._bufferService=I,this._decorationService=t,this._renderService=C,this._optionsService=l,this._coreBrowserService=A,this._colorZoneStore=new i.ColorZoneStore,this._shouldUpdateDimensions=!0,this._shouldUpdateAnchor=!0,this._lastKnownBufferLength=0,this._canvas=this._coreBrowserService.mainDocument.createElement("canvas"),this._canvas.classList.add("xterm-decoration-overview-ruler"),this._refreshCanvasDimensions(),null==(d=this._viewportElement.parentElement)||d.insertBefore(this._canvas,this._viewportElement);const o=this._canvas.getContext("2d");if(!o)throw new Error("Ctx cannot be null");this._ctx=o,this._registerDecorationListeners(),this._registerBufferChangeListeners(),this._registerDimensionChangeListeners(),this.register((0,n.toDisposable)((()=>{var g;null==(g=this._canvas)||g.remove()})))}_registerDecorationListeners(){this.register(this._decorationService.onDecorationRegistered((()=>this._queueRefresh(void 0,!0)))),this.register(this._decorationService.onDecorationRemoved((()=>this._queueRefresh(void 0,!0))))}_registerBufferChangeListeners(){this.register(this._renderService.onRenderedViewportChange((()=>this._queueRefresh()))),this.register(this._bufferService.buffers.onBufferActivate((()=>{this._canvas.style.display=this._bufferService.buffer===this._bufferService.buffers.alt?"none":"block"}))),this.register(this._bufferService.onScroll((()=>{this._lastKnownBufferLength!==this._bufferService.buffers.normal.lines.length&&(this._refreshDrawHeightConstants(),this._refreshColorZonePadding())})))}_registerDimensionChangeListeners(){this.register(this._renderService.onRender((()=>{this._containerHeight&&this._containerHeight===this._screenElement.clientHeight||(this._queueRefresh(!0),this._containerHeight=this._screenElement.clientHeight)}))),this.register(this._optionsService.onSpecificOptionChange("overviewRulerWidth",(()=>this._queueRefresh(!0)))),this.register(this._coreBrowserService.onDprChange((()=>this._queueRefresh(!0)))),this._queueRefresh(!0)}_refreshDrawConstants(){const g=Math.floor(this._canvas.width/3),e=Math.ceil(this._canvas.width/3);o.full=this._canvas.width,o.left=g,o.center=e,o.right=g,this._refreshDrawHeightConstants(),s.full=0,s.left=0,s.center=o.left,s.right=o.left+o.center}_refreshDrawHeightConstants(){d.full=Math.round(2*this._coreBrowserService.dpr);const g=this._canvas.height/this._bufferService.buffer.lines.length,e=Math.round(Math.max(Math.min(g,12),6)*this._coreBrowserService.dpr);d.left=e,d.center=e,d.right=e}_refreshColorZonePadding(){this._colorZoneStore.setPadding({full:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*d.full),left:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*d.left),center:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*d.center),right:Math.floor(this._bufferService.buffers.active.lines.length/(this._canvas.height-1)*d.right)}),this._lastKnownBufferLength=this._bufferService.buffers.normal.lines.length}_refreshCanvasDimensions(){this._canvas.style.width=`${this._width}px`,this._canvas.width=Math.round(this._width*this._coreBrowserService.dpr),this._canvas.style.height=`${this._screenElement.clientHeight}px`,this._canvas.height=Math.round(this._screenElement.clientHeight*this._coreBrowserService.dpr),this._refreshDrawConstants(),this._refreshColorZonePadding()}_refreshDecorations(){this._shouldUpdateDimensions&&this._refreshCanvasDimensions(),this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height),this._colorZoneStore.clear();for(const g of this._decorationService.decorations)this._colorZoneStore.addDecoration(g);this._ctx.lineWidth=1;const g=this._colorZoneStore.zones;for(const e of g)"full"!==e.position&&this._renderColorZone(e);for(const e of g)"full"===e.position&&this._renderColorZone(e);this._shouldUpdateDimensions=!1,this._shouldUpdateAnchor=!1}_renderColorZone(g){this._ctx.fillStyle=g.color,this._ctx.fillRect(s[g.position||"full"],Math.round((this._canvas.height-1)*(g.startBufferLine/this._bufferService.buffers.active.lines.length)-d[g.position||"full"]/2),o[g.position||"full"],Math.round((this._canvas.height-1)*((g.endBufferLine-g.startBufferLine)/this._bufferService.buffers.active.lines.length)+d[g.position||"full"]))}_queueRefresh(g,e){this._shouldUpdateDimensions=g||this._shouldUpdateDimensions,this._shouldUpdateAnchor=e||this._shouldUpdateAnchor,void 0===this._animationFrame&&(this._animationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>{this._refreshDecorations(),this._animationFrame=void 0})))}};e.OverviewRulerRenderer=a=t([C(2,A.IBufferService),C(3,A.IDecorationService),C(4,l.IRenderService),C(5,A.IOptionsService),C(6,l.ICoreBrowserService)],a)},2950:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.CompositionHelper=void 0;const i=I(4725),l=I(2585),n=I(2584);let A=e.CompositionHelper=class{get isComposing(){return this._isComposing}constructor(g,e,I,t,C,i){this._textarea=g,this._compositionView=e,this._bufferService=I,this._optionsService=t,this._coreService=C,this._renderService=i,this._isComposing=!1,this._isSendingComposition=!1,this._compositionPosition={start:0,end:0},this._dataAlreadySent=""}compositionstart(){this._isComposing=!0,this._compositionPosition.start=this._textarea.value.length,this._compositionView.textContent="",this._dataAlreadySent="",this._compositionView.classList.add("active")}compositionupdate(g){this._compositionView.textContent=g.data,this.updateCompositionElements(),setTimeout((()=>{this._compositionPosition.end=this._textarea.value.length}),0)}compositionend(){this._finalizeComposition(!0)}keydown(g){if(this._isComposing||this._isSendingComposition){if(229===g.keyCode||16===g.keyCode||17===g.keyCode||18===g.keyCode)return!1;this._finalizeComposition(!1)}return 229!==g.keyCode||(this._handleAnyTextareaChanges(),!1)}_finalizeComposition(g){if(this._compositionView.classList.remove("active"),this._isComposing=!1,g){const g={start:this._compositionPosition.start,end:this._compositionPosition.end};this._isSendingComposition=!0,setTimeout((()=>{if(this._isSendingComposition){let e;this._isSendingComposition=!1,g.start+=this._dataAlreadySent.length,e=this._isComposing?this._textarea.value.substring(g.start,g.end):this._textarea.value.substring(g.start),e.length>0&&this._coreService.triggerDataEvent(e,!0)}}),0)}else{this._isSendingComposition=!1;const g=this._textarea.value.substring(this._compositionPosition.start,this._compositionPosition.end);this._coreService.triggerDataEvent(g,!0)}}_handleAnyTextareaChanges(){const g=this._textarea.value;setTimeout((()=>{if(!this._isComposing){const e=this._textarea.value,I=e.replace(g,"");this._dataAlreadySent=I,e.length>g.length?this._coreService.triggerDataEvent(I,!0):e.length<g.length?this._coreService.triggerDataEvent(`${n.C0.DEL}`,!0):e.length===g.length&&e!==g&&this._coreService.triggerDataEvent(e,!0)}}),0)}updateCompositionElements(g){if(this._isComposing){if(this._bufferService.buffer.isCursorInViewport){const g=Math.min(this._bufferService.buffer.x,this._bufferService.cols-1),e=this._renderService.dimensions.css.cell.height,I=this._bufferService.buffer.y*this._renderService.dimensions.css.cell.height,t=g*this._renderService.dimensions.css.cell.width;this._compositionView.style.left=t+"px",this._compositionView.style.top=I+"px",this._compositionView.style.height=e+"px",this._compositionView.style.lineHeight=e+"px",this._compositionView.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._compositionView.style.fontSize=this._optionsService.rawOptions.fontSize+"px";const C=this._compositionView.getBoundingClientRect();this._textarea.style.left=t+"px",this._textarea.style.top=I+"px",this._textarea.style.width=Math.max(C.width,1)+"px",this._textarea.style.height=Math.max(C.height,1)+"px",this._textarea.style.lineHeight=C.height+"px"}g||setTimeout((()=>this.updateCompositionElements(!0)),0)}}};e.CompositionHelper=A=t([C(2,l.IBufferService),C(3,l.IOptionsService),C(4,l.ICoreService),C(5,i.IRenderService)],A)},9806:(g,e)=>{function I(g,e,I){const t=I.getBoundingClientRect(),C=g.getComputedStyle(I),i=parseInt(C.getPropertyValue("padding-left")),l=parseInt(C.getPropertyValue("padding-top"));return[e.clientX-t.left-i,e.clientY-t.top-l]}Object.defineProperty(e,"__esModule",{value:!0}),e.getCoords=e.getCoordsRelativeToElement=void 0,e.getCoordsRelativeToElement=I,e.getCoords=function(g,e,t,C,i,l,n,A,d){if(!l)return;const o=I(g,e,t);return o?(o[0]=Math.ceil((o[0]+(d?n/2:0))/n),o[1]=Math.ceil(o[1]/A),o[0]=Math.min(Math.max(o[0],1),C+(d?1:0)),o[1]=Math.min(Math.max(o[1],1),i),o):void 0}},9504:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.moveToCellSequence=void 0;const t=I(2584);function C(g,e,I,t){const C=g-i(g,I),n=e-i(e,I);return d(Math.abs(C-n)-function(g,e,I){let t=0;const C=g-i(g,I),n=e-i(e,I);for(let i=0;i<Math.abs(C-n);i++){const n="A"===l(g,e)?-1:1,A=I.buffer.lines.get(C+n*i);null!=A&&A.isWrapped&&t++}return t}(g,e,I),A(l(g,e),t))}function i(g,e){let I=0,t=e.buffer.lines.get(g),C=null==t?void 0:t.isWrapped;for(;C&&g>=0&&g<e.rows;)I++,t=e.buffer.lines.get(--g),C=null==t?void 0:t.isWrapped;return I}function l(g,e){return g>e?"A":"B"}function n(g,e,I,t,C,i){let l=g,n=e,A="";for(;l!==I||n!==t;)l+=C?1:-1,C&&l>i.cols-1?(A+=i.buffer.translateBufferLineToString(n,!1,g,l),l=0,g=0,n++):!C&&l<0&&(A+=i.buffer.translateBufferLineToString(n,!1,0,g+1),l=i.cols-1,g=l,n--);return A+i.buffer.translateBufferLineToString(n,!1,g,l)}function A(g,e){const I=e?"O":"[";return t.C0.ESC+I+g}function d(g,e){g=Math.floor(g);let I="";for(let t=0;t<g;t++)I+=e;return I}e.moveToCellSequence=function(g,e,I,t){const l=I.buffer.x,o=I.buffer.y;if(!I.buffer.hasScrollback)return s=l,(0===C(a=o,e,V=I,c=t).length?"":d(n(s,a,s,a-i(a,V),!1,V).length,A("D",c)))+C(o,e,I,t)+function(g,e,I,t,l,o){let s;s=C(e,t,l,o).length>0?t-i(t,l):e;const a=t,V=function(g,e,I,t,l,n){let A;return A=C(I,t,l,n).length>0?t-i(t,l):e,g<I&&A<=t||g>=I&&A<t?"C":"D"}(g,e,I,t,l,o);return d(n(g,s,I,a,"C"===V,l).length,A(V,o))}(l,o,g,e,I,t);var s,a,V,c;let r;if(o===e)return r=l>g?"D":"C",d(Math.abs(l-g),A(r,t));r=o>e?"D":"C";const h=Math.abs(o-e);return d(function(g,e){return e.cols-g}(o>e?g:l,I)+(h-1)*I.cols+1+((o>e?l:g)-1),A(r,t))}},1296:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.DomRenderer=void 0;const i=I(3787),l=I(2550),n=I(2223),A=I(6171),d=I(6052),o=I(4725),s=I(8055),a=I(8460),V=I(844),c=I(2585),r="xterm-dom-renderer-owner-",h="xterm-rows",U="xterm-fg-",Z="xterm-bg-",R="xterm-focus",F="xterm-selection";let m=1,B=e.DomRenderer=class extends V.Disposable{constructor(g,e,I,t,C,n,o,s,c,U,Z,R,B){super(),this._terminal=g,this._document=e,this._element=I,this._screenElement=t,this._viewportElement=C,this._helperContainer=n,this._linkifier2=o,this._charSizeService=c,this._optionsService=U,this._bufferService=Z,this._coreBrowserService=R,this._themeService=B,this._terminalClass=m++,this._rowElements=[],this._selectionRenderModel=(0,d.createSelectionRenderModel)(),this.onRequestRedraw=this.register(new a.EventEmitter).event,this._rowContainer=this._document.createElement("div"),this._rowContainer.classList.add(h),this._rowContainer.style.lineHeight="normal",this._rowContainer.setAttribute("aria-hidden","true"),this._refreshRowElements(this._bufferService.cols,this._bufferService.rows),this._selectionContainer=this._document.createElement("div"),this._selectionContainer.classList.add(F),this._selectionContainer.setAttribute("aria-hidden","true"),this.dimensions=(0,A.createRenderDimensions)(),this._updateDimensions(),this.register(this._optionsService.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._themeService.onChangeColors((g=>this._injectCss(g)))),this._injectCss(this._themeService.colors),this._rowFactory=s.createInstance(i.DomRendererRowFactory,document),this._element.classList.add(r+this._terminalClass),this._screenElement.appendChild(this._rowContainer),this._screenElement.appendChild(this._selectionContainer),this.register(this._linkifier2.onShowLinkUnderline((g=>this._handleLinkHover(g)))),this.register(this._linkifier2.onHideLinkUnderline((g=>this._handleLinkLeave(g)))),this.register((0,V.toDisposable)((()=>{this._element.classList.remove(r+this._terminalClass),this._rowContainer.remove(),this._selectionContainer.remove(),this._widthCache.dispose(),this._themeStyleElement.remove(),this._dimensionsStyleElement.remove()}))),this._widthCache=new l.WidthCache(this._document,this._helperContainer),this._widthCache.setFont(this._optionsService.rawOptions.fontFamily,this._optionsService.rawOptions.fontSize,this._optionsService.rawOptions.fontWeight,this._optionsService.rawOptions.fontWeightBold),this._setDefaultSpacing()}_updateDimensions(){const g=this._coreBrowserService.dpr;this.dimensions.device.char.width=this._charSizeService.width*g,this.dimensions.device.char.height=Math.ceil(this._charSizeService.height*g),this.dimensions.device.cell.width=this.dimensions.device.char.width+Math.round(this._optionsService.rawOptions.letterSpacing),this.dimensions.device.cell.height=Math.floor(this.dimensions.device.char.height*this._optionsService.rawOptions.lineHeight),this.dimensions.device.char.left=0,this.dimensions.device.char.top=0,this.dimensions.device.canvas.width=this.dimensions.device.cell.width*this._bufferService.cols,this.dimensions.device.canvas.height=this.dimensions.device.cell.height*this._bufferService.rows,this.dimensions.css.canvas.width=Math.round(this.dimensions.device.canvas.width/g),this.dimensions.css.canvas.height=Math.round(this.dimensions.device.canvas.height/g),this.dimensions.css.cell.width=this.dimensions.css.canvas.width/this._bufferService.cols,this.dimensions.css.cell.height=this.dimensions.css.canvas.height/this._bufferService.rows;for(const g of this._rowElements)g.style.width=`${this.dimensions.css.canvas.width}px`,g.style.height=`${this.dimensions.css.cell.height}px`,g.style.lineHeight=`${this.dimensions.css.cell.height}px`,g.style.overflow="hidden";this._dimensionsStyleElement||(this._dimensionsStyleElement=this._document.createElement("style"),this._screenElement.appendChild(this._dimensionsStyleElement));const e=`${this._terminalSelector} .${h} span { display: inline-block; height: 100%; vertical-align: top;}`;this._dimensionsStyleElement.textContent=e,this._selectionContainer.style.height=this._viewportElement.style.height,this._screenElement.style.width=`${this.dimensions.css.canvas.width}px`,this._screenElement.style.height=`${this.dimensions.css.canvas.height}px`}_injectCss(g){this._themeStyleElement||(this._themeStyleElement=this._document.createElement("style"),this._screenElement.appendChild(this._themeStyleElement));let e=`${this._terminalSelector} .${h} { color: ${g.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px; font-kerning: none; white-space: pre}`;e+=`${this._terminalSelector} .${h} .xterm-dim { color: ${s.color.multiplyOpacity(g.foreground,.5).css};}`,e+=`${this._terminalSelector} span:not(.xterm-bold) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.xterm-bold { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.xterm-italic { font-style: italic;}`;const I=`blink_underline_${this._terminalClass}`,t=`blink_bar_${this._terminalClass}`,C=`blink_block_${this._terminalClass}`;e+=`@keyframes ${I} { 50% {  border-bottom-style: hidden; }}`,e+=`@keyframes ${t} { 50% {  box-shadow: none; }}`,e+=`@keyframes ${C} { 0% {  background-color: ${g.cursor.css};  color: ${g.cursorAccent.css}; } 50% {  background-color: inherit;  color: ${g.cursor.css}; }}`,e+=`${this._terminalSelector} .${h}.${R} .xterm-cursor.xterm-cursor-blink.xterm-cursor-underline { animation: ${I} 1s step-end infinite;}${this._terminalSelector} .${h}.${R} .xterm-cursor.xterm-cursor-blink.xterm-cursor-bar { animation: ${t} 1s step-end infinite;}${this._terminalSelector} .${h}.${R} .xterm-cursor.xterm-cursor-blink.xterm-cursor-block { animation: ${C} 1s step-end infinite;}${this._terminalSelector} .${h} .xterm-cursor.xterm-cursor-block { background-color: ${g.cursor.css}; color: ${g.cursorAccent.css};}${this._terminalSelector} .${h} .xterm-cursor.xterm-cursor-block:not(.xterm-cursor-blink) { background-color: ${g.cursor.css} !important; color: ${g.cursorAccent.css} !important;}${this._terminalSelector} .${h} .xterm-cursor.xterm-cursor-outline { outline: 1px solid ${g.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .${h} .xterm-cursor.xterm-cursor-bar { box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${g.cursor.css} inset;}${this._terminalSelector} .${h} .xterm-cursor.xterm-cursor-underline { border-bottom: 1px ${g.cursor.css}; border-bottom-style: solid; height: calc(100% - 1px);}`,e+=`${this._terminalSelector} .${F} { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .${F} div { position: absolute; background-color: ${g.selectionBackgroundOpaque.css};}${this._terminalSelector} .${F} div { position: absolute; background-color: ${g.selectionInactiveBackgroundOpaque.css};}`;for(const[I,t]of g.ansi.entries())e+=`${this._terminalSelector} .${U}${I} { color: ${t.css}; }${this._terminalSelector} .${U}${I}.xterm-dim { color: ${s.color.multiplyOpacity(t,.5).css}; }${this._terminalSelector} .${Z}${I} { background-color: ${t.css}; }`;e+=`${this._terminalSelector} .${U}${n.INVERTED_DEFAULT_COLOR} { color: ${s.color.opaque(g.background).css}; }${this._terminalSelector} .${U}${n.INVERTED_DEFAULT_COLOR}.xterm-dim { color: ${s.color.multiplyOpacity(s.color.opaque(g.background),.5).css}; }${this._terminalSelector} .${Z}${n.INVERTED_DEFAULT_COLOR} { background-color: ${g.foreground.css}; }`,this._themeStyleElement.textContent=e}_setDefaultSpacing(){const g=this.dimensions.css.cell.width-this._widthCache.get("W",!1,!1);this._rowContainer.style.letterSpacing=`${g}px`,this._rowFactory.defaultSpacing=g}handleDevicePixelRatioChange(){this._updateDimensions(),this._widthCache.clear(),this._setDefaultSpacing()}_refreshRowElements(g,e){for(let g=this._rowElements.length;g<=e;g++){const g=this._document.createElement("div");this._rowContainer.appendChild(g),this._rowElements.push(g)}for(;this._rowElements.length>e;)this._rowContainer.removeChild(this._rowElements.pop())}handleResize(g,e){this._refreshRowElements(g,e),this._updateDimensions(),this.handleSelectionChanged(this._selectionRenderModel.selectionStart,this._selectionRenderModel.selectionEnd,this._selectionRenderModel.columnSelectMode)}handleCharSizeChanged(){this._updateDimensions(),this._widthCache.clear(),this._setDefaultSpacing()}handleBlur(){this._rowContainer.classList.remove(R),this.renderRows(0,this._bufferService.rows-1)}handleFocus(){this._rowContainer.classList.add(R),this.renderRows(this._bufferService.buffer.y,this._bufferService.buffer.y)}handleSelectionChanged(g,e,I){if(this._selectionContainer.replaceChildren(),this._rowFactory.handleSelectionChanged(g,e,I),this.renderRows(0,this._bufferService.rows-1),!g||!e)return;this._selectionRenderModel.update(this._terminal,g,e,I);const t=this._selectionRenderModel.viewportStartRow,C=this._selectionRenderModel.viewportEndRow,i=this._selectionRenderModel.viewportCappedStartRow,l=this._selectionRenderModel.viewportCappedEndRow;if(i>=this._bufferService.rows||l<0)return;const n=this._document.createDocumentFragment();if(I){const I=g[0]>e[0];n.appendChild(this._createSelectionElement(i,I?e[0]:g[0],I?g[0]:e[0],l-i+1))}else{const I=t===i?g[0]:0,A=i===C?e[0]:this._bufferService.cols;n.appendChild(this._createSelectionElement(i,I,A));const d=l-i-1;if(n.appendChild(this._createSelectionElement(i+1,0,this._bufferService.cols,d)),i!==l){const g=C===l?e[0]:this._bufferService.cols;n.appendChild(this._createSelectionElement(l,0,g))}}this._selectionContainer.appendChild(n)}_createSelectionElement(g,e,I,t=1){const C=this._document.createElement("div"),i=e*this.dimensions.css.cell.width;let l=this.dimensions.css.cell.width*(I-e);return i+l>this.dimensions.css.canvas.width&&(l=this.dimensions.css.canvas.width-i),C.style.height=t*this.dimensions.css.cell.height+"px",C.style.top=g*this.dimensions.css.cell.height+"px",C.style.left=`${i}px`,C.style.width=`${l}px`,C}handleCursorMove(){}_handleOptionsChanged(){this._updateDimensions(),this._injectCss(this._themeService.colors),this._widthCache.setFont(this._optionsService.rawOptions.fontFamily,this._optionsService.rawOptions.fontSize,this._optionsService.rawOptions.fontWeight,this._optionsService.rawOptions.fontWeightBold),this._setDefaultSpacing()}clear(){for(const g of this._rowElements)g.replaceChildren()}renderRows(g,e){const I=this._bufferService.buffer,t=I.ybase+I.y,C=Math.min(I.x,this._bufferService.cols-1),i=this._optionsService.rawOptions.cursorBlink,l=this._optionsService.rawOptions.cursorStyle,n=this._optionsService.rawOptions.cursorInactiveStyle;for(let A=g;A<=e;A++){const g=A+I.ydisp,e=this._rowElements[A],d=I.lines.get(g);if(!e||!d)break;e.replaceChildren(...this._rowFactory.createRow(d,g,g===t,l,n,C,i,this.dimensions.css.cell.width,this._widthCache,-1,-1))}}get _terminalSelector(){return`.${r}${this._terminalClass}`}_handleLinkHover(g){this._setCellUnderline(g.x1,g.x2,g.y1,g.y2,g.cols,!0)}_handleLinkLeave(g){this._setCellUnderline(g.x1,g.x2,g.y1,g.y2,g.cols,!1)}_setCellUnderline(g,e,I,t,C,i){I<0&&(g=0),t<0&&(e=0);const l=this._bufferService.rows-1;I=Math.max(Math.min(I,l),0),t=Math.max(Math.min(t,l),0),C=Math.min(C,this._bufferService.cols);const n=this._bufferService.buffer,A=n.ybase+n.y,d=Math.min(n.x,C-1),o=this._optionsService.rawOptions.cursorBlink,s=this._optionsService.rawOptions.cursorStyle,a=this._optionsService.rawOptions.cursorInactiveStyle;for(let l=I;l<=t;++l){const V=l+n.ydisp,c=this._rowElements[l],r=n.lines.get(V);if(!c||!r)break;c.replaceChildren(...this._rowFactory.createRow(r,V,V===A,s,a,d,o,this.dimensions.css.cell.width,this._widthCache,i?l===I?g:0:-1,i?(l===t?e:C)-1:-1))}}};e.DomRenderer=B=t([C(7,c.IInstantiationService),C(8,o.ICharSizeService),C(9,c.IOptionsService),C(10,c.IBufferService),C(11,o.ICoreBrowserService),C(12,o.IThemeService)],B)},3787:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.DomRendererRowFactory=void 0;const i=I(2223),l=I(643),n=I(511),A=I(2585),d=I(8055),o=I(4725),s=I(4269),a=I(6171),V=I(3734);let c=e.DomRendererRowFactory=class{constructor(g,e,I,t,C,i,l){this._document=g,this._characterJoinerService=e,this._optionsService=I,this._coreBrowserService=t,this._coreService=C,this._decorationService=i,this._themeService=l,this._workCell=new n.CellData,this._columnSelectMode=!1,this.defaultSpacing=0}handleSelectionChanged(g,e,I){this._selectionStart=g,this._selectionEnd=e,this._columnSelectMode=I}createRow(g,e,I,t,C,n,A,o,a,c,h){const U=[],Z=this._characterJoinerService.getJoinedCharacters(e),R=this._themeService.colors;let F,m=g.getNoBgTrimmedLength();I&&m<n+1&&(m=n+1);let B=0,W="",N=0,p=0,S=0,b=!1,u=0,T=!1,G=0;const k=[],Q=-1!==c&&-1!==h;for(let M=0;M<m;M++){g.loadCell(M,this._workCell);let m=this._workCell.getWidth();if(0===m)continue;let Y=!1,E=M,y=this._workCell;if(Z.length>0&&M===Z[0][0]){Y=!0;const e=Z.shift();y=new s.JoinedCellData(this._workCell,g.translateToString(!0,e[0],e[1]),e[1]-e[0]),E=e[1]-1,m=y.getWidth()}const J=this._isCellInSelection(M,e),H=I&&M===n,w=Q&&M>=c&&M<=h;let X=!1;this._decorationService.forEachDecorationAtCell(M,e,void 0,(g=>{X=!0}));let K=y.getChars()||l.WHITESPACE_CELL_CHAR;if(" "===K&&(y.isUnderline()||y.isOverline())&&(K=" "),G=m*o-a.get(K,y.isBold(),y.isItalic()),F){if(B&&(J&&T||!J&&!T&&y.bg===N)&&(J&&T&&R.selectionForeground||y.fg===p)&&y.extended.ext===S&&w===b&&G===u&&!H&&!Y&&!X){y.isInvisible()?W+=l.WHITESPACE_CELL_CHAR:W+=K,B++;continue}B&&(F.textContent=W),F=this._document.createElement("span"),B=0,W=""}else F=this._document.createElement("span");if(N=y.bg,p=y.fg,S=y.extended.ext,b=w,u=G,T=J,Y&&n>=M&&n<=E&&(n=M),!this._coreService.isCursorHidden&&H&&this._coreService.isCursorInitialized)if(k.push("xterm-cursor"),this._coreBrowserService.isFocused)A&&k.push("xterm-cursor-blink"),k.push("bar"===t?"xterm-cursor-bar":"underline"===t?"xterm-cursor-underline":"xterm-cursor-block");else if(C)switch(C){case"outline":k.push("xterm-cursor-outline");break;case"block":k.push("xterm-cursor-block");break;case"bar":k.push("xterm-cursor-bar");break;case"underline":k.push("xterm-cursor-underline")}if(y.isBold()&&k.push("xterm-bold"),y.isItalic()&&k.push("xterm-italic"),y.isDim()&&k.push("xterm-dim"),W=y.isInvisible()?l.WHITESPACE_CELL_CHAR:y.getChars()||l.WHITESPACE_CELL_CHAR,y.isUnderline()&&(k.push(`xterm-underline-${y.extended.underlineStyle}`)," "===W&&(W=" "),!y.isUnderlineColorDefault()))if(y.isUnderlineColorRGB())F.style.textDecorationColor=`rgb(${V.AttributeData.toColorRGB(y.getUnderlineColor()).join(",")})`;else{let g=y.getUnderlineColor();this._optionsService.rawOptions.drawBoldTextInBrightColors&&y.isBold()&&g<8&&(g+=8),F.style.textDecorationColor=R.ansi[g].css}y.isOverline()&&(k.push("xterm-overline")," "===W&&(W=" ")),y.isStrikethrough()&&k.push("xterm-strikethrough"),w&&(F.style.textDecoration="underline");let z=y.getFgColor(),D=y.getFgColorMode(),v=y.getBgColor(),x=y.getBgColorMode();const O=!!y.isInverse();if(O){const g=z;z=v,v=g;const e=D;D=x,x=e}let f,j,L,P=!1;switch(this._decorationService.forEachDecorationAtCell(M,e,void 0,(g=>{"top"!==g.options.layer&&P||(g.backgroundColorRGB&&(x=50331648,v=g.backgroundColorRGB.rgba>>8&16777215,f=g.backgroundColorRGB),g.foregroundColorRGB&&(D=50331648,z=g.foregroundColorRGB.rgba>>8&16777215,j=g.foregroundColorRGB),P="top"===g.options.layer)})),!P&&J&&(f=this._coreBrowserService.isFocused?R.selectionBackgroundOpaque:R.selectionInactiveBackgroundOpaque,v=f.rgba>>8&16777215,x=50331648,P=!0,R.selectionForeground&&(D=50331648,z=R.selectionForeground.rgba>>8&16777215,j=R.selectionForeground)),P&&k.push("xterm-decoration-top"),x){case 16777216:case 33554432:L=R.ansi[v],k.push(`xterm-bg-${v}`);break;case 50331648:L=d.channels.toColor(v>>16,v>>8&255,255&v),this._addStyle(F,`background-color:#${r((v>>>0).toString(16),"0",6)}`);break;default:O?(L=R.foreground,k.push(`xterm-bg-${i.INVERTED_DEFAULT_COLOR}`)):L=R.background}switch(f||y.isDim()&&(f=d.color.multiplyOpacity(L,.5)),D){case 16777216:case 33554432:y.isBold()&&z<8&&this._optionsService.rawOptions.drawBoldTextInBrightColors&&(z+=8),this._applyMinimumContrast(F,L,R.ansi[z],y,f,void 0)||k.push(`xterm-fg-${z}`);break;case 50331648:const g=d.channels.toColor(z>>16&255,z>>8&255,255&z);this._applyMinimumContrast(F,L,g,y,f,j)||this._addStyle(F,`color:#${r(z.toString(16),"0",6)}`);break;default:this._applyMinimumContrast(F,L,R.foreground,y,f,j)||O&&k.push(`xterm-fg-${i.INVERTED_DEFAULT_COLOR}`)}k.length&&(F.className=k.join(" "),k.length=0),H||Y||X?F.textContent=W:B++,G!==this.defaultSpacing&&(F.style.letterSpacing=`${G}px`),U.push(F),M=E}return F&&B&&(F.textContent=W),U}_applyMinimumContrast(g,e,I,t,C,i){if(1===this._optionsService.rawOptions.minimumContrastRatio||(0,a.treatGlyphAsBackgroundColor)(t.getCode()))return!1;const l=this._getContrastCache(t);let n;if(C||i||(n=l.getColor(e.rgba,I.rgba)),void 0===n){const g=this._optionsService.rawOptions.minimumContrastRatio/(t.isDim()?2:1);n=d.color.ensureContrastRatio(C||e,i||I,g),l.setColor((C||e).rgba,(i||I).rgba,n??null)}return!!n&&(this._addStyle(g,`color:${n.css}`),!0)}_getContrastCache(g){return g.isDim()?this._themeService.colors.halfContrastCache:this._themeService.colors.contrastCache}_addStyle(g,e){g.setAttribute("style",`${g.getAttribute("style")||""}${e};`)}_isCellInSelection(g,e){const I=this._selectionStart,t=this._selectionEnd;return!(!I||!t)&&(this._columnSelectMode?I[0]<=t[0]?g>=I[0]&&e>=I[1]&&g<t[0]&&e<=t[1]:g<I[0]&&e>=I[1]&&g>=t[0]&&e<=t[1]:e>I[1]&&e<t[1]||I[1]===t[1]&&e===I[1]&&g>=I[0]&&g<t[0]||I[1]<t[1]&&e===t[1]&&g<t[0]||I[1]<t[1]&&e===I[1]&&g>=I[0])}};function r(g,e,I){for(;g.length<I;)g=e+g;return g}e.DomRendererRowFactory=c=t([C(1,o.ICharacterJoinerService),C(2,A.IOptionsService),C(3,o.ICoreBrowserService),C(4,A.ICoreService),C(5,A.IDecorationService),C(6,o.IThemeService)],c)},2550:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WidthCache=void 0,e.WidthCache=class{constructor(g,e){this._flat=new Float32Array(256),this._font="",this._fontSize=0,this._weight="normal",this._weightBold="bold",this._measureElements=[],this._container=g.createElement("div"),this._container.classList.add("xterm-width-cache-measure-container"),this._container.setAttribute("aria-hidden","true"),this._container.style.whiteSpace="pre",this._container.style.fontKerning="none";const I=g.createElement("span");I.classList.add("xterm-char-measure-element");const t=g.createElement("span");t.classList.add("xterm-char-measure-element"),t.style.fontWeight="bold";const C=g.createElement("span");C.classList.add("xterm-char-measure-element"),C.style.fontStyle="italic";const i=g.createElement("span");i.classList.add("xterm-char-measure-element"),i.style.fontWeight="bold",i.style.fontStyle="italic",this._measureElements=[I,t,C,i],this._container.appendChild(I),this._container.appendChild(t),this._container.appendChild(C),this._container.appendChild(i),e.appendChild(this._container),this.clear()}dispose(){this._container.remove(),this._measureElements.length=0,this._holey=void 0}clear(){this._flat.fill(-9999),this._holey=new Map}setFont(g,e,I,t){g===this._font&&e===this._fontSize&&I===this._weight&&t===this._weightBold||(this._font=g,this._fontSize=e,this._weight=I,this._weightBold=t,this._container.style.fontFamily=this._font,this._container.style.fontSize=`${this._fontSize}px`,this._measureElements[0].style.fontWeight=`${I}`,this._measureElements[1].style.fontWeight=`${t}`,this._measureElements[2].style.fontWeight=`${I}`,this._measureElements[3].style.fontWeight=`${t}`,this.clear())}get(g,e,I){let t=0;if(!e&&!I&&1===g.length&&(t=g.charCodeAt(0))<256){if(-9999!==this._flat[t])return this._flat[t];const e=this._measure(g,0);return e>0&&(this._flat[t]=e),e}let C=g;e&&(C+="B"),I&&(C+="I");let i=this._holey.get(C);if(void 0===i){let t=0;e&&(t|=1),I&&(t|=2),i=this._measure(g,t),i>0&&this._holey.set(C,i)}return i}_measure(g,e){const I=this._measureElements[e];return I.textContent=g.repeat(32),I.offsetWidth/32}}},2223:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TEXT_BASELINE=e.DIM_OPACITY=e.INVERTED_DEFAULT_COLOR=void 0;const t=I(6114);e.INVERTED_DEFAULT_COLOR=257,e.DIM_OPACITY=.5,e.TEXT_BASELINE=t.isFirefox||t.isLegacyEdge?"bottom":"ideographic"},6171:(g,e)=>{function I(g){return 57508<=g&&g<=57558}function t(g){return g>=128512&&g<=128591||g>=127744&&g<=128511||g>=128640&&g<=128767||g>=9728&&g<=9983||g>=9984&&g<=10175||g>=65024&&g<=65039||g>=129280&&g<=129535||g>=127462&&g<=127487}Object.defineProperty(e,"__esModule",{value:!0}),e.computeNextVariantOffset=e.createRenderDimensions=e.treatGlyphAsBackgroundColor=e.allowRescaling=e.isEmoji=e.isRestrictedPowerlineGlyph=e.isPowerlineGlyph=e.throwIfFalsy=void 0,e.throwIfFalsy=function(g){if(!g)throw new Error("value must not be falsy");return g},e.isPowerlineGlyph=I,e.isRestrictedPowerlineGlyph=function(g){return 57520<=g&&g<=57527},e.isEmoji=t,e.allowRescaling=function(g,e,C,i){return 1===e&&C>Math.ceil(1.5*i)&&void 0!==g&&g>255&&!t(g)&&!I(g)&&!(57344<=(l=g)&&l<=63743);var l},e.treatGlyphAsBackgroundColor=function(g){return I(g)||9472<=(e=g)&&e<=9631;var e},e.createRenderDimensions=function(){return{css:{canvas:{width:0,height:0},cell:{width:0,height:0}},device:{canvas:{width:0,height:0},cell:{width:0,height:0},char:{width:0,height:0,left:0,top:0}}}},e.computeNextVariantOffset=function(g,e,I=0){return(g-(2*Math.round(e)-I))%(2*Math.round(e))}},6052:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createSelectionRenderModel=void 0;class I{constructor(){this.clear()}clear(){this.hasSelection=!1,this.columnSelectMode=!1,this.viewportStartRow=0,this.viewportEndRow=0,this.viewportCappedStartRow=0,this.viewportCappedEndRow=0,this.startCol=0,this.endCol=0,this.selectionStart=void 0,this.selectionEnd=void 0}update(g,e,I,t=!1){if(this.selectionStart=e,this.selectionEnd=I,!e||!I||e[0]===I[0]&&e[1]===I[1])return void this.clear();const C=g.buffers.active.ydisp,i=e[1]-C,l=I[1]-C,n=Math.max(i,0),A=Math.min(l,g.rows-1);n>=g.rows||A<0?this.clear():(this.hasSelection=!0,this.columnSelectMode=t,this.viewportStartRow=i,this.viewportEndRow=l,this.viewportCappedStartRow=n,this.viewportCappedEndRow=A,this.startCol=e[0],this.endCol=I[0])}isCellSelected(g,e,I){return!!this.hasSelection&&(I-=g.buffer.active.viewportY,this.columnSelectMode?this.startCol<=this.endCol?e>=this.startCol&&I>=this.viewportCappedStartRow&&e<this.endCol&&I<=this.viewportCappedEndRow:e<this.startCol&&I>=this.viewportCappedStartRow&&e>=this.endCol&&I<=this.viewportCappedEndRow:I>this.viewportStartRow&&I<this.viewportEndRow||this.viewportStartRow===this.viewportEndRow&&I===this.viewportStartRow&&e>=this.startCol&&e<this.endCol||this.viewportStartRow<this.viewportEndRow&&I===this.viewportEndRow&&e<this.endCol||this.viewportStartRow<this.viewportEndRow&&I===this.viewportStartRow&&e>=this.startCol)}}e.createSelectionRenderModel=function(){return new I}},456:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SelectionModel=void 0,e.SelectionModel=class{constructor(g){this._bufferService=g,this.isSelectAllActive=!1,this.selectionStartLength=0}clearSelection(){this.selectionStart=void 0,this.selectionEnd=void 0,this.isSelectAllActive=!1,this.selectionStartLength=0}get finalSelectionStart(){return this.isSelectAllActive?[0,0]:this.selectionEnd&&this.selectionStart&&this.areSelectionValuesReversed()?this.selectionEnd:this.selectionStart}get finalSelectionEnd(){if(this.isSelectAllActive)return[this._bufferService.cols,this._bufferService.buffer.ybase+this._bufferService.rows-1];if(this.selectionStart){if(!this.selectionEnd||this.areSelectionValuesReversed()){const g=this.selectionStart[0]+this.selectionStartLength;return g>this._bufferService.cols?g%this._bufferService.cols==0?[this._bufferService.cols,this.selectionStart[1]+Math.floor(g/this._bufferService.cols)-1]:[g%this._bufferService.cols,this.selectionStart[1]+Math.floor(g/this._bufferService.cols)]:[g,this.selectionStart[1]]}if(this.selectionStartLength&&this.selectionEnd[1]===this.selectionStart[1]){const g=this.selectionStart[0]+this.selectionStartLength;return g>this._bufferService.cols?[g%this._bufferService.cols,this.selectionStart[1]+Math.floor(g/this._bufferService.cols)]:[Math.max(g,this.selectionEnd[0]),this.selectionEnd[1]]}return this.selectionEnd}}areSelectionValuesReversed(){const g=this.selectionStart,e=this.selectionEnd;return!(!g||!e)&&(g[1]>e[1]||g[1]===e[1]&&g[0]>e[0])}handleTrim(g){return this.selectionStart&&(this.selectionStart[1]-=g),this.selectionEnd&&(this.selectionEnd[1]-=g),this.selectionEnd&&this.selectionEnd[1]<0?(this.clearSelection(),!0):(this.selectionStart&&this.selectionStart[1]<0&&(this.selectionStart[1]=0),!1)}}},428:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.CharSizeService=void 0;const i=I(2585),l=I(8460),n=I(844);let A=e.CharSizeService=class extends n.Disposable{get hasValidSize(){return this.width>0&&this.height>0}constructor(g,e,I){super(),this._optionsService=I,this.width=0,this.height=0,this._onCharSizeChange=this.register(new l.EventEmitter),this.onCharSizeChange=this._onCharSizeChange.event;try{this._measureStrategy=this.register(new s(this._optionsService))}catch{this._measureStrategy=this.register(new o(g,e,this._optionsService))}this.register(this._optionsService.onMultipleOptionChange(["fontFamily","fontSize"],(()=>this.measure())))}measure(){const g=this._measureStrategy.measure();g.width===this.width&&g.height===this.height||(this.width=g.width,this.height=g.height,this._onCharSizeChange.fire())}};e.CharSizeService=A=t([C(2,i.IOptionsService)],A);class d extends n.Disposable{constructor(){super(...arguments),this._result={width:0,height:0}}_validateAndSet(g,e){void 0!==g&&g>0&&void 0!==e&&e>0&&(this._result.width=g,this._result.height=e)}}class o extends d{constructor(g,e,I){super(),this._document=g,this._parentElement=e,this._optionsService=I,this._measureElement=this._document.createElement("span"),this._measureElement.classList.add("xterm-char-measure-element"),this._measureElement.textContent="W".repeat(32),this._measureElement.setAttribute("aria-hidden","true"),this._measureElement.style.whiteSpace="pre",this._measureElement.style.fontKerning="none",this._parentElement.appendChild(this._measureElement)}measure(){return this._measureElement.style.fontFamily=this._optionsService.rawOptions.fontFamily,this._measureElement.style.fontSize=`${this._optionsService.rawOptions.fontSize}px`,this._validateAndSet(Number(this._measureElement.offsetWidth)/32,Number(this._measureElement.offsetHeight)),this._result}}class s extends d{constructor(g){super(),this._optionsService=g,this._canvas=new OffscreenCanvas(100,100),this._ctx=this._canvas.getContext("2d");const e=this._ctx.measureText("W");if(!("width"in e&&"fontBoundingBoxAscent"in e&&"fontBoundingBoxDescent"in e))throw new Error("Required font metrics not supported")}measure(){this._ctx.font=`${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;const g=this._ctx.measureText("W");return this._validateAndSet(g.width,g.fontBoundingBoxAscent+g.fontBoundingBoxDescent),this._result}}},4269:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.CharacterJoinerService=e.JoinedCellData=void 0;const i=I(3734),l=I(643),n=I(511),A=I(2585);class d extends i.AttributeData{constructor(g,e,I){super(),this.content=0,this.combinedData="",this.fg=g.fg,this.bg=g.bg,this.combinedData=e,this._width=I}isCombined(){return 2097152}getWidth(){return this._width}getChars(){return this.combinedData}getCode(){return 2097151}setFromCharData(g){throw new Error("not implemented")}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}e.JoinedCellData=d;let o=e.CharacterJoinerService=class g{constructor(g){this._bufferService=g,this._characterJoiners=[],this._nextCharacterJoinerId=0,this._workCell=new n.CellData}register(g){const e={id:this._nextCharacterJoinerId++,handler:g};return this._characterJoiners.push(e),e.id}deregister(g){for(let e=0;e<this._characterJoiners.length;e++)if(this._characterJoiners[e].id===g)return this._characterJoiners.splice(e,1),!0;return!1}getJoinedCharacters(g){if(0===this._characterJoiners.length)return[];const e=this._bufferService.buffer.lines.get(g);if(!e||0===e.length)return[];const I=[],t=e.translateToString(!0);let C=0,i=0,n=0,A=e.getFg(0),d=e.getBg(0);for(let g=0;g<e.getTrimmedLength();g++)if(e.loadCell(g,this._workCell),0!==this._workCell.getWidth()){if(this._workCell.fg!==A||this._workCell.bg!==d){if(g-C>1){const g=this._getJoinedRanges(t,n,i,e,C);for(let e=0;e<g.length;e++)I.push(g[e])}C=g,n=i,A=this._workCell.fg,d=this._workCell.bg}i+=this._workCell.getChars().length||l.WHITESPACE_CELL_CHAR.length}if(this._bufferService.cols-C>1){const g=this._getJoinedRanges(t,n,i,e,C);for(let e=0;e<g.length;e++)I.push(g[e])}return I}_getJoinedRanges(e,I,t,C,i){const l=e.substring(I,t);let n=[];try{n=this._characterJoiners[0].handler(l)}catch(g){}for(let e=1;e<this._characterJoiners.length;e++)try{const I=this._characterJoiners[e].handler(l);for(let e=0;e<I.length;e++)g._mergeRanges(n,I[e])}catch(g){}return this._stringRangesToCellRanges(n,C,i),n}_stringRangesToCellRanges(g,e,I){let t=0,C=!1,i=0,n=g[t];if(n){for(let A=I;A<this._bufferService.cols;A++){const I=e.getWidth(A),d=e.getString(A).length||l.WHITESPACE_CELL_CHAR.length;if(0!==I){if(!C&&n[0]<=i&&(n[0]=A,C=!0),n[1]<=i){if(n[1]=A,n=g[++t],!n)break;n[0]<=i?(n[0]=A,C=!0):C=!1}i+=d}}n&&(n[1]=this._bufferService.cols)}}static _mergeRanges(g,e){let I=!1;for(let t=0;t<g.length;t++){const C=g[t];if(I){if(e[1]<=C[0])return g[t-1][1]=e[1],g;if(e[1]<=C[1])return g[t-1][1]=Math.max(e[1],C[1]),g.splice(t,1),g;g.splice(t,1),t--}else{if(e[1]<=C[0])return g.splice(t,0,e),g;if(e[1]<=C[1])return C[0]=Math.min(e[0],C[0]),g;e[0]<C[1]&&(C[0]=Math.min(e[0],C[0]),I=!0)}}return I?g[g.length-1][1]=e[1]:g.push(e),g}};e.CharacterJoinerService=o=t([C(0,A.IBufferService)],o)},5114:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CoreBrowserService=void 0;const t=I(844),C=I(8460),i=I(3656);class l extends t.Disposable{constructor(g,e,I){super(),this._textarea=g,this._window=e,this.mainDocument=I,this._isFocused=!1,this._cachedIsFocused=void 0,this._screenDprMonitor=new n(this._window),this._onDprChange=this.register(new C.EventEmitter),this.onDprChange=this._onDprChange.event,this._onWindowChange=this.register(new C.EventEmitter),this.onWindowChange=this._onWindowChange.event,this.register(this.onWindowChange((g=>this._screenDprMonitor.setWindow(g)))),this.register((0,C.forwardEvent)(this._screenDprMonitor.onDprChange,this._onDprChange)),this._textarea.addEventListener("focus",(()=>this._isFocused=!0)),this._textarea.addEventListener("blur",(()=>this._isFocused=!1))}get window(){return this._window}set window(g){this._window!==g&&(this._window=g,this._onWindowChange.fire(this._window))}get dpr(){return this.window.devicePixelRatio}get isFocused(){return void 0===this._cachedIsFocused&&(this._cachedIsFocused=this._isFocused&&this._textarea.ownerDocument.hasFocus(),queueMicrotask((()=>this._cachedIsFocused=void 0))),this._cachedIsFocused}}e.CoreBrowserService=l;class n extends t.Disposable{constructor(g){super(),this._parentWindow=g,this._windowResizeListener=this.register(new t.MutableDisposable),this._onDprChange=this.register(new C.EventEmitter),this.onDprChange=this._onDprChange.event,this._outerListener=()=>this._setDprAndFireIfDiffers(),this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this._updateDpr(),this._setWindowResizeListener(),this.register((0,t.toDisposable)((()=>this.clearListener())))}setWindow(g){this._parentWindow=g,this._setWindowResizeListener(),this._setDprAndFireIfDiffers()}_setWindowResizeListener(){this._windowResizeListener.value=(0,i.addDisposableDomListener)(this._parentWindow,"resize",(()=>this._setDprAndFireIfDiffers()))}_setDprAndFireIfDiffers(){this._parentWindow.devicePixelRatio!==this._currentDevicePixelRatio&&this._onDprChange.fire(this._parentWindow.devicePixelRatio),this._updateDpr()}_updateDpr(){var g;this._outerListener&&(null==(g=this._resolutionMediaMatchList)||g.removeListener(this._outerListener),this._currentDevicePixelRatio=this._parentWindow.devicePixelRatio,this._resolutionMediaMatchList=this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`),this._resolutionMediaMatchList.addListener(this._outerListener))}clearListener(){this._resolutionMediaMatchList&&this._outerListener&&(this._resolutionMediaMatchList.removeListener(this._outerListener),this._resolutionMediaMatchList=void 0,this._outerListener=void 0)}}},779:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LinkProviderService=void 0;const t=I(844);class C extends t.Disposable{constructor(){super(),this.linkProviders=[],this.register((0,t.toDisposable)((()=>this.linkProviders.length=0)))}registerLinkProvider(g){return this.linkProviders.push(g),{dispose:()=>{const e=this.linkProviders.indexOf(g);-1!==e&&this.linkProviders.splice(e,1)}}}}e.LinkProviderService=C},8934:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.MouseService=void 0;const i=I(4725),l=I(9806);let n=e.MouseService=class{constructor(g,e){this._renderService=g,this._charSizeService=e}getCoords(g,e,I,t,C){return(0,l.getCoords)(window,g,e,I,t,this._charSizeService.hasValidSize,this._renderService.dimensions.css.cell.width,this._renderService.dimensions.css.cell.height,C)}getMouseReportCoords(g,e){const I=(0,l.getCoordsRelativeToElement)(window,g,e);if(this._charSizeService.hasValidSize)return I[0]=Math.min(Math.max(I[0],0),this._renderService.dimensions.css.canvas.width-1),I[1]=Math.min(Math.max(I[1],0),this._renderService.dimensions.css.canvas.height-1),{col:Math.floor(I[0]/this._renderService.dimensions.css.cell.width),row:Math.floor(I[1]/this._renderService.dimensions.css.cell.height),x:Math.floor(I[0]),y:Math.floor(I[1])}}};e.MouseService=n=t([C(0,i.IRenderService),C(1,i.ICharSizeService)],n)},3230:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.RenderService=void 0;const i=I(6193),l=I(4725),n=I(8460),A=I(844),d=I(7226),o=I(2585);let s=e.RenderService=class extends A.Disposable{get dimensions(){return this._renderer.value.dimensions}constructor(g,e,I,t,C,l,o,s){super(),this._rowCount=g,this._charSizeService=t,this._renderer=this.register(new A.MutableDisposable),this._pausedResizeTask=new d.DebouncedIdleTask,this._observerDisposable=this.register(new A.MutableDisposable),this._isPaused=!1,this._needsFullRefresh=!1,this._isNextRenderRedrawOnly=!0,this._needsSelectionRefresh=!1,this._canvasWidth=0,this._canvasHeight=0,this._selectionState={start:void 0,end:void 0,columnSelectMode:!1},this._onDimensionsChange=this.register(new n.EventEmitter),this.onDimensionsChange=this._onDimensionsChange.event,this._onRenderedViewportChange=this.register(new n.EventEmitter),this.onRenderedViewportChange=this._onRenderedViewportChange.event,this._onRender=this.register(new n.EventEmitter),this.onRender=this._onRender.event,this._onRefreshRequest=this.register(new n.EventEmitter),this.onRefreshRequest=this._onRefreshRequest.event,this._renderDebouncer=new i.RenderDebouncer(((g,e)=>this._renderRows(g,e)),o),this.register(this._renderDebouncer),this.register(o.onDprChange((()=>this.handleDevicePixelRatioChange()))),this.register(l.onResize((()=>this._fullRefresh()))),this.register(l.buffers.onBufferActivate((()=>{var g;return null==(g=this._renderer.value)?void 0:g.clear()}))),this.register(I.onOptionChange((()=>this._handleOptionsChanged()))),this.register(this._charSizeService.onCharSizeChange((()=>this.handleCharSizeChanged()))),this.register(C.onDecorationRegistered((()=>this._fullRefresh()))),this.register(C.onDecorationRemoved((()=>this._fullRefresh()))),this.register(I.onMultipleOptionChange(["customGlyphs","drawBoldTextInBrightColors","letterSpacing","lineHeight","fontFamily","fontSize","fontWeight","fontWeightBold","minimumContrastRatio","rescaleOverlappingGlyphs"],(()=>{this.clear(),this.handleResize(l.cols,l.rows),this._fullRefresh()}))),this.register(I.onMultipleOptionChange(["cursorBlink","cursorStyle"],(()=>this.refreshRows(l.buffer.y,l.buffer.y,!0)))),this.register(s.onChangeColors((()=>this._fullRefresh()))),this._registerIntersectionObserver(o.window,e),this.register(o.onWindowChange((g=>this._registerIntersectionObserver(g,e))))}_registerIntersectionObserver(g,e){if("IntersectionObserver"in g){const I=new g.IntersectionObserver((g=>this._handleIntersectionChange(g[g.length-1])),{threshold:0});I.observe(e),this._observerDisposable.value=(0,A.toDisposable)((()=>I.disconnect()))}}_handleIntersectionChange(g){this._isPaused=void 0===g.isIntersecting?0===g.intersectionRatio:!g.isIntersecting,this._isPaused||this._charSizeService.hasValidSize||this._charSizeService.measure(),!this._isPaused&&this._needsFullRefresh&&(this._pausedResizeTask.flush(),this.refreshRows(0,this._rowCount-1),this._needsFullRefresh=!1)}refreshRows(g,e,I=!1){this._isPaused?this._needsFullRefresh=!0:(I||(this._isNextRenderRedrawOnly=!1),this._renderDebouncer.refresh(g,e,this._rowCount))}_renderRows(g,e){this._renderer.value&&(g=Math.min(g,this._rowCount-1),e=Math.min(e,this._rowCount-1),this._renderer.value.renderRows(g,e),this._needsSelectionRefresh&&(this._renderer.value.handleSelectionChanged(this._selectionState.start,this._selectionState.end,this._selectionState.columnSelectMode),this._needsSelectionRefresh=!1),this._isNextRenderRedrawOnly||this._onRenderedViewportChange.fire({start:g,end:e}),this._onRender.fire({start:g,end:e}),this._isNextRenderRedrawOnly=!0)}resize(g,e){this._rowCount=e,this._fireOnCanvasResize()}_handleOptionsChanged(){this._renderer.value&&(this.refreshRows(0,this._rowCount-1),this._fireOnCanvasResize())}_fireOnCanvasResize(){this._renderer.value&&(this._renderer.value.dimensions.css.canvas.width===this._canvasWidth&&this._renderer.value.dimensions.css.canvas.height===this._canvasHeight||this._onDimensionsChange.fire(this._renderer.value.dimensions))}hasRenderer(){return!!this._renderer.value}setRenderer(g){this._renderer.value=g,this._renderer.value&&(this._renderer.value.onRequestRedraw((g=>this.refreshRows(g.start,g.end,!0))),this._needsSelectionRefresh=!0,this._fullRefresh())}addRefreshCallback(g){return this._renderDebouncer.addRefreshCallback(g)}_fullRefresh(){this._isPaused?this._needsFullRefresh=!0:this.refreshRows(0,this._rowCount-1)}clearTextureAtlas(){var g,e;this._renderer.value&&(null==(e=(g=this._renderer.value).clearTextureAtlas)||e.call(g),this._fullRefresh())}handleDevicePixelRatioChange(){this._charSizeService.measure(),this._renderer.value&&(this._renderer.value.handleDevicePixelRatioChange(),this.refreshRows(0,this._rowCount-1))}handleResize(g,e){this._renderer.value&&(this._isPaused?this._pausedResizeTask.set((()=>{var I;return null==(I=this._renderer.value)?void 0:I.handleResize(g,e)})):this._renderer.value.handleResize(g,e),this._fullRefresh())}handleCharSizeChanged(){var g;null==(g=this._renderer.value)||g.handleCharSizeChanged()}handleBlur(){var g;null==(g=this._renderer.value)||g.handleBlur()}handleFocus(){var g;null==(g=this._renderer.value)||g.handleFocus()}handleSelectionChanged(g,e,I){var t;this._selectionState.start=g,this._selectionState.end=e,this._selectionState.columnSelectMode=I,null==(t=this._renderer.value)||t.handleSelectionChanged(g,e,I)}handleCursorMove(){var g;null==(g=this._renderer.value)||g.handleCursorMove()}clear(){var g;null==(g=this._renderer.value)||g.clear()}};e.RenderService=s=t([C(2,o.IOptionsService),C(3,l.ICharSizeService),C(4,o.IDecorationService),C(5,o.IBufferService),C(6,l.ICoreBrowserService),C(7,l.IThemeService)],s)},9312:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.SelectionService=void 0;const i=I(9806),l=I(9504),n=I(456),A=I(4725),d=I(8460),o=I(844),s=I(6114),a=I(4841),V=I(511),c=I(2585),r=new RegExp(" ","g");let h=e.SelectionService=class extends o.Disposable{constructor(g,e,I,t,C,i,l,A,s){super(),this._element=g,this._screenElement=e,this._linkifier=I,this._bufferService=t,this._coreService=C,this._mouseService=i,this._optionsService=l,this._renderService=A,this._coreBrowserService=s,this._dragScrollAmount=0,this._enabled=!0,this._workCell=new V.CellData,this._mouseDownTimeStamp=0,this._oldHasSelection=!1,this._oldSelectionStart=void 0,this._oldSelectionEnd=void 0,this._onLinuxMouseSelection=this.register(new d.EventEmitter),this.onLinuxMouseSelection=this._onLinuxMouseSelection.event,this._onRedrawRequest=this.register(new d.EventEmitter),this.onRequestRedraw=this._onRedrawRequest.event,this._onSelectionChange=this.register(new d.EventEmitter),this.onSelectionChange=this._onSelectionChange.event,this._onRequestScrollLines=this.register(new d.EventEmitter),this.onRequestScrollLines=this._onRequestScrollLines.event,this._mouseMoveListener=g=>this._handleMouseMove(g),this._mouseUpListener=g=>this._handleMouseUp(g),this._coreService.onUserInput((()=>{this.hasSelection&&this.clearSelection()})),this._trimListener=this._bufferService.buffer.lines.onTrim((g=>this._handleTrim(g))),this.register(this._bufferService.buffers.onBufferActivate((g=>this._handleBufferActivate(g)))),this.enable(),this._model=new n.SelectionModel(this._bufferService),this._activeSelectionMode=0,this.register((0,o.toDisposable)((()=>{this._removeMouseDownListeners()})))}reset(){this.clearSelection()}disable(){this.clearSelection(),this._enabled=!1}enable(){this._enabled=!0}get selectionStart(){return this._model.finalSelectionStart}get selectionEnd(){return this._model.finalSelectionEnd}get hasSelection(){const g=this._model.finalSelectionStart,e=this._model.finalSelectionEnd;return!(!g||!e||g[0]===e[0]&&g[1]===e[1])}get selectionText(){const g=this._model.finalSelectionStart,e=this._model.finalSelectionEnd;if(!g||!e)return"";const I=this._bufferService.buffer,t=[];if(3===this._activeSelectionMode){if(g[0]===e[0])return"";const C=g[0]<e[0]?g[0]:e[0],i=g[0]<e[0]?e[0]:g[0];for(let l=g[1];l<=e[1];l++){const g=I.translateBufferLineToString(l,!0,C,i);t.push(g)}}else{const C=g[1]===e[1]?e[0]:void 0;t.push(I.translateBufferLineToString(g[1],!0,g[0],C));for(let C=g[1]+1;C<=e[1]-1;C++){const g=I.lines.get(C),e=I.translateBufferLineToString(C,!0);null!=g&&g.isWrapped?t[t.length-1]+=e:t.push(e)}if(g[1]!==e[1]){const g=I.lines.get(e[1]),C=I.translateBufferLineToString(e[1],!0,0,e[0]);g&&g.isWrapped?t[t.length-1]+=C:t.push(C)}}return t.map((g=>g.replace(r," "))).join(s.isWindows?"\r\n":"\n")}clearSelection(){this._model.clearSelection(),this._removeMouseDownListeners(),this.refresh(),this._onSelectionChange.fire()}refresh(g){this._refreshAnimationFrame||(this._refreshAnimationFrame=this._coreBrowserService.window.requestAnimationFrame((()=>this._refresh()))),s.isLinux&&g&&this.selectionText.length&&this._onLinuxMouseSelection.fire(this.selectionText)}_refresh(){this._refreshAnimationFrame=void 0,this._onRedrawRequest.fire({start:this._model.finalSelectionStart,end:this._model.finalSelectionEnd,columnSelectMode:3===this._activeSelectionMode})}_isClickInSelection(g){const e=this._getMouseBufferCoords(g),I=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;return!!(I&&t&&e)&&this._areCoordsInSelection(e,I,t)}isCellInSelection(g,e){const I=this._model.finalSelectionStart,t=this._model.finalSelectionEnd;return!(!I||!t)&&this._areCoordsInSelection([g,e],I,t)}_areCoordsInSelection(g,e,I){return g[1]>e[1]&&g[1]<I[1]||e[1]===I[1]&&g[1]===e[1]&&g[0]>=e[0]&&g[0]<I[0]||e[1]<I[1]&&g[1]===I[1]&&g[0]<I[0]||e[1]<I[1]&&g[1]===e[1]&&g[0]>=e[0]}_selectWordAtCursor(g,e){var I,t;const C=null==(t=null==(I=this._linkifier.currentLink)?void 0:I.link)?void 0:t.range;if(C)return this._model.selectionStart=[C.start.x-1,C.start.y-1],this._model.selectionStartLength=(0,a.getRangeLength)(C,this._bufferService.cols),this._model.selectionEnd=void 0,!0;const i=this._getMouseBufferCoords(g);return!!i&&(this._selectWordAt(i,e),this._model.selectionEnd=void 0,!0)}selectAll(){this._model.isSelectAllActive=!0,this.refresh(),this._onSelectionChange.fire()}selectLines(g,e){this._model.clearSelection(),g=Math.max(g,0),e=Math.min(e,this._bufferService.buffer.lines.length-1),this._model.selectionStart=[0,g],this._model.selectionEnd=[this._bufferService.cols,e],this.refresh(),this._onSelectionChange.fire()}_handleTrim(g){this._model.handleTrim(g)&&this.refresh()}_getMouseBufferCoords(g){const e=this._mouseService.getCoords(g,this._screenElement,this._bufferService.cols,this._bufferService.rows,!0);if(e)return e[0]--,e[1]--,e[1]+=this._bufferService.buffer.ydisp,e}_getMouseEventScrollAmount(g){let e=(0,i.getCoordsRelativeToElement)(this._coreBrowserService.window,g,this._screenElement)[1];const I=this._renderService.dimensions.css.canvas.height;return e>=0&&e<=I?0:(e>I&&(e-=I),e=Math.min(Math.max(e,-50),50),e/=50,e/Math.abs(e)+Math.round(14*e))}shouldForceSelection(g){return s.isMac?g.altKey&&this._optionsService.rawOptions.macOptionClickForcesSelection:g.shiftKey}handleMouseDown(g){if(this._mouseDownTimeStamp=g.timeStamp,(2!==g.button||!this.hasSelection)&&0===g.button){if(!this._enabled){if(!this.shouldForceSelection(g))return;g.stopPropagation()}g.preventDefault(),this._dragScrollAmount=0,this._enabled&&g.shiftKey?this._handleIncrementalClick(g):1===g.detail?this._handleSingleClick(g):2===g.detail?this._handleDoubleClick(g):3===g.detail&&this._handleTripleClick(g),this._addMouseDownListeners(),this.refresh(!0)}}_addMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.addEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.addEventListener("mouseup",this._mouseUpListener)),this._dragScrollIntervalTimer=this._coreBrowserService.window.setInterval((()=>this._dragScroll()),50)}_removeMouseDownListeners(){this._screenElement.ownerDocument&&(this._screenElement.ownerDocument.removeEventListener("mousemove",this._mouseMoveListener),this._screenElement.ownerDocument.removeEventListener("mouseup",this._mouseUpListener)),this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer),this._dragScrollIntervalTimer=void 0}_handleIncrementalClick(g){this._model.selectionStart&&(this._model.selectionEnd=this._getMouseBufferCoords(g))}_handleSingleClick(g){if(this._model.selectionStartLength=0,this._model.isSelectAllActive=!1,this._activeSelectionMode=this.shouldColumnSelect(g)?3:0,this._model.selectionStart=this._getMouseBufferCoords(g),!this._model.selectionStart)return;this._model.selectionEnd=void 0;const e=this._bufferService.buffer.lines.get(this._model.selectionStart[1]);e&&e.length!==this._model.selectionStart[0]&&0===e.hasWidth(this._model.selectionStart[0])&&this._model.selectionStart[0]++}_handleDoubleClick(g){this._selectWordAtCursor(g,!0)&&(this._activeSelectionMode=1)}_handleTripleClick(g){const e=this._getMouseBufferCoords(g);e&&(this._activeSelectionMode=2,this._selectLineAt(e[1]))}shouldColumnSelect(g){return g.altKey&&!(s.isMac&&this._optionsService.rawOptions.macOptionClickForcesSelection)}_handleMouseMove(g){if(g.stopImmediatePropagation(),!this._model.selectionStart)return;const e=this._model.selectionEnd?[this._model.selectionEnd[0],this._model.selectionEnd[1]]:null;if(this._model.selectionEnd=this._getMouseBufferCoords(g),!this._model.selectionEnd)return void this.refresh(!0);2===this._activeSelectionMode?this._model.selectionEnd[1]<this._model.selectionStart[1]?this._model.selectionEnd[0]=0:this._model.selectionEnd[0]=this._bufferService.cols:1===this._activeSelectionMode&&this._selectToWordAt(this._model.selectionEnd),this._dragScrollAmount=this._getMouseEventScrollAmount(g),3!==this._activeSelectionMode&&(this._dragScrollAmount>0?this._model.selectionEnd[0]=this._bufferService.cols:this._dragScrollAmount<0&&(this._model.selectionEnd[0]=0));const I=this._bufferService.buffer;if(this._model.selectionEnd[1]<I.lines.length){const g=I.lines.get(this._model.selectionEnd[1]);g&&0===g.hasWidth(this._model.selectionEnd[0])&&this._model.selectionEnd[0]<this._bufferService.cols&&this._model.selectionEnd[0]++}e&&e[0]===this._model.selectionEnd[0]&&e[1]===this._model.selectionEnd[1]||this.refresh(!0)}_dragScroll(){if(this._model.selectionEnd&&this._model.selectionStart&&this._dragScrollAmount){this._onRequestScrollLines.fire({amount:this._dragScrollAmount,suppressScrollEvent:!1});const g=this._bufferService.buffer;this._dragScrollAmount>0?(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=this._bufferService.cols),this._model.selectionEnd[1]=Math.min(g.ydisp+this._bufferService.rows,g.lines.length-1)):(3!==this._activeSelectionMode&&(this._model.selectionEnd[0]=0),this._model.selectionEnd[1]=g.ydisp),this.refresh()}}_handleMouseUp(g){const e=g.timeStamp-this._mouseDownTimeStamp;if(this._removeMouseDownListeners(),this.selectionText.length<=1&&e<500&&g.altKey&&this._optionsService.rawOptions.altClickMovesCursor){if(this._bufferService.buffer.ybase===this._bufferService.buffer.ydisp){const e=this._mouseService.getCoords(g,this._element,this._bufferService.cols,this._bufferService.rows,!1);if(e&&void 0!==e[0]&&void 0!==e[1]){const g=(0,l.moveToCellSequence)(e[0]-1,e[1]-1,this._bufferService,this._coreService.decPrivateModes.applicationCursorKeys);this._coreService.triggerDataEvent(g,!0)}}}else this._fireEventIfSelectionChanged()}_fireEventIfSelectionChanged(){const g=this._model.finalSelectionStart,e=this._model.finalSelectionEnd,I=!(!g||!e||g[0]===e[0]&&g[1]===e[1]);I?g&&e&&(this._oldSelectionStart&&this._oldSelectionEnd&&g[0]===this._oldSelectionStart[0]&&g[1]===this._oldSelectionStart[1]&&e[0]===this._oldSelectionEnd[0]&&e[1]===this._oldSelectionEnd[1]||this._fireOnSelectionChange(g,e,I)):this._oldHasSelection&&this._fireOnSelectionChange(g,e,I)}_fireOnSelectionChange(g,e,I){this._oldSelectionStart=g,this._oldSelectionEnd=e,this._oldHasSelection=I,this._onSelectionChange.fire()}_handleBufferActivate(g){this.clearSelection(),this._trimListener.dispose(),this._trimListener=g.activeBuffer.lines.onTrim((g=>this._handleTrim(g)))}_convertViewportColToCharacterIndex(g,e){let I=e;for(let t=0;e>=t;t++){const C=g.loadCell(t,this._workCell).getChars().length;0===this._workCell.getWidth()?I--:C>1&&e!==t&&(I+=C-1)}return I}setSelection(g,e,I){this._model.clearSelection(),this._removeMouseDownListeners(),this._model.selectionStart=[g,e],this._model.selectionStartLength=I,this.refresh(),this._fireEventIfSelectionChanged()}rightClickSelect(g){this._isClickInSelection(g)||(this._selectWordAtCursor(g,!1)&&this.refresh(!0),this._fireEventIfSelectionChanged())}_getWordAt(g,e,I=!0,t=!0){if(g[0]>=this._bufferService.cols)return;const C=this._bufferService.buffer,i=C.lines.get(g[1]);if(!i)return;const l=C.translateBufferLineToString(g[1],!1);let n=this._convertViewportColToCharacterIndex(i,g[0]),A=n;const d=g[0]-n;let o=0,s=0,a=0,V=0;if(" "===l.charAt(n)){for(;n>0&&" "===l.charAt(n-1);)n--;for(;A<l.length&&" "===l.charAt(A+1);)A++}else{let e=g[0],I=g[0];0===i.getWidth(e)&&(o++,e--),2===i.getWidth(I)&&(s++,I++);const t=i.getString(I).length;for(t>1&&(V+=t-1,A+=t-1);e>0&&n>0&&!this._isCharWordSeparator(i.loadCell(e-1,this._workCell));){i.loadCell(e-1,this._workCell);const g=this._workCell.getChars().length;0===this._workCell.getWidth()?(o++,e--):g>1&&(a+=g-1,n-=g-1),n--,e--}for(;I<i.length&&A+1<l.length&&!this._isCharWordSeparator(i.loadCell(I+1,this._workCell));){i.loadCell(I+1,this._workCell);const g=this._workCell.getChars().length;2===this._workCell.getWidth()?(s++,I++):g>1&&(V+=g-1,A+=g-1),A++,I++}}A++;let c=n+d-o+a,r=Math.min(this._bufferService.cols,A-n+o+s-a-V);if(e||""!==l.slice(n,A).trim()){if(I&&0===c&&32!==i.getCodePoint(0)){const e=C.lines.get(g[1]-1);if(e&&i.isWrapped&&32!==e.getCodePoint(this._bufferService.cols-1)){const e=this._getWordAt([this._bufferService.cols-1,g[1]-1],!1,!0,!1);if(e){const g=this._bufferService.cols-e.start;c-=g,r+=g}}}if(t&&c+r===this._bufferService.cols&&32!==i.getCodePoint(this._bufferService.cols-1)){const e=C.lines.get(g[1]+1);if(null!=e&&e.isWrapped&&32!==e.getCodePoint(0)){const e=this._getWordAt([0,g[1]+1],!1,!1,!0);e&&(r+=e.length)}}return{start:c,length:r}}}_selectWordAt(g,e){const I=this._getWordAt(g,e);if(I){for(;I.start<0;)I.start+=this._bufferService.cols,g[1]--;this._model.selectionStart=[I.start,g[1]],this._model.selectionStartLength=I.length}}_selectToWordAt(g){const e=this._getWordAt(g,!0);if(e){let I=g[1];for(;e.start<0;)e.start+=this._bufferService.cols,I--;if(!this._model.areSelectionValuesReversed())for(;e.start+e.length>this._bufferService.cols;)e.length-=this._bufferService.cols,I++;this._model.selectionEnd=[this._model.areSelectionValuesReversed()?e.start:e.start+e.length,I]}}_isCharWordSeparator(g){return 0!==g.getWidth()&&this._optionsService.rawOptions.wordSeparator.indexOf(g.getChars())>=0}_selectLineAt(g){const e=this._bufferService.buffer.getWrappedRangeForLine(g),I={start:{x:0,y:e.first},end:{x:this._bufferService.cols-1,y:e.last}};this._model.selectionStart=[0,e.first],this._model.selectionEnd=void 0,this._model.selectionStartLength=(0,a.getRangeLength)(I,this._bufferService.cols)}};e.SelectionService=h=t([C(3,c.IBufferService),C(4,c.ICoreService),C(5,A.IMouseService),C(6,c.IOptionsService),C(7,A.IRenderService),C(8,A.ICoreBrowserService)],h)},4725:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ILinkProviderService=e.IThemeService=e.ICharacterJoinerService=e.ISelectionService=e.IRenderService=e.IMouseService=e.ICoreBrowserService=e.ICharSizeService=void 0;const t=I(8343);e.ICharSizeService=(0,t.createDecorator)("CharSizeService"),e.ICoreBrowserService=(0,t.createDecorator)("CoreBrowserService"),e.IMouseService=(0,t.createDecorator)("MouseService"),e.IRenderService=(0,t.createDecorator)("RenderService"),e.ISelectionService=(0,t.createDecorator)("SelectionService"),e.ICharacterJoinerService=(0,t.createDecorator)("CharacterJoinerService"),e.IThemeService=(0,t.createDecorator)("ThemeService"),e.ILinkProviderService=(0,t.createDecorator)("LinkProviderService")},6731:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.ThemeService=e.DEFAULT_ANSI_COLORS=void 0;const i=I(7239),l=I(8055),n=I(8460),A=I(844),d=I(2585),o=l.css.toColor("#ffffff"),s=l.css.toColor("#000000"),a=l.css.toColor("#ffffff"),V=l.css.toColor("#000000"),c={css:"rgba(255, 255, 255, 0.3)",rgba:4294967117};e.DEFAULT_ANSI_COLORS=Object.freeze((()=>{const g=[l.css.toColor("#2e3436"),l.css.toColor("#cc0000"),l.css.toColor("#4e9a06"),l.css.toColor("#c4a000"),l.css.toColor("#3465a4"),l.css.toColor("#75507b"),l.css.toColor("#06989a"),l.css.toColor("#d3d7cf"),l.css.toColor("#555753"),l.css.toColor("#ef2929"),l.css.toColor("#8ae234"),l.css.toColor("#fce94f"),l.css.toColor("#729fcf"),l.css.toColor("#ad7fa8"),l.css.toColor("#34e2e2"),l.css.toColor("#eeeeec")],e=[0,95,135,175,215,255];for(let I=0;I<216;I++){const t=e[I/36%6|0],C=e[I/6%6|0],i=e[I%6];g.push({css:l.channels.toCss(t,C,i),rgba:l.channels.toRgba(t,C,i)})}for(let e=0;e<24;e++){const I=8+10*e;g.push({css:l.channels.toCss(I,I,I),rgba:l.channels.toRgba(I,I,I)})}return g})());let r=e.ThemeService=class extends A.Disposable{get colors(){return this._colors}constructor(g){super(),this._optionsService=g,this._contrastCache=new i.ColorContrastCache,this._halfContrastCache=new i.ColorContrastCache,this._onChangeColors=this.register(new n.EventEmitter),this.onChangeColors=this._onChangeColors.event,this._colors={foreground:o,background:s,cursor:a,cursorAccent:V,selectionForeground:void 0,selectionBackgroundTransparent:c,selectionBackgroundOpaque:l.color.blend(s,c),selectionInactiveBackgroundTransparent:c,selectionInactiveBackgroundOpaque:l.color.blend(s,c),ansi:e.DEFAULT_ANSI_COLORS.slice(),contrastCache:this._contrastCache,halfContrastCache:this._halfContrastCache},this._updateRestoreColors(),this._setTheme(this._optionsService.rawOptions.theme),this.register(this._optionsService.onSpecificOptionChange("minimumContrastRatio",(()=>this._contrastCache.clear()))),this.register(this._optionsService.onSpecificOptionChange("theme",(()=>this._setTheme(this._optionsService.rawOptions.theme))))}_setTheme(g={}){const I=this._colors;if(I.foreground=h(g.foreground,o),I.background=h(g.background,s),I.cursor=h(g.cursor,a),I.cursorAccent=h(g.cursorAccent,V),I.selectionBackgroundTransparent=h(g.selectionBackground,c),I.selectionBackgroundOpaque=l.color.blend(I.background,I.selectionBackgroundTransparent),I.selectionInactiveBackgroundTransparent=h(g.selectionInactiveBackground,I.selectionBackgroundTransparent),I.selectionInactiveBackgroundOpaque=l.color.blend(I.background,I.selectionInactiveBackgroundTransparent),I.selectionForeground=g.selectionForeground?h(g.selectionForeground,l.NULL_COLOR):void 0,I.selectionForeground===l.NULL_COLOR&&(I.selectionForeground=void 0),l.color.isOpaque(I.selectionBackgroundTransparent)&&(I.selectionBackgroundTransparent=l.color.opacity(I.selectionBackgroundTransparent,.3)),l.color.isOpaque(I.selectionInactiveBackgroundTransparent)&&(I.selectionInactiveBackgroundTransparent=l.color.opacity(I.selectionInactiveBackgroundTransparent,.3)),I.ansi=e.DEFAULT_ANSI_COLORS.slice(),I.ansi[0]=h(g.black,e.DEFAULT_ANSI_COLORS[0]),I.ansi[1]=h(g.red,e.DEFAULT_ANSI_COLORS[1]),I.ansi[2]=h(g.green,e.DEFAULT_ANSI_COLORS[2]),I.ansi[3]=h(g.yellow,e.DEFAULT_ANSI_COLORS[3]),I.ansi[4]=h(g.blue,e.DEFAULT_ANSI_COLORS[4]),I.ansi[5]=h(g.magenta,e.DEFAULT_ANSI_COLORS[5]),I.ansi[6]=h(g.cyan,e.DEFAULT_ANSI_COLORS[6]),I.ansi[7]=h(g.white,e.DEFAULT_ANSI_COLORS[7]),I.ansi[8]=h(g.brightBlack,e.DEFAULT_ANSI_COLORS[8]),I.ansi[9]=h(g.brightRed,e.DEFAULT_ANSI_COLORS[9]),I.ansi[10]=h(g.brightGreen,e.DEFAULT_ANSI_COLORS[10]),I.ansi[11]=h(g.brightYellow,e.DEFAULT_ANSI_COLORS[11]),I.ansi[12]=h(g.brightBlue,e.DEFAULT_ANSI_COLORS[12]),I.ansi[13]=h(g.brightMagenta,e.DEFAULT_ANSI_COLORS[13]),I.ansi[14]=h(g.brightCyan,e.DEFAULT_ANSI_COLORS[14]),I.ansi[15]=h(g.brightWhite,e.DEFAULT_ANSI_COLORS[15]),g.extendedAnsi){const t=Math.min(I.ansi.length-16,g.extendedAnsi.length);for(let C=0;C<t;C++)I.ansi[C+16]=h(g.extendedAnsi[C],e.DEFAULT_ANSI_COLORS[C+16])}this._contrastCache.clear(),this._halfContrastCache.clear(),this._updateRestoreColors(),this._onChangeColors.fire(this.colors)}restoreColor(g){this._restoreColor(g),this._onChangeColors.fire(this.colors)}_restoreColor(g){if(void 0!==g)switch(g){case 256:this._colors.foreground=this._restoreColors.foreground;break;case 257:this._colors.background=this._restoreColors.background;break;case 258:this._colors.cursor=this._restoreColors.cursor;break;default:this._colors.ansi[g]=this._restoreColors.ansi[g]}else for(let g=0;g<this._restoreColors.ansi.length;++g)this._colors.ansi[g]=this._restoreColors.ansi[g]}modifyColors(g){g(this._colors),this._onChangeColors.fire(this.colors)}_updateRestoreColors(){this._restoreColors={foreground:this._colors.foreground,background:this._colors.background,cursor:this._colors.cursor,ansi:this._colors.ansi.slice()}}};function h(g,e){if(void 0!==g)try{return l.css.toColor(g)}catch{}return e}e.ThemeService=r=t([C(0,d.IOptionsService)],r)},6349:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CircularList=void 0;const t=I(8460),C=I(844);class i extends C.Disposable{constructor(g){super(),this._maxLength=g,this.onDeleteEmitter=this.register(new t.EventEmitter),this.onDelete=this.onDeleteEmitter.event,this.onInsertEmitter=this.register(new t.EventEmitter),this.onInsert=this.onInsertEmitter.event,this.onTrimEmitter=this.register(new t.EventEmitter),this.onTrim=this.onTrimEmitter.event,this._array=new Array(this._maxLength),this._startIndex=0,this._length=0}get maxLength(){return this._maxLength}set maxLength(g){if(this._maxLength===g)return;const e=new Array(g);for(let I=0;I<Math.min(g,this.length);I++)e[I]=this._array[this._getCyclicIndex(I)];this._array=e,this._maxLength=g,this._startIndex=0}get length(){return this._length}set length(g){if(g>this._length)for(let e=this._length;e<g;e++)this._array[e]=void 0;this._length=g}get(g){return this._array[this._getCyclicIndex(g)]}set(g,e){this._array[this._getCyclicIndex(g)]=e}push(g){this._array[this._getCyclicIndex(this._length)]=g,this._length===this._maxLength?(this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1)):this._length++}recycle(){if(this._length!==this._maxLength)throw new Error("Can only recycle when the buffer is full");return this._startIndex=++this._startIndex%this._maxLength,this.onTrimEmitter.fire(1),this._array[this._getCyclicIndex(this._length-1)]}get isFull(){return this._length===this._maxLength}pop(){return this._array[this._getCyclicIndex(this._length---1)]}splice(g,e,...I){if(e){for(let I=g;I<this._length-e;I++)this._array[this._getCyclicIndex(I)]=this._array[this._getCyclicIndex(I+e)];this._length-=e,this.onDeleteEmitter.fire({index:g,amount:e})}for(let e=this._length-1;e>=g;e--)this._array[this._getCyclicIndex(e+I.length)]=this._array[this._getCyclicIndex(e)];for(let e=0;e<I.length;e++)this._array[this._getCyclicIndex(g+e)]=I[e];if(I.length&&this.onInsertEmitter.fire({index:g,amount:I.length}),this._length+I.length>this._maxLength){const g=this._length+I.length-this._maxLength;this._startIndex+=g,this._length=this._maxLength,this.onTrimEmitter.fire(g)}else this._length+=I.length}trimStart(g){g>this._length&&(g=this._length),this._startIndex+=g,this._length-=g,this.onTrimEmitter.fire(g)}shiftElements(g,e,I){if(!(e<=0)){if(g<0||g>=this._length)throw new Error("start argument out of range");if(g+I<0)throw new Error("Cannot shift elements in list beyond index 0");if(I>0){for(let t=e-1;t>=0;t--)this.set(g+t+I,this.get(g+t));const t=g+e+I-this._length;if(t>0)for(this._length+=t;this._length>this._maxLength;)this._length--,this._startIndex++,this.onTrimEmitter.fire(1)}else for(let t=0;t<e;t++)this.set(g+t+I,this.get(g+t))}}_getCyclicIndex(g){return(this._startIndex+g)%this._maxLength}}e.CircularList=i},1439:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.clone=void 0,e.clone=function g(e,I=5){if("object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};for(const C in e)t[C]=I<=1?e[C]:e[C]&&g(e[C],I-1);return t}},8055:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.contrastRatio=e.toPaddedHex=e.rgba=e.rgb=e.css=e.color=e.channels=e.NULL_COLOR=void 0;let I=0,t=0,C=0,i=0;var l,n,A,d,o,s;function a(g){const e=g.toString(16);return e.length<2?"0"+e:e}function V(g,e){return g<e?(e+.05)/(g+.05):(g+.05)/(e+.05)}e.NULL_COLOR={css:"#00000000",rgba:0},(s=l||(e.channels=l={})).toCss=function(g,e,I,t){return void 0!==t?`#${a(g)}${a(e)}${a(I)}${a(t)}`:`#${a(g)}${a(e)}${a(I)}`},s.toRgba=function(g,e,I,t=255){return(g<<24|e<<16|I<<8|t)>>>0},s.toColor=function(g,e,I,t){return{css:s.toCss(g,e,I,t),rgba:s.toRgba(g,e,I,t)}},function(g){function e(g,e){return i=Math.round(255*e),[I,t,C]=o.toChannels(g.rgba),{css:l.toCss(I,t,C,i),rgba:l.toRgba(I,t,C,i)}}g.blend=function(g,e){if(i=(255&e.rgba)/255,1===i)return{css:e.css,rgba:e.rgba};const n=e.rgba>>24&255,A=e.rgba>>16&255,d=e.rgba>>8&255,o=g.rgba>>24&255,s=g.rgba>>16&255,a=g.rgba>>8&255;return I=o+Math.round((n-o)*i),t=s+Math.round((A-s)*i),C=a+Math.round((d-a)*i),{css:l.toCss(I,t,C),rgba:l.toRgba(I,t,C)}},g.isOpaque=function(g){return!(255&~g.rgba)},g.ensureContrastRatio=function(g,e,I){const t=o.ensureContrastRatio(g.rgba,e.rgba,I);if(t)return l.toColor(t>>24&255,t>>16&255,t>>8&255)},g.opaque=function(g){const e=(255|g.rgba)>>>0;return[I,t,C]=o.toChannels(e),{css:l.toCss(I,t,C),rgba:e}},g.opacity=e,g.multiplyOpacity=function(g,I){return i=255&g.rgba,e(g,i*I/255)},g.toColorRGB=function(g){return[g.rgba>>24&255,g.rgba>>16&255,g.rgba>>8&255]}}(n||(e.color=n={})),function(g){let e,n;try{const g=document.createElement("canvas");g.width=1,g.height=1;const I=g.getContext("2d",{willReadFrequently:!0});I&&(e=I,e.globalCompositeOperation="copy",n=e.createLinearGradient(0,0,1,1))}catch{}g.toColor=function(g){if(g.match(/#[\da-f]{3,8}/i))switch(g.length){case 4:return I=parseInt(g.slice(1,2).repeat(2),16),t=parseInt(g.slice(2,3).repeat(2),16),C=parseInt(g.slice(3,4).repeat(2),16),l.toColor(I,t,C);case 5:return I=parseInt(g.slice(1,2).repeat(2),16),t=parseInt(g.slice(2,3).repeat(2),16),C=parseInt(g.slice(3,4).repeat(2),16),i=parseInt(g.slice(4,5).repeat(2),16),l.toColor(I,t,C,i);case 7:return{css:g,rgba:(parseInt(g.slice(1),16)<<8|255)>>>0};case 9:return{css:g,rgba:parseInt(g.slice(1),16)>>>0}}const A=g.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);if(A)return I=parseInt(A[1]),t=parseInt(A[2]),C=parseInt(A[3]),i=Math.round(255*(void 0===A[5]?1:parseFloat(A[5]))),l.toColor(I,t,C,i);if(!e||!n)throw new Error("css.toColor: Unsupported css format");if(e.fillStyle=n,e.fillStyle=g,"string"!=typeof e.fillStyle)throw new Error("css.toColor: Unsupported css format");if(e.fillRect(0,0,1,1),[I,t,C,i]=e.getImageData(0,0,1,1).data,255!==i)throw new Error("css.toColor: Unsupported css format");return{rgba:l.toRgba(I,t,C,i),css:g}}}(A||(e.css=A={})),function(g){function e(g,e,I){const t=g/255,C=e/255,i=I/255;return.2126*(t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4))+.7152*(C<=.03928?C/12.92:Math.pow((C+.055)/1.055,2.4))+.0722*(i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4))}g.relativeLuminance=function(g){return e(g>>16&255,g>>8&255,255&g)},g.relativeLuminance2=e}(d||(e.rgb=d={})),function(g){function e(g,e,I){const t=g>>24&255,C=g>>16&255,i=g>>8&255;let l=e>>24&255,n=e>>16&255,A=e>>8&255,o=V(d.relativeLuminance2(l,n,A),d.relativeLuminance2(t,C,i));for(;o<I&&(l>0||n>0||A>0);)l-=Math.max(0,Math.ceil(.1*l)),n-=Math.max(0,Math.ceil(.1*n)),A-=Math.max(0,Math.ceil(.1*A)),o=V(d.relativeLuminance2(l,n,A),d.relativeLuminance2(t,C,i));return(l<<24|n<<16|A<<8|255)>>>0}function n(g,e,I){const t=g>>24&255,C=g>>16&255,i=g>>8&255;let l=e>>24&255,n=e>>16&255,A=e>>8&255,o=V(d.relativeLuminance2(l,n,A),d.relativeLuminance2(t,C,i));for(;o<I&&(l<255||n<255||A<255);)l=Math.min(255,l+Math.ceil(.1*(255-l))),n=Math.min(255,n+Math.ceil(.1*(255-n))),A=Math.min(255,A+Math.ceil(.1*(255-A))),o=V(d.relativeLuminance2(l,n,A),d.relativeLuminance2(t,C,i));return(l<<24|n<<16|A<<8|255)>>>0}g.blend=function(g,e){if(i=(255&e)/255,1===i)return e;const n=e>>24&255,A=e>>16&255,d=e>>8&255,o=g>>24&255,s=g>>16&255,a=g>>8&255;return I=o+Math.round((n-o)*i),t=s+Math.round((A-s)*i),C=a+Math.round((d-a)*i),l.toRgba(I,t,C)},g.ensureContrastRatio=function(g,I,t){const C=d.relativeLuminance(g>>8),i=d.relativeLuminance(I>>8);if(V(C,i)<t){if(i<C){const i=e(g,I,t),l=V(C,d.relativeLuminance(i>>8));if(l<t){const e=n(g,I,t);return l>V(C,d.relativeLuminance(e>>8))?i:e}return i}const l=n(g,I,t),A=V(C,d.relativeLuminance(l>>8));if(A<t){const i=e(g,I,t);return A>V(C,d.relativeLuminance(i>>8))?l:i}return l}},g.reduceLuminance=e,g.increaseLuminance=n,g.toChannels=function(g){return[g>>24&255,g>>16&255,g>>8&255,255&g]}}(o||(e.rgba=o={})),e.toPaddedHex=a,e.contrastRatio=V},8969:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CoreTerminal=void 0;const t=I(844),C=I(2585),i=I(4348),l=I(7866),n=I(744),A=I(7302),d=I(6975),o=I(8460),s=I(1753),a=I(1480),V=I(7994),c=I(9282),r=I(5435),h=I(5981),U=I(2660);let Z=!1;class R extends t.Disposable{get onScroll(){return this._onScrollApi||(this._onScrollApi=this.register(new o.EventEmitter),this._onScroll.event((g=>{var e;null==(e=this._onScrollApi)||e.fire(g.position)}))),this._onScrollApi.event}get cols(){return this._bufferService.cols}get rows(){return this._bufferService.rows}get buffers(){return this._bufferService.buffers}get options(){return this.optionsService.options}set options(g){for(const e in g)this.optionsService.options[e]=g[e]}constructor(g){super(),this._windowsWrappingHeuristics=this.register(new t.MutableDisposable),this._onBinary=this.register(new o.EventEmitter),this.onBinary=this._onBinary.event,this._onData=this.register(new o.EventEmitter),this.onData=this._onData.event,this._onLineFeed=this.register(new o.EventEmitter),this.onLineFeed=this._onLineFeed.event,this._onResize=this.register(new o.EventEmitter),this.onResize=this._onResize.event,this._onWriteParsed=this.register(new o.EventEmitter),this.onWriteParsed=this._onWriteParsed.event,this._onScroll=this.register(new o.EventEmitter),this._instantiationService=new i.InstantiationService,this.optionsService=this.register(new A.OptionsService(g)),this._instantiationService.setService(C.IOptionsService,this.optionsService),this._bufferService=this.register(this._instantiationService.createInstance(n.BufferService)),this._instantiationService.setService(C.IBufferService,this._bufferService),this._logService=this.register(this._instantiationService.createInstance(l.LogService)),this._instantiationService.setService(C.ILogService,this._logService),this.coreService=this.register(this._instantiationService.createInstance(d.CoreService)),this._instantiationService.setService(C.ICoreService,this.coreService),this.coreMouseService=this.register(this._instantiationService.createInstance(s.CoreMouseService)),this._instantiationService.setService(C.ICoreMouseService,this.coreMouseService),this.unicodeService=this.register(this._instantiationService.createInstance(a.UnicodeService)),this._instantiationService.setService(C.IUnicodeService,this.unicodeService),this._charsetService=this._instantiationService.createInstance(V.CharsetService),this._instantiationService.setService(C.ICharsetService,this._charsetService),this._oscLinkService=this._instantiationService.createInstance(U.OscLinkService),this._instantiationService.setService(C.IOscLinkService,this._oscLinkService),this._inputHandler=this.register(new r.InputHandler(this._bufferService,this._charsetService,this.coreService,this._logService,this.optionsService,this._oscLinkService,this.coreMouseService,this.unicodeService)),this.register((0,o.forwardEvent)(this._inputHandler.onLineFeed,this._onLineFeed)),this.register(this._inputHandler),this.register((0,o.forwardEvent)(this._bufferService.onResize,this._onResize)),this.register((0,o.forwardEvent)(this.coreService.onData,this._onData)),this.register((0,o.forwardEvent)(this.coreService.onBinary,this._onBinary)),this.register(this.coreService.onRequestScrollToBottom((()=>this.scrollToBottom()))),this.register(this.coreService.onUserInput((()=>this._writeBuffer.handleUserInput()))),this.register(this.optionsService.onMultipleOptionChange(["windowsMode","windowsPty"],(()=>this._handleWindowsPtyOptionChange()))),this.register(this._bufferService.onScroll((g=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this.register(this._inputHandler.onScroll((g=>{this._onScroll.fire({position:this._bufferService.buffer.ydisp,source:0}),this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop,this._bufferService.buffer.scrollBottom)}))),this._writeBuffer=this.register(new h.WriteBuffer(((g,e)=>this._inputHandler.parse(g,e)))),this.register((0,o.forwardEvent)(this._writeBuffer.onWriteParsed,this._onWriteParsed))}write(g,e){this._writeBuffer.write(g,e)}writeSync(g,e){this._logService.logLevel<=C.LogLevelEnum.WARN&&!Z&&(this._logService.warn("writeSync is unreliable and will be removed soon."),Z=!0),this._writeBuffer.writeSync(g,e)}input(g,e=!0){this.coreService.triggerDataEvent(g,e)}resize(g,e){isNaN(g)||isNaN(e)||(g=Math.max(g,n.MINIMUM_COLS),e=Math.max(e,n.MINIMUM_ROWS),this._bufferService.resize(g,e))}scroll(g,e=!1){this._bufferService.scroll(g,e)}scrollLines(g,e,I){this._bufferService.scrollLines(g,e,I)}scrollPages(g){this.scrollLines(g*(this.rows-1))}scrollToTop(){this.scrollLines(-this._bufferService.buffer.ydisp)}scrollToBottom(){this.scrollLines(this._bufferService.buffer.ybase-this._bufferService.buffer.ydisp)}scrollToLine(g){const e=g-this._bufferService.buffer.ydisp;0!==e&&this.scrollLines(e)}registerEscHandler(g,e){return this._inputHandler.registerEscHandler(g,e)}registerDcsHandler(g,e){return this._inputHandler.registerDcsHandler(g,e)}registerCsiHandler(g,e){return this._inputHandler.registerCsiHandler(g,e)}registerOscHandler(g,e){return this._inputHandler.registerOscHandler(g,e)}_setup(){this._handleWindowsPtyOptionChange()}reset(){this._inputHandler.reset(),this._bufferService.reset(),this._charsetService.reset(),this.coreService.reset(),this.coreMouseService.reset()}_handleWindowsPtyOptionChange(){let g=!1;const e=this.optionsService.rawOptions.windowsPty;e&&void 0!==e.buildNumber&&void 0!==e.buildNumber?g="conpty"===e.backend&&e.buildNumber<21376:this.optionsService.rawOptions.windowsMode&&(g=!0),g?this._enableWindowsWrappingHeuristics():this._windowsWrappingHeuristics.clear()}_enableWindowsWrappingHeuristics(){if(!this._windowsWrappingHeuristics.value){const g=[];g.push(this.onLineFeed(c.updateWindowsModeWrappedState.bind(null,this._bufferService))),g.push(this.registerCsiHandler({final:"H"},(()=>((0,c.updateWindowsModeWrappedState)(this._bufferService),!1)))),this._windowsWrappingHeuristics.value=(0,t.toDisposable)((()=>{for(const e of g)e.dispose()}))}}}e.CoreTerminal=R},8460:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.runAndSubscribe=e.forwardEvent=e.EventEmitter=void 0,e.EventEmitter=class{constructor(){this._listeners=[],this._disposed=!1}get event(){return this._event||(this._event=g=>(this._listeners.push(g),{dispose:()=>{if(!this._disposed)for(let e=0;e<this._listeners.length;e++)if(this._listeners[e]===g)return void this._listeners.splice(e,1)}})),this._event}fire(g,e){const I=[];for(let g=0;g<this._listeners.length;g++)I.push(this._listeners[g]);for(let t=0;t<I.length;t++)I[t].call(void 0,g,e)}dispose(){this.clearListeners(),this._disposed=!0}clearListeners(){this._listeners&&(this._listeners.length=0)}},e.forwardEvent=function(g,e){return g((g=>e.fire(g)))},e.runAndSubscribe=function(g,e){return e(void 0),g((g=>e(g)))}},5435:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.InputHandler=e.WindowsOptionsReportType=void 0;const i=I(2584),l=I(7116),n=I(2015),A=I(844),d=I(482),o=I(8437),s=I(8460),a=I(643),V=I(511),c=I(3734),r=I(2585),h=I(1480),U=I(6242),Z=I(6351),R=I(5941),F={"(":0,")":1,"*":2,"+":3,"-":1,".":2},m=131072;function B(g,e){if(g>24)return e.setWinLines||!1;switch(g){case 1:return!!e.restoreWin;case 2:return!!e.minimizeWin;case 3:return!!e.setWinPosition;case 4:return!!e.setWinSizePixels;case 5:return!!e.raiseWin;case 6:return!!e.lowerWin;case 7:return!!e.refreshWin;case 8:return!!e.setWinSizeChars;case 9:return!!e.maximizeWin;case 10:return!!e.fullscreenWin;case 11:return!!e.getWinState;case 13:return!!e.getWinPosition;case 14:return!!e.getWinSizePixels;case 15:return!!e.getScreenSizePixels;case 16:return!!e.getCellSizePixels;case 18:return!!e.getWinSizeChars;case 19:return!!e.getScreenSizeChars;case 20:return!!e.getIconTitle;case 21:return!!e.getWinTitle;case 22:return!!e.pushTitle;case 23:return!!e.popTitle;case 24:return!!e.setWinLines}return!1}var W,N;(N=W||(e.WindowsOptionsReportType=W={}))[N.GET_WIN_SIZE_PIXELS=0]="GET_WIN_SIZE_PIXELS",N[N.GET_CELL_SIZE_PIXELS=1]="GET_CELL_SIZE_PIXELS";let p=0;class S extends A.Disposable{getAttrData(){return this._curAttrData}constructor(g,e,I,t,C,A,a,c,r=new n.EscapeSequenceParser){super(),this._bufferService=g,this._charsetService=e,this._coreService=I,this._logService=t,this._optionsService=C,this._oscLinkService=A,this._coreMouseService=a,this._unicodeService=c,this._parser=r,this._parseBuffer=new Uint32Array(4096),this._stringDecoder=new d.StringToUtf32,this._utf8Decoder=new d.Utf8ToUtf32,this._workCell=new V.CellData,this._windowTitle="",this._iconName="",this._windowTitleStack=[],this._iconNameStack=[],this._curAttrData=o.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=o.DEFAULT_ATTR_DATA.clone(),this._onRequestBell=this.register(new s.EventEmitter),this.onRequestBell=this._onRequestBell.event,this._onRequestRefreshRows=this.register(new s.EventEmitter),this.onRequestRefreshRows=this._onRequestRefreshRows.event,this._onRequestReset=this.register(new s.EventEmitter),this.onRequestReset=this._onRequestReset.event,this._onRequestSendFocus=this.register(new s.EventEmitter),this.onRequestSendFocus=this._onRequestSendFocus.event,this._onRequestSyncScrollBar=this.register(new s.EventEmitter),this.onRequestSyncScrollBar=this._onRequestSyncScrollBar.event,this._onRequestWindowsOptionsReport=this.register(new s.EventEmitter),this.onRequestWindowsOptionsReport=this._onRequestWindowsOptionsReport.event,this._onA11yChar=this.register(new s.EventEmitter),this.onA11yChar=this._onA11yChar.event,this._onA11yTab=this.register(new s.EventEmitter),this.onA11yTab=this._onA11yTab.event,this._onCursorMove=this.register(new s.EventEmitter),this.onCursorMove=this._onCursorMove.event,this._onLineFeed=this.register(new s.EventEmitter),this.onLineFeed=this._onLineFeed.event,this._onScroll=this.register(new s.EventEmitter),this.onScroll=this._onScroll.event,this._onTitleChange=this.register(new s.EventEmitter),this.onTitleChange=this._onTitleChange.event,this._onColor=this.register(new s.EventEmitter),this.onColor=this._onColor.event,this._parseStack={paused:!1,cursorStartX:0,cursorStartY:0,decodedLength:0,position:0},this._specialColors=[256,257,258],this.register(this._parser),this._dirtyRowTracker=new b(this._bufferService),this._activeBuffer=this._bufferService.buffer,this.register(this._bufferService.buffers.onBufferActivate((g=>this._activeBuffer=g.activeBuffer))),this._parser.setCsiHandlerFallback(((g,e)=>{this._logService.debug("Unknown CSI code: ",{identifier:this._parser.identToString(g),params:e.toArray()})})),this._parser.setEscHandlerFallback((g=>{this._logService.debug("Unknown ESC code: ",{identifier:this._parser.identToString(g)})})),this._parser.setExecuteHandlerFallback((g=>{this._logService.debug("Unknown EXECUTE code: ",{code:g})})),this._parser.setOscHandlerFallback(((g,e,I)=>{this._logService.debug("Unknown OSC code: ",{identifier:g,action:e,data:I})})),this._parser.setDcsHandlerFallback(((g,e,I)=>{"HOOK"===e&&(I=I.toArray()),this._logService.debug("Unknown DCS code: ",{identifier:this._parser.identToString(g),action:e,payload:I})})),this._parser.setPrintHandler(((g,e,I)=>this.print(g,e,I))),this._parser.registerCsiHandler({final:"@"},(g=>this.insertChars(g))),this._parser.registerCsiHandler({intermediates:" ",final:"@"},(g=>this.scrollLeft(g))),this._parser.registerCsiHandler({final:"A"},(g=>this.cursorUp(g))),this._parser.registerCsiHandler({intermediates:" ",final:"A"},(g=>this.scrollRight(g))),this._parser.registerCsiHandler({final:"B"},(g=>this.cursorDown(g))),this._parser.registerCsiHandler({final:"C"},(g=>this.cursorForward(g))),this._parser.registerCsiHandler({final:"D"},(g=>this.cursorBackward(g))),this._parser.registerCsiHandler({final:"E"},(g=>this.cursorNextLine(g))),this._parser.registerCsiHandler({final:"F"},(g=>this.cursorPrecedingLine(g))),this._parser.registerCsiHandler({final:"G"},(g=>this.cursorCharAbsolute(g))),this._parser.registerCsiHandler({final:"H"},(g=>this.cursorPosition(g))),this._parser.registerCsiHandler({final:"I"},(g=>this.cursorForwardTab(g))),this._parser.registerCsiHandler({final:"J"},(g=>this.eraseInDisplay(g,!1))),this._parser.registerCsiHandler({prefix:"?",final:"J"},(g=>this.eraseInDisplay(g,!0))),this._parser.registerCsiHandler({final:"K"},(g=>this.eraseInLine(g,!1))),this._parser.registerCsiHandler({prefix:"?",final:"K"},(g=>this.eraseInLine(g,!0))),this._parser.registerCsiHandler({final:"L"},(g=>this.insertLines(g))),this._parser.registerCsiHandler({final:"M"},(g=>this.deleteLines(g))),this._parser.registerCsiHandler({final:"P"},(g=>this.deleteChars(g))),this._parser.registerCsiHandler({final:"S"},(g=>this.scrollUp(g))),this._parser.registerCsiHandler({final:"T"},(g=>this.scrollDown(g))),this._parser.registerCsiHandler({final:"X"},(g=>this.eraseChars(g))),this._parser.registerCsiHandler({final:"Z"},(g=>this.cursorBackwardTab(g))),this._parser.registerCsiHandler({final:"`"},(g=>this.charPosAbsolute(g))),this._parser.registerCsiHandler({final:"a"},(g=>this.hPositionRelative(g))),this._parser.registerCsiHandler({final:"b"},(g=>this.repeatPrecedingCharacter(g))),this._parser.registerCsiHandler({final:"c"},(g=>this.sendDeviceAttributesPrimary(g))),this._parser.registerCsiHandler({prefix:">",final:"c"},(g=>this.sendDeviceAttributesSecondary(g))),this._parser.registerCsiHandler({final:"d"},(g=>this.linePosAbsolute(g))),this._parser.registerCsiHandler({final:"e"},(g=>this.vPositionRelative(g))),this._parser.registerCsiHandler({final:"f"},(g=>this.hVPosition(g))),this._parser.registerCsiHandler({final:"g"},(g=>this.tabClear(g))),this._parser.registerCsiHandler({final:"h"},(g=>this.setMode(g))),this._parser.registerCsiHandler({prefix:"?",final:"h"},(g=>this.setModePrivate(g))),this._parser.registerCsiHandler({final:"l"},(g=>this.resetMode(g))),this._parser.registerCsiHandler({prefix:"?",final:"l"},(g=>this.resetModePrivate(g))),this._parser.registerCsiHandler({final:"m"},(g=>this.charAttributes(g))),this._parser.registerCsiHandler({final:"n"},(g=>this.deviceStatus(g))),this._parser.registerCsiHandler({prefix:"?",final:"n"},(g=>this.deviceStatusPrivate(g))),this._parser.registerCsiHandler({intermediates:"!",final:"p"},(g=>this.softReset(g))),this._parser.registerCsiHandler({intermediates:" ",final:"q"},(g=>this.setCursorStyle(g))),this._parser.registerCsiHandler({final:"r"},(g=>this.setScrollRegion(g))),this._parser.registerCsiHandler({final:"s"},(g=>this.saveCursor(g))),this._parser.registerCsiHandler({final:"t"},(g=>this.windowOptions(g))),this._parser.registerCsiHandler({final:"u"},(g=>this.restoreCursor(g))),this._parser.registerCsiHandler({intermediates:"'",final:"}"},(g=>this.insertColumns(g))),this._parser.registerCsiHandler({intermediates:"'",final:"~"},(g=>this.deleteColumns(g))),this._parser.registerCsiHandler({intermediates:'"',final:"q"},(g=>this.selectProtected(g))),this._parser.registerCsiHandler({intermediates:"$",final:"p"},(g=>this.requestMode(g,!0))),this._parser.registerCsiHandler({prefix:"?",intermediates:"$",final:"p"},(g=>this.requestMode(g,!1))),this._parser.setExecuteHandler(i.C0.BEL,(()=>this.bell())),this._parser.setExecuteHandler(i.C0.LF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.VT,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.FF,(()=>this.lineFeed())),this._parser.setExecuteHandler(i.C0.CR,(()=>this.carriageReturn())),this._parser.setExecuteHandler(i.C0.BS,(()=>this.backspace())),this._parser.setExecuteHandler(i.C0.HT,(()=>this.tab())),this._parser.setExecuteHandler(i.C0.SO,(()=>this.shiftOut())),this._parser.setExecuteHandler(i.C0.SI,(()=>this.shiftIn())),this._parser.setExecuteHandler(i.C1.IND,(()=>this.index())),this._parser.setExecuteHandler(i.C1.NEL,(()=>this.nextLine())),this._parser.setExecuteHandler(i.C1.HTS,(()=>this.tabSet())),this._parser.registerOscHandler(0,new U.OscHandler((g=>(this.setTitle(g),this.setIconName(g),!0)))),this._parser.registerOscHandler(1,new U.OscHandler((g=>this.setIconName(g)))),this._parser.registerOscHandler(2,new U.OscHandler((g=>this.setTitle(g)))),this._parser.registerOscHandler(4,new U.OscHandler((g=>this.setOrReportIndexedColor(g)))),this._parser.registerOscHandler(8,new U.OscHandler((g=>this.setHyperlink(g)))),this._parser.registerOscHandler(10,new U.OscHandler((g=>this.setOrReportFgColor(g)))),this._parser.registerOscHandler(11,new U.OscHandler((g=>this.setOrReportBgColor(g)))),this._parser.registerOscHandler(12,new U.OscHandler((g=>this.setOrReportCursorColor(g)))),this._parser.registerOscHandler(104,new U.OscHandler((g=>this.restoreIndexedColor(g)))),this._parser.registerOscHandler(110,new U.OscHandler((g=>this.restoreFgColor(g)))),this._parser.registerOscHandler(111,new U.OscHandler((g=>this.restoreBgColor(g)))),this._parser.registerOscHandler(112,new U.OscHandler((g=>this.restoreCursorColor(g)))),this._parser.registerEscHandler({final:"7"},(()=>this.saveCursor())),this._parser.registerEscHandler({final:"8"},(()=>this.restoreCursor())),this._parser.registerEscHandler({final:"D"},(()=>this.index())),this._parser.registerEscHandler({final:"E"},(()=>this.nextLine())),this._parser.registerEscHandler({final:"H"},(()=>this.tabSet())),this._parser.registerEscHandler({final:"M"},(()=>this.reverseIndex())),this._parser.registerEscHandler({final:"="},(()=>this.keypadApplicationMode())),this._parser.registerEscHandler({final:">"},(()=>this.keypadNumericMode())),this._parser.registerEscHandler({final:"c"},(()=>this.fullReset())),this._parser.registerEscHandler({final:"n"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"o"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"|"},(()=>this.setgLevel(3))),this._parser.registerEscHandler({final:"}"},(()=>this.setgLevel(2))),this._parser.registerEscHandler({final:"~"},(()=>this.setgLevel(1))),this._parser.registerEscHandler({intermediates:"%",final:"@"},(()=>this.selectDefaultCharset())),this._parser.registerEscHandler({intermediates:"%",final:"G"},(()=>this.selectDefaultCharset()));for(const g in l.CHARSETS)this._parser.registerEscHandler({intermediates:"(",final:g},(()=>this.selectCharset("("+g))),this._parser.registerEscHandler({intermediates:")",final:g},(()=>this.selectCharset(")"+g))),this._parser.registerEscHandler({intermediates:"*",final:g},(()=>this.selectCharset("*"+g))),this._parser.registerEscHandler({intermediates:"+",final:g},(()=>this.selectCharset("+"+g))),this._parser.registerEscHandler({intermediates:"-",final:g},(()=>this.selectCharset("-"+g))),this._parser.registerEscHandler({intermediates:".",final:g},(()=>this.selectCharset("."+g))),this._parser.registerEscHandler({intermediates:"/",final:g},(()=>this.selectCharset("/"+g)));this._parser.registerEscHandler({intermediates:"#",final:"8"},(()=>this.screenAlignmentPattern())),this._parser.setErrorHandler((g=>(this._logService.error("Parsing error: ",g),g))),this._parser.registerDcsHandler({intermediates:"$",final:"q"},new Z.DcsHandler(((g,e)=>this.requestStatusString(g,e))))}_preserveStack(g,e,I,t){this._parseStack.paused=!0,this._parseStack.cursorStartX=g,this._parseStack.cursorStartY=e,this._parseStack.decodedLength=I,this._parseStack.position=t}_logSlowResolvingAsync(g){this._logService.logLevel<=r.LogLevelEnum.WARN&&Promise.race([g,new Promise(((g,e)=>setTimeout((()=>e("#SLOW_TIMEOUT")),5e3)))]).catch((g=>{if("#SLOW_TIMEOUT"!==g)throw g}))}_getCurrentLinkId(){return this._curAttrData.extended.urlId}parse(g,e){let I,t=this._activeBuffer.x,C=this._activeBuffer.y,i=0;const l=this._parseStack.paused;if(l){if(I=this._parser.parse(this._parseBuffer,this._parseStack.decodedLength,e))return this._logSlowResolvingAsync(I),I;t=this._parseStack.cursorStartX,C=this._parseStack.cursorStartY,this._parseStack.paused=!1,g.length>m&&(i=this._parseStack.position+m)}if(this._logService.logLevel<=r.LogLevelEnum.DEBUG&&this._logService.debug("parsing data"+("string"==typeof g?` "${g}"`:` "${Array.prototype.map.call(g,(g=>String.fromCharCode(g))).join("")}"`),"string"==typeof g?g.split("").map((g=>g.charCodeAt(0))):g),this._parseBuffer.length<g.length&&this._parseBuffer.length<m&&(this._parseBuffer=new Uint32Array(Math.min(g.length,m))),l||this._dirtyRowTracker.clearRange(),g.length>m)for(let e=i;e<g.length;e+=m){const i=e+m<g.length?e+m:g.length,l="string"==typeof g?this._stringDecoder.decode(g.substring(e,i),this._parseBuffer):this._utf8Decoder.decode(g.subarray(e,i),this._parseBuffer);if(I=this._parser.parse(this._parseBuffer,l))return this._preserveStack(t,C,l,e),this._logSlowResolvingAsync(I),I}else if(!l){const e="string"==typeof g?this._stringDecoder.decode(g,this._parseBuffer):this._utf8Decoder.decode(g,this._parseBuffer);if(I=this._parser.parse(this._parseBuffer,e))return this._preserveStack(t,C,e,0),this._logSlowResolvingAsync(I),I}this._activeBuffer.x===t&&this._activeBuffer.y===C||this._onCursorMove.fire();const n=this._dirtyRowTracker.end+(this._bufferService.buffer.ybase-this._bufferService.buffer.ydisp),A=this._dirtyRowTracker.start+(this._bufferService.buffer.ybase-this._bufferService.buffer.ydisp);A<this._bufferService.rows&&this._onRequestRefreshRows.fire(Math.min(A,this._bufferService.rows-1),Math.min(n,this._bufferService.rows-1))}print(g,e,I){let t,C;const i=this._charsetService.charset,l=this._optionsService.rawOptions.screenReaderMode,n=this._bufferService.cols,A=this._coreService.decPrivateModes.wraparound,s=this._coreService.modes.insertMode,V=this._curAttrData;let c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._activeBuffer.x&&I-e>0&&2===c.getWidth(this._activeBuffer.x-1)&&c.setCellFromCodepoint(this._activeBuffer.x-1,0,1,V);let r=this._parser.precedingJoinState;for(let U=e;U<I;++U){if(t=g[U],t<127&&i){const g=i[String.fromCharCode(t)];g&&(t=g.charCodeAt(0))}const e=this._unicodeService.charProperties(t,r);C=h.UnicodeService.extractWidth(e);const I=h.UnicodeService.extractShouldJoin(e),Z=I?h.UnicodeService.extractWidth(r):0;if(r=e,l&&this._onA11yChar.fire((0,d.stringFromCodePoint)(t)),this._getCurrentLinkId()&&this._oscLinkService.addLineToLink(this._getCurrentLinkId(),this._activeBuffer.ybase+this._activeBuffer.y),this._activeBuffer.x+C-Z>n)if(A){const g=c;let e=this._activeBuffer.x-Z;for(this._activeBuffer.x=Z,this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData(),!0)):(this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!0),c=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y),Z>0&&c instanceof o.BufferLine&&c.copyCellsFrom(g,e,0,Z,!1);e<n;)g.setCellFromCodepoint(e++,0,1,V)}else if(this._activeBuffer.x=n-1,2===C)continue;if(I&&this._activeBuffer.x){const g=c.getWidth(this._activeBuffer.x-1)?1:2;c.addCodepointToCell(this._activeBuffer.x-g,t,C);for(let g=C-Z;--g>=0;)c.setCellFromCodepoint(this._activeBuffer.x++,0,0,V)}else if(s&&(c.insertCells(this._activeBuffer.x,C-Z,this._activeBuffer.getNullCell(V)),2===c.getWidth(n-1)&&c.setCellFromCodepoint(n-1,a.NULL_CELL_CODE,a.NULL_CELL_WIDTH,V)),c.setCellFromCodepoint(this._activeBuffer.x++,t,C,V),C>0)for(;--C;)c.setCellFromCodepoint(this._activeBuffer.x++,0,0,V)}this._parser.precedingJoinState=r,this._activeBuffer.x<n&&I-e>0&&0===c.getWidth(this._activeBuffer.x)&&!c.hasContent(this._activeBuffer.x)&&c.setCellFromCodepoint(this._activeBuffer.x,0,1,V),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}registerCsiHandler(g,e){return"t"!==g.final||g.prefix||g.intermediates?this._parser.registerCsiHandler(g,e):this._parser.registerCsiHandler(g,(g=>!B(g.params[0],this._optionsService.rawOptions.windowOptions)||e(g)))}registerDcsHandler(g,e){return this._parser.registerDcsHandler(g,new Z.DcsHandler(e))}registerEscHandler(g,e){return this._parser.registerEscHandler(g,e)}registerOscHandler(g,e){return this._parser.registerOscHandler(g,new U.OscHandler(e))}bell(){return this._onRequestBell.fire(),!0}lineFeed(){return this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._optionsService.rawOptions.convertEol&&(this._activeBuffer.x=0),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows?this._activeBuffer.y=this._bufferService.rows-1:this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.x>=this._bufferService.cols&&this._activeBuffer.x--,this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._onLineFeed.fire(),!0}carriageReturn(){return this._activeBuffer.x=0,!0}backspace(){var g;if(!this._coreService.decPrivateModes.reverseWraparound)return this._restrictCursor(),this._activeBuffer.x>0&&this._activeBuffer.x--,!0;if(this._restrictCursor(this._bufferService.cols),this._activeBuffer.x>0)this._activeBuffer.x--;else if(0===this._activeBuffer.x&&this._activeBuffer.y>this._activeBuffer.scrollTop&&this._activeBuffer.y<=this._activeBuffer.scrollBottom&&null!=(g=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y))&&g.isWrapped){this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).isWrapped=!1,this._activeBuffer.y--,this._activeBuffer.x=this._bufferService.cols-1;const g=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);g.hasWidth(this._activeBuffer.x)&&!g.hasContent(this._activeBuffer.x)&&this._activeBuffer.x--}return this._restrictCursor(),!0}tab(){if(this._activeBuffer.x>=this._bufferService.cols)return!0;const g=this._activeBuffer.x;return this._activeBuffer.x=this._activeBuffer.nextStop(),this._optionsService.rawOptions.screenReaderMode&&this._onA11yTab.fire(this._activeBuffer.x-g),!0}shiftOut(){return this._charsetService.setgLevel(1),!0}shiftIn(){return this._charsetService.setgLevel(0),!0}_restrictCursor(g=this._bufferService.cols-1){this._activeBuffer.x=Math.min(g,Math.max(0,this._activeBuffer.x)),this._activeBuffer.y=this._coreService.decPrivateModes.origin?Math.min(this._activeBuffer.scrollBottom,Math.max(this._activeBuffer.scrollTop,this._activeBuffer.y)):Math.min(this._bufferService.rows-1,Math.max(0,this._activeBuffer.y)),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}_setCursor(g,e){this._dirtyRowTracker.markDirty(this._activeBuffer.y),this._coreService.decPrivateModes.origin?(this._activeBuffer.x=g,this._activeBuffer.y=this._activeBuffer.scrollTop+e):(this._activeBuffer.x=g,this._activeBuffer.y=e),this._restrictCursor(),this._dirtyRowTracker.markDirty(this._activeBuffer.y)}_moveCursor(g,e){this._restrictCursor(),this._setCursor(this._activeBuffer.x+g,this._activeBuffer.y+e)}cursorUp(g){const e=this._activeBuffer.y-this._activeBuffer.scrollTop;return e>=0?this._moveCursor(0,-Math.min(e,g.params[0]||1)):this._moveCursor(0,-(g.params[0]||1)),!0}cursorDown(g){const e=this._activeBuffer.scrollBottom-this._activeBuffer.y;return e>=0?this._moveCursor(0,Math.min(e,g.params[0]||1)):this._moveCursor(0,g.params[0]||1),!0}cursorForward(g){return this._moveCursor(g.params[0]||1,0),!0}cursorBackward(g){return this._moveCursor(-(g.params[0]||1),0),!0}cursorNextLine(g){return this.cursorDown(g),this._activeBuffer.x=0,!0}cursorPrecedingLine(g){return this.cursorUp(g),this._activeBuffer.x=0,!0}cursorCharAbsolute(g){return this._setCursor((g.params[0]||1)-1,this._activeBuffer.y),!0}cursorPosition(g){return this._setCursor(g.length>=2?(g.params[1]||1)-1:0,(g.params[0]||1)-1),!0}charPosAbsolute(g){return this._setCursor((g.params[0]||1)-1,this._activeBuffer.y),!0}hPositionRelative(g){return this._moveCursor(g.params[0]||1,0),!0}linePosAbsolute(g){return this._setCursor(this._activeBuffer.x,(g.params[0]||1)-1),!0}vPositionRelative(g){return this._moveCursor(0,g.params[0]||1),!0}hVPosition(g){return this.cursorPosition(g),!0}tabClear(g){const e=g.params[0];return 0===e?delete this._activeBuffer.tabs[this._activeBuffer.x]:3===e&&(this._activeBuffer.tabs={}),!0}cursorForwardTab(g){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let e=g.params[0]||1;for(;e--;)this._activeBuffer.x=this._activeBuffer.nextStop();return!0}cursorBackwardTab(g){if(this._activeBuffer.x>=this._bufferService.cols)return!0;let e=g.params[0]||1;for(;e--;)this._activeBuffer.x=this._activeBuffer.prevStop();return!0}selectProtected(g){const e=g.params[0];return 1===e&&(this._curAttrData.bg|=536870912),2!==e&&0!==e||(this._curAttrData.bg&=-536870913),!0}_eraseInBufferLine(g,e,I,t=!1,C=!1){const i=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);i.replaceCells(e,I,this._activeBuffer.getNullCell(this._eraseAttrData()),C),t&&(i.isWrapped=!1)}_resetBufferLine(g,e=!1){const I=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);I&&(I.fill(this._activeBuffer.getNullCell(this._eraseAttrData()),e),this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase+g),I.isWrapped=!1)}eraseInDisplay(g,e=!1){let I;switch(this._restrictCursor(this._bufferService.cols),g.params[0]){case 0:for(I=this._activeBuffer.y,this._dirtyRowTracker.markDirty(I),this._eraseInBufferLine(I++,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,e);I<this._bufferService.rows;I++)this._resetBufferLine(I,e);this._dirtyRowTracker.markDirty(I);break;case 1:for(I=this._activeBuffer.y,this._dirtyRowTracker.markDirty(I),this._eraseInBufferLine(I,0,this._activeBuffer.x+1,!0,e),this._activeBuffer.x+1>=this._bufferService.cols&&(this._activeBuffer.lines.get(I+1).isWrapped=!1);I--;)this._resetBufferLine(I,e);this._dirtyRowTracker.markDirty(0);break;case 2:for(I=this._bufferService.rows,this._dirtyRowTracker.markDirty(I-1);I--;)this._resetBufferLine(I,e);this._dirtyRowTracker.markDirty(0);break;case 3:const g=this._activeBuffer.lines.length-this._bufferService.rows;g>0&&(this._activeBuffer.lines.trimStart(g),this._activeBuffer.ybase=Math.max(this._activeBuffer.ybase-g,0),this._activeBuffer.ydisp=Math.max(this._activeBuffer.ydisp-g,0),this._onScroll.fire(0))}return!0}eraseInLine(g,e=!1){switch(this._restrictCursor(this._bufferService.cols),g.params[0]){case 0:this._eraseInBufferLine(this._activeBuffer.y,this._activeBuffer.x,this._bufferService.cols,0===this._activeBuffer.x,e);break;case 1:this._eraseInBufferLine(this._activeBuffer.y,0,this._activeBuffer.x+1,!1,e);break;case 2:this._eraseInBufferLine(this._activeBuffer.y,0,this._bufferService.cols,!0,e)}return this._dirtyRowTracker.markDirty(this._activeBuffer.y),!0}insertLines(g){this._restrictCursor();let e=g.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const I=this._activeBuffer.ybase+this._activeBuffer.y,t=this._bufferService.rows-1-this._activeBuffer.scrollBottom,C=this._bufferService.rows-1+this._activeBuffer.ybase-t+1;for(;e--;)this._activeBuffer.lines.splice(C-1,1),this._activeBuffer.lines.splice(I,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}deleteLines(g){this._restrictCursor();let e=g.params[0]||1;if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const I=this._activeBuffer.ybase+this._activeBuffer.y;let t;for(t=this._bufferService.rows-1-this._activeBuffer.scrollBottom,t=this._bufferService.rows-1+this._activeBuffer.ybase-t;e--;)this._activeBuffer.lines.splice(I,1),this._activeBuffer.lines.splice(t,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y,this._activeBuffer.scrollBottom),this._activeBuffer.x=0,!0}insertChars(g){this._restrictCursor();const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return e&&(e.insertCells(this._activeBuffer.x,g.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData())),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}deleteChars(g){this._restrictCursor();const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return e&&(e.deleteCells(this._activeBuffer.x,g.params[0]||1,this._activeBuffer.getNullCell(this._eraseAttrData())),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}scrollUp(g){let e=g.params[0]||1;for(;e--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,0,this._activeBuffer.getBlankLine(this._eraseAttrData()));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollDown(g){let e=g.params[0]||1;for(;e--;)this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollBottom,1),this._activeBuffer.lines.splice(this._activeBuffer.ybase+this._activeBuffer.scrollTop,0,this._activeBuffer.getBlankLine(o.DEFAULT_ATTR_DATA));return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollLeft(g){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const e=g.params[0]||1;for(let g=this._activeBuffer.scrollTop;g<=this._activeBuffer.scrollBottom;++g){const I=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);I.deleteCells(0,e,this._activeBuffer.getNullCell(this._eraseAttrData())),I.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}scrollRight(g){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const e=g.params[0]||1;for(let g=this._activeBuffer.scrollTop;g<=this._activeBuffer.scrollBottom;++g){const I=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);I.insertCells(0,e,this._activeBuffer.getNullCell(this._eraseAttrData())),I.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}insertColumns(g){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const e=g.params[0]||1;for(let g=this._activeBuffer.scrollTop;g<=this._activeBuffer.scrollBottom;++g){const I=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);I.insertCells(this._activeBuffer.x,e,this._activeBuffer.getNullCell(this._eraseAttrData())),I.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}deleteColumns(g){if(this._activeBuffer.y>this._activeBuffer.scrollBottom||this._activeBuffer.y<this._activeBuffer.scrollTop)return!0;const e=g.params[0]||1;for(let g=this._activeBuffer.scrollTop;g<=this._activeBuffer.scrollBottom;++g){const I=this._activeBuffer.lines.get(this._activeBuffer.ybase+g);I.deleteCells(this._activeBuffer.x,e,this._activeBuffer.getNullCell(this._eraseAttrData())),I.isWrapped=!1}return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom),!0}eraseChars(g){this._restrictCursor();const e=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y);return e&&(e.replaceCells(this._activeBuffer.x,this._activeBuffer.x+(g.params[0]||1),this._activeBuffer.getNullCell(this._eraseAttrData())),this._dirtyRowTracker.markDirty(this._activeBuffer.y)),!0}repeatPrecedingCharacter(g){const e=this._parser.precedingJoinState;if(!e)return!0;const I=g.params[0]||1,t=h.UnicodeService.extractWidth(e),C=this._activeBuffer.x-t,i=this._activeBuffer.lines.get(this._activeBuffer.ybase+this._activeBuffer.y).getString(C),l=new Uint32Array(i.length*I);let n=0;for(let g=0;g<i.length;){const e=i.codePointAt(g)||0;l[n++]=e,g+=e>65535?2:1}let A=n;for(let g=1;g<I;++g)l.copyWithin(A,0,n),A+=n;return this.print(l,0,A),!0}sendDeviceAttributesPrimary(g){return g.params[0]>0||(this._is("xterm")||this._is("rxvt-unicode")||this._is("screen")?this._coreService.triggerDataEvent(i.C0.ESC+"[?1;2c"):this._is("linux")&&this._coreService.triggerDataEvent(i.C0.ESC+"[?6c")),!0}sendDeviceAttributesSecondary(g){return g.params[0]>0||(this._is("xterm")?this._coreService.triggerDataEvent(i.C0.ESC+"[>0;276;0c"):this._is("rxvt-unicode")?this._coreService.triggerDataEvent(i.C0.ESC+"[>85;95;0c"):this._is("linux")?this._coreService.triggerDataEvent(g.params[0]+"c"):this._is("screen")&&this._coreService.triggerDataEvent(i.C0.ESC+"[>83;40003;0c")),!0}_is(g){return 0===(this._optionsService.rawOptions.termName+"").indexOf(g)}setMode(g){for(let e=0;e<g.length;e++)switch(g.params[e]){case 4:this._coreService.modes.insertMode=!0;break;case 20:this._optionsService.options.convertEol=!0}return!0}setModePrivate(g){for(let e=0;e<g.length;e++)switch(g.params[e]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!0;break;case 2:this._charsetService.setgCharset(0,l.DEFAULT_CHARSET),this._charsetService.setgCharset(1,l.DEFAULT_CHARSET),this._charsetService.setgCharset(2,l.DEFAULT_CHARSET),this._charsetService.setgCharset(3,l.DEFAULT_CHARSET);break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(132,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!0,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!0;break;case 12:this._optionsService.options.cursorBlink=!0;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!0;break;case 66:this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire();break;case 9:this._coreMouseService.activeProtocol="X10";break;case 1e3:this._coreMouseService.activeProtocol="VT200";break;case 1002:this._coreMouseService.activeProtocol="DRAG";break;case 1003:this._coreMouseService.activeProtocol="ANY";break;case 1004:this._coreService.decPrivateModes.sendFocus=!0,this._onRequestSendFocus.fire();break;case 1005:this._logService.debug("DECSET 1005 not supported (see #2507)");break;case 1006:this._coreMouseService.activeEncoding="SGR";break;case 1015:this._logService.debug("DECSET 1015 not supported (see #2507)");break;case 1016:this._coreMouseService.activeEncoding="SGR_PIXELS";break;case 25:this._coreService.isCursorHidden=!1;break;case 1048:this.saveCursor();break;case 1049:this.saveCursor();case 47:case 1047:this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!0}return!0}resetMode(g){for(let e=0;e<g.length;e++)switch(g.params[e]){case 4:this._coreService.modes.insertMode=!1;break;case 20:this._optionsService.options.convertEol=!1}return!0}resetModePrivate(g){for(let e=0;e<g.length;e++)switch(g.params[e]){case 1:this._coreService.decPrivateModes.applicationCursorKeys=!1;break;case 3:this._optionsService.rawOptions.windowOptions.setWinLines&&(this._bufferService.resize(80,this._bufferService.rows),this._onRequestReset.fire());break;case 6:this._coreService.decPrivateModes.origin=!1,this._setCursor(0,0);break;case 7:this._coreService.decPrivateModes.wraparound=!1;break;case 12:this._optionsService.options.cursorBlink=!1;break;case 45:this._coreService.decPrivateModes.reverseWraparound=!1;break;case 66:this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire();break;case 9:case 1e3:case 1002:case 1003:this._coreMouseService.activeProtocol="NONE";break;case 1004:this._coreService.decPrivateModes.sendFocus=!1;break;case 1005:this._logService.debug("DECRST 1005 not supported (see #2507)");break;case 1006:case 1016:this._coreMouseService.activeEncoding="DEFAULT";break;case 1015:this._logService.debug("DECRST 1015 not supported (see #2507)");break;case 25:this._coreService.isCursorHidden=!0;break;case 1048:this.restoreCursor();break;case 1049:case 47:case 1047:this._bufferService.buffers.activateNormalBuffer(),1049===g.params[e]&&this.restoreCursor(),this._coreService.isCursorInitialized=!0,this._onRequestRefreshRows.fire(0,this._bufferService.rows-1),this._onRequestSyncScrollBar.fire();break;case 2004:this._coreService.decPrivateModes.bracketedPasteMode=!1}return!0}requestMode(g,e){const I=this._coreService.decPrivateModes,{activeProtocol:t,activeEncoding:C}=this._coreMouseService,l=this._coreService,{buffers:n,cols:A}=this._bufferService,{active:d,alt:o}=n,s=this._optionsService.rawOptions,a=g=>g?1:2,V=g.params[0];return c=V,r=e?2===V?4:4===V?a(l.modes.insertMode):12===V?3:20===V?a(s.convertEol):0:1===V?a(I.applicationCursorKeys):3===V?s.windowOptions.setWinLines?80===A?2:132===A?1:0:0:6===V?a(I.origin):7===V?a(I.wraparound):8===V?3:9===V?a("X10"===t):12===V?a(s.cursorBlink):25===V?a(!l.isCursorHidden):45===V?a(I.reverseWraparound):66===V?a(I.applicationKeypad):67===V?4:1e3===V?a("VT200"===t):1002===V?a("DRAG"===t):1003===V?a("ANY"===t):1004===V?a(I.sendFocus):1005===V?4:1006===V?a("SGR"===C):1015===V?4:1016===V?a("SGR_PIXELS"===C):1048===V?1:47===V||1047===V||1049===V?a(d===o):2004===V?a(I.bracketedPasteMode):0,l.triggerDataEvent(`${i.C0.ESC}[${e?"":"?"}${c};${r}$y`),!0;var c,r}_updateAttrColor(g,e,I,t,C){return 2===e?(g|=50331648,g&=-16777216,g|=c.AttributeData.fromColorRGB([I,t,C])):5===e&&(g&=-50331904,g|=33554432|255&I),g}_extractColor(g,e,I){const t=[0,0,-1,0,0,0];let C=0,i=0;do{if(t[i+C]=g.params[e+i],g.hasSubParams(e+i)){const I=g.getSubParams(e+i);let l=0;do{5===t[1]&&(C=1),t[i+l+1+C]=I[l]}while(++l<I.length&&l+i+1+C<t.length);break}if(5===t[1]&&i+C>=2||2===t[1]&&i+C>=5)break;t[1]&&(C=1)}while(++i+e<g.length&&i+C<t.length);for(let g=2;g<t.length;++g)-1===t[g]&&(t[g]=0);switch(t[0]){case 38:I.fg=this._updateAttrColor(I.fg,t[1],t[3],t[4],t[5]);break;case 48:I.bg=this._updateAttrColor(I.bg,t[1],t[3],t[4],t[5]);break;case 58:I.extended=I.extended.clone(),I.extended.underlineColor=this._updateAttrColor(I.extended.underlineColor,t[1],t[3],t[4],t[5])}return i}_processUnderline(g,e){e.extended=e.extended.clone(),(!~g||g>5)&&(g=1),e.extended.underlineStyle=g,e.fg|=268435456,0===g&&(e.fg&=-268435457),e.updateExtended()}_processSGR0(g){g.fg=o.DEFAULT_ATTR_DATA.fg,g.bg=o.DEFAULT_ATTR_DATA.bg,g.extended=g.extended.clone(),g.extended.underlineStyle=0,g.extended.underlineColor&=-67108864,g.updateExtended()}charAttributes(g){if(1===g.length&&0===g.params[0])return this._processSGR0(this._curAttrData),!0;const e=g.length;let I;const t=this._curAttrData;for(let C=0;C<e;C++)I=g.params[C],I>=30&&I<=37?(t.fg&=-50331904,t.fg|=16777216|I-30):I>=40&&I<=47?(t.bg&=-50331904,t.bg|=16777216|I-40):I>=90&&I<=97?(t.fg&=-50331904,t.fg|=16777224|I-90):I>=100&&I<=107?(t.bg&=-50331904,t.bg|=16777224|I-100):0===I?this._processSGR0(t):1===I?t.fg|=134217728:3===I?t.bg|=67108864:4===I?(t.fg|=268435456,this._processUnderline(g.hasSubParams(C)?g.getSubParams(C)[0]:1,t)):5===I?t.fg|=536870912:7===I?t.fg|=67108864:8===I?t.fg|=1073741824:9===I?t.fg|=2147483648:2===I?t.bg|=134217728:21===I?this._processUnderline(2,t):22===I?(t.fg&=-134217729,t.bg&=-134217729):23===I?t.bg&=-67108865:24===I?(t.fg&=-268435457,this._processUnderline(0,t)):25===I?t.fg&=-536870913:27===I?t.fg&=-67108865:28===I?t.fg&=-1073741825:29===I?t.fg&=2147483647:39===I?(t.fg&=-67108864,t.fg|=16777215&o.DEFAULT_ATTR_DATA.fg):49===I?(t.bg&=-67108864,t.bg|=16777215&o.DEFAULT_ATTR_DATA.bg):38===I||48===I||58===I?C+=this._extractColor(g,C,t):53===I?t.bg|=1073741824:55===I?t.bg&=-1073741825:59===I?(t.extended=t.extended.clone(),t.extended.underlineColor=-1,t.updateExtended()):100===I?(t.fg&=-67108864,t.fg|=16777215&o.DEFAULT_ATTR_DATA.fg,t.bg&=-67108864,t.bg|=16777215&o.DEFAULT_ATTR_DATA.bg):this._logService.debug("Unknown SGR attribute: %d.",I);return!0}deviceStatus(g){switch(g.params[0]){case 5:this._coreService.triggerDataEvent(`${i.C0.ESC}[0n`);break;case 6:const g=this._activeBuffer.y+1,e=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[${g};${e}R`)}return!0}deviceStatusPrivate(g){if(6===g.params[0]){const g=this._activeBuffer.y+1,e=this._activeBuffer.x+1;this._coreService.triggerDataEvent(`${i.C0.ESC}[?${g};${e}R`)}return!0}softReset(g){return this._coreService.isCursorHidden=!1,this._onRequestSyncScrollBar.fire(),this._activeBuffer.scrollTop=0,this._activeBuffer.scrollBottom=this._bufferService.rows-1,this._curAttrData=o.DEFAULT_ATTR_DATA.clone(),this._coreService.reset(),this._charsetService.reset(),this._activeBuffer.savedX=0,this._activeBuffer.savedY=this._activeBuffer.ybase,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,this._coreService.decPrivateModes.origin=!1,!0}setCursorStyle(g){const e=g.params[0]||1;switch(e){case 1:case 2:this._optionsService.options.cursorStyle="block";break;case 3:case 4:this._optionsService.options.cursorStyle="underline";break;case 5:case 6:this._optionsService.options.cursorStyle="bar"}const I=e%2==1;return this._optionsService.options.cursorBlink=I,!0}setScrollRegion(g){const e=g.params[0]||1;let I;return(g.length<2||(I=g.params[1])>this._bufferService.rows||0===I)&&(I=this._bufferService.rows),I>e&&(this._activeBuffer.scrollTop=e-1,this._activeBuffer.scrollBottom=I-1,this._setCursor(0,0)),!0}windowOptions(g){if(!B(g.params[0],this._optionsService.rawOptions.windowOptions))return!0;const e=g.length>1?g.params[1]:0;switch(g.params[0]){case 14:2!==e&&this._onRequestWindowsOptionsReport.fire(W.GET_WIN_SIZE_PIXELS);break;case 16:this._onRequestWindowsOptionsReport.fire(W.GET_CELL_SIZE_PIXELS);break;case 18:this._bufferService&&this._coreService.triggerDataEvent(`${i.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);break;case 22:0!==e&&2!==e||(this._windowTitleStack.push(this._windowTitle),this._windowTitleStack.length>10&&this._windowTitleStack.shift()),0!==e&&1!==e||(this._iconNameStack.push(this._iconName),this._iconNameStack.length>10&&this._iconNameStack.shift());break;case 23:0!==e&&2!==e||this._windowTitleStack.length&&this.setTitle(this._windowTitleStack.pop()),0!==e&&1!==e||this._iconNameStack.length&&this.setIconName(this._iconNameStack.pop())}return!0}saveCursor(g){return this._activeBuffer.savedX=this._activeBuffer.x,this._activeBuffer.savedY=this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.savedCurAttrData.fg=this._curAttrData.fg,this._activeBuffer.savedCurAttrData.bg=this._curAttrData.bg,this._activeBuffer.savedCharset=this._charsetService.charset,!0}restoreCursor(g){return this._activeBuffer.x=this._activeBuffer.savedX||0,this._activeBuffer.y=Math.max(this._activeBuffer.savedY-this._activeBuffer.ybase,0),this._curAttrData.fg=this._activeBuffer.savedCurAttrData.fg,this._curAttrData.bg=this._activeBuffer.savedCurAttrData.bg,this._charsetService.charset=this._savedCharset,this._activeBuffer.savedCharset&&(this._charsetService.charset=this._activeBuffer.savedCharset),this._restrictCursor(),!0}setTitle(g){return this._windowTitle=g,this._onTitleChange.fire(g),!0}setIconName(g){return this._iconName=g,!0}setOrReportIndexedColor(g){const e=[],I=g.split(";");for(;I.length>1;){const g=I.shift(),t=I.shift();if(/^\d+$/.exec(g)){const I=parseInt(g);if(u(I))if("?"===t)e.push({type:0,index:I});else{const g=(0,R.parseColor)(t);g&&e.push({type:1,index:I,color:g})}}}return e.length&&this._onColor.fire(e),!0}setHyperlink(g){const e=g.split(";");return!(e.length<2)&&(e[1]?this._createHyperlink(e[0],e[1]):!e[0]&&this._finishHyperlink())}_createHyperlink(g,e){this._getCurrentLinkId()&&this._finishHyperlink();const I=g.split(":");let t;const C=I.findIndex((g=>g.startsWith("id=")));return-1!==C&&(t=I[C].slice(3)||void 0),this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=this._oscLinkService.registerLink({id:t,uri:e}),this._curAttrData.updateExtended(),!0}_finishHyperlink(){return this._curAttrData.extended=this._curAttrData.extended.clone(),this._curAttrData.extended.urlId=0,this._curAttrData.updateExtended(),!0}_setOrReportSpecialColor(g,e){const I=g.split(";");for(let g=0;g<I.length&&!(e>=this._specialColors.length);++g,++e)if("?"===I[g])this._onColor.fire([{type:0,index:this._specialColors[e]}]);else{const t=(0,R.parseColor)(I[g]);t&&this._onColor.fire([{type:1,index:this._specialColors[e],color:t}])}return!0}setOrReportFgColor(g){return this._setOrReportSpecialColor(g,0)}setOrReportBgColor(g){return this._setOrReportSpecialColor(g,1)}setOrReportCursorColor(g){return this._setOrReportSpecialColor(g,2)}restoreIndexedColor(g){if(!g)return this._onColor.fire([{type:2}]),!0;const e=[],I=g.split(";");for(let g=0;g<I.length;++g)if(/^\d+$/.exec(I[g])){const t=parseInt(I[g]);u(t)&&e.push({type:2,index:t})}return e.length&&this._onColor.fire(e),!0}restoreFgColor(g){return this._onColor.fire([{type:2,index:256}]),!0}restoreBgColor(g){return this._onColor.fire([{type:2,index:257}]),!0}restoreCursorColor(g){return this._onColor.fire([{type:2,index:258}]),!0}nextLine(){return this._activeBuffer.x=0,this.index(),!0}keypadApplicationMode(){return this._logService.debug("Serial port requested application keypad."),this._coreService.decPrivateModes.applicationKeypad=!0,this._onRequestSyncScrollBar.fire(),!0}keypadNumericMode(){return this._logService.debug("Switching back to normal keypad."),this._coreService.decPrivateModes.applicationKeypad=!1,this._onRequestSyncScrollBar.fire(),!0}selectDefaultCharset(){return this._charsetService.setgLevel(0),this._charsetService.setgCharset(0,l.DEFAULT_CHARSET),!0}selectCharset(g){return 2!==g.length?(this.selectDefaultCharset(),!0):("/"===g[0]||this._charsetService.setgCharset(F[g[0]],l.CHARSETS[g[1]]||l.DEFAULT_CHARSET),!0)}index(){return this._restrictCursor(),this._activeBuffer.y++,this._activeBuffer.y===this._activeBuffer.scrollBottom+1?(this._activeBuffer.y--,this._bufferService.scroll(this._eraseAttrData())):this._activeBuffer.y>=this._bufferService.rows&&(this._activeBuffer.y=this._bufferService.rows-1),this._restrictCursor(),!0}tabSet(){return this._activeBuffer.tabs[this._activeBuffer.x]=!0,!0}reverseIndex(){if(this._restrictCursor(),this._activeBuffer.y===this._activeBuffer.scrollTop){const g=this._activeBuffer.scrollBottom-this._activeBuffer.scrollTop;this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase+this._activeBuffer.y,g,1),this._activeBuffer.lines.set(this._activeBuffer.ybase+this._activeBuffer.y,this._activeBuffer.getBlankLine(this._eraseAttrData())),this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop,this._activeBuffer.scrollBottom)}else this._activeBuffer.y--,this._restrictCursor();return!0}fullReset(){return this._parser.reset(),this._onRequestReset.fire(),!0}reset(){this._curAttrData=o.DEFAULT_ATTR_DATA.clone(),this._eraseAttrDataInternal=o.DEFAULT_ATTR_DATA.clone()}_eraseAttrData(){return this._eraseAttrDataInternal.bg&=-67108864,this._eraseAttrDataInternal.bg|=67108863&this._curAttrData.bg,this._eraseAttrDataInternal}setgLevel(g){return this._charsetService.setgLevel(g),!0}screenAlignmentPattern(){const g=new V.CellData;g.content=4194373,g.fg=this._curAttrData.fg,g.bg=this._curAttrData.bg,this._setCursor(0,0);for(let e=0;e<this._bufferService.rows;++e){const I=this._activeBuffer.ybase+this._activeBuffer.y+e,t=this._activeBuffer.lines.get(I);t&&(t.fill(g),t.isWrapped=!1)}return this._dirtyRowTracker.markAllDirty(),this._setCursor(0,0),!0}requestStatusString(g,e){const I=this._bufferService.buffer,t=this._optionsService.rawOptions;return(g=>(this._coreService.triggerDataEvent(`${i.C0.ESC}${g}${i.C0.ESC}\\`),!0))('"q'===g?`P1$r${this._curAttrData.isProtected()?1:0}"q`:'"p'===g?'P1$r61;1"p':"r"===g?`P1$r${I.scrollTop+1};${I.scrollBottom+1}r`:"m"===g?"P1$r0m":" q"===g?`P1$r${{block:2,underline:4,bar:6}[t.cursorStyle]-(t.cursorBlink?1:0)} q`:"P0$r")}markRangeDirty(g,e){this._dirtyRowTracker.markRangeDirty(g,e)}}e.InputHandler=S;let b=class{constructor(g){this._bufferService=g,this.clearRange()}clearRange(){this.start=this._bufferService.buffer.y,this.end=this._bufferService.buffer.y}markDirty(g){g<this.start?this.start=g:g>this.end&&(this.end=g)}markRangeDirty(g,e){g>e&&(p=g,g=e,e=p),g<this.start&&(this.start=g),e>this.end&&(this.end=e)}markAllDirty(){this.markRangeDirty(0,this._bufferService.rows-1)}};function u(g){return 0<=g&&g<256}b=t([C(0,r.IBufferService)],b)},844:(g,e)=>{function I(g){for(const e of g)e.dispose();g.length=0}Object.defineProperty(e,"__esModule",{value:!0}),e.getDisposeArrayDisposable=e.disposeArray=e.toDisposable=e.MutableDisposable=e.Disposable=void 0,e.Disposable=class{constructor(){this._disposables=[],this._isDisposed=!1}dispose(){this._isDisposed=!0;for(const g of this._disposables)g.dispose();this._disposables.length=0}register(g){return this._disposables.push(g),g}unregister(g){const e=this._disposables.indexOf(g);-1!==e&&this._disposables.splice(e,1)}},e.MutableDisposable=class{constructor(){this._isDisposed=!1}get value(){return this._isDisposed?void 0:this._value}set value(g){var e;this._isDisposed||g===this._value||(null==(e=this._value)||e.dispose(),this._value=g)}clear(){this.value=void 0}dispose(){var g;this._isDisposed=!0,null==(g=this._value)||g.dispose(),this._value=void 0}},e.toDisposable=function(g){return{dispose:g}},e.disposeArray=I,e.getDisposeArrayDisposable=function(g){return{dispose:()=>I(g)}}},1505:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FourKeyMap=e.TwoKeyMap=void 0;class I{constructor(){this._data={}}set(g,e,I){this._data[g]||(this._data[g]={}),this._data[g][e]=I}get(g,e){return this._data[g]?this._data[g][e]:void 0}clear(){this._data={}}}e.TwoKeyMap=I,e.FourKeyMap=class{constructor(){this._data=new I}set(g,e,t,C,i){this._data.get(g,e)||this._data.set(g,e,new I),this._data.get(g,e).set(t,C,i)}get(g,e,I,t){var C;return null==(C=this._data.get(g,e))?void 0:C.get(I,t)}clear(){this._data.clear()}}},6114:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.isChromeOS=e.isLinux=e.isWindows=e.isIphone=e.isIpad=e.isMac=e.getSafariVersion=e.isSafari=e.isLegacyEdge=e.isFirefox=e.isNode=void 0,e.isNode=typeof fg<"u"&&"title"in fg;const I=e.isNode?"node":navigator.userAgent,t=e.isNode?"node":navigator.platform;e.isFirefox=I.includes("Firefox"),e.isLegacyEdge=I.includes("Edge"),e.isSafari=/^((?!chrome|android).)*safari/i.test(I),e.getSafariVersion=function(){if(!e.isSafari)return 0;const g=I.match(/Version\/(\d+)/);return null===g||g.length<2?0:parseInt(g[1])},e.isMac=["Macintosh","MacIntel","MacPPC","Mac68K"].includes(t),e.isIpad="iPad"===t,e.isIphone="iPhone"===t,e.isWindows=["Windows","Win16","Win32","WinCE"].includes(t),e.isLinux=t.indexOf("Linux")>=0,e.isChromeOS=/\bCrOS\b/.test(I)},6106:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SortedList=void 0;let I=0;e.SortedList=class{constructor(g){this._getKey=g,this._array=[]}clear(){this._array.length=0}insert(g){0!==this._array.length?(I=this._search(this._getKey(g)),this._array.splice(I,0,g)):this._array.push(g)}delete(g){if(0===this._array.length)return!1;const e=this._getKey(g);if(void 0===e||(I=this._search(e),-1===I)||this._getKey(this._array[I])!==e)return!1;do{if(this._array[I]===g)return this._array.splice(I,1),!0}while(++I<this._array.length&&this._getKey(this._array[I])===e);return!1}*getKeyIterator(g){if(0!==this._array.length&&(I=this._search(g),!(I<0||I>=this._array.length)&&this._getKey(this._array[I])===g))do{yield this._array[I]}while(++I<this._array.length&&this._getKey(this._array[I])===g)}forEachByKey(g,e){if(0!==this._array.length&&(I=this._search(g),!(I<0||I>=this._array.length)&&this._getKey(this._array[I])===g))do{e(this._array[I])}while(++I<this._array.length&&this._getKey(this._array[I])===g)}values(){return[...this._array].values()}_search(g){let e=0,I=this._array.length-1;for(;I>=e;){let t=e+I>>1;const C=this._getKey(this._array[t]);if(C>g)I=t-1;else{if(!(C<g)){for(;t>0&&this._getKey(this._array[t-1])===g;)t--;return t}e=t+1}}return e}}},7226:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DebouncedIdleTask=e.IdleTaskQueue=e.PriorityTaskQueue=void 0;const t=I(6114);class C{constructor(){this._tasks=[],this._i=0}enqueue(g){this._tasks.push(g),this._start()}flush(){for(;this._i<this._tasks.length;)this._tasks[this._i]()||this._i++;this.clear()}clear(){this._idleCallback&&(this._cancelCallback(this._idleCallback),this._idleCallback=void 0),this._i=0,this._tasks.length=0}_start(){this._idleCallback||(this._idleCallback=this._requestCallback(this._process.bind(this)))}_process(g){this._idleCallback=void 0;let e=0,I=0,t=g.timeRemaining(),C=0;for(;this._i<this._tasks.length;){if(e=Date.now(),this._tasks[this._i]()||this._i++,e=Math.max(1,Date.now()-e),I=Math.max(e,I),C=g.timeRemaining(),1.5*I>C)return void this._start();t=C}this.clear()}}class i extends C{_requestCallback(g){return setTimeout((()=>g(this._createDeadline(16))))}_cancelCallback(g){clearTimeout(g)}_createDeadline(g){const e=Date.now()+g;return{timeRemaining:()=>Math.max(0,e-Date.now())}}}e.PriorityTaskQueue=i,e.IdleTaskQueue=!t.isNode&&"requestIdleCallback"in window?class extends C{_requestCallback(g){return requestIdleCallback(g)}_cancelCallback(g){cancelIdleCallback(g)}}:i,e.DebouncedIdleTask=class{constructor(){this._queue=new e.IdleTaskQueue}set(g){this._queue.clear(),this._queue.enqueue(g)}flush(){this._queue.flush()}}},9282:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updateWindowsModeWrappedState=void 0;const t=I(643);e.updateWindowsModeWrappedState=function(g){const e=g.buffer.lines.get(g.buffer.ybase+g.buffer.y-1),I=null==e?void 0:e.get(g.cols-1),C=g.buffer.lines.get(g.buffer.ybase+g.buffer.y);C&&I&&(C.isWrapped=I[t.CHAR_DATA_CODE_INDEX]!==t.NULL_CELL_CODE&&I[t.CHAR_DATA_CODE_INDEX]!==t.WHITESPACE_CELL_CODE)}},3734:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ExtendedAttrs=e.AttributeData=void 0;class I{constructor(){this.fg=0,this.bg=0,this.extended=new t}static toColorRGB(g){return[g>>>16&255,g>>>8&255,255&g]}static fromColorRGB(g){return(255&g[0])<<16|(255&g[1])<<8|255&g[2]}clone(){const g=new I;return g.fg=this.fg,g.bg=this.bg,g.extended=this.extended.clone(),g}isInverse(){return 67108864&this.fg}isBold(){return 134217728&this.fg}isUnderline(){return this.hasExtendedAttrs()&&0!==this.extended.underlineStyle?1:268435456&this.fg}isBlink(){return 536870912&this.fg}isInvisible(){return 1073741824&this.fg}isItalic(){return 67108864&this.bg}isDim(){return 134217728&this.bg}isStrikethrough(){return 2147483648&this.fg}isProtected(){return 536870912&this.bg}isOverline(){return 1073741824&this.bg}getFgColorMode(){return 50331648&this.fg}getBgColorMode(){return 50331648&this.bg}isFgRGB(){return!(50331648&~this.fg)}isBgRGB(){return!(50331648&~this.bg)}isFgPalette(){return 16777216==(50331648&this.fg)||33554432==(50331648&this.fg)}isBgPalette(){return 16777216==(50331648&this.bg)||33554432==(50331648&this.bg)}isFgDefault(){return!(50331648&this.fg)}isBgDefault(){return!(50331648&this.bg)}isAttributeDefault(){return 0===this.fg&&0===this.bg}getFgColor(){switch(50331648&this.fg){case 16777216:case 33554432:return 255&this.fg;case 50331648:return 16777215&this.fg;default:return-1}}getBgColor(){switch(50331648&this.bg){case 16777216:case 33554432:return 255&this.bg;case 50331648:return 16777215&this.bg;default:return-1}}hasExtendedAttrs(){return 268435456&this.bg}updateExtended(){this.extended.isEmpty()?this.bg&=-268435457:this.bg|=268435456}getUnderlineColor(){if(268435456&this.bg&&~this.extended.underlineColor)switch(50331648&this.extended.underlineColor){case 16777216:case 33554432:return 255&this.extended.underlineColor;case 50331648:return 16777215&this.extended.underlineColor;default:return this.getFgColor()}return this.getFgColor()}getUnderlineColorMode(){return 268435456&this.bg&&~this.extended.underlineColor?50331648&this.extended.underlineColor:this.getFgColorMode()}isUnderlineColorRGB(){return 268435456&this.bg&&~this.extended.underlineColor?!(50331648&~this.extended.underlineColor):this.isFgRGB()}isUnderlineColorPalette(){return 268435456&this.bg&&~this.extended.underlineColor?16777216==(50331648&this.extended.underlineColor)||33554432==(50331648&this.extended.underlineColor):this.isFgPalette()}isUnderlineColorDefault(){return 268435456&this.bg&&~this.extended.underlineColor?!(50331648&this.extended.underlineColor):this.isFgDefault()}getUnderlineStyle(){return 268435456&this.fg?268435456&this.bg?this.extended.underlineStyle:1:0}getUnderlineVariantOffset(){return this.extended.underlineVariantOffset}}e.AttributeData=I;class t{get ext(){return this._urlId?-469762049&this._ext|this.underlineStyle<<26:this._ext}set ext(g){this._ext=g}get underlineStyle(){return this._urlId?5:(469762048&this._ext)>>26}set underlineStyle(g){this._ext&=-469762049,this._ext|=g<<26&469762048}get underlineColor(){return 67108863&this._ext}set underlineColor(g){this._ext&=-67108864,this._ext|=67108863&g}get urlId(){return this._urlId}set urlId(g){this._urlId=g}get underlineVariantOffset(){const g=(3758096384&this._ext)>>29;return g<0?4294967288^g:g}set underlineVariantOffset(g){this._ext&=536870911,this._ext|=g<<29&3758096384}constructor(g=0,e=0){this._ext=0,this._urlId=0,this._ext=g,this._urlId=e}clone(){return new t(this._ext,this._urlId)}isEmpty(){return 0===this.underlineStyle&&0===this._urlId}}e.ExtendedAttrs=t},9092:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Buffer=e.MAX_BUFFER_SIZE=void 0;const t=I(6349),C=I(7226),i=I(3734),l=I(8437),n=I(4634),A=I(511),d=I(643),o=I(4863),s=I(7116);e.MAX_BUFFER_SIZE=4294967295,e.Buffer=class{constructor(g,e,I){this._hasScrollback=g,this._optionsService=e,this._bufferService=I,this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.tabs={},this.savedY=0,this.savedX=0,this.savedCurAttrData=l.DEFAULT_ATTR_DATA.clone(),this.savedCharset=s.DEFAULT_CHARSET,this.markers=[],this._nullCell=A.CellData.fromCharData([0,d.NULL_CELL_CHAR,d.NULL_CELL_WIDTH,d.NULL_CELL_CODE]),this._whitespaceCell=A.CellData.fromCharData([0,d.WHITESPACE_CELL_CHAR,d.WHITESPACE_CELL_WIDTH,d.WHITESPACE_CELL_CODE]),this._isClearing=!1,this._memoryCleanupQueue=new C.IdleTaskQueue,this._memoryCleanupPosition=0,this._cols=this._bufferService.cols,this._rows=this._bufferService.rows,this.lines=new t.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}getNullCell(g){return g?(this._nullCell.fg=g.fg,this._nullCell.bg=g.bg,this._nullCell.extended=g.extended):(this._nullCell.fg=0,this._nullCell.bg=0,this._nullCell.extended=new i.ExtendedAttrs),this._nullCell}getWhitespaceCell(g){return g?(this._whitespaceCell.fg=g.fg,this._whitespaceCell.bg=g.bg,this._whitespaceCell.extended=g.extended):(this._whitespaceCell.fg=0,this._whitespaceCell.bg=0,this._whitespaceCell.extended=new i.ExtendedAttrs),this._whitespaceCell}getBlankLine(g,e){return new l.BufferLine(this._bufferService.cols,this.getNullCell(g),e)}get hasScrollback(){return this._hasScrollback&&this.lines.maxLength>this._rows}get isCursorInViewport(){const g=this.ybase+this.y-this.ydisp;return g>=0&&g<this._rows}_getCorrectBufferLength(g){if(!this._hasScrollback)return g;const I=g+this._optionsService.rawOptions.scrollback;return I>e.MAX_BUFFER_SIZE?e.MAX_BUFFER_SIZE:I}fillViewportRows(g){if(0===this.lines.length){void 0===g&&(g=l.DEFAULT_ATTR_DATA);let e=this._rows;for(;e--;)this.lines.push(this.getBlankLine(g))}}clear(){this.ydisp=0,this.ybase=0,this.y=0,this.x=0,this.lines=new t.CircularList(this._getCorrectBufferLength(this._rows)),this.scrollTop=0,this.scrollBottom=this._rows-1,this.setupTabStops()}resize(g,e){const I=this.getNullCell(l.DEFAULT_ATTR_DATA);let t=0;const C=this._getCorrectBufferLength(e);if(C>this.lines.maxLength&&(this.lines.maxLength=C),this.lines.length>0){if(this._cols<g)for(let e=0;e<this.lines.length;e++)t+=+this.lines.get(e).resize(g,I);let i=0;if(this._rows<e)for(let t=this._rows;t<e;t++)this.lines.length<e+this.ybase&&(this._optionsService.rawOptions.windowsMode||void 0!==this._optionsService.rawOptions.windowsPty.backend||void 0!==this._optionsService.rawOptions.windowsPty.buildNumber?this.lines.push(new l.BufferLine(g,I)):this.ybase>0&&this.lines.length<=this.ybase+this.y+i+1?(this.ybase--,i++,this.ydisp>0&&this.ydisp--):this.lines.push(new l.BufferLine(g,I)));else for(let g=this._rows;g>e;g--)this.lines.length>e+this.ybase&&(this.lines.length>this.ybase+this.y+1?this.lines.pop():(this.ybase++,this.ydisp++));if(C<this.lines.maxLength){const g=this.lines.length-C;g>0&&(this.lines.trimStart(g),this.ybase=Math.max(this.ybase-g,0),this.ydisp=Math.max(this.ydisp-g,0),this.savedY=Math.max(this.savedY-g,0)),this.lines.maxLength=C}this.x=Math.min(this.x,g-1),this.y=Math.min(this.y,e-1),i&&(this.y+=i),this.savedX=Math.min(this.savedX,g-1),this.scrollTop=0}if(this.scrollBottom=e-1,this._isReflowEnabled&&(this._reflow(g,e),this._cols>g))for(let e=0;e<this.lines.length;e++)t+=+this.lines.get(e).resize(g,I);this._cols=g,this._rows=e,this._memoryCleanupQueue.clear(),t>.1*this.lines.length&&(this._memoryCleanupPosition=0,this._memoryCleanupQueue.enqueue((()=>this._batchedMemoryCleanup())))}_batchedMemoryCleanup(){let g=!0;this._memoryCleanupPosition>=this.lines.length&&(this._memoryCleanupPosition=0,g=!1);let e=0;for(;this._memoryCleanupPosition<this.lines.length;)if(e+=this.lines.get(this._memoryCleanupPosition++).cleanupMemory(),e>100)return!0;return g}get _isReflowEnabled(){const g=this._optionsService.rawOptions.windowsPty;return g&&g.buildNumber?this._hasScrollback&&"conpty"===g.backend&&g.buildNumber>=21376:this._hasScrollback&&!this._optionsService.rawOptions.windowsMode}_reflow(g,e){this._cols!==g&&(g>this._cols?this._reflowLarger(g,e):this._reflowSmaller(g,e))}_reflowLarger(g,e){const I=(0,n.reflowLargerGetLinesToRemove)(this.lines,this._cols,g,this.ybase+this.y,this.getNullCell(l.DEFAULT_ATTR_DATA));if(I.length>0){const t=(0,n.reflowLargerCreateNewLayout)(this.lines,I);(0,n.reflowLargerApplyNewLayout)(this.lines,t.layout),this._reflowLargerAdjustViewport(g,e,t.countRemoved)}}_reflowLargerAdjustViewport(g,e,I){const t=this.getNullCell(l.DEFAULT_ATTR_DATA);let C=I;for(;C-- >0;)0===this.ybase?(this.y>0&&this.y--,this.lines.length<e&&this.lines.push(new l.BufferLine(g,t))):(this.ydisp===this.ybase&&this.ydisp--,this.ybase--);this.savedY=Math.max(this.savedY-I,0)}_reflowSmaller(g,e){const I=this.getNullCell(l.DEFAULT_ATTR_DATA),t=[];let C=0;for(let i=this.lines.length-1;i>=0;i--){let A=this.lines.get(i);if(!A||!A.isWrapped&&A.getTrimmedLength()<=g)continue;const d=[A];for(;A.isWrapped&&i>0;)A=this.lines.get(--i),d.unshift(A);const o=this.ybase+this.y;if(o>=i&&o<i+d.length)continue;const s=d[d.length-1].getTrimmedLength(),a=(0,n.reflowSmallerGetNewLineLengths)(d,this._cols,g),V=a.length-d.length;let c;c=0===this.ybase&&this.y!==this.lines.length-1?Math.max(0,this.y-this.lines.maxLength+V):Math.max(0,this.lines.length-this.lines.maxLength+V);const r=[];for(let g=0;g<V;g++){const g=this.getBlankLine(l.DEFAULT_ATTR_DATA,!0);r.push(g)}r.length>0&&(t.push({start:i+d.length+C,newLines:r}),C+=r.length),d.push(...r);let h=a.length-1,U=a[h];0===U&&(h--,U=a[h]);let Z=d.length-V-1,R=s;for(;Z>=0;){const g=Math.min(R,U);if(void 0===d[h])break;if(d[h].copyCellsFrom(d[Z],R-g,U-g,g,!0),U-=g,0===U&&(h--,U=a[h]),R-=g,0===R){Z--;const g=Math.max(Z,0);R=(0,n.getWrappedLineTrimmedLength)(d,g,this._cols)}}for(let e=0;e<d.length;e++)a[e]<g&&d[e].setCell(a[e],I);let F=V-c;for(;F-- >0;)0===this.ybase?this.y<e-1?(this.y++,this.lines.pop()):(this.ybase++,this.ydisp++):this.ybase<Math.min(this.lines.maxLength,this.lines.length+C)-e&&(this.ybase===this.ydisp&&this.ydisp++,this.ybase++);this.savedY=Math.min(this.savedY+V,this.ybase+e-1)}if(t.length>0){const g=[],e=[];for(let g=0;g<this.lines.length;g++)e.push(this.lines.get(g));const I=this.lines.length;let i=I-1,l=0,n=t[l];this.lines.length=Math.min(this.lines.maxLength,this.lines.length+C);let A=0;for(let d=Math.min(this.lines.maxLength-1,I+C-1);d>=0;d--)if(n&&n.start>i+A){for(let g=n.newLines.length-1;g>=0;g--)this.lines.set(d--,n.newLines[g]);d++,g.push({index:i+1,amount:n.newLines.length}),A+=n.newLines.length,n=t[++l]}else this.lines.set(d,e[i--]);let d=0;for(let e=g.length-1;e>=0;e--)g[e].index+=d,this.lines.onInsertEmitter.fire(g[e]),d+=g[e].amount;const o=Math.max(0,I+C-this.lines.maxLength);o>0&&this.lines.onTrimEmitter.fire(o)}}translateBufferLineToString(g,e,I=0,t){const C=this.lines.get(g);return C?C.translateToString(e,I,t):""}getWrappedRangeForLine(g){let e=g,I=g;for(;e>0&&this.lines.get(e).isWrapped;)e--;for(;I+1<this.lines.length&&this.lines.get(I+1).isWrapped;)I++;return{first:e,last:I}}setupTabStops(g){for(null!=g?this.tabs[g]||(g=this.prevStop(g)):(this.tabs={},g=0);g<this._cols;g+=this._optionsService.rawOptions.tabStopWidth)this.tabs[g]=!0}prevStop(g){for(null==g&&(g=this.x);!this.tabs[--g]&&g>0;);return g>=this._cols?this._cols-1:g<0?0:g}nextStop(g){for(null==g&&(g=this.x);!this.tabs[++g]&&g<this._cols;);return g>=this._cols?this._cols-1:g<0?0:g}clearMarkers(g){this._isClearing=!0;for(let e=0;e<this.markers.length;e++)this.markers[e].line===g&&(this.markers[e].dispose(),this.markers.splice(e--,1));this._isClearing=!1}clearAllMarkers(){this._isClearing=!0;for(let g=0;g<this.markers.length;g++)this.markers[g].dispose(),this.markers.splice(g--,1);this._isClearing=!1}addMarker(g){const e=new o.Marker(g);return this.markers.push(e),e.register(this.lines.onTrim((g=>{e.line-=g,e.line<0&&e.dispose()}))),e.register(this.lines.onInsert((g=>{e.line>=g.index&&(e.line+=g.amount)}))),e.register(this.lines.onDelete((g=>{e.line>=g.index&&e.line<g.index+g.amount&&e.dispose(),e.line>g.index&&(e.line-=g.amount)}))),e.register(e.onDispose((()=>this._removeMarker(e)))),e}_removeMarker(g){this._isClearing||this.markers.splice(this.markers.indexOf(g),1)}}},8437:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BufferLine=e.DEFAULT_ATTR_DATA=void 0;const t=I(3734),C=I(511),i=I(643),l=I(482);e.DEFAULT_ATTR_DATA=Object.freeze(new t.AttributeData);let n=0;class A{constructor(g,e,I=!1){this.isWrapped=I,this._combined={},this._extendedAttrs={},this._data=new Uint32Array(3*g);const t=e||C.CellData.fromCharData([0,i.NULL_CELL_CHAR,i.NULL_CELL_WIDTH,i.NULL_CELL_CODE]);for(let e=0;e<g;++e)this.setCell(e,t);this.length=g}get(g){const e=this._data[3*g+0],I=2097151&e;return[this._data[3*g+1],2097152&e?this._combined[g]:I?(0,l.stringFromCodePoint)(I):"",e>>22,2097152&e?this._combined[g].charCodeAt(this._combined[g].length-1):I]}set(g,e){this._data[3*g+1]=e[i.CHAR_DATA_ATTR_INDEX],e[i.CHAR_DATA_CHAR_INDEX].length>1?(this._combined[g]=e[1],this._data[3*g+0]=2097152|g|e[i.CHAR_DATA_WIDTH_INDEX]<<22):this._data[3*g+0]=e[i.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|e[i.CHAR_DATA_WIDTH_INDEX]<<22}getWidth(g){return this._data[3*g+0]>>22}hasWidth(g){return 12582912&this._data[3*g+0]}getFg(g){return this._data[3*g+1]}getBg(g){return this._data[3*g+2]}hasContent(g){return 4194303&this._data[3*g+0]}getCodePoint(g){const e=this._data[3*g+0];return 2097152&e?this._combined[g].charCodeAt(this._combined[g].length-1):2097151&e}isCombined(g){return 2097152&this._data[3*g+0]}getString(g){const e=this._data[3*g+0];return 2097152&e?this._combined[g]:2097151&e?(0,l.stringFromCodePoint)(2097151&e):""}isProtected(g){return 536870912&this._data[3*g+2]}loadCell(g,e){return n=3*g,e.content=this._data[n+0],e.fg=this._data[n+1],e.bg=this._data[n+2],2097152&e.content&&(e.combinedData=this._combined[g]),268435456&e.bg&&(e.extended=this._extendedAttrs[g]),e}setCell(g,e){2097152&e.content&&(this._combined[g]=e.combinedData),268435456&e.bg&&(this._extendedAttrs[g]=e.extended),this._data[3*g+0]=e.content,this._data[3*g+1]=e.fg,this._data[3*g+2]=e.bg}setCellFromCodepoint(g,e,I,t){268435456&t.bg&&(this._extendedAttrs[g]=t.extended),this._data[3*g+0]=e|I<<22,this._data[3*g+1]=t.fg,this._data[3*g+2]=t.bg}addCodepointToCell(g,e,I){let t=this._data[3*g+0];2097152&t?this._combined[g]+=(0,l.stringFromCodePoint)(e):2097151&t?(this._combined[g]=(0,l.stringFromCodePoint)(2097151&t)+(0,l.stringFromCodePoint)(e),t&=-2097152,t|=2097152):t=4194304|e,I&&(t&=-12582913,t|=I<<22),this._data[3*g+0]=t}insertCells(g,e,I){if((g%=this.length)&&2===this.getWidth(g-1)&&this.setCellFromCodepoint(g-1,0,1,I),e<this.length-g){const t=new C.CellData;for(let I=this.length-g-e-1;I>=0;--I)this.setCell(g+e+I,this.loadCell(g+I,t));for(let t=0;t<e;++t)this.setCell(g+t,I)}else for(let e=g;e<this.length;++e)this.setCell(e,I);2===this.getWidth(this.length-1)&&this.setCellFromCodepoint(this.length-1,0,1,I)}deleteCells(g,e,I){if(g%=this.length,e<this.length-g){const t=new C.CellData;for(let I=0;I<this.length-g-e;++I)this.setCell(g+I,this.loadCell(g+e+I,t));for(let g=this.length-e;g<this.length;++g)this.setCell(g,I)}else for(let e=g;e<this.length;++e)this.setCell(e,I);g&&2===this.getWidth(g-1)&&this.setCellFromCodepoint(g-1,0,1,I),0!==this.getWidth(g)||this.hasContent(g)||this.setCellFromCodepoint(g,0,1,I)}replaceCells(g,e,I,t=!1){if(t)for(g&&2===this.getWidth(g-1)&&!this.isProtected(g-1)&&this.setCellFromCodepoint(g-1,0,1,I),e<this.length&&2===this.getWidth(e-1)&&!this.isProtected(e)&&this.setCellFromCodepoint(e,0,1,I);g<e&&g<this.length;)this.isProtected(g)||this.setCell(g,I),g++;else for(g&&2===this.getWidth(g-1)&&this.setCellFromCodepoint(g-1,0,1,I),e<this.length&&2===this.getWidth(e-1)&&this.setCellFromCodepoint(e,0,1,I);g<e&&g<this.length;)this.setCell(g++,I)}resize(g,e){if(g===this.length)return 4*this._data.length*2<this._data.buffer.byteLength;const I=3*g;if(g>this.length){if(this._data.buffer.byteLength>=4*I)this._data=new Uint32Array(this._data.buffer,0,I);else{const g=new Uint32Array(I);g.set(this._data),this._data=g}for(let I=this.length;I<g;++I)this.setCell(I,e)}else{this._data=this._data.subarray(0,I);const e=Object.keys(this._combined);for(let I=0;I<e.length;I++){const t=parseInt(e[I],10);t>=g&&delete this._combined[t]}const t=Object.keys(this._extendedAttrs);for(let e=0;e<t.length;e++){const I=parseInt(t[e],10);I>=g&&delete this._extendedAttrs[I]}}return this.length=g,4*I*2<this._data.buffer.byteLength}cleanupMemory(){if(4*this._data.length*2<this._data.buffer.byteLength){const g=new Uint32Array(this._data.length);return g.set(this._data),this._data=g,1}return 0}fill(g,e=!1){if(e)for(let e=0;e<this.length;++e)this.isProtected(e)||this.setCell(e,g);else{this._combined={},this._extendedAttrs={};for(let e=0;e<this.length;++e)this.setCell(e,g)}}copyFrom(g){this.length!==g.length?this._data=new Uint32Array(g._data):this._data.set(g._data),this.length=g.length,this._combined={};for(const e in g._combined)this._combined[e]=g._combined[e];this._extendedAttrs={};for(const e in g._extendedAttrs)this._extendedAttrs[e]=g._extendedAttrs[e];this.isWrapped=g.isWrapped}clone(){const g=new A(0);g._data=new Uint32Array(this._data),g.length=this.length;for(const e in this._combined)g._combined[e]=this._combined[e];for(const e in this._extendedAttrs)g._extendedAttrs[e]=this._extendedAttrs[e];return g.isWrapped=this.isWrapped,g}getTrimmedLength(){for(let g=this.length-1;g>=0;--g)if(4194303&this._data[3*g+0])return g+(this._data[3*g+0]>>22);return 0}getNoBgTrimmedLength(){for(let g=this.length-1;g>=0;--g)if(4194303&this._data[3*g+0]||50331648&this._data[3*g+2])return g+(this._data[3*g+0]>>22);return 0}copyCellsFrom(g,e,I,t,C){const i=g._data;if(C)for(let C=t-1;C>=0;C--){for(let g=0;g<3;g++)this._data[3*(I+C)+g]=i[3*(e+C)+g];268435456&i[3*(e+C)+2]&&(this._extendedAttrs[I+C]=g._extendedAttrs[e+C])}else for(let C=0;C<t;C++){for(let g=0;g<3;g++)this._data[3*(I+C)+g]=i[3*(e+C)+g];268435456&i[3*(e+C)+2]&&(this._extendedAttrs[I+C]=g._extendedAttrs[e+C])}const l=Object.keys(g._combined);for(let t=0;t<l.length;t++){const C=parseInt(l[t],10);C>=e&&(this._combined[C-e+I]=g._combined[C])}}translateToString(g,e,I,t){e=e??0,I=I??this.length,g&&(I=Math.min(I,this.getTrimmedLength())),t&&(t.length=0);let C="";for(;e<I;){const g=this._data[3*e+0],I=2097151&g,n=2097152&g?this._combined[e]:I?(0,l.stringFromCodePoint)(I):i.WHITESPACE_CELL_CHAR;if(C+=n,t)for(let g=0;g<n.length;++g)t.push(e);e+=g>>22||1}return t&&t.push(e),C}}e.BufferLine=A},4841:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getRangeLength=void 0,e.getRangeLength=function(g,e){if(g.start.y>g.end.y)throw new Error(`Buffer range end (${g.end.x}, ${g.end.y}) cannot be before start (${g.start.x}, ${g.start.y})`);return e*(g.end.y-g.start.y)+(g.end.x-g.start.x+1)}},4634:(g,e)=>{function I(g,e,I){if(e===g.length-1)return g[e].getTrimmedLength();const t=!g[e].hasContent(I-1)&&1===g[e].getWidth(I-1),C=2===g[e+1].getWidth(0);return t&&C?I-1:I}Object.defineProperty(e,"__esModule",{value:!0}),e.getWrappedLineTrimmedLength=e.reflowSmallerGetNewLineLengths=e.reflowLargerApplyNewLayout=e.reflowLargerCreateNewLayout=e.reflowLargerGetLinesToRemove=void 0,e.reflowLargerGetLinesToRemove=function(g,e,t,C,i){const l=[];for(let n=0;n<g.length-1;n++){let A=n,d=g.get(++A);if(!d.isWrapped)continue;const o=[g.get(n)];for(;A<g.length&&d.isWrapped;)o.push(d),d=g.get(++A);if(C>=n&&C<A){n+=o.length-1;continue}let s=0,a=I(o,s,e),V=1,c=0;for(;V<o.length;){const g=I(o,V,e),C=g-c,l=t-a,n=Math.min(C,l);o[s].copyCellsFrom(o[V],c,a,n,!1),a+=n,a===t&&(s++,a=0),c+=n,c===g&&(V++,c=0),0===a&&0!==s&&2===o[s-1].getWidth(t-1)&&(o[s].copyCellsFrom(o[s-1],t-1,a++,1,!1),o[s-1].setCell(t-1,i))}o[s].replaceCells(a,t,i);let r=0;for(let g=o.length-1;g>0&&(g>s||0===o[g].getTrimmedLength());g--)r++;r>0&&(l.push(n+o.length-r),l.push(r)),n+=o.length-1}return l},e.reflowLargerCreateNewLayout=function(g,e){const I=[];let t=0,C=e[t],i=0;for(let l=0;l<g.length;l++)if(C===l){const I=e[++t];g.onDeleteEmitter.fire({index:l-i,amount:I}),l+=I-1,i+=I,C=e[++t]}else I.push(l);return{layout:I,countRemoved:i}},e.reflowLargerApplyNewLayout=function(g,e){const I=[];for(let t=0;t<e.length;t++)I.push(g.get(e[t]));for(let e=0;e<I.length;e++)g.set(e,I[e]);g.length=e.length},e.reflowSmallerGetNewLineLengths=function(g,e,t){const C=[],i=g.map(((t,C)=>I(g,C,e))).reduce(((g,e)=>g+e));let l=0,n=0,A=0;for(;A<i;){if(i-A<t){C.push(i-A);break}l+=t;const d=I(g,n,e);l>d&&(l-=d,n++);const o=2===g[n].getWidth(l-1);o&&l--;const s=o?t-1:t;C.push(s),A+=s}return C},e.getWrappedLineTrimmedLength=I},5295:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BufferSet=void 0;const t=I(8460),C=I(844),i=I(9092);class l extends C.Disposable{constructor(g,e){super(),this._optionsService=g,this._bufferService=e,this._onBufferActivate=this.register(new t.EventEmitter),this.onBufferActivate=this._onBufferActivate.event,this.reset(),this.register(this._optionsService.onSpecificOptionChange("scrollback",(()=>this.resize(this._bufferService.cols,this._bufferService.rows)))),this.register(this._optionsService.onSpecificOptionChange("tabStopWidth",(()=>this.setupTabStops())))}reset(){this._normal=new i.Buffer(!0,this._optionsService,this._bufferService),this._normal.fillViewportRows(),this._alt=new i.Buffer(!1,this._optionsService,this._bufferService),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}),this.setupTabStops()}get alt(){return this._alt}get active(){return this._activeBuffer}get normal(){return this._normal}activateNormalBuffer(){this._activeBuffer!==this._normal&&(this._normal.x=this._alt.x,this._normal.y=this._alt.y,this._alt.clearAllMarkers(),this._alt.clear(),this._activeBuffer=this._normal,this._onBufferActivate.fire({activeBuffer:this._normal,inactiveBuffer:this._alt}))}activateAltBuffer(g){this._activeBuffer!==this._alt&&(this._alt.fillViewportRows(g),this._alt.x=this._normal.x,this._alt.y=this._normal.y,this._activeBuffer=this._alt,this._onBufferActivate.fire({activeBuffer:this._alt,inactiveBuffer:this._normal}))}resize(g,e){this._normal.resize(g,e),this._alt.resize(g,e),this.setupTabStops(g)}setupTabStops(g){this._normal.setupTabStops(g),this._alt.setupTabStops(g)}}e.BufferSet=l},511:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CellData=void 0;const t=I(482),C=I(643),i=I(3734);class l extends i.AttributeData{constructor(){super(...arguments),this.content=0,this.fg=0,this.bg=0,this.extended=new i.ExtendedAttrs,this.combinedData=""}static fromCharData(g){const e=new l;return e.setFromCharData(g),e}isCombined(){return 2097152&this.content}getWidth(){return this.content>>22}getChars(){return 2097152&this.content?this.combinedData:2097151&this.content?(0,t.stringFromCodePoint)(2097151&this.content):""}getCode(){return this.isCombined()?this.combinedData.charCodeAt(this.combinedData.length-1):2097151&this.content}setFromCharData(g){this.fg=g[C.CHAR_DATA_ATTR_INDEX],this.bg=0;let e=!1;if(g[C.CHAR_DATA_CHAR_INDEX].length>2)e=!0;else if(2===g[C.CHAR_DATA_CHAR_INDEX].length){const I=g[C.CHAR_DATA_CHAR_INDEX].charCodeAt(0);if(55296<=I&&I<=56319){const t=g[C.CHAR_DATA_CHAR_INDEX].charCodeAt(1);56320<=t&&t<=57343?this.content=1024*(I-55296)+t-56320+65536|g[C.CHAR_DATA_WIDTH_INDEX]<<22:e=!0}else e=!0}else this.content=g[C.CHAR_DATA_CHAR_INDEX].charCodeAt(0)|g[C.CHAR_DATA_WIDTH_INDEX]<<22;e&&(this.combinedData=g[C.CHAR_DATA_CHAR_INDEX],this.content=2097152|g[C.CHAR_DATA_WIDTH_INDEX]<<22)}getAsCharData(){return[this.fg,this.getChars(),this.getWidth(),this.getCode()]}}e.CellData=l},643:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WHITESPACE_CELL_CODE=e.WHITESPACE_CELL_WIDTH=e.WHITESPACE_CELL_CHAR=e.NULL_CELL_CODE=e.NULL_CELL_WIDTH=e.NULL_CELL_CHAR=e.CHAR_DATA_CODE_INDEX=e.CHAR_DATA_WIDTH_INDEX=e.CHAR_DATA_CHAR_INDEX=e.CHAR_DATA_ATTR_INDEX=e.DEFAULT_EXT=e.DEFAULT_ATTR=e.DEFAULT_COLOR=void 0,e.DEFAULT_COLOR=0,e.DEFAULT_ATTR=256|e.DEFAULT_COLOR<<9,e.DEFAULT_EXT=0,e.CHAR_DATA_ATTR_INDEX=0,e.CHAR_DATA_CHAR_INDEX=1,e.CHAR_DATA_WIDTH_INDEX=2,e.CHAR_DATA_CODE_INDEX=3,e.NULL_CELL_CHAR="",e.NULL_CELL_WIDTH=1,e.NULL_CELL_CODE=0,e.WHITESPACE_CELL_CHAR=" ",e.WHITESPACE_CELL_WIDTH=1,e.WHITESPACE_CELL_CODE=32},4863:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Marker=void 0;const t=I(8460),C=I(844);class i{get id(){return this._id}constructor(g){this.line=g,this.isDisposed=!1,this._disposables=[],this._id=i._nextId++,this._onDispose=this.register(new t.EventEmitter),this.onDispose=this._onDispose.event}dispose(){this.isDisposed||(this.isDisposed=!0,this.line=-1,this._onDispose.fire(),(0,C.disposeArray)(this._disposables),this._disposables.length=0)}register(g){return this._disposables.push(g),g}}e.Marker=i,i._nextId=1},7116:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DEFAULT_CHARSET=e.CHARSETS=void 0,e.CHARSETS={},e.DEFAULT_CHARSET=e.CHARSETS.B,e.CHARSETS[0]={"`":"◆",a:"▒",b:"␉",c:"␌",d:"␍",e:"␊",f:"°",g:"±",h:"␤",i:"␋",j:"┘",k:"┐",l:"┌",m:"└",n:"┼",o:"⎺",p:"⎻",q:"─",r:"⎼",s:"⎽",t:"├",u:"┤",v:"┴",w:"┬",x:"│",y:"≤",z:"≥","{":"π","|":"≠","}":"£","~":"·"},e.CHARSETS.A={"#":"£"},e.CHARSETS.B=void 0,e.CHARSETS[4]={"#":"£","@":"¾","[":"ij","\\":"½","]":"|","{":"¨","|":"f","}":"¼","~":"´"},e.CHARSETS.C=e.CHARSETS[5]={"[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},e.CHARSETS.R={"#":"£","@":"à","[":"°","\\":"ç","]":"§","{":"é","|":"ù","}":"è","~":"¨"},e.CHARSETS.Q={"@":"à","[":"â","\\":"ç","]":"ê","^":"î","`":"ô","{":"é","|":"ù","}":"è","~":"û"},e.CHARSETS.K={"@":"§","[":"Ä","\\":"Ö","]":"Ü","{":"ä","|":"ö","}":"ü","~":"ß"},e.CHARSETS.Y={"#":"£","@":"§","[":"°","\\":"ç","]":"é","`":"ù","{":"à","|":"ò","}":"è","~":"ì"},e.CHARSETS.E=e.CHARSETS[6]={"@":"Ä","[":"Æ","\\":"Ø","]":"Å","^":"Ü","`":"ä","{":"æ","|":"ø","}":"å","~":"ü"},e.CHARSETS.Z={"#":"£","@":"§","[":"¡","\\":"Ñ","]":"¿","{":"°","|":"ñ","}":"ç"},e.CHARSETS.H=e.CHARSETS[7]={"@":"É","[":"Ä","\\":"Ö","]":"Å","^":"Ü","`":"é","{":"ä","|":"ö","}":"å","~":"ü"},e.CHARSETS["="]={"#":"ù","@":"à","[":"é","\\":"ç","]":"ê","^":"î",_:"è","`":"ô","{":"ä","|":"ö","}":"ü","~":"û"}},2584:(g,e)=>{var I,t,C,i;Object.defineProperty(e,"__esModule",{value:!0}),e.C1_ESCAPED=e.C1=e.C0=void 0,(i=I||(e.C0=I={})).NUL="\0",i.SOH="",i.STX="",i.ETX="",i.EOT="",i.ENQ="",i.ACK="",i.BEL="",i.BS="\b",i.HT="\t",i.LF="\n",i.VT="\v",i.FF="\f",i.CR="\r",i.SO="",i.SI="",i.DLE="",i.DC1="",i.DC2="",i.DC3="",i.DC4="",i.NAK="",i.SYN="",i.ETB="",i.CAN="",i.EM="",i.SUB="",i.ESC="",i.FS="",i.GS="",i.RS="",i.US="",i.SP=" ",i.DEL="",function(g){g.PAD="",g.HOP="",g.BPH="",g.NBH="",g.IND="",g.NEL="",g.SSA="",g.ESA="",g.HTS="",g.HTJ="",g.VTS="",g.PLD="",g.PLU="",g.RI="",g.SS2="",g.SS3="",g.DCS="",g.PU1="",g.PU2="",g.STS="",g.CCH="",g.MW="",g.SPA="",g.EPA="",g.SOS="",g.SGCI="",g.SCI="",g.CSI="",g.ST="",g.OSC="",g.PM="",g.APC=""}(t||(e.C1=t={})),function(g){g.ST=`${I.ESC}\\`}(C||(e.C1_ESCAPED=C={}))},7399:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.evaluateKeyboardEvent=void 0;const t=I(2584),C={48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"']};e.evaluateKeyboardEvent=function(g,e,I,i){const l={type:0,cancel:!1,key:void 0},n=(g.shiftKey?1:0)|(g.altKey?2:0)|(g.ctrlKey?4:0)|(g.metaKey?8:0);switch(g.keyCode){case 0:"UIKeyInputUpArrow"===g.key?l.key=e?t.C0.ESC+"OA":t.C0.ESC+"[A":"UIKeyInputLeftArrow"===g.key?l.key=e?t.C0.ESC+"OD":t.C0.ESC+"[D":"UIKeyInputRightArrow"===g.key?l.key=e?t.C0.ESC+"OC":t.C0.ESC+"[C":"UIKeyInputDownArrow"===g.key&&(l.key=e?t.C0.ESC+"OB":t.C0.ESC+"[B");break;case 8:l.key=g.ctrlKey?"\b":t.C0.DEL,g.altKey&&(l.key=t.C0.ESC+l.key);break;case 9:if(g.shiftKey){l.key=t.C0.ESC+"[Z";break}l.key=t.C0.HT,l.cancel=!0;break;case 13:l.key=g.altKey?t.C0.ESC+t.C0.CR:t.C0.CR,l.cancel=!0;break;case 27:l.key=t.C0.ESC,g.altKey&&(l.key=t.C0.ESC+t.C0.ESC),l.cancel=!0;break;case 37:if(g.metaKey)break;n?(l.key=t.C0.ESC+"[1;"+(n+1)+"D",l.key===t.C0.ESC+"[1;3D"&&(l.key=t.C0.ESC+(I?"b":"[1;5D"))):l.key=e?t.C0.ESC+"OD":t.C0.ESC+"[D";break;case 39:if(g.metaKey)break;n?(l.key=t.C0.ESC+"[1;"+(n+1)+"C",l.key===t.C0.ESC+"[1;3C"&&(l.key=t.C0.ESC+(I?"f":"[1;5C"))):l.key=e?t.C0.ESC+"OC":t.C0.ESC+"[C";break;case 38:if(g.metaKey)break;n?(l.key=t.C0.ESC+"[1;"+(n+1)+"A",I||l.key!==t.C0.ESC+"[1;3A"||(l.key=t.C0.ESC+"[1;5A")):l.key=e?t.C0.ESC+"OA":t.C0.ESC+"[A";break;case 40:if(g.metaKey)break;n?(l.key=t.C0.ESC+"[1;"+(n+1)+"B",I||l.key!==t.C0.ESC+"[1;3B"||(l.key=t.C0.ESC+"[1;5B")):l.key=e?t.C0.ESC+"OB":t.C0.ESC+"[B";break;case 45:g.shiftKey||g.ctrlKey||(l.key=t.C0.ESC+"[2~");break;case 46:l.key=n?t.C0.ESC+"[3;"+(n+1)+"~":t.C0.ESC+"[3~";break;case 36:l.key=n?t.C0.ESC+"[1;"+(n+1)+"H":e?t.C0.ESC+"OH":t.C0.ESC+"[H";break;case 35:l.key=n?t.C0.ESC+"[1;"+(n+1)+"F":e?t.C0.ESC+"OF":t.C0.ESC+"[F";break;case 33:g.shiftKey?l.type=2:g.ctrlKey?l.key=t.C0.ESC+"[5;"+(n+1)+"~":l.key=t.C0.ESC+"[5~";break;case 34:g.shiftKey?l.type=3:g.ctrlKey?l.key=t.C0.ESC+"[6;"+(n+1)+"~":l.key=t.C0.ESC+"[6~";break;case 112:l.key=n?t.C0.ESC+"[1;"+(n+1)+"P":t.C0.ESC+"OP";break;case 113:l.key=n?t.C0.ESC+"[1;"+(n+1)+"Q":t.C0.ESC+"OQ";break;case 114:l.key=n?t.C0.ESC+"[1;"+(n+1)+"R":t.C0.ESC+"OR";break;case 115:l.key=n?t.C0.ESC+"[1;"+(n+1)+"S":t.C0.ESC+"OS";break;case 116:l.key=n?t.C0.ESC+"[15;"+(n+1)+"~":t.C0.ESC+"[15~";break;case 117:l.key=n?t.C0.ESC+"[17;"+(n+1)+"~":t.C0.ESC+"[17~";break;case 118:l.key=n?t.C0.ESC+"[18;"+(n+1)+"~":t.C0.ESC+"[18~";break;case 119:l.key=n?t.C0.ESC+"[19;"+(n+1)+"~":t.C0.ESC+"[19~";break;case 120:l.key=n?t.C0.ESC+"[20;"+(n+1)+"~":t.C0.ESC+"[20~";break;case 121:l.key=n?t.C0.ESC+"[21;"+(n+1)+"~":t.C0.ESC+"[21~";break;case 122:l.key=n?t.C0.ESC+"[23;"+(n+1)+"~":t.C0.ESC+"[23~";break;case 123:l.key=n?t.C0.ESC+"[24;"+(n+1)+"~":t.C0.ESC+"[24~";break;default:if(!g.ctrlKey||g.shiftKey||g.altKey||g.metaKey)if(I&&!i||!g.altKey||g.metaKey)!I||g.altKey||g.ctrlKey||g.shiftKey||!g.metaKey?g.key&&!g.ctrlKey&&!g.altKey&&!g.metaKey&&g.keyCode>=48&&1===g.key.length?l.key=g.key:g.key&&g.ctrlKey&&("_"===g.key&&(l.key=t.C0.US),"@"===g.key&&(l.key=t.C0.NUL)):65===g.keyCode&&(l.type=1);else{const e=C[g.keyCode],I=null==e?void 0:e[g.shiftKey?1:0];if(I)l.key=t.C0.ESC+I;else if(g.keyCode>=65&&g.keyCode<=90){const e=g.ctrlKey?g.keyCode-64:g.keyCode+32;let I=String.fromCharCode(e);g.shiftKey&&(I=I.toUpperCase()),l.key=t.C0.ESC+I}else if(32===g.keyCode)l.key=t.C0.ESC+(g.ctrlKey?t.C0.NUL:" ");else if("Dead"===g.key&&g.code.startsWith("Key")){let e=g.code.slice(3,4);g.shiftKey||(e=e.toLowerCase()),l.key=t.C0.ESC+e,l.cancel=!0}}else g.keyCode>=65&&g.keyCode<=90?l.key=String.fromCharCode(g.keyCode-64):32===g.keyCode?l.key=t.C0.NUL:g.keyCode>=51&&g.keyCode<=55?l.key=String.fromCharCode(g.keyCode-51+27):56===g.keyCode?l.key=t.C0.DEL:219===g.keyCode?l.key=t.C0.ESC:220===g.keyCode?l.key=t.C0.FS:221===g.keyCode&&(l.key=t.C0.GS)}return l}},482:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Utf8ToUtf32=e.StringToUtf32=e.utf32ToString=e.stringFromCodePoint=void 0,e.stringFromCodePoint=function(g){return g>65535?(g-=65536,String.fromCharCode(55296+(g>>10))+String.fromCharCode(g%1024+56320)):String.fromCharCode(g)},e.utf32ToString=function(g,e=0,I=g.length){let t="";for(let C=e;C<I;++C){let e=g[C];e>65535?(e-=65536,t+=String.fromCharCode(55296+(e>>10))+String.fromCharCode(e%1024+56320)):t+=String.fromCharCode(e)}return t},e.StringToUtf32=class{constructor(){this._interim=0}clear(){this._interim=0}decode(g,e){const I=g.length;if(!I)return 0;let t=0,C=0;if(this._interim){const I=g.charCodeAt(C++);56320<=I&&I<=57343?e[t++]=1024*(this._interim-55296)+I-56320+65536:(e[t++]=this._interim,e[t++]=I),this._interim=0}for(let i=C;i<I;++i){const C=g.charCodeAt(i);if(55296<=C&&C<=56319){if(++i>=I)return this._interim=C,t;const l=g.charCodeAt(i);56320<=l&&l<=57343?e[t++]=1024*(C-55296)+l-56320+65536:(e[t++]=C,e[t++]=l)}else 65279!==C&&(e[t++]=C)}return t}},e.Utf8ToUtf32=class{constructor(){this.interim=new Uint8Array(3)}clear(){this.interim.fill(0)}decode(g,e){const I=g.length;if(!I)return 0;let t,C,i,l,n=0,A=0,d=0;if(this.interim[0]){let t=!1,C=this.interim[0];C&=192==(224&C)?31:224==(240&C)?15:7;let i,l=0;for(;(i=63&this.interim[++l])&&l<4;)C<<=6,C|=i;const A=192==(224&this.interim[0])?2:224==(240&this.interim[0])?3:4,o=A-l;for(;d<o;){if(d>=I)return 0;if(i=g[d++],128!=(192&i)){d--,t=!0;break}this.interim[l++]=i,C<<=6,C|=63&i}t||(2===A?C<128?d--:e[n++]=C:3===A?C<2048||C>=55296&&C<=57343||65279===C||(e[n++]=C):C<65536||C>1114111||(e[n++]=C)),this.interim.fill(0)}const o=I-4;let s=d;for(;s<I;){for(;!(!(s<o)||128&(t=g[s])||128&(C=g[s+1])||128&(i=g[s+2])||128&(l=g[s+3]));)e[n++]=t,e[n++]=C,e[n++]=i,e[n++]=l,s+=4;if(t=g[s++],t<128)e[n++]=t;else if(192==(224&t)){if(s>=I)return this.interim[0]=t,n;if(C=g[s++],128!=(192&C)){s--;continue}if(A=(31&t)<<6|63&C,A<128){s--;continue}e[n++]=A}else if(224==(240&t)){if(s>=I)return this.interim[0]=t,n;if(C=g[s++],128!=(192&C)){s--;continue}if(s>=I)return this.interim[0]=t,this.interim[1]=C,n;if(i=g[s++],128!=(192&i)){s--;continue}if(A=(15&t)<<12|(63&C)<<6|63&i,A<2048||A>=55296&&A<=57343||65279===A)continue;e[n++]=A}else if(240==(248&t)){if(s>=I)return this.interim[0]=t,n;if(C=g[s++],128!=(192&C)){s--;continue}if(s>=I)return this.interim[0]=t,this.interim[1]=C,n;if(i=g[s++],128!=(192&i)){s--;continue}if(s>=I)return this.interim[0]=t,this.interim[1]=C,this.interim[2]=i,n;if(l=g[s++],128!=(192&l)){s--;continue}if(A=(7&t)<<18|(63&C)<<12|(63&i)<<6|63&l,A<65536||A>1114111)continue;e[n++]=A}}return n}}},225:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UnicodeV6=void 0;const t=I(1480),C=[[768,879],[1155,1158],[1160,1161],[1425,1469],[1471,1471],[1473,1474],[1476,1477],[1479,1479],[1536,1539],[1552,1557],[1611,1630],[1648,1648],[1750,1764],[1767,1768],[1770,1773],[1807,1807],[1809,1809],[1840,1866],[1958,1968],[2027,2035],[2305,2306],[2364,2364],[2369,2376],[2381,2381],[2385,2388],[2402,2403],[2433,2433],[2492,2492],[2497,2500],[2509,2509],[2530,2531],[2561,2562],[2620,2620],[2625,2626],[2631,2632],[2635,2637],[2672,2673],[2689,2690],[2748,2748],[2753,2757],[2759,2760],[2765,2765],[2786,2787],[2817,2817],[2876,2876],[2879,2879],[2881,2883],[2893,2893],[2902,2902],[2946,2946],[3008,3008],[3021,3021],[3134,3136],[3142,3144],[3146,3149],[3157,3158],[3260,3260],[3263,3263],[3270,3270],[3276,3277],[3298,3299],[3393,3395],[3405,3405],[3530,3530],[3538,3540],[3542,3542],[3633,3633],[3636,3642],[3655,3662],[3761,3761],[3764,3769],[3771,3772],[3784,3789],[3864,3865],[3893,3893],[3895,3895],[3897,3897],[3953,3966],[3968,3972],[3974,3975],[3984,3991],[3993,4028],[4038,4038],[4141,4144],[4146,4146],[4150,4151],[4153,4153],[4184,4185],[4448,4607],[4959,4959],[5906,5908],[5938,5940],[5970,5971],[6002,6003],[6068,6069],[6071,6077],[6086,6086],[6089,6099],[6109,6109],[6155,6157],[6313,6313],[6432,6434],[6439,6440],[6450,6450],[6457,6459],[6679,6680],[6912,6915],[6964,6964],[6966,6970],[6972,6972],[6978,6978],[7019,7027],[7616,7626],[7678,7679],[8203,8207],[8234,8238],[8288,8291],[8298,8303],[8400,8431],[12330,12335],[12441,12442],[43014,43014],[43019,43019],[43045,43046],[64286,64286],[65024,65039],[65056,65059],[65279,65279],[65529,65531]],i=[[68097,68099],[68101,68102],[68108,68111],[68152,68154],[68159,68159],[119143,119145],[119155,119170],[119173,119179],[119210,119213],[119362,119364],[917505,917505],[917536,917631],[917760,917999]];let l;e.UnicodeV6=class{constructor(){if(this.version="6",!l){l=new Uint8Array(65536),l.fill(1),l[0]=0,l.fill(0,1,32),l.fill(0,127,160),l.fill(2,4352,4448),l[9001]=2,l[9002]=2,l.fill(2,11904,42192),l[12351]=1,l.fill(2,44032,55204),l.fill(2,63744,64256),l.fill(2,65040,65050),l.fill(2,65072,65136),l.fill(2,65280,65377),l.fill(2,65504,65511);for(let g=0;g<C.length;++g)l.fill(0,C[g][0],C[g][1]+1)}}wcwidth(g){return g<32?0:g<127?1:g<65536?l[g]:function(g,e){let I,t=0,C=e.length-1;if(g<e[0][0]||g>e[C][1])return!1;for(;C>=t;)if(I=t+C>>1,g>e[I][1])t=I+1;else{if(!(g<e[I][0]))return!0;C=I-1}return!1}(g,i)?0:g>=131072&&g<=196605||g>=196608&&g<=262141?2:1}charProperties(g,e){let I=this.wcwidth(g),C=0===I&&0!==e;if(C){const g=t.UnicodeService.extractWidth(e);0===g?C=!1:g>I&&(I=g)}return t.UnicodeService.createPropertyValue(0,I,C)}}},5981:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WriteBuffer=void 0;const t=I(8460),C=I(844);class i extends C.Disposable{constructor(g){super(),this._action=g,this._writeBuffer=[],this._callbacks=[],this._pendingData=0,this._bufferOffset=0,this._isSyncWriting=!1,this._syncCalls=0,this._didUserInput=!1,this._onWriteParsed=this.register(new t.EventEmitter),this.onWriteParsed=this._onWriteParsed.event}handleUserInput(){this._didUserInput=!0}writeSync(g,e){if(void 0!==e&&this._syncCalls>e)return void(this._syncCalls=0);if(this._pendingData+=g.length,this._writeBuffer.push(g),this._callbacks.push(void 0),this._syncCalls++,this._isSyncWriting)return;let I;for(this._isSyncWriting=!0;I=this._writeBuffer.shift();){this._action(I);const g=this._callbacks.shift();g&&g()}this._pendingData=0,this._bufferOffset=2147483647,this._isSyncWriting=!1,this._syncCalls=0}write(g,e){if(this._pendingData>5e7)throw new Error("write data discarded, use flow control to avoid losing data");if(!this._writeBuffer.length){if(this._bufferOffset=0,this._didUserInput)return this._didUserInput=!1,this._pendingData+=g.length,this._writeBuffer.push(g),this._callbacks.push(e),void this._innerWrite();setTimeout((()=>this._innerWrite()))}this._pendingData+=g.length,this._writeBuffer.push(g),this._callbacks.push(e)}_innerWrite(g=0,e=!0){const I=g||Date.now();for(;this._writeBuffer.length>this._bufferOffset;){const g=this._writeBuffer[this._bufferOffset],t=this._action(g,e);if(t){const g=g=>Date.now()-I>=12?setTimeout((()=>this._innerWrite(0,g))):this._innerWrite(I,g);return void t.catch((g=>(queueMicrotask((()=>{throw g})),Promise.resolve(!1)))).then(g)}const C=this._callbacks[this._bufferOffset];if(C&&C(),this._bufferOffset++,this._pendingData-=g.length,Date.now()-I>=12)break}this._writeBuffer.length>this._bufferOffset?(this._bufferOffset>50&&(this._writeBuffer=this._writeBuffer.slice(this._bufferOffset),this._callbacks=this._callbacks.slice(this._bufferOffset),this._bufferOffset=0),setTimeout((()=>this._innerWrite()))):(this._writeBuffer.length=0,this._callbacks.length=0,this._pendingData=0,this._bufferOffset=0),this._onWriteParsed.fire()}}e.WriteBuffer=i},5941:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.toRgbString=e.parseColor=void 0;const I=/^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,t=/^[\da-f]+$/;function C(g,e){const I=g.toString(16),t=I.length<2?"0"+I:I;switch(e){case 4:return I[0];case 8:return t;case 12:return(t+t).slice(0,3);default:return t+t}}e.parseColor=function(g){if(!g)return;let e=g.toLowerCase();if(0===e.indexOf("rgb:")){e=e.slice(4);const g=I.exec(e);if(g){const e=g[1]?15:g[4]?255:g[7]?4095:65535;return[Math.round(parseInt(g[1]||g[4]||g[7]||g[10],16)/e*255),Math.round(parseInt(g[2]||g[5]||g[8]||g[11],16)/e*255),Math.round(parseInt(g[3]||g[6]||g[9]||g[12],16)/e*255)]}}else if(0===e.indexOf("#")&&(e=e.slice(1),t.exec(e)&&[3,6,9,12].includes(e.length))){const g=e.length/3,I=[0,0,0];for(let t=0;t<3;++t){const C=parseInt(e.slice(g*t,g*t+g),16);I[t]=1===g?C<<4:2===g?C:3===g?C>>4:C>>8}return I}},e.toRgbString=function(g,e=16){const[I,t,i]=g;return`rgb:${C(I,e)}/${C(t,e)}/${C(i,e)}`}},5770:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PAYLOAD_LIMIT=void 0,e.PAYLOAD_LIMIT=1e7},6351:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DcsHandler=e.DcsParser=void 0;const t=I(482),C=I(8742),i=I(5770),l=[];e.DcsParser=class{constructor(){this._handlers=Object.create(null),this._active=l,this._ident=0,this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=l}registerHandler(g,e){void 0===this._handlers[g]&&(this._handlers[g]=[]);const I=this._handlers[g];return I.push(e),{dispose:()=>{const g=I.indexOf(e);-1!==g&&I.splice(g,1)}}}clearHandler(g){this._handlers[g]&&delete this._handlers[g]}setHandlerFallback(g){this._handlerFb=g}reset(){if(this._active.length)for(let g=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;g>=0;--g)this._active[g].unhook(!1);this._stack.paused=!1,this._active=l,this._ident=0}hook(g,e){if(this.reset(),this._ident=g,this._active=this._handlers[g]||l,this._active.length)for(let g=this._active.length-1;g>=0;g--)this._active[g].hook(e);else this._handlerFb(this._ident,"HOOK",e)}put(g,e,I){if(this._active.length)for(let t=this._active.length-1;t>=0;t--)this._active[t].put(g,e,I);else this._handlerFb(this._ident,"PUT",(0,t.utf32ToString)(g,e,I))}unhook(g,e=!0){if(this._active.length){let I=!1,t=this._active.length-1,C=!1;if(this._stack.paused&&(t=this._stack.loopPosition-1,I=e,C=this._stack.fallThrough,this._stack.paused=!1),!C&&!1===I){for(;t>=0&&(I=this._active[t].unhook(g),!0!==I);t--)if(I instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=t,this._stack.fallThrough=!1,I;t--}for(;t>=0;t--)if(I=this._active[t].unhook(!1),I instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=t,this._stack.fallThrough=!0,I}else this._handlerFb(this._ident,"UNHOOK",g);this._active=l,this._ident=0}};const n=new C.Params;n.addParam(0),e.DcsHandler=class{constructor(g){this._handler=g,this._data="",this._params=n,this._hitLimit=!1}hook(g){this._params=g.length>1||g.params[0]?g.clone():n,this._data="",this._hitLimit=!1}put(g,e,I){this._hitLimit||(this._data+=(0,t.utf32ToString)(g,e,I),this._data.length>i.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}unhook(g){let e=!1;if(this._hitLimit)e=!1;else if(g&&(e=this._handler(this._data,this._params),e instanceof Promise))return e.then((g=>(this._params=n,this._data="",this._hitLimit=!1,g)));return this._params=n,this._data="",this._hitLimit=!1,e}}},2015:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.EscapeSequenceParser=e.VT500_TRANSITION_TABLE=e.TransitionTable=void 0;const t=I(844),C=I(8742),i=I(6242),l=I(6351);class n{constructor(g){this.table=new Uint8Array(g)}setDefault(g,e){this.table.fill(g<<4|e)}add(g,e,I,t){this.table[e<<8|g]=I<<4|t}addMany(g,e,I,t){for(let C=0;C<g.length;C++)this.table[e<<8|g[C]]=I<<4|t}}e.TransitionTable=n;const A=160;e.VT500_TRANSITION_TABLE=function(){const g=new n(4095),e=Array.apply(null,Array(256)).map(((g,e)=>e)),I=(g,I)=>e.slice(g,I),t=I(32,127),C=I(0,24);C.push(25),C.push.apply(C,I(28,32));const i=I(0,14);let l;for(l in g.setDefault(1,0),g.addMany(t,0,2,0),i)g.addMany([24,26,153,154],l,3,0),g.addMany(I(128,144),l,3,0),g.addMany(I(144,152),l,3,0),g.add(156,l,0,0),g.add(27,l,11,1),g.add(157,l,4,8),g.addMany([152,158,159],l,0,7),g.add(155,l,11,3),g.add(144,l,11,9);return g.addMany(C,0,3,0),g.addMany(C,1,3,1),g.add(127,1,0,1),g.addMany(C,8,0,8),g.addMany(C,3,3,3),g.add(127,3,0,3),g.addMany(C,4,3,4),g.add(127,4,0,4),g.addMany(C,6,3,6),g.addMany(C,5,3,5),g.add(127,5,0,5),g.addMany(C,2,3,2),g.add(127,2,0,2),g.add(93,1,4,8),g.addMany(t,8,5,8),g.add(127,8,5,8),g.addMany([156,27,24,26,7],8,6,0),g.addMany(I(28,32),8,0,8),g.addMany([88,94,95],1,0,7),g.addMany(t,7,0,7),g.addMany(C,7,0,7),g.add(156,7,0,0),g.add(127,7,0,7),g.add(91,1,11,3),g.addMany(I(64,127),3,7,0),g.addMany(I(48,60),3,8,4),g.addMany([60,61,62,63],3,9,4),g.addMany(I(48,60),4,8,4),g.addMany(I(64,127),4,7,0),g.addMany([60,61,62,63],4,0,6),g.addMany(I(32,64),6,0,6),g.add(127,6,0,6),g.addMany(I(64,127),6,0,0),g.addMany(I(32,48),3,9,5),g.addMany(I(32,48),5,9,5),g.addMany(I(48,64),5,0,6),g.addMany(I(64,127),5,7,0),g.addMany(I(32,48),4,9,5),g.addMany(I(32,48),1,9,2),g.addMany(I(32,48),2,9,2),g.addMany(I(48,127),2,10,0),g.addMany(I(48,80),1,10,0),g.addMany(I(81,88),1,10,0),g.addMany([89,90,92],1,10,0),g.addMany(I(96,127),1,10,0),g.add(80,1,11,9),g.addMany(C,9,0,9),g.add(127,9,0,9),g.addMany(I(28,32),9,0,9),g.addMany(I(32,48),9,9,12),g.addMany(I(48,60),9,8,10),g.addMany([60,61,62,63],9,9,10),g.addMany(C,11,0,11),g.addMany(I(32,128),11,0,11),g.addMany(I(28,32),11,0,11),g.addMany(C,10,0,10),g.add(127,10,0,10),g.addMany(I(28,32),10,0,10),g.addMany(I(48,60),10,8,10),g.addMany([60,61,62,63],10,0,11),g.addMany(I(32,48),10,9,12),g.addMany(C,12,0,12),g.add(127,12,0,12),g.addMany(I(28,32),12,0,12),g.addMany(I(32,48),12,9,12),g.addMany(I(48,64),12,0,11),g.addMany(I(64,127),12,12,13),g.addMany(I(64,127),10,12,13),g.addMany(I(64,127),9,12,13),g.addMany(C,13,13,13),g.addMany(t,13,13,13),g.add(127,13,0,13),g.addMany([27,156,24,26],13,14,0),g.add(A,0,2,0),g.add(A,8,5,8),g.add(A,6,0,6),g.add(A,11,0,11),g.add(A,13,13,13),g}();class d extends t.Disposable{constructor(g=e.VT500_TRANSITION_TABLE){super(),this._transitions=g,this._parseStack={state:0,handlers:[],handlerPos:0,transition:0,chunkPos:0},this.initialState=0,this.currentState=this.initialState,this._params=new C.Params,this._params.addParam(0),this._collect=0,this.precedingJoinState=0,this._printHandlerFb=(g,e,I)=>{},this._executeHandlerFb=g=>{},this._csiHandlerFb=(g,e)=>{},this._escHandlerFb=g=>{},this._errorHandlerFb=g=>g,this._printHandler=this._printHandlerFb,this._executeHandlers=Object.create(null),this._csiHandlers=Object.create(null),this._escHandlers=Object.create(null),this.register((0,t.toDisposable)((()=>{this._csiHandlers=Object.create(null),this._executeHandlers=Object.create(null),this._escHandlers=Object.create(null)}))),this._oscParser=this.register(new i.OscParser),this._dcsParser=this.register(new l.DcsParser),this._errorHandler=this._errorHandlerFb,this.registerEscHandler({final:"\\"},(()=>!0))}_identifier(g,e=[64,126]){let I=0;if(g.prefix){if(g.prefix.length>1)throw new Error("only one byte as prefix supported");if(I=g.prefix.charCodeAt(0),I&&60>I||I>63)throw new Error("prefix must be in range 0x3c .. 0x3f")}if(g.intermediates){if(g.intermediates.length>2)throw new Error("only two bytes as intermediates are supported");for(let e=0;e<g.intermediates.length;++e){const t=g.intermediates.charCodeAt(e);if(32>t||t>47)throw new Error("intermediate must be in range 0x20 .. 0x2f");I<<=8,I|=t}}if(1!==g.final.length)throw new Error("final must be a single byte");const t=g.final.charCodeAt(0);if(e[0]>t||t>e[1])throw new Error(`final must be in range ${e[0]} .. ${e[1]}`);return I<<=8,I|=t,I}identToString(g){const e=[];for(;g;)e.push(String.fromCharCode(255&g)),g>>=8;return e.reverse().join("")}setPrintHandler(g){this._printHandler=g}clearPrintHandler(){this._printHandler=this._printHandlerFb}registerEscHandler(g,e){const I=this._identifier(g,[48,126]);void 0===this._escHandlers[I]&&(this._escHandlers[I]=[]);const t=this._escHandlers[I];return t.push(e),{dispose:()=>{const g=t.indexOf(e);-1!==g&&t.splice(g,1)}}}clearEscHandler(g){this._escHandlers[this._identifier(g,[48,126])]&&delete this._escHandlers[this._identifier(g,[48,126])]}setEscHandlerFallback(g){this._escHandlerFb=g}setExecuteHandler(g,e){this._executeHandlers[g.charCodeAt(0)]=e}clearExecuteHandler(g){this._executeHandlers[g.charCodeAt(0)]&&delete this._executeHandlers[g.charCodeAt(0)]}setExecuteHandlerFallback(g){this._executeHandlerFb=g}registerCsiHandler(g,e){const I=this._identifier(g);void 0===this._csiHandlers[I]&&(this._csiHandlers[I]=[]);const t=this._csiHandlers[I];return t.push(e),{dispose:()=>{const g=t.indexOf(e);-1!==g&&t.splice(g,1)}}}clearCsiHandler(g){this._csiHandlers[this._identifier(g)]&&delete this._csiHandlers[this._identifier(g)]}setCsiHandlerFallback(g){this._csiHandlerFb=g}registerDcsHandler(g,e){return this._dcsParser.registerHandler(this._identifier(g),e)}clearDcsHandler(g){this._dcsParser.clearHandler(this._identifier(g))}setDcsHandlerFallback(g){this._dcsParser.setHandlerFallback(g)}registerOscHandler(g,e){return this._oscParser.registerHandler(g,e)}clearOscHandler(g){this._oscParser.clearHandler(g)}setOscHandlerFallback(g){this._oscParser.setHandlerFallback(g)}setErrorHandler(g){this._errorHandler=g}clearErrorHandler(){this._errorHandler=this._errorHandlerFb}reset(){this.currentState=this.initialState,this._oscParser.reset(),this._dcsParser.reset(),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingJoinState=0,0!==this._parseStack.state&&(this._parseStack.state=2,this._parseStack.handlers=[])}_preserveStack(g,e,I,t,C){this._parseStack.state=g,this._parseStack.handlers=e,this._parseStack.handlerPos=I,this._parseStack.transition=t,this._parseStack.chunkPos=C}parse(g,e,I){let t,C=0,i=0,l=0;if(this._parseStack.state)if(2===this._parseStack.state)this._parseStack.state=0,l=this._parseStack.chunkPos+1;else{if(void 0===I||1===this._parseStack.state)throw this._parseStack.state=1,new Error("improper continuation due to previous async handler, giving up parsing");const e=this._parseStack.handlers;let i=this._parseStack.handlerPos-1;switch(this._parseStack.state){case 3:if(!1===I&&i>-1)for(;i>=0&&(t=e[i](this._params),!0!==t);i--)if(t instanceof Promise)return this._parseStack.handlerPos=i,t;this._parseStack.handlers=[];break;case 4:if(!1===I&&i>-1)for(;i>=0&&(t=e[i](),!0!==t);i--)if(t instanceof Promise)return this._parseStack.handlerPos=i,t;this._parseStack.handlers=[];break;case 6:if(C=g[this._parseStack.chunkPos],t=this._dcsParser.unhook(24!==C&&26!==C,I),t)return t;27===C&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0;break;case 5:if(C=g[this._parseStack.chunkPos],t=this._oscParser.end(24!==C&&26!==C,I),t)return t;27===C&&(this._parseStack.transition|=1),this._params.reset(),this._params.addParam(0),this._collect=0}this._parseStack.state=0,l=this._parseStack.chunkPos+1,this.precedingJoinState=0,this.currentState=15&this._parseStack.transition}for(let I=l;I<e;++I){switch(C=g[I],i=this._transitions.table[this.currentState<<8|(C<160?C:A)],i>>4){case 2:for(let t=I+1;;++t){if(t>=e||(C=g[t])<32||C>126&&C<A){this._printHandler(g,I,t),I=t-1;break}if(++t>=e||(C=g[t])<32||C>126&&C<A){this._printHandler(g,I,t),I=t-1;break}if(++t>=e||(C=g[t])<32||C>126&&C<A){this._printHandler(g,I,t),I=t-1;break}if(++t>=e||(C=g[t])<32||C>126&&C<A){this._printHandler(g,I,t),I=t-1;break}}break;case 3:this._executeHandlers[C]?this._executeHandlers[C]():this._executeHandlerFb(C),this.precedingJoinState=0;break;case 0:break;case 1:if(this._errorHandler({position:I,code:C,currentState:this.currentState,collect:this._collect,params:this._params,abort:!1}).abort)return;break;case 7:const l=this._csiHandlers[this._collect<<8|C];let n=l?l.length-1:-1;for(;n>=0&&(t=l[n](this._params),!0!==t);n--)if(t instanceof Promise)return this._preserveStack(3,l,n,i,I),t;n<0&&this._csiHandlerFb(this._collect<<8|C,this._params),this.precedingJoinState=0;break;case 8:do{switch(C){case 59:this._params.addParam(0);break;case 58:this._params.addSubParam(-1);break;default:this._params.addDigit(C-48)}}while(++I<e&&(C=g[I])>47&&C<60);I--;break;case 9:this._collect<<=8,this._collect|=C;break;case 10:const d=this._escHandlers[this._collect<<8|C];let o=d?d.length-1:-1;for(;o>=0&&(t=d[o](),!0!==t);o--)if(t instanceof Promise)return this._preserveStack(4,d,o,i,I),t;o<0&&this._escHandlerFb(this._collect<<8|C),this.precedingJoinState=0;break;case 11:this._params.reset(),this._params.addParam(0),this._collect=0;break;case 12:this._dcsParser.hook(this._collect<<8|C,this._params);break;case 13:for(let t=I+1;;++t)if(t>=e||24===(C=g[t])||26===C||27===C||C>127&&C<A){this._dcsParser.put(g,I,t),I=t-1;break}break;case 14:if(t=this._dcsParser.unhook(24!==C&&26!==C),t)return this._preserveStack(6,[],0,i,I),t;27===C&&(i|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingJoinState=0;break;case 4:this._oscParser.start();break;case 5:for(let t=I+1;;t++)if(t>=e||(C=g[t])<32||C>127&&C<A){this._oscParser.put(g,I,t),I=t-1;break}break;case 6:if(t=this._oscParser.end(24!==C&&26!==C),t)return this._preserveStack(5,[],0,i,I),t;27===C&&(i|=1),this._params.reset(),this._params.addParam(0),this._collect=0,this.precedingJoinState=0}this.currentState=15&i}}}e.EscapeSequenceParser=d},6242:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OscHandler=e.OscParser=void 0;const t=I(5770),C=I(482),i=[];e.OscParser=class{constructor(){this._state=0,this._active=i,this._id=-1,this._handlers=Object.create(null),this._handlerFb=()=>{},this._stack={paused:!1,loopPosition:0,fallThrough:!1}}registerHandler(g,e){void 0===this._handlers[g]&&(this._handlers[g]=[]);const I=this._handlers[g];return I.push(e),{dispose:()=>{const g=I.indexOf(e);-1!==g&&I.splice(g,1)}}}clearHandler(g){this._handlers[g]&&delete this._handlers[g]}setHandlerFallback(g){this._handlerFb=g}dispose(){this._handlers=Object.create(null),this._handlerFb=()=>{},this._active=i}reset(){if(2===this._state)for(let g=this._stack.paused?this._stack.loopPosition-1:this._active.length-1;g>=0;--g)this._active[g].end(!1);this._stack.paused=!1,this._active=i,this._id=-1,this._state=0}_start(){if(this._active=this._handlers[this._id]||i,this._active.length)for(let g=this._active.length-1;g>=0;g--)this._active[g].start();else this._handlerFb(this._id,"START")}_put(g,e,I){if(this._active.length)for(let t=this._active.length-1;t>=0;t--)this._active[t].put(g,e,I);else this._handlerFb(this._id,"PUT",(0,C.utf32ToString)(g,e,I))}start(){this.reset(),this._state=1}put(g,e,I){if(3!==this._state){if(1===this._state)for(;e<I;){const I=g[e++];if(59===I){this._state=2,this._start();break}if(I<48||57<I)return void(this._state=3);-1===this._id&&(this._id=0),this._id=10*this._id+I-48}2===this._state&&I-e>0&&this._put(g,e,I)}}end(g,e=!0){if(0!==this._state){if(3!==this._state)if(1===this._state&&this._start(),this._active.length){let I=!1,t=this._active.length-1,C=!1;if(this._stack.paused&&(t=this._stack.loopPosition-1,I=e,C=this._stack.fallThrough,this._stack.paused=!1),!C&&!1===I){for(;t>=0&&(I=this._active[t].end(g),!0!==I);t--)if(I instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=t,this._stack.fallThrough=!1,I;t--}for(;t>=0;t--)if(I=this._active[t].end(!1),I instanceof Promise)return this._stack.paused=!0,this._stack.loopPosition=t,this._stack.fallThrough=!0,I}else this._handlerFb(this._id,"END",g);this._active=i,this._id=-1,this._state=0}}},e.OscHandler=class{constructor(g){this._handler=g,this._data="",this._hitLimit=!1}start(){this._data="",this._hitLimit=!1}put(g,e,I){this._hitLimit||(this._data+=(0,C.utf32ToString)(g,e,I),this._data.length>t.PAYLOAD_LIMIT&&(this._data="",this._hitLimit=!0))}end(g){let e=!1;if(this._hitLimit)e=!1;else if(g&&(e=this._handler(this._data),e instanceof Promise))return e.then((g=>(this._data="",this._hitLimit=!1,g)));return this._data="",this._hitLimit=!1,e}}},8742:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Params=void 0;const I=2147483647;class t{static fromArray(g){const e=new t;if(!g.length)return e;for(let I=Array.isArray(g[0])?1:0;I<g.length;++I){const t=g[I];if(Array.isArray(t))for(let g=0;g<t.length;++g)e.addSubParam(t[g]);else e.addParam(t)}return e}constructor(g=32,e=32){if(this.maxLength=g,this.maxSubParamsLength=e,e>256)throw new Error("maxSubParamsLength must not be greater than 256");this.params=new Int32Array(g),this.length=0,this._subParams=new Int32Array(e),this._subParamsLength=0,this._subParamsIdx=new Uint16Array(g),this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}clone(){const g=new t(this.maxLength,this.maxSubParamsLength);return g.params.set(this.params),g.length=this.length,g._subParams.set(this._subParams),g._subParamsLength=this._subParamsLength,g._subParamsIdx.set(this._subParamsIdx),g._rejectDigits=this._rejectDigits,g._rejectSubDigits=this._rejectSubDigits,g._digitIsSub=this._digitIsSub,g}toArray(){const g=[];for(let e=0;e<this.length;++e){g.push(this.params[e]);const I=this._subParamsIdx[e]>>8,t=255&this._subParamsIdx[e];t-I>0&&g.push(Array.prototype.slice.call(this._subParams,I,t))}return g}reset(){this.length=0,this._subParamsLength=0,this._rejectDigits=!1,this._rejectSubDigits=!1,this._digitIsSub=!1}addParam(g){if(this._digitIsSub=!1,this.length>=this.maxLength)this._rejectDigits=!0;else{if(g<-1)throw new Error("values lesser than -1 are not allowed");this._subParamsIdx[this.length]=this._subParamsLength<<8|this._subParamsLength,this.params[this.length++]=g>I?I:g}}addSubParam(g){if(this._digitIsSub=!0,this.length)if(this._rejectDigits||this._subParamsLength>=this.maxSubParamsLength)this._rejectSubDigits=!0;else{if(g<-1)throw new Error("values lesser than -1 are not allowed");this._subParams[this._subParamsLength++]=g>I?I:g,this._subParamsIdx[this.length-1]++}}hasSubParams(g){return(255&this._subParamsIdx[g])-(this._subParamsIdx[g]>>8)>0}getSubParams(g){const e=this._subParamsIdx[g]>>8,I=255&this._subParamsIdx[g];return I-e>0?this._subParams.subarray(e,I):null}getSubParamsAll(){const g={};for(let e=0;e<this.length;++e){const I=this._subParamsIdx[e]>>8,t=255&this._subParamsIdx[e];t-I>0&&(g[e]=this._subParams.slice(I,t))}return g}addDigit(g){let e;if(this._rejectDigits||!(e=this._digitIsSub?this._subParamsLength:this.length)||this._digitIsSub&&this._rejectSubDigits)return;const t=this._digitIsSub?this._subParams:this.params,C=t[e-1];t[e-1]=~C?Math.min(10*C+g,I):g}}e.Params=t},5741:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.AddonManager=void 0,e.AddonManager=class{constructor(){this._addons=[]}dispose(){for(let g=this._addons.length-1;g>=0;g--)this._addons[g].instance.dispose()}loadAddon(g,e){const I={instance:e,dispose:e.dispose,isDisposed:!1};this._addons.push(I),e.dispose=()=>this._wrappedAddonDispose(I),e.activate(g)}_wrappedAddonDispose(g){if(g.isDisposed)return;let e=-1;for(let I=0;I<this._addons.length;I++)if(this._addons[I]===g){e=I;break}if(-1===e)throw new Error("Could not dispose an addon that has not been loaded");g.isDisposed=!0,g.dispose.apply(g.instance),this._addons.splice(e,1)}}},8771:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BufferApiView=void 0;const t=I(3785),C=I(511);e.BufferApiView=class{constructor(g,e){this._buffer=g,this.type=e}init(g){return this._buffer=g,this}get cursorY(){return this._buffer.y}get cursorX(){return this._buffer.x}get viewportY(){return this._buffer.ydisp}get baseY(){return this._buffer.ybase}get length(){return this._buffer.lines.length}getLine(g){const e=this._buffer.lines.get(g);if(e)return new t.BufferLineApiView(e)}getNullCell(){return new C.CellData}}},3785:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BufferLineApiView=void 0;const t=I(511);e.BufferLineApiView=class{constructor(g){this._line=g}get isWrapped(){return this._line.isWrapped}get length(){return this._line.length}getCell(g,e){if(!(g<0||g>=this._line.length))return e?(this._line.loadCell(g,e),e):this._line.loadCell(g,new t.CellData)}translateToString(g,e,I){return this._line.translateToString(g,e,I)}}},8285:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BufferNamespaceApi=void 0;const t=I(8771),C=I(8460),i=I(844);class l extends i.Disposable{constructor(g){super(),this._core=g,this._onBufferChange=this.register(new C.EventEmitter),this.onBufferChange=this._onBufferChange.event,this._normal=new t.BufferApiView(this._core.buffers.normal,"normal"),this._alternate=new t.BufferApiView(this._core.buffers.alt,"alternate"),this._core.buffers.onBufferActivate((()=>this._onBufferChange.fire(this.active)))}get active(){if(this._core.buffers.active===this._core.buffers.normal)return this.normal;if(this._core.buffers.active===this._core.buffers.alt)return this.alternate;throw new Error("Active buffer is neither normal nor alternate")}get normal(){return this._normal.init(this._core.buffers.normal)}get alternate(){return this._alternate.init(this._core.buffers.alt)}}e.BufferNamespaceApi=l},7975:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ParserApi=void 0,e.ParserApi=class{constructor(g){this._core=g}registerCsiHandler(g,e){return this._core.registerCsiHandler(g,(g=>e(g.toArray())))}addCsiHandler(g,e){return this.registerCsiHandler(g,e)}registerDcsHandler(g,e){return this._core.registerDcsHandler(g,((g,I)=>e(g,I.toArray())))}addDcsHandler(g,e){return this.registerDcsHandler(g,e)}registerEscHandler(g,e){return this._core.registerEscHandler(g,e)}addEscHandler(g,e){return this.registerEscHandler(g,e)}registerOscHandler(g,e){return this._core.registerOscHandler(g,e)}addOscHandler(g,e){return this.registerOscHandler(g,e)}}},7090:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UnicodeApi=void 0,e.UnicodeApi=class{constructor(g){this._core=g}register(g){this._core.unicodeService.register(g)}get versions(){return this._core.unicodeService.versions}get activeVersion(){return this._core.unicodeService.activeVersion}set activeVersion(g){this._core.unicodeService.activeVersion=g}}},744:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.BufferService=e.MINIMUM_ROWS=e.MINIMUM_COLS=void 0;const i=I(8460),l=I(844),n=I(5295),A=I(2585);e.MINIMUM_COLS=2,e.MINIMUM_ROWS=1;let d=e.BufferService=class extends l.Disposable{get buffer(){return this.buffers.active}constructor(g){super(),this.isUserScrolling=!1,this._onResize=this.register(new i.EventEmitter),this.onResize=this._onResize.event,this._onScroll=this.register(new i.EventEmitter),this.onScroll=this._onScroll.event,this.cols=Math.max(g.rawOptions.cols||0,e.MINIMUM_COLS),this.rows=Math.max(g.rawOptions.rows||0,e.MINIMUM_ROWS),this.buffers=this.register(new n.BufferSet(g,this))}resize(g,e){this.cols=g,this.rows=e,this.buffers.resize(g,e),this._onResize.fire({cols:g,rows:e})}reset(){this.buffers.reset(),this.isUserScrolling=!1}scroll(g,e=!1){const I=this.buffer;let t;t=this._cachedBlankLine,t&&t.length===this.cols&&t.getFg(0)===g.fg&&t.getBg(0)===g.bg||(t=I.getBlankLine(g,e),this._cachedBlankLine=t),t.isWrapped=e;const C=I.ybase+I.scrollTop,i=I.ybase+I.scrollBottom;if(0===I.scrollTop){const g=I.lines.isFull;i===I.lines.length-1?g?I.lines.recycle().copyFrom(t):I.lines.push(t.clone()):I.lines.splice(i+1,0,t.clone()),g?this.isUserScrolling&&(I.ydisp=Math.max(I.ydisp-1,0)):(I.ybase++,this.isUserScrolling||I.ydisp++)}else{const g=i-C+1;I.lines.shiftElements(C+1,g-1,-1),I.lines.set(i,t.clone())}this.isUserScrolling||(I.ydisp=I.ybase),this._onScroll.fire(I.ydisp)}scrollLines(g,e,I){const t=this.buffer;if(g<0){if(0===t.ydisp)return;this.isUserScrolling=!0}else g+t.ydisp>=t.ybase&&(this.isUserScrolling=!1);const C=t.ydisp;t.ydisp=Math.max(Math.min(t.ydisp+g,t.ybase),0),C!==t.ydisp&&(e||this._onScroll.fire(t.ydisp))}};e.BufferService=d=t([C(0,A.IOptionsService)],d)},7994:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CharsetService=void 0,e.CharsetService=class{constructor(){this.glevel=0,this._charsets=[]}reset(){this.charset=void 0,this._charsets=[],this.glevel=0}setgLevel(g){this.glevel=g,this.charset=this._charsets[g]}setgCharset(g,e){this._charsets[g]=e,this.glevel===g&&(this.charset=e)}}},1753:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.CoreMouseService=void 0;const i=I(2585),l=I(8460),n=I(844),A={NONE:{events:0,restrict:()=>!1},X10:{events:1,restrict:g=>4!==g.button&&1===g.action&&(g.ctrl=!1,g.alt=!1,g.shift=!1,!0)},VT200:{events:19,restrict:g=>32!==g.action},DRAG:{events:23,restrict:g=>32!==g.action||3!==g.button},ANY:{events:31,restrict:g=>!0}};function d(g,e){let I=(g.ctrl?16:0)|(g.shift?4:0)|(g.alt?8:0);return 4===g.button?(I|=64,I|=g.action):(I|=3&g.button,4&g.button&&(I|=64),8&g.button&&(I|=128),32===g.action?I|=32:0!==g.action||e||(I|=3)),I}const o=String.fromCharCode,s={DEFAULT:g=>{const e=[d(g,!1)+32,g.col+32,g.row+32];return e[0]>255||e[1]>255||e[2]>255?"":`[M${o(e[0])}${o(e[1])}${o(e[2])}`},SGR:g=>{const e=0===g.action&&4!==g.button?"m":"M";return`[<${d(g,!0)};${g.col};${g.row}${e}`},SGR_PIXELS:g=>{const e=0===g.action&&4!==g.button?"m":"M";return`[<${d(g,!0)};${g.x};${g.y}${e}`}};let a=e.CoreMouseService=class extends n.Disposable{constructor(g,e){super(),this._bufferService=g,this._coreService=e,this._protocols={},this._encodings={},this._activeProtocol="",this._activeEncoding="",this._lastEvent=null,this._onProtocolChange=this.register(new l.EventEmitter),this.onProtocolChange=this._onProtocolChange.event;for(const g of Object.keys(A))this.addProtocol(g,A[g]);for(const g of Object.keys(s))this.addEncoding(g,s[g]);this.reset()}addProtocol(g,e){this._protocols[g]=e}addEncoding(g,e){this._encodings[g]=e}get activeProtocol(){return this._activeProtocol}get areMouseEventsActive(){return 0!==this._protocols[this._activeProtocol].events}set activeProtocol(g){if(!this._protocols[g])throw new Error(`unknown protocol "${g}"`);this._activeProtocol=g,this._onProtocolChange.fire(this._protocols[g].events)}get activeEncoding(){return this._activeEncoding}set activeEncoding(g){if(!this._encodings[g])throw new Error(`unknown encoding "${g}"`);this._activeEncoding=g}reset(){this.activeProtocol="NONE",this.activeEncoding="DEFAULT",this._lastEvent=null}triggerMouseEvent(g){if(g.col<0||g.col>=this._bufferService.cols||g.row<0||g.row>=this._bufferService.rows||4===g.button&&32===g.action||3===g.button&&32!==g.action||4!==g.button&&(2===g.action||3===g.action)||(g.col++,g.row++,32===g.action&&this._lastEvent&&this._equalEvents(this._lastEvent,g,"SGR_PIXELS"===this._activeEncoding))||!this._protocols[this._activeProtocol].restrict(g))return!1;const e=this._encodings[this._activeEncoding](g);return e&&("DEFAULT"===this._activeEncoding?this._coreService.triggerBinaryEvent(e):this._coreService.triggerDataEvent(e,!0)),this._lastEvent=g,!0}explainEvents(g){return{down:!!(1&g),up:!!(2&g),drag:!!(4&g),move:!!(8&g),wheel:!!(16&g)}}_equalEvents(g,e,I){if(I){if(g.x!==e.x||g.y!==e.y)return!1}else if(g.col!==e.col||g.row!==e.row)return!1;return g.button===e.button&&g.action===e.action&&g.ctrl===e.ctrl&&g.alt===e.alt&&g.shift===e.shift}};e.CoreMouseService=a=t([C(0,i.IBufferService),C(1,i.ICoreService)],a)},6975:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.CoreService=void 0;const i=I(1439),l=I(8460),n=I(844),A=I(2585),d=Object.freeze({insertMode:!1}),o=Object.freeze({applicationCursorKeys:!1,applicationKeypad:!1,bracketedPasteMode:!1,origin:!1,reverseWraparound:!1,sendFocus:!1,wraparound:!0});let s=e.CoreService=class extends n.Disposable{constructor(g,e,I){super(),this._bufferService=g,this._logService=e,this._optionsService=I,this.isCursorInitialized=!1,this.isCursorHidden=!1,this._onData=this.register(new l.EventEmitter),this.onData=this._onData.event,this._onUserInput=this.register(new l.EventEmitter),this.onUserInput=this._onUserInput.event,this._onBinary=this.register(new l.EventEmitter),this.onBinary=this._onBinary.event,this._onRequestScrollToBottom=this.register(new l.EventEmitter),this.onRequestScrollToBottom=this._onRequestScrollToBottom.event,this.modes=(0,i.clone)(d),this.decPrivateModes=(0,i.clone)(o)}reset(){this.modes=(0,i.clone)(d),this.decPrivateModes=(0,i.clone)(o)}triggerDataEvent(g,e=!1){if(this._optionsService.rawOptions.disableStdin)return;const I=this._bufferService.buffer;e&&this._optionsService.rawOptions.scrollOnUserInput&&I.ybase!==I.ydisp&&this._onRequestScrollToBottom.fire(),e&&this._onUserInput.fire(),this._logService.debug(`sending data "${g}"`,(()=>g.split("").map((g=>g.charCodeAt(0))))),this._onData.fire(g)}triggerBinaryEvent(g){this._optionsService.rawOptions.disableStdin||(this._logService.debug(`sending binary "${g}"`,(()=>g.split("").map((g=>g.charCodeAt(0))))),this._onBinary.fire(g))}};e.CoreService=s=t([C(0,A.IBufferService),C(1,A.ILogService),C(2,A.IOptionsService)],s)},9074:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DecorationService=void 0;const t=I(8055),C=I(8460),i=I(844),l=I(6106);let n=0,A=0;class d extends i.Disposable{get decorations(){return this._decorations.values()}constructor(){super(),this._decorations=new l.SortedList((g=>null==g?void 0:g.marker.line)),this._onDecorationRegistered=this.register(new C.EventEmitter),this.onDecorationRegistered=this._onDecorationRegistered.event,this._onDecorationRemoved=this.register(new C.EventEmitter),this.onDecorationRemoved=this._onDecorationRemoved.event,this.register((0,i.toDisposable)((()=>this.reset())))}registerDecoration(g){if(g.marker.isDisposed)return;const e=new o(g);if(e){const g=e.marker.onDispose((()=>e.dispose()));e.onDispose((()=>{e&&(this._decorations.delete(e)&&this._onDecorationRemoved.fire(e),g.dispose())})),this._decorations.insert(e),this._onDecorationRegistered.fire(e)}return e}reset(){for(const g of this._decorations.values())g.dispose();this._decorations.clear()}*getDecorationsAtCell(g,e,I){let t=0,C=0;for(const i of this._decorations.getKeyIterator(e))t=i.options.x??0,C=t+(i.options.width??1),g>=t&&g<C&&(!I||(i.options.layer??"bottom")===I)&&(yield i)}forEachDecorationAtCell(g,e,I,t){this._decorations.forEachByKey(e,(e=>{n=e.options.x??0,A=n+(e.options.width??1),g>=n&&g<A&&(!I||(e.options.layer??"bottom")===I)&&t(e)}))}}e.DecorationService=d;class o extends i.Disposable{get isDisposed(){return this._isDisposed}get backgroundColorRGB(){return null===this._cachedBg&&(this.options.backgroundColor?this._cachedBg=t.css.toColor(this.options.backgroundColor):this._cachedBg=void 0),this._cachedBg}get foregroundColorRGB(){return null===this._cachedFg&&(this.options.foregroundColor?this._cachedFg=t.css.toColor(this.options.foregroundColor):this._cachedFg=void 0),this._cachedFg}constructor(g){super(),this.options=g,this.onRenderEmitter=this.register(new C.EventEmitter),this.onRender=this.onRenderEmitter.event,this._onDispose=this.register(new C.EventEmitter),this.onDispose=this._onDispose.event,this._cachedBg=null,this._cachedFg=null,this.marker=g.marker,this.options.overviewRulerOptions&&!this.options.overviewRulerOptions.position&&(this.options.overviewRulerOptions.position="full")}dispose(){this._onDispose.fire(),super.dispose()}}},4348:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.InstantiationService=e.ServiceCollection=void 0;const t=I(2585),C=I(8343);class i{constructor(...g){this._entries=new Map;for(const[e,I]of g)this.set(e,I)}set(g,e){const I=this._entries.get(g);return this._entries.set(g,e),I}forEach(g){for(const[e,I]of this._entries.entries())g(e,I)}has(g){return this._entries.has(g)}get(g){return this._entries.get(g)}}e.ServiceCollection=i,e.InstantiationService=class{constructor(){this._services=new i,this._services.set(t.IInstantiationService,this)}setService(g,e){this._services.set(g,e)}getService(g){return this._services.get(g)}createInstance(g,...e){const I=(0,C.getServiceDependencies)(g).sort(((g,e)=>g.index-e.index)),t=[];for(const e of I){const I=this._services.get(e.id);if(!I)throw new Error(`[createInstance] ${g.name} depends on UNKNOWN service ${e.id}.`);t.push(I)}const i=I.length>0?I[0].index:e.length;if(e.length!==i)throw new Error(`[createInstance] First service dependency of ${g.name} at position ${i+1} conflicts with ${e.length} static arguments`);return new g(...e,...t)}}},7866:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.traceCall=e.setTraceLogger=e.LogService=void 0;const i=I(844),l=I(2585),n={trace:l.LogLevelEnum.TRACE,debug:l.LogLevelEnum.DEBUG,info:l.LogLevelEnum.INFO,warn:l.LogLevelEnum.WARN,error:l.LogLevelEnum.ERROR,off:l.LogLevelEnum.OFF};let A,d=e.LogService=class extends i.Disposable{get logLevel(){return this._logLevel}constructor(g){super(),this._optionsService=g,this._logLevel=l.LogLevelEnum.OFF,this._updateLogLevel(),this.register(this._optionsService.onSpecificOptionChange("logLevel",(()=>this._updateLogLevel()))),A=this}_updateLogLevel(){this._logLevel=n[this._optionsService.rawOptions.logLevel]}_evalLazyOptionalParams(g){for(let e=0;e<g.length;e++)"function"==typeof g[e]&&(g[e]=g[e]())}_log(g,e,I){this._evalLazyOptionalParams(I),g.call(console,(this._optionsService.options.logger?"":"xterm.js: ")+e,...I)}trace(g,...e){var I;this._logLevel<=l.LogLevelEnum.TRACE&&this._log((null==(I=this._optionsService.options.logger)?void 0:I.trace.bind(this._optionsService.options.logger))??console.log,g,e)}debug(g,...e){var I;this._logLevel<=l.LogLevelEnum.DEBUG&&this._log((null==(I=this._optionsService.options.logger)?void 0:I.debug.bind(this._optionsService.options.logger))??console.log,g,e)}info(g,...e){var I;this._logLevel<=l.LogLevelEnum.INFO&&this._log((null==(I=this._optionsService.options.logger)?void 0:I.info.bind(this._optionsService.options.logger))??console.info,g,e)}warn(g,...e){var I;this._logLevel<=l.LogLevelEnum.WARN&&this._log((null==(I=this._optionsService.options.logger)?void 0:I.warn.bind(this._optionsService.options.logger))??console.warn,g,e)}error(g,...e){var I;this._logLevel<=l.LogLevelEnum.ERROR&&this._log((null==(I=this._optionsService.options.logger)?void 0:I.error.bind(this._optionsService.options.logger))??console.error,g,e)}};e.LogService=d=t([C(0,l.IOptionsService)],d),e.setTraceLogger=function(g){A=g},e.traceCall=function(g,e,I){if("function"!=typeof I.value)throw new Error("not supported");const t=I.value;I.value=function(...g){if(A.logLevel!==l.LogLevelEnum.TRACE)return t.apply(this,g);A.trace(`GlyphRenderer#${t.name}(${g.map((g=>JSON.stringify(g))).join(", ")})`);const e=t.apply(this,g);return A.trace(`GlyphRenderer#${t.name} return`,e),e}}},7302:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.OptionsService=e.DEFAULT_OPTIONS=void 0;const t=I(8460),C=I(844),i=I(6114);e.DEFAULT_OPTIONS={cols:80,rows:24,cursorBlink:!1,cursorStyle:"block",cursorWidth:1,cursorInactiveStyle:"outline",customGlyphs:!0,drawBoldTextInBrightColors:!0,documentOverride:null,fastScrollModifier:"alt",fastScrollSensitivity:5,fontFamily:"courier-new, courier, monospace",fontSize:15,fontWeight:"normal",fontWeightBold:"bold",ignoreBracketedPasteMode:!1,lineHeight:1,letterSpacing:0,linkHandler:null,logLevel:"info",logger:null,scrollback:1e3,scrollOnUserInput:!0,scrollSensitivity:1,screenReaderMode:!1,smoothScrollDuration:0,macOptionIsMeta:!1,macOptionClickForcesSelection:!1,minimumContrastRatio:1,disableStdin:!1,allowProposedApi:!1,allowTransparency:!1,tabStopWidth:8,theme:{},rescaleOverlappingGlyphs:!1,rightClickSelectsWord:i.isMac,windowOptions:{},windowsMode:!1,windowsPty:{},wordSeparator:" ()[]{}',\"`",altClickMovesCursor:!0,convertEol:!1,termName:"xterm",cancelEvents:!1,overviewRulerWidth:0};const l=["normal","bold","100","200","300","400","500","600","700","800","900"];class n extends C.Disposable{constructor(g){super(),this._onOptionChange=this.register(new t.EventEmitter),this.onOptionChange=this._onOptionChange.event;const I={...e.DEFAULT_OPTIONS};for(const e in g)if(e in I)try{const t=g[e];I[e]=this._sanitizeAndValidateOption(e,t)}catch(g){}this.rawOptions=I,this.options={...I},this._setupOptions(),this.register((0,C.toDisposable)((()=>{this.rawOptions.linkHandler=null,this.rawOptions.documentOverride=null})))}onSpecificOptionChange(g,e){return this.onOptionChange((I=>{I===g&&e(this.rawOptions[g])}))}onMultipleOptionChange(g,e){return this.onOptionChange((I=>{-1!==g.indexOf(I)&&e()}))}_setupOptions(){const g=g=>{if(!(g in e.DEFAULT_OPTIONS))throw new Error(`No option with key "${g}"`);return this.rawOptions[g]},I=(g,I)=>{if(!(g in e.DEFAULT_OPTIONS))throw new Error(`No option with key "${g}"`);I=this._sanitizeAndValidateOption(g,I),this.rawOptions[g]!==I&&(this.rawOptions[g]=I,this._onOptionChange.fire(g))};for(const e in this.rawOptions){const t={get:g.bind(this,e),set:I.bind(this,e)};Object.defineProperty(this.options,e,t)}}_sanitizeAndValidateOption(g,I){switch(g){case"cursorStyle":if(I||(I=e.DEFAULT_OPTIONS[g]),!function(g){return"block"===g||"underline"===g||"bar"===g}(I))throw new Error(`"${I}" is not a valid value for ${g}`);break;case"wordSeparator":I||(I=e.DEFAULT_OPTIONS[g]);break;case"fontWeight":case"fontWeightBold":if("number"==typeof I&&1<=I&&I<=1e3)break;I=l.includes(I)?I:e.DEFAULT_OPTIONS[g];break;case"cursorWidth":I=Math.floor(I);case"lineHeight":case"tabStopWidth":if(I<1)throw new Error(`${g} cannot be less than 1, value: ${I}`);break;case"minimumContrastRatio":I=Math.max(1,Math.min(21,Math.round(10*I)/10));break;case"scrollback":if((I=Math.min(I,4294967295))<0)throw new Error(`${g} cannot be less than 0, value: ${I}`);break;case"fastScrollSensitivity":case"scrollSensitivity":if(I<=0)throw new Error(`${g} cannot be less than or equal to 0, value: ${I}`);break;case"rows":case"cols":if(!I&&0!==I)throw new Error(`${g} must be numeric, value: ${I}`);break;case"windowsPty":I=I??{}}return I}}e.OptionsService=n},2660:function(g,e,I){var t=this&&this.__decorate||function(g,e,I,t){var C,i=arguments.length,l=i<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,I):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(g,e,I,t);else for(var n=g.length-1;n>=0;n--)(C=g[n])&&(l=(i<3?C(l):i>3?C(e,I,l):C(e,I))||l);return i>3&&l&&Object.defineProperty(e,I,l),l},C=this&&this.__param||function(g,e){return function(I,t){e(I,t,g)}};Object.defineProperty(e,"__esModule",{value:!0}),e.OscLinkService=void 0;const i=I(2585);let l=e.OscLinkService=class{constructor(g){this._bufferService=g,this._nextId=1,this._entriesWithId=new Map,this._dataByLinkId=new Map}registerLink(g){const e=this._bufferService.buffer;if(void 0===g.id){const I=e.addMarker(e.ybase+e.y),t={data:g,id:this._nextId++,lines:[I]};return I.onDispose((()=>this._removeMarkerFromLink(t,I))),this._dataByLinkId.set(t.id,t),t.id}const I=g,t=this._getEntryIdKey(I),C=this._entriesWithId.get(t);if(C)return this.addLineToLink(C.id,e.ybase+e.y),C.id;const i=e.addMarker(e.ybase+e.y),l={id:this._nextId++,key:this._getEntryIdKey(I),data:I,lines:[i]};return i.onDispose((()=>this._removeMarkerFromLink(l,i))),this._entriesWithId.set(l.key,l),this._dataByLinkId.set(l.id,l),l.id}addLineToLink(g,e){const I=this._dataByLinkId.get(g);if(I&&I.lines.every((g=>g.line!==e))){const g=this._bufferService.buffer.addMarker(e);I.lines.push(g),g.onDispose((()=>this._removeMarkerFromLink(I,g)))}}getLinkData(g){var e;return null==(e=this._dataByLinkId.get(g))?void 0:e.data}_getEntryIdKey(g){return`${g.id};;${g.uri}`}_removeMarkerFromLink(g,e){const I=g.lines.indexOf(e);-1!==I&&(g.lines.splice(I,1),0===g.lines.length&&(void 0!==g.data.id&&this._entriesWithId.delete(g.key),this._dataByLinkId.delete(g.id)))}};e.OscLinkService=l=t([C(0,i.IBufferService)],l)},8343:(g,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.createDecorator=e.getServiceDependencies=e.serviceRegistry=void 0;const I="di$target",t="di$dependencies";e.serviceRegistry=new Map,e.getServiceDependencies=function(g){return g[t]||[]},e.createDecorator=function(g){if(e.serviceRegistry.has(g))return e.serviceRegistry.get(g);const C=function(g,e,i){if(3!==arguments.length)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");var l,n,A;l=C,A=i,(n=g)[I]===n?n[t].push({id:l,index:A}):(n[t]=[{id:l,index:A}],n[I]=n)};return C.toString=()=>g,e.serviceRegistry.set(g,C),C}},2585:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.IDecorationService=e.IUnicodeService=e.IOscLinkService=e.IOptionsService=e.ILogService=e.LogLevelEnum=e.IInstantiationService=e.ICharsetService=e.ICoreService=e.ICoreMouseService=e.IBufferService=void 0;const t=I(8343);var C,i;e.IBufferService=(0,t.createDecorator)("BufferService"),e.ICoreMouseService=(0,t.createDecorator)("CoreMouseService"),e.ICoreService=(0,t.createDecorator)("CoreService"),e.ICharsetService=(0,t.createDecorator)("CharsetService"),e.IInstantiationService=(0,t.createDecorator)("InstantiationService"),(i=C||(e.LogLevelEnum=C={}))[i.TRACE=0]="TRACE",i[i.DEBUG=1]="DEBUG",i[i.INFO=2]="INFO",i[i.WARN=3]="WARN",i[i.ERROR=4]="ERROR",i[i.OFF=5]="OFF",e.ILogService=(0,t.createDecorator)("LogService"),e.IOptionsService=(0,t.createDecorator)("OptionsService"),e.IOscLinkService=(0,t.createDecorator)("OscLinkService"),e.IUnicodeService=(0,t.createDecorator)("UnicodeService"),e.IDecorationService=(0,t.createDecorator)("DecorationService")},1480:(g,e,I)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UnicodeService=void 0;const t=I(8460),C=I(225);class i{static extractShouldJoin(g){return!!(1&g)}static extractWidth(g){return g>>1&3}static extractCharKind(g){return g>>3}static createPropertyValue(g,e,I=!1){return(16777215&g)<<3|(3&e)<<1|(I?1:0)}constructor(){this._providers=Object.create(null),this._active="",this._onChange=new t.EventEmitter,this.onChange=this._onChange.event;const g=new C.UnicodeV6;this.register(g),this._active=g.version,this._activeProvider=g}dispose(){this._onChange.dispose()}get versions(){return Object.keys(this._providers)}get activeVersion(){return this._active}set activeVersion(g){if(!this._providers[g])throw new Error(`unknown Unicode version "${g}"`);this._active=g,this._activeProvider=this._providers[g],this._onChange.fire(g)}register(g){this._providers[g.version]=g}wcwidth(g){return this._activeProvider.wcwidth(g)}getStringCellWidth(g){let e=0,I=0;const t=g.length;for(let C=0;C<t;++C){let l=g.charCodeAt(C);if(55296<=l&&l<=56319){if(++C>=t)return e+this.wcwidth(l);const I=g.charCodeAt(C);56320<=I&&I<=57343?l=1024*(l-55296)+I-56320+65536:e+=this.wcwidth(I)}const n=this.charProperties(l,I);let A=i.extractWidth(n);i.extractShouldJoin(n)&&(A-=i.extractWidth(I)),e+=A,I=n}return e}charProperties(g,e){return this._activeProvider.charProperties(g,e)}}e.UnicodeService=i}},e={};function I(t){var C=e[t];if(void 0!==C)return C.exports;var i=e[t]={exports:{}};return g[t].call(i.exports,i,i.exports,I),i.exports}var t={};return(()=>{var g=t;Object.defineProperty(g,"__esModule",{value:!0}),g.Terminal=void 0;const e=I(9042),C=I(3236),i=I(844),l=I(5741),n=I(8285),A=I(7975),d=I(7090),o=["cols","rows"];class s extends i.Disposable{constructor(g){super(),this._core=this.register(new C.Terminal(g)),this._addonManager=this.register(new l.AddonManager),this._publicOptions={...this._core.options};const e=g=>this._core.options[g],I=(g,e)=>{this._checkReadonlyOptions(g),this._core.options[g]=e};for(const g in this._core.options){const t={get:e.bind(this,g),set:I.bind(this,g)};Object.defineProperty(this._publicOptions,g,t)}}_checkReadonlyOptions(g){if(o.includes(g))throw new Error(`Option "${g}" can only be set in the constructor`)}_checkProposedApi(){if(!this._core.optionsService.rawOptions.allowProposedApi)throw new Error("You must set the allowProposedApi option to true to use proposed API")}get onBell(){return this._core.onBell}get onBinary(){return this._core.onBinary}get onCursorMove(){return this._core.onCursorMove}get onData(){return this._core.onData}get onKey(){return this._core.onKey}get onLineFeed(){return this._core.onLineFeed}get onRender(){return this._core.onRender}get onResize(){return this._core.onResize}get onScroll(){return this._core.onScroll}get onSelectionChange(){return this._core.onSelectionChange}get onTitleChange(){return this._core.onTitleChange}get onWriteParsed(){return this._core.onWriteParsed}get element(){return this._core.element}get parser(){return this._parser||(this._parser=new A.ParserApi(this._core)),this._parser}get unicode(){return this._checkProposedApi(),new d.UnicodeApi(this._core)}get textarea(){return this._core.textarea}get rows(){return this._core.rows}get cols(){return this._core.cols}get buffer(){return this._buffer||(this._buffer=this.register(new n.BufferNamespaceApi(this._core))),this._buffer}get markers(){return this._checkProposedApi(),this._core.markers}get modes(){const g=this._core.coreService.decPrivateModes;let e="none";switch(this._core.coreMouseService.activeProtocol){case"X10":e="x10";break;case"VT200":e="vt200";break;case"DRAG":e="drag";break;case"ANY":e="any"}return{applicationCursorKeysMode:g.applicationCursorKeys,applicationKeypadMode:g.applicationKeypad,bracketedPasteMode:g.bracketedPasteMode,insertMode:this._core.coreService.modes.insertMode,mouseTrackingMode:e,originMode:g.origin,reverseWraparoundMode:g.reverseWraparound,sendFocusMode:g.sendFocus,wraparoundMode:g.wraparound}}get options(){return this._publicOptions}set options(g){for(const e in g)this._publicOptions[e]=g[e]}blur(){this._core.blur()}focus(){this._core.focus()}input(g,e=!0){this._core.input(g,e)}resize(g,e){this._verifyIntegers(g,e),this._core.resize(g,e)}open(g){this._core.open(g)}attachCustomKeyEventHandler(g){this._core.attachCustomKeyEventHandler(g)}attachCustomWheelEventHandler(g){this._core.attachCustomWheelEventHandler(g)}registerLinkProvider(g){return this._core.registerLinkProvider(g)}registerCharacterJoiner(g){return this._checkProposedApi(),this._core.registerCharacterJoiner(g)}deregisterCharacterJoiner(g){this._checkProposedApi(),this._core.deregisterCharacterJoiner(g)}registerMarker(g=0){return this._verifyIntegers(g),this._core.registerMarker(g)}registerDecoration(g){return this._checkProposedApi(),this._verifyPositiveIntegers(g.x??0,g.width??0,g.height??0),this._core.registerDecoration(g)}hasSelection(){return this._core.hasSelection()}select(g,e,I){this._verifyIntegers(g,e,I),this._core.select(g,e,I)}getSelection(){return this._core.getSelection()}getSelectionPosition(){return this._core.getSelectionPosition()}clearSelection(){this._core.clearSelection()}selectAll(){this._core.selectAll()}selectLines(g,e){this._verifyIntegers(g,e),this._core.selectLines(g,e)}dispose(){super.dispose()}scrollLines(g){this._verifyIntegers(g),this._core.scrollLines(g)}scrollPages(g){this._verifyIntegers(g),this._core.scrollPages(g)}scrollToTop(){this._core.scrollToTop()}scrollToBottom(){this._core.scrollToBottom()}scrollToLine(g){this._verifyIntegers(g),this._core.scrollToLine(g)}clear(){this._core.clear()}write(g,e){this._core.write(g,e)}writeln(g,e){this._core.write(g),this._core.write("\r\n",e)}paste(g){this._core.paste(g)}refresh(g,e){this._verifyIntegers(g,e),this._core.refresh(g,e)}reset(){this._core.reset()}clearTextureAtlas(){this._core.clearTextureAtlas()}loadAddon(g){this._addonManager.loadAddon(this,g)}static get strings(){return e}_verifyIntegers(...g){for(const e of g)if(e===1/0||isNaN(e)||e%1!=0)throw new Error("This API only accepts integers")}_verifyPositiveIntegers(...g){for(const e of g)if(e&&(e===1/0||isNaN(e)||e%1!=0||e<0))throw new Error("This API only accepts positive integers")}}g.Terminal=s})(),t})(),yD.exports=I()}();var JD=yD.exports;const HD="win32"===fg.platform?["-","\\","|","/"]:["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"];function wD(){let g=0;return()=>(g=++g%HD.length,HD[g])}const XD=new TextEncoder;class KD{constructor(g,e=!1){this.port=g,this.isReadOnly=e}async write(g){if(!this.isReadOnly){const{buffer:e}=XD.encode(g);this.port.postMessage(e,[e])}}async readInto(g){this.port.onmessage=({data:e})=>{const{payload:I}=e;g.write(new Uint8Array(I))}}dispose(){this.port.close()}}const zD=wD(),DD="[1D",vD="[1P",xD=`${DD}${vD}`;class OD{constructor(){I(this,"xterm"),I(this,"fitAddon"),I(this,"spinnerInterval"),I(this,"adapter"),I(this,"isOpen",!1),pE(this)}startSpinner(){this.spinnerInterval=setInterval((()=>{var g,e;null==(g=this.xterm)||g.write(DD),null==(e=this.xterm)||e.write(zD())}),100)}stopSpinner(){var g;clearInterval(this.spinnerInterval),null==(g=this.xterm)||g.write(DD),this.spinnerInterval=void 0}attachToMessagePort(g,e=!1){return this.setAdapter(new KD(g,e))}open(){this.isOpen=!0}close(){this.isOpen=!1}toggle(){this.isOpen=!this.isOpen}write(g){var e;null==(e=this.xterm)||e.write(g)}clear(){var g;null==(g=this.xterm)||g.reset()}fit(){var g;null==(g=this.fitAddon)||g.fit()}async setAdapter(g){var e,I;null==(I=null==(e=this.adapter)?void 0:e.dispose)||I.call(e),this.adapter=g,await g.readInto({write:g=>{var e;this.stopSpinner(),null==(e=this.xterm)||e.write(g)}})}printFatalError(g){var e,I,t;null==(I=null==(e=this.adapter)?void 0:e.dispose)||I.call(e),null==(t=this.xterm)||t.writeln(`Failed to start process: ${g.toString()}`)}mount(g){this.xterm&&this.xterm.dispose(),this.xterm=new JD.Terminal({cursorBlink:!0,cursorStyle:"bar",convertEol:!0}),this.fitAddon=new ED.FitAddon,this.xterm.loadAddon(this.fitAddon);let e="";this.xterm.onData((async g=>{var I,t,C,i,l;switch(g){case"":break;case"":await(null==(I=this.adapter)?void 0:I.write("^D\n")),e="";break;case"\r":await(null==(t=this.adapter)?void 0:t.write(e+"\n")),e="",null==(C=this.xterm)||C.write("\n");break;case"":e.length>0&&(null==(i=this.xterm)||i.write(xD),e=e.substring(0,e.length-1));break;default:(g>=" "&&g<="~"||g>=" ")&&(e+=g,null==(l=this.xterm)||l.write(g))}})),this.xterm.open(g),this.fitAddon.fit(),this.xterm.focus()}unmount(){var g;null==(g=this.xterm)||g.dispose()}}var fD={0:"Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'",1:function(g,e){return"Cannot apply '"+g+"' to '"+e.toString()+"': Field not found."},5:"'keys()' can only be used on observable objects, arrays, sets and maps",6:"'values()' can only be used on observable objects, arrays, sets and maps",7:"'entries()' can only be used on observable objects, arrays and maps",8:"'set()' can only be used on observable objects, arrays and maps",9:"'remove()' can only be used on observable objects, arrays and maps",10:"'has()' can only be used on observable objects, arrays and maps",11:"'get()' can only be used on observable objects, arrays and maps",12:"Invalid annotation",13:"Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",14:"Intercept handlers should return nothing or a change object",15:"Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)",16:"Modification exception: the internal structure of an observable array was changed.",17:function(g,e){return"[mobx.array] Index out of bounds, "+g+" is larger than "+e},18:"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js",19:function(g){return"Cannot initialize from classes that inherit from Map: "+g.constructor.name},20:function(g){return"Cannot initialize map from "+g},21:function(g){return"Cannot convert to map from '"+g+"'"},22:"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js",23:"It is not possible to get index atoms from arrays",24:function(g){return"Cannot obtain administration from "+g},25:function(g,e){return"the entry '"+g+"' does not exist in the observable map '"+e+"'"},26:"please specify a property",27:function(g,e){return"no observable property '"+g.toString()+"' found on the observable object '"+e+"'"},28:function(g){return"Cannot obtain atom from "+g},29:"Expecting some object",30:"invalid action stack. did you forget to finish an action?",31:"missing option for computed: get",32:function(g,e){return"Cycle detected in computation "+g+": "+e},33:function(g){return"The setter of computed value '"+g+"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?"},34:function(g){return"[ComputedValue '"+g+"'] It is not possible to assign a new value to a computed value."},35:"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`",36:"isolateGlobalState should be called before MobX is running any reactions",37:function(g){return"[mobx] `observableArray."+g+"()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice()."+g+"()` instead"},38:"'ownKeys()' can only be used on observable objects",39:"'defineProperty()' can only be used on observable objects"},jD="production"!==fg.env.NODE_ENV?fD:{};function LD(g){for(var e=arguments.length,I=new Array(e>1?e-1:0),t=1;t<e;t++)I[t-1]=arguments[t];if("production"!==fg.env.NODE_ENV){var C="string"==typeof g?g:jD[g];throw"function"==typeof C&&(C=C.apply(null,I)),new Error("[MobX] "+C)}throw new Error("number"==typeof g?"[MobX] minified error nr: "+g+(I.length?" "+I.map(String).join(","):"")+". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts":"[MobX] "+g)}var PD={};function _D(){return typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof jg<"u"?jg:typeof self<"u"?self:PD}var qD=Object.assign,$D=Object.getOwnPropertyDescriptor,gv=Object.defineProperty,ev=Object.prototype,Iv=[];Object.freeze(Iv);var tv={};Object.freeze(tv);var Cv=typeof Proxy<"u",iv=Object.toString();function lv(){Cv||LD("production"!==fg.env.NODE_ENV?"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`":"Proxy not available")}function nv(g){"production"!==fg.env.NODE_ENV&&XO.verifyProxies&&LD("MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to "+g)}function Av(){return++XO.mobxGuid}function dv(g){var e=!1;return function(){if(!e)return e=!0,g.apply(this,arguments)}}var ov=function(){};function sv(g){return"function"==typeof g}function av(g){switch(typeof g){case"string":case"symbol":case"number":return!0}return!1}function Vv(g){return null!==g&&"object"==typeof g}function cv(g){if(!Vv(g))return!1;var e=Object.getPrototypeOf(g);if(null==e)return!0;var I=Object.hasOwnProperty.call(e,"constructor")&&e.constructor;return"function"==typeof I&&I.toString()===iv}function rv(g){var e=null==g?void 0:g.constructor;return!!e&&("GeneratorFunction"===e.name||"GeneratorFunction"===e.displayName)}function hv(g,e,I){gv(g,e,{enumerable:!1,writable:!0,configurable:!0,value:I})}function Uv(g,e,I){gv(g,e,{enumerable:!1,writable:!1,configurable:!0,value:I})}function Zv(g,e){var I="isMobX"+g;return e.prototype[I]=!0,function(g){return Vv(g)&&!0===g[I]}}function Rv(g){return null!=g&&"[object Map]"===Object.prototype.toString.call(g)}function Fv(g){var e=Object.getPrototypeOf(g),I=Object.getPrototypeOf(e);return null===Object.getPrototypeOf(I)}function mv(g){return null!=g&&"[object Set]"===Object.prototype.toString.call(g)}var Bv=typeof Object.getOwnPropertySymbols<"u";function Wv(g){var e=Object.keys(g);if(!Bv)return e;var I=Object.getOwnPropertySymbols(g);return I.length?[].concat(e,I.filter((function(e){return ev.propertyIsEnumerable.call(g,e)}))):e}var Nv=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Bv?function(g){return Object.getOwnPropertyNames(g).concat(Object.getOwnPropertySymbols(g))}:Object.getOwnPropertyNames;function pv(g){return"string"==typeof g?g:"symbol"==typeof g?g.toString():new String(g).toString()}function Sv(g){return null===g?null:"object"==typeof g?""+g:g}function bv(g,e){return ev.hasOwnProperty.call(g,e)}var uv=Object.getOwnPropertyDescriptors||function(g){var e={};return Nv(g).forEach((function(I){e[I]=$D(g,I)})),e};function Tv(g,e){return!!(g&e)}function Gv(g,e,I){return I?g|=e:g&=~e,g}function kv(g,e){(null==e||e>g.length)&&(e=g.length);for(var I=0,t=Array(e);I<e;I++)t[I]=g[I];return t}function Qv(g,e){for(var I=0;I<e.length;I++){var t=e[I];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(g,wv(t.key),t)}}function Mv(g,e,I){return e&&Qv(g.prototype,e),Object.defineProperty(g,"prototype",{writable:!1}),g}function Yv(g,e){var I=typeof Symbol<"u"&&g[Symbol.iterator]||g["@@iterator"];if(I)return(I=I.call(g)).next.bind(I);if(Array.isArray(g)||(I=Xv(g))||e){I&&(g=I);var t=0;return function(){return t>=g.length?{done:!0}:{done:!1,value:g[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Ev(){return Ev=Object.assign?Object.assign.bind():function(g){for(var e=1;e<arguments.length;e++){var I=arguments[e];for(var t in I)({}).hasOwnProperty.call(I,t)&&(g[t]=I[t])}return g},Ev.apply(null,arguments)}function yv(g,e){g.prototype=Object.create(e.prototype),g.prototype.constructor=g,Jv(g,e)}function Jv(g,e){return(Jv=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(g,e){return g.__proto__=e,g})(g,e)}function Hv(g,e){if("object"!=typeof g||!g)return g;var I=g[Symbol.toPrimitive];if(void 0!==I){var t=I.call(g,e);if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(g)}function wv(g){var e=Hv(g,"string");return"symbol"==typeof e?e:e+""}function Xv(g,e){if(g){if("string"==typeof g)return kv(g,e);var I={}.toString.call(g).slice(8,-1);return"Object"===I&&g.constructor&&(I=g.constructor.name),"Map"===I||"Set"===I?Array.from(g):"Arguments"===I||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(I)?kv(g,e):void 0}}var Kv=Symbol("mobx-stored-annotations");function zv(g){return Object.assign((function(e,I){if(xv(I))return g.decorate_20223_(e,I);Dv(e,I,g)}),g)}function Dv(g,e,I){bv(g,Kv)||hv(g,Kv,Ev({},g[Kv])),"production"!==fg.env.NODE_ENV&&nx(I)&&!bv(g[Kv],e)&&LD("'"+g.constructor.name+".prototype."+e.toString()+"' is decorated with 'override', but no such decorated member was found on prototype."),vv(g,I,e),nx(I)||(g[Kv][e]=I)}function vv(g,e,I){if("production"!==fg.env.NODE_ENV&&!nx(e)&&bv(g[Kv],I)){var t=g.constructor.name+".prototype."+I.toString(),C=g[Kv][I].annotationType_;LD("Cannot apply '@"+e.annotationType_+"' to '"+t+"':\nThe field is already decorated with '@"+C+"'.\nRe-decorating fields is not allowed.\nUse '@override' decorator for methods overridden by subclass.")}}function xv(g){return"object"==typeof g&&"string"==typeof g.kind}function Ov(g,e){"production"!==fg.env.NODE_ENV&&!e.includes(g.kind)&&LD("The decorator applied to '"+String(g.name)+"' cannot be used on a "+g.kind+" element")}var fv=Symbol("mobx administration"),jv=function(){function g(g){void 0===g&&(g="production"!==fg.env.NODE_ENV?"Atom@"+Av():"Atom"),this.name_=void 0,this.flags_=0,this.observers_=new Set,this.lastAccessedBy_=0,this.lowestObserverState_=FO.NOT_TRACKING_,this.onBOL=void 0,this.onBUOL=void 0,this.name_=g}var e=g.prototype;return e.onBO=function(){this.onBOL&&this.onBOL.forEach((function(g){return g()}))},e.onBUO=function(){this.onBUOL&&this.onBUOL.forEach((function(g){return g()}))},e.reportObserved=function(){return OO(this)},e.reportChanged=function(){vO(),fO(this),xO()},e.toString=function(){return this.name_},Mv(g,[{key:"isBeingObserved",get:function(){return Tv(this.flags_,g.isBeingObservedMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isBeingObservedMask_,e)}},{key:"isPendingUnobservation",get:function(){return Tv(this.flags_,g.isPendingUnobservationMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isPendingUnobservationMask_,e)}},{key:"diffValue",get:function(){return Tv(this.flags_,g.diffValueMask_)?1:0},set:function(e){this.flags_=Gv(this.flags_,g.diffValueMask_,1===e)}}])}();jv.isBeingObservedMask_=1,jv.isPendingUnobservationMask_=2,jv.diffValueMask_=4;var Lv=Zv("Atom",jv);function Pv(g,e,I){void 0===e&&(e=ov),void 0===I&&(I=ov);var t=new jv(g);return e!==ov&&kf(t,e),I!==ov&&Qf(t,I),t}function _v(g,e){return g===e}function qv(g,e){return $j(g,e)}function $v(g,e){return $j(g,e,1)}function gx(g,e){return Object.is?Object.is(g,e):g===e?0!==g||1/g==1/e:g!=g&&e!=e}var ex={identity:_v,structural:qv,default:gx,shallow:$v};function Ix(g,e,I){return Of(g)?g:Array.isArray(g)?qx.array(g,{name:I}):cv(g)?qx.object(g,void 0,{name:I}):Rv(g)?qx.map(g,{name:I}):mv(g)?qx.set(g,{name:I}):"function"!=typeof g||Wf(g)||vf(g)?g:rv(g)?zf(g):Bf(I,g)}function tx(g,e,I){return null==g||Ej(g)||Rj(g)||Nj(g)||uj(g)?g:Array.isArray(g)?qx.array(g,{name:I,deep:!1}):cv(g)?qx.object(g,void 0,{name:I,deep:!1}):Rv(g)?qx.map(g,{name:I,deep:!1}):mv(g)?qx.set(g,{name:I,deep:!1}):void("production"!==fg.env.NODE_ENV&&LD("The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets"))}function Cx(g){return g}function ix(g,e){return"production"!==fg.env.NODE_ENV&&Of(g)&&LD("observable.struct should not be used with observable values"),$j(g,e)?e:g}var lx="override";function nx(g){return g.annotationType_===lx}function Ax(g,e){return{annotationType_:g,options_:e,make_:dx,extend_:ox,decorate_20223_:sx}}function dx(g,e,I,t){var C;if(null!=(C=this.options_)&&C.bound)return null===this.extend_(g,e,I,!1)?0:1;if(t===g.target_)return null===this.extend_(g,e,I,!1)?0:2;if(Wf(I.value))return 1;var i=Vx(g,this,e,I,!1);return gv(t,e,i),2}function ox(g,e,I,t){var C=Vx(g,this,e,I);return g.defineProperty_(e,C,t)}function sx(g,e){"production"!==fg.env.NODE_ENV&&Ov(e,["method","field"]);var I=e.kind,t=e.name,C=e.addInitializer,i=this;if("field"!=I){var l,n,A,d,o,s;if("method"==I)return Wf(g)||(n=g,g=oO(null!=(A=null==(d=i.options_)?void 0:d.name)?A:t.toString(),n,null!=(o=null==(s=i.options_)?void 0:s.autoAction)&&o)),null!=(l=this.options_)&&l.bound&&C((function(){var g=this,e=g[t].bind(g);e.isMobxAction=!0,g[t]=e})),g;LD("Cannot apply '"+i.annotationType_+"' to '"+String(t)+"' (kind: "+I+"):\n'"+i.annotationType_+"' can only be used on properties with a function value.")}else C((function(){Dv(this,t,i)}))}function ax(g,e,I,t){var C=e.annotationType_,i=t.value;"production"!==fg.env.NODE_ENV&&!sv(i)&&LD("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on properties with a function value.")}function Vx(g,e,I,t,C){var i,l,n,A,d,o,s;void 0===C&&(C=XO.safeDescriptors),ax(g,e,I,t);var a,V=t.value;return null!=(i=e.options_)&&i.bound&&(V=V.bind(null!=(a=g.proxy_)?a:g.target_)),{value:oO(null!=(l=null==(n=e.options_)?void 0:n.name)?l:I.toString(),V,null!=(A=null==(d=e.options_)?void 0:d.autoAction)&&A,null!=(o=e.options_)&&o.bound?null!=(s=g.proxy_)?s:g.target_:void 0),configurable:!C||g.isPlainObject_,enumerable:!1,writable:!C}}function cx(g,e){return{annotationType_:g,options_:e,make_:rx,extend_:hx,decorate_20223_:Ux}}function rx(g,e,I,t){var C;if(t===g.target_)return null===this.extend_(g,e,I,!1)?0:2;if(null!=(C=this.options_)&&C.bound&&(!bv(g.target_,e)||!vf(g.target_[e]))&&null===this.extend_(g,e,I,!1))return 0;if(vf(I.value))return 1;var i=Rx(g,this,e,I,!1,!1);return gv(t,e,i),2}function hx(g,e,I,t){var C,i=Rx(g,this,e,I,null==(C=this.options_)?void 0:C.bound);return g.defineProperty_(e,i,t)}function Ux(g,e){var I;"production"!==fg.env.NODE_ENV&&Ov(e,["method"]);var t=e.name,C=e.addInitializer;return vf(g)||(g=zf(g)),null!=(I=this.options_)&&I.bound&&C((function(){var g=this,e=g[t].bind(g);e.isMobXFlow=!0,g[t]=e})),g}function Zx(g,e,I,t){var C=e.annotationType_,i=t.value;"production"!==fg.env.NODE_ENV&&!sv(i)&&LD("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on properties with a generator function value.")}function Rx(g,e,I,t,C,i){void 0===i&&(i=XO.safeDescriptors),Zx(g,e,I,t);var l,n=t.value;return vf(n)||(n=zf(n)),C&&((n=n.bind(null!=(l=g.proxy_)?l:g.target_)).isMobXFlow=!0),{value:n,configurable:!i||g.isPlainObject_,enumerable:!1,writable:!i}}function Fx(g,e){return{annotationType_:g,options_:e,make_:mx,extend_:Bx,decorate_20223_:Wx}}function mx(g,e,I){return null===this.extend_(g,e,I,!1)?0:1}function Bx(g,e,I,t){return Nx(g,this,e,I),g.defineComputedProperty_(e,Ev({},this.options_,{get:I.get,set:I.set}),t)}function Wx(g,e){"production"!==fg.env.NODE_ENV&&Ov(e,["getter"]);var I=this,t=e.name;return(0,e.addInitializer)((function(){var e=Qj(this)[fv],C=Ev({},I.options_,{get:g,context:this});C.name||(C.name="production"!==fg.env.NODE_ENV?e.name_+"."+t.toString():"ObservableObject."+t.toString()),e.values_.set(t,new RO(C))})),function(){return this[fv].getObservablePropValue_(t)}}function Nx(g,e,I,t){var C=e.annotationType_,i=t.get;"production"!==fg.env.NODE_ENV&&!i&&LD("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' can only be used on getter(+setter) properties.")}function px(g,e){return{annotationType_:g,options_:e,make_:Sx,extend_:bx,decorate_20223_:ux}}function Sx(g,e,I){return null===this.extend_(g,e,I,!1)?0:1}function bx(g,e,I,t){var C,i;return Tx(g,this,e,I),g.defineObservableProperty_(e,I.value,null!=(C=null==(i=this.options_)?void 0:i.enhancer)?C:Ix,t)}function ux(g,e){if("production"!==fg.env.NODE_ENV){if("field"===e.kind)throw LD("Please use `@observable accessor "+String(e.name)+"` instead of `@observable "+String(e.name)+"`");Ov(e,["accessor"])}var I=this,t=e.kind,C=e.name,i=new WeakSet;function l(g,e){var t,l,n=Qj(g)[fv],A=new ZO(e,null!=(t=null==(l=I.options_)?void 0:l.enhancer)?t:Ix,"production"!==fg.env.NODE_ENV?n.name_+"."+C.toString():"ObservableObject."+C.toString(),!1);n.values_.set(C,A),i.add(g)}if("accessor"==t)return{get:function(){return i.has(this)||l(this,g.get.call(this)),this[fv].getObservablePropValue_(C)},set:function(g){return i.has(this)||l(this,g),this[fv].setObservablePropValue_(C,g)},init:function(g){return i.has(this)||l(this,g),g}}}function Tx(g,e,I,t){var C=e.annotationType_;"production"!==fg.env.NODE_ENV&&!("value"in t)&&LD("Cannot apply '"+C+"' to '"+g.name_+"."+I.toString()+"':\n'"+C+"' cannot be used on getter/setter properties")}var Gx="true",kx=Qx();function Qx(g){return{annotationType_:Gx,options_:g,make_:Mx,extend_:Yx,decorate_20223_:Ex}}function Mx(g,e,I,t){var C,i,l,n;if(I.get)return tO.make_(g,e,I,t);if(I.set){var A=oO(e.toString(),I.set);return t===g.target_?null===g.defineProperty_(e,{configurable:!XO.safeDescriptors||g.isPlainObject_,set:A})?0:2:(gv(t,e,{configurable:!0,set:A}),2)}if(t!==g.target_&&"function"==typeof I.value)return rv(I.value)?(null!=(n=this.options_)&&n.autoBind?zf.bound:zf).make_(g,e,I,t):(null!=(l=this.options_)&&l.autoBind?Bf.bound:Bf).make_(g,e,I,t);var d,o=!1===(null==(C=this.options_)?void 0:C.deep)?qx.ref:qx;return"function"==typeof I.value&&null!=(i=this.options_)&&i.autoBind&&(I.value=I.value.bind(null!=(d=g.proxy_)?d:g.target_)),o.make_(g,e,I,t)}function Yx(g,e,I,t){var C,i,l;return I.get?tO.extend_(g,e,I,t):I.set?g.defineProperty_(e,{configurable:!XO.safeDescriptors||g.isPlainObject_,set:oO(e.toString(),I.set)},t):("function"==typeof I.value&&null!=(C=this.options_)&&C.autoBind&&(I.value=I.value.bind(null!=(l=g.proxy_)?l:g.target_)),(!1===(null==(i=this.options_)?void 0:i.deep)?qx.ref:qx).extend_(g,e,I,t))}function Ex(g,e){LD("'"+this.annotationType_+"' cannot be used as a decorator")}var yx="observable",Jx="observable.ref",Hx="observable.shallow",wx="observable.struct",Xx={deep:!0,name:void 0,defaultDecorator:void 0,proxy:!0};function Kx(g){return g||Xx}Object.freeze(Xx);var zx=px(yx),Dx=px(Jx,{enhancer:Cx}),vx=px(Hx,{enhancer:tx}),xx=px(wx,{enhancer:ix}),Ox=zv(zx);function fx(g){return!0===g.deep?Ix:!1===g.deep?Cx:Lx(g.defaultDecorator)}function jx(g){var e;return g?null!=(e=g.defaultDecorator)?e:Qx(g):void 0}function Lx(g){var e,I;return g&&null!=(e=null==(I=g.options_)?void 0:I.enhancer)?e:Ix}function Px(g,e,I){return xv(e)?zx.decorate_20223_(g,e):av(e)?void Dv(g,e,zx):Of(g)?g:cv(g)?qx.object(g,e,I):Array.isArray(g)?qx.array(g,e):Rv(g)?qx.map(g,e):mv(g)?qx.set(g,e):"object"==typeof g&&null!==g?g:qx.box(g,e)}qD(Px,Ox);var _x={box:function(g,e){var I=Kx(e);return new ZO(g,fx(I),I.name,!0,I.equals)},array:function(g,e){var I=Kx(e);return(!1===XO.useProxies||!1===I.proxy?fj:aj)(g,fx(I),I.name)},map:function(g,e){var I=Kx(e);return new Wj(g,fx(I),I.name)},set:function(g,e){var I=Kx(e);return new bj(g,fx(I),I.name)},object:function(g,e,I){return _j((function(){return Yf(!1===XO.useProxies||!1===(null==I?void 0:I.proxy)?Qj({},I):qf({},I),g,e)}))},ref:zv(Dx),shallow:zv(vx),deep:Ox,struct:zv(xx)},qx=qD(Px,_x),$x="computed",gO="computed.struct",eO=Fx($x),IO=Fx(gO,{equals:ex.structural}),tO=function(g,e){if(xv(e))return eO.decorate_20223_(g,e);if(av(e))return Dv(g,e,eO);if(cv(g))return zv(Fx($x,g));"production"!==fg.env.NODE_ENV&&(sv(g)||LD("First argument to `computed` should be an expression."),sv(e)&&LD("A setter as second argument is no longer supported, use `{ set: fn }` option instead"));var I=cv(e)?e:{};return I.get=g,I.name||(I.name=g.name||""),new RO(I)};Object.assign(tO,eO),tO.struct=zv(IO);var CO,iO,lO=0,nO=1,AO=null!=(CO=null==(iO=$D((function(){}),"name"))?void 0:iO.configurable)&&CO,dO={value:"action",configurable:!0,writable:!1,enumerable:!1};function oO(g,e,I,t){function C(){return sO(g,I,e,t||this,arguments)}return void 0===I&&(I=!1),"production"!==fg.env.NODE_ENV&&(sv(e)||LD("`action` can only be invoked on functions"),("string"!=typeof g||!g)&&LD("actions should have valid names, got: '"+g+"'")),C.isMobxAction=!0,C.toString=function(){return e.toString()},AO&&(dO.value=g,gv(C,"name",dO)),C}function sO(g,e,I,t,C){var i=aO(g,e,t,C);try{return I.apply(t,C)}catch(g){throw i.error_=g,g}finally{VO(i)}}function aO(g,e,I,t){var C="production"!==fg.env.NODE_ENV&&Cf()&&!!g,i=0;if("production"!==fg.env.NODE_ENV&&C){i=Date.now();var l=t?Array.from(t):Iv;nf({type:sf,name:g,object:I,arguments:l})}var n=XO.trackingDerivation,A=!e||!n;vO();var d=XO.allowStateChanges;A&&(MO(),d=rO(!0));var o={runAsAction_:A,prevDerivation_:n,prevAllowStateChanges_:d,prevAllowStateReads_:EO(!0),notifySpy_:C,startTime_:i,actionId_:nO++,parentActionId_:lO};return lO=o.actionId_,o}function VO(g){lO!==g.actionId_&&LD(30),lO=g.parentActionId_,void 0!==g.error_&&(XO.suppressReactionErrors=!0),hO(g.prevAllowStateChanges_),yO(g.prevAllowStateReads_),xO(),g.runAsAction_&&YO(g.prevDerivation_),"production"!==fg.env.NODE_ENV&&g.notifySpy_&&df({time:Date.now()-g.startTime_}),XO.suppressReactionErrors=!1}function cO(g,e){var I=rO(g);try{return e()}finally{hO(I)}}function rO(g){var e=XO.allowStateChanges;return XO.allowStateChanges=g,e}function hO(g){XO.allowStateChanges=g}var UO="create",ZO=function(g){function e(e,I,t,C,i){var l;return void 0===t&&(t="production"!==fg.env.NODE_ENV?"ObservableValue@"+Av():"ObservableValue"),void 0===C&&(C=!0),void 0===i&&(i=ex.default),(l=g.call(this,t)||this).enhancer=void 0,l.name_=void 0,l.equals=void 0,l.hasUnreportedChange_=!1,l.interceptors_=void 0,l.changeListeners_=void 0,l.value_=void 0,l.dehancer=void 0,l.enhancer=I,l.name_=t,l.equals=i,l.value_=I(e,void 0,t),"production"!==fg.env.NODE_ENV&&C&&Cf()&&lf({type:UO,object:l,observableKind:"value",debugObjectName:l.name_,newValue:""+l.value_}),l}yv(e,g);var I=e.prototype;return I.dehanceValue=function(g){return void 0!==this.dehancer?this.dehancer(g):g},I.set=function(g){var e=this.value_;if((g=this.prepareNewValue_(g))!==XO.UNCHANGED){var I=Cf();"production"!==fg.env.NODE_ENV&&I&&nf({type:Aj,object:this,observableKind:"value",debugObjectName:this.name_,newValue:g,oldValue:e}),this.setNewValue_(g),"production"!==fg.env.NODE_ENV&&I&&df()}},I.prepareNewValue_=function(g){if(SO(this),$f(this)){var e=ej(this,{object:this,type:Aj,newValue:g});if(!e)return XO.UNCHANGED;g=e.newValue}return g=this.enhancer(g,this.value_,this.name_),this.equals(this.value_,g)?XO.UNCHANGED:g},I.setNewValue_=function(g){var e=this.value_;this.value_=g,this.reportChanged(),Ij(this)&&Cj(this,{type:Aj,object:this,newValue:g,oldValue:e})},I.get=function(){return this.reportObserved(),this.dehanceValue(this.value_)},I.intercept_=function(g){return gj(this,g)},I.observe_=function(g,e){return e&&g({observableKind:"value",debugObjectName:this.name_,object:this,type:Aj,newValue:this.value_,oldValue:void 0}),tj(this,g)},I.raw=function(){return this.value_},I.toJSON=function(){return this.get()},I.toString=function(){return this.name_+"["+this.value_+"]"},I.valueOf=function(){return Sv(this.get())},I[Symbol.toPrimitive]=function(){return this.valueOf()},e}(jv),RO=function(){function g(g){this.dependenciesState_=FO.NOT_TRACKING_,this.observing_=[],this.newObserving_=null,this.observers_=new Set,this.runId_=0,this.lastAccessedBy_=0,this.lowestObserverState_=FO.UP_TO_DATE_,this.unboundDepsCount_=0,this.value_=new WO(null),this.name_=void 0,this.triggeredBy_=void 0,this.flags_=0,this.derivation=void 0,this.setter_=void 0,this.isTracing_=mO.NONE,this.scope_=void 0,this.equals_=void 0,this.requiresReaction_=void 0,this.keepAlive_=void 0,this.onBOL=void 0,this.onBUOL=void 0,g.get||LD(31),this.derivation=g.get,this.name_=g.name||("production"!==fg.env.NODE_ENV?"ComputedValue@"+Av():"ComputedValue"),g.set&&(this.setter_=oO("production"!==fg.env.NODE_ENV?this.name_+"-setter":"ComputedValue-setter",g.set)),this.equals_=g.equals||(g.compareStructural||g.struct?ex.structural:ex.default),this.scope_=g.context,this.requiresReaction_=g.requiresReaction,this.keepAlive_=!!g.keepAlive}var e=g.prototype;return e.onBecomeStale_=function(){LO(this)},e.onBO=function(){this.onBOL&&this.onBOL.forEach((function(g){return g()}))},e.onBUO=function(){this.onBUOL&&this.onBUOL.forEach((function(g){return g()}))},e.get=function(){if(this.isComputing&&LD(32,this.name_,this.derivation),0!==XO.inBatch||0!==this.observers_.size||this.keepAlive_){if(OO(this),pO(this)){var g=XO.trackingContext;this.keepAlive_&&!g&&(XO.trackingContext=this),this.trackAndCompute()&&jO(this),XO.trackingContext=g}}else pO(this)&&(this.warnAboutUntrackedRead_(),vO(),this.value_=this.computeValue_(!1),xO());var e=this.value_;if(NO(e))throw e.cause;return e},e.set=function(g){if(this.setter_){this.isRunningSetter&&LD(33,this.name_),this.isRunningSetter=!0;try{this.setter_.call(this.scope_,g)}finally{this.isRunningSetter=!1}}else LD(34,this.name_)},e.trackAndCompute=function(){var g=this.value_,e=this.dependenciesState_===FO.NOT_TRACKING_,I=this.computeValue_(!0),t=e||NO(g)||NO(I)||!this.equals_(g,I);return t&&(this.value_=I,"production"!==fg.env.NODE_ENV&&Cf()&&lf({observableKind:"computed",debugObjectName:this.name_,object:this.scope_,type:"update",oldValue:g,newValue:I})),t},e.computeValue_=function(g){this.isComputing=!0;var e,I=rO(!1);if(g)e=uO(this,this.derivation,this.scope_);else if(!0===XO.disableErrorBoundaries)e=this.derivation.call(this.scope_);else try{e=this.derivation.call(this.scope_)}catch(g){e=new WO(g)}return hO(I),this.isComputing=!1,e},e.suspend_=function(){this.keepAlive_||(kO(this),this.value_=void 0,"production"!==fg.env.NODE_ENV&&(this.isTracing_,mO.NONE))},e.observe_=function(g,e){var I=this,t=!0,C=void 0;return Nf((function(){var i=I.get();if(!t||e){var l=MO();g({observableKind:"computed",debugObjectName:I.name_,type:Aj,object:I,newValue:i,oldValue:C}),YO(l)}t=!1,C=i}))},e.warnAboutUntrackedRead_=function(){"production"!==fg.env.NODE_ENV&&(this.isTracing_,mO.NONE,"boolean"==typeof this.requiresReaction_?this.requiresReaction_:XO.computedRequiresReaction)},e.toString=function(){return this.name_+"["+this.derivation.toString()+"]"},e.valueOf=function(){return Sv(this.get())},e[Symbol.toPrimitive]=function(){return this.valueOf()},Mv(g,[{key:"isComputing",get:function(){return Tv(this.flags_,g.isComputingMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isComputingMask_,e)}},{key:"isRunningSetter",get:function(){return Tv(this.flags_,g.isRunningSetterMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isRunningSetterMask_,e)}},{key:"isBeingObserved",get:function(){return Tv(this.flags_,g.isBeingObservedMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isBeingObservedMask_,e)}},{key:"isPendingUnobservation",get:function(){return Tv(this.flags_,g.isPendingUnobservationMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isPendingUnobservationMask_,e)}},{key:"diffValue",get:function(){return Tv(this.flags_,g.diffValueMask_)?1:0},set:function(e){this.flags_=Gv(this.flags_,g.diffValueMask_,1===e)}}])}();RO.isComputingMask_=1,RO.isRunningSetterMask_=2,RO.isBeingObservedMask_=4,RO.isPendingUnobservationMask_=8,RO.diffValueMask_=16;var FO,mO,BO=Zv("ComputedValue",RO);!function(g){g[g.NOT_TRACKING_=-1]="NOT_TRACKING_",g[g.UP_TO_DATE_=0]="UP_TO_DATE_",g[g.POSSIBLY_STALE_=1]="POSSIBLY_STALE_",g[g.STALE_=2]="STALE_"}(FO||(FO={})),function(g){g[g.NONE=0]="NONE",g[g.LOG=1]="LOG",g[g.BREAK=2]="BREAK"}(mO||(mO={}));var WO=function(g){this.cause=void 0,this.cause=g};function NO(g){return g instanceof WO}function pO(g){switch(g.dependenciesState_){case FO.UP_TO_DATE_:return!1;case FO.NOT_TRACKING_:case FO.STALE_:return!0;case FO.POSSIBLY_STALE_:for(var e=EO(!0),I=MO(),t=g.observing_,C=t.length,i=0;i<C;i++){var l=t[i];if(BO(l)){if(XO.disableErrorBoundaries)l.get();else try{l.get()}catch{return YO(I),yO(e),!0}if(g.dependenciesState_===FO.STALE_)return YO(I),yO(e),!0}}return JO(g),YO(I),yO(e),!1}}function SO(g){if("production"!==fg.env.NODE_ENV){var e=g.observers_.size>0;!XO.allowStateChanges&&(e||XO.enforceActions)}}function bO(g){"production"!==fg.env.NODE_ENV&&!XO.allowStateReads&&XO.observableRequiresReaction}function uO(g,e,I){var t=EO(!0);JO(g),g.newObserving_=new Array(0===g.runId_?100:g.observing_.length),g.unboundDepsCount_=0,g.runId_=++XO.runId;var C,i=XO.trackingDerivation;if(XO.trackingDerivation=g,XO.inBatch++,!0===XO.disableErrorBoundaries)C=e.call(I);else try{C=e.call(I)}catch(g){C=new WO(g)}return XO.inBatch--,XO.trackingDerivation=i,GO(g),TO(g),yO(t),C}function TO(g){"production"!==fg.env.NODE_ENV&&0===g.observing_.length&&("boolean"==typeof g.requiresObservable_?g.requiresObservable_:XO.reactionRequiresObservable)}function GO(g){for(var e=g.observing_,I=g.observing_=g.newObserving_,t=FO.UP_TO_DATE_,C=0,i=g.unboundDepsCount_,l=0;l<i;l++){var n=I[l];0===n.diffValue&&(n.diffValue=1,C!==l&&(I[C]=n),C++),n.dependenciesState_>t&&(t=n.dependenciesState_)}for(I.length=C,g.newObserving_=null,i=e.length;i--;){var A=e[i];0===A.diffValue&&zO(A,g),A.diffValue=0}for(;C--;){var d=I[C];1===d.diffValue&&(d.diffValue=0,KO(d,g))}t!==FO.UP_TO_DATE_&&(g.dependenciesState_=t,g.onBecomeStale_())}function kO(g){var e=g.observing_;g.observing_=[];for(var I=e.length;I--;)zO(e[I],g);g.dependenciesState_=FO.NOT_TRACKING_}function QO(g){var e=MO();try{return g()}finally{YO(e)}}function MO(){var g=XO.trackingDerivation;return XO.trackingDerivation=null,g}function YO(g){XO.trackingDerivation=g}function EO(g){var e=XO.allowStateReads;return XO.allowStateReads=g,e}function yO(g){XO.allowStateReads=g}function JO(g){if(g.dependenciesState_!==FO.UP_TO_DATE_){g.dependenciesState_=FO.UP_TO_DATE_;for(var e=g.observing_,I=e.length;I--;)e[I].lowestObserverState_=FO.UP_TO_DATE_}}var HO=function(){this.version=6,this.UNCHANGED={},this.trackingDerivation=null,this.trackingContext=null,this.runId=0,this.mobxGuid=0,this.inBatch=0,this.pendingUnobservations=[],this.pendingReactions=[],this.isRunningReactions=!1,this.allowStateChanges=!1,this.allowStateReads=!0,this.enforceActions=!0,this.spyListeners=[],this.globalReactionErrorHandlers=[],this.computedRequiresReaction=!1,this.reactionRequiresObservable=!1,this.observableRequiresReaction=!1,this.disableErrorBoundaries=!1,this.suppressReactionErrors=!1,this.useProxies=!0,this.verifyProxies=!1,this.safeDescriptors=!0},wO=!0,XO=function(){var g=_D();return g.__mobxInstanceCount>0&&!g.__mobxGlobals&&(wO=!1),g.__mobxGlobals&&g.__mobxGlobals.version!==(new HO).version&&(wO=!1),wO?g.__mobxGlobals?(g.__mobxInstanceCount+=1,g.__mobxGlobals.UNCHANGED||(g.__mobxGlobals.UNCHANGED={}),g.__mobxGlobals):(g.__mobxInstanceCount=1,g.__mobxGlobals=new HO):(setTimeout((function(){LD(35)}),1),new HO)}();function KO(g,e){g.observers_.add(e),g.lowestObserverState_>e.dependenciesState_&&(g.lowestObserverState_=e.dependenciesState_)}function zO(g,e){g.observers_.delete(e),0===g.observers_.size&&DO(g)}function DO(g){!1===g.isPendingUnobservation&&(g.isPendingUnobservation=!0,XO.pendingUnobservations.push(g))}function vO(){XO.inBatch++}function xO(){if(0==--XO.inBatch){ef();for(var g=XO.pendingUnobservations,e=0;e<g.length;e++){var I=g[e];I.isPendingUnobservation=!1,0===I.observers_.size&&(I.isBeingObserved&&(I.isBeingObserved=!1,I.onBUO()),I instanceof RO&&I.suspend_())}XO.pendingUnobservations=[]}}function OO(g){bO(g);var e=XO.trackingDerivation;return null!==e?(e.runId_!==g.lastAccessedBy_&&(g.lastAccessedBy_=e.runId_,e.newObserving_[e.unboundDepsCount_++]=g,!g.isBeingObserved&&XO.trackingContext&&(g.isBeingObserved=!0,g.onBO())),g.isBeingObserved):(0===g.observers_.size&&XO.inBatch>0&&DO(g),!1)}function fO(g){g.lowestObserverState_!==FO.STALE_&&(g.lowestObserverState_=FO.STALE_,g.observers_.forEach((function(e){e.dependenciesState_===FO.UP_TO_DATE_&&("production"!==fg.env.NODE_ENV&&e.isTracing_!==mO.NONE&&PO(e,g),e.onBecomeStale_()),e.dependenciesState_=FO.STALE_})))}function jO(g){g.lowestObserverState_!==FO.STALE_&&(g.lowestObserverState_=FO.STALE_,g.observers_.forEach((function(e){e.dependenciesState_===FO.POSSIBLY_STALE_?(e.dependenciesState_=FO.STALE_,"production"!==fg.env.NODE_ENV&&e.isTracing_!==mO.NONE&&PO(e,g)):e.dependenciesState_===FO.UP_TO_DATE_&&(g.lowestObserverState_=FO.UP_TO_DATE_)})))}function LO(g){g.lowestObserverState_===FO.UP_TO_DATE_&&(g.lowestObserverState_=FO.POSSIBLY_STALE_,g.observers_.forEach((function(g){g.dependenciesState_===FO.UP_TO_DATE_&&(g.dependenciesState_=FO.POSSIBLY_STALE_,g.onBecomeStale_())})))}function PO(g,e){if(g.isTracing_===mO.BREAK){var I=[];_O(Ef(g),I,1),new Function("debugger;\n/*\nTracing '"+g.name_+"'\n\nYou are entering this break point because derivation '"+g.name_+"' is being traced and '"+e.name_+"' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n"+(g instanceof RO?g.derivation.toString().replace(/[*]\//g,"/"):"")+"\n\nThe dependencies for this derivation are:\n\n"+I.join("\n")+"\n*/\n    ")()}}function _O(g,e,I){e.length>=1e3?e.push("(and many more)"):(e.push(""+"\t".repeat(I-1)+g.name),g.dependencies&&g.dependencies.forEach((function(g){return _O(g,e,I+1)})))}var qO=function(){function g(g,e,I,t){void 0===g&&(g="production"!==fg.env.NODE_ENV?"Reaction@"+Av():"Reaction"),this.name_=void 0,this.onInvalidate_=void 0,this.errorHandler_=void 0,this.requiresObservable_=void 0,this.observing_=[],this.newObserving_=[],this.dependenciesState_=FO.NOT_TRACKING_,this.runId_=0,this.unboundDepsCount_=0,this.flags_=0,this.isTracing_=mO.NONE,this.name_=g,this.onInvalidate_=e,this.errorHandler_=I,this.requiresObservable_=t}var e=g.prototype;return e.onBecomeStale_=function(){this.schedule_()},e.schedule_=function(){this.isScheduled||(this.isScheduled=!0,XO.pendingReactions.push(this),ef())},e.runReaction_=function(){if(!this.isDisposed){vO(),this.isScheduled=!1;var g=XO.trackingContext;if(XO.trackingContext=this,pO(this)){this.isTrackPending=!0;try{this.onInvalidate_(),"production"!==fg.env.NODE_ENV&&this.isTrackPending&&Cf()&&lf({name:this.name_,type:"scheduled-reaction"})}catch(g){this.reportExceptionInDerivation_(g)}}XO.trackingContext=g,xO()}},e.track=function(g){if(!this.isDisposed){vO();var e,I=Cf();"production"!==fg.env.NODE_ENV&&I&&(e=Date.now(),nf({name:this.name_,type:"reaction"})),this.isRunning=!0;var t=XO.trackingContext;XO.trackingContext=this;var C=uO(this,g,void 0);XO.trackingContext=t,this.isRunning=!1,this.isTrackPending=!1,this.isDisposed&&kO(this),NO(C)&&this.reportExceptionInDerivation_(C.cause),"production"!==fg.env.NODE_ENV&&I&&df({time:Date.now()-e}),xO()}},e.reportExceptionInDerivation_=function(g){var e=this;if(this.errorHandler_)this.errorHandler_(g,this);else{if(XO.disableErrorBoundaries)throw g;var I="production"!==fg.env.NODE_ENV?"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '"+this+"'":"[mobx] uncaught error in '"+this+"'";XO.suppressReactionErrors&&fg.env.NODE_ENV,"production"!==fg.env.NODE_ENV&&Cf()&&lf({type:"error",name:this.name_,message:I,error:""+g}),XO.globalReactionErrorHandlers.forEach((function(I){return I(g,e)}))}},e.dispose=function(){this.isDisposed||(this.isDisposed=!0,this.isRunning||(vO(),kO(this),xO()))},e.getDisposer_=function(g){var e=this,I=function I(){e.dispose(),null==g||null==g.removeEventListener||g.removeEventListener("abort",I)};return null==g||null==g.addEventListener||g.addEventListener("abort",I),I[fv]=this,I},e.toString=function(){return"Reaction["+this.name_+"]"},e.trace=function(g){void 0===g&&(g=!1),ff(this,g)},Mv(g,[{key:"isDisposed",get:function(){return Tv(this.flags_,g.isDisposedMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isDisposedMask_,e)}},{key:"isScheduled",get:function(){return Tv(this.flags_,g.isScheduledMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isScheduledMask_,e)}},{key:"isTrackPending",get:function(){return Tv(this.flags_,g.isTrackPendingMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isTrackPendingMask_,e)}},{key:"isRunning",get:function(){return Tv(this.flags_,g.isRunningMask_)},set:function(e){this.flags_=Gv(this.flags_,g.isRunningMask_,e)}},{key:"diffValue",get:function(){return Tv(this.flags_,g.diffValueMask_)?1:0},set:function(e){this.flags_=Gv(this.flags_,g.diffValueMask_,1===e)}}])}();qO.isDisposedMask_=1,qO.isScheduledMask_=2,qO.isTrackPendingMask_=4,qO.isRunningMask_=8,qO.diffValueMask_=16;var $O=100,gf=function(g){return g()};function ef(){XO.inBatch>0||XO.isRunningReactions||gf(If)}function If(){XO.isRunningReactions=!0;for(var g=XO.pendingReactions,e=0;g.length>0;){++e===$O&&g.splice(0);for(var I=g.splice(0),t=0,C=I.length;t<C;t++)I[t].runReaction_()}XO.isRunningReactions=!1}var tf=Zv("Reaction",qO);function Cf(){return"production"!==fg.env.NODE_ENV&&!!XO.spyListeners.length}function lf(g){if("production"!==fg.env.NODE_ENV&&XO.spyListeners.length)for(var e=XO.spyListeners,I=0,t=e.length;I<t;I++)e[I](g)}function nf(g){"production"!==fg.env.NODE_ENV&&lf(Ev({},g,{spyReportStart:!0}))}var Af={type:"report-end",spyReportEnd:!0};function df(g){"production"!==fg.env.NODE_ENV&&lf(g?Ev({},g,{type:"report-end",spyReportEnd:!0}):Af)}function of(g){return"production"===fg.env.NODE_ENV?function(){}:(XO.spyListeners.push(g),dv((function(){XO.spyListeners=XO.spyListeners.filter((function(e){return e!==g}))})))}var sf="action",af="action.bound",Vf="autoAction",cf="autoAction.bound",rf="<unnamed action>",hf=Ax(sf),Uf=Ax(af,{bound:!0}),Zf=Ax(Vf,{autoAction:!0}),Rf=Ax(cf,{autoAction:!0,bound:!0});function Ff(g){return function(e,I){return sv(e)?oO(e.name||rf,e,g):sv(I)?oO(e,I,g):xv(I)?(g?Zf:hf).decorate_20223_(e,I):av(I)?Dv(e,I,g?Zf:hf):av(e)?zv(Ax(g?Vf:sf,{name:e,autoAction:g})):void("production"!==fg.env.NODE_ENV&&LD("Invalid arguments for `action`"))}}var mf=Ff(!1);Object.assign(mf,hf);var Bf=Ff(!0);function Wf(g){return sv(g)&&!0===g.isMobxAction}function Nf(g,e){var I,t,C,i;void 0===e&&(e=tv),"production"!==fg.env.NODE_ENV&&(sv(g)||LD("Autorun expects a function as first argument"),Wf(g)&&LD("Autorun does not accept actions since actions are untrackable"));var l,n=null!=(I=null==(t=e)?void 0:t.name)?I:"production"!==fg.env.NODE_ENV?g.name||"Autorun@"+Av():"Autorun";if(e.scheduler||e.delay){var A=Sf(e),d=!1;l=new qO(n,(function(){d||(d=!0,A((function(){d=!1,l.isDisposed||l.track(o)})))}),e.onError,e.requiresObservable)}else l=new qO(n,(function(){this.track(o)}),e.onError,e.requiresObservable);function o(){g(l)}return null!=(C=e)&&null!=(C=C.signal)&&C.aborted||l.schedule_(),l.getDisposer_(null==(i=e)?void 0:i.signal)}Object.assign(Bf,Zf),mf.bound=zv(Uf),Bf.bound=zv(Rf);var pf=function(g){return g()};function Sf(g){return g.scheduler?g.scheduler:g.delay?function(e){return setTimeout(e,g.delay)}:pf}function bf(g,e,I){var t,C,i;void 0===I&&(I=tv),"production"!==fg.env.NODE_ENV&&((!sv(g)||!sv(e))&&LD("First and second argument to reaction should be functions"),cv(I)||LD("Third argument of reactions should be an object"));var l,n=null!=(t=I.name)?t:"production"!==fg.env.NODE_ENV?"Reaction@"+Av():"Reaction",A=mf(n,I.onError?uf(I.onError,e):e),d=!I.scheduler&&!I.delay,o=Sf(I),s=!0,a=!1,V=I.compareStructural?ex.structural:I.equals||ex.default,c=new qO(n,(function(){s||d?r():a||(a=!0,o(r))}),I.onError,I.requiresObservable);function r(){if(a=!1,!c.isDisposed){var e=!1,t=l;c.track((function(){var I=cO(!1,(function(){return g(c)}));e=s||!V(l,I),l=I})),(s&&I.fireImmediately||!s&&e)&&A(l,t,c),s=!1}}return null!=(C=I)&&null!=(C=C.signal)&&C.aborted||c.schedule_(),c.getDisposer_(null==(i=I)?void 0:i.signal)}function uf(g,e){return function(){try{return e.apply(this,arguments)}catch(e){g.call(this,e)}}}var Tf="onBO",Gf="onBUO";function kf(g,e,I){return Mf(Tf,g,e,I)}function Qf(g,e,I){return Mf(Gf,g,e,I)}function Mf(g,e,I,t){var C=jj(e),i=sv(t)?t:I,l=g+"L";return C[l]?C[l].add(i):C[l]=new Set([i]),function(){var g=C[l];g&&(g.delete(i),0===g.size&&delete C[l])}}function Yf(g,e,I,t){"production"!==fg.env.NODE_ENV&&(arguments.length>4&&LD("'extendObservable' expected 2-4 arguments"),"object"!=typeof g&&LD("'extendObservable' expects an object as first argument"),Nj(g)&&LD("'extendObservable' should not be used on maps, use map.merge instead"),cv(e)||LD("'extendObservable' only accepts plain objects as second argument"),(Of(e)||Of(I))&&LD("Extending an object with another observable (object) is not supported"));var C=uv(e);return _j((function(){var e=Qj(g,t)[fv];Nv(C).forEach((function(g){e.extend_(g,C[g],!I||!(g in I)||I[g])}))})),g}function Ef(g,e){return yf(jj(g,e))}function yf(g){var e={name:g.name_};return g.observing_&&g.observing_.length>0&&(e.dependencies=Jf(g.observing_).map(yf)),e}function Jf(g){return Array.from(new Set(g))}var Hf=0;function wf(){this.message="FLOW_CANCELLED"}wf.prototype=Object.create(Error.prototype);var Xf=cx("flow"),Kf=cx("flow.bound",{bound:!0}),zf=Object.assign((function(g,e){if(xv(e))return Xf.decorate_20223_(g,e);if(av(e))return Dv(g,e,Xf);"production"!==fg.env.NODE_ENV&&1!==arguments.length&&LD("Flow expects single argument with generator function");var I=g,t=I.name||"<unnamed flow>",C=function(){var g,e=arguments,C=++Hf,i=mf(t+" - runid: "+C+" - init",I).apply(this,e),l=void 0,n=new Promise((function(e,I){var n=0;function A(g){var e;l=void 0;try{e=mf(t+" - runid: "+C+" - yield "+n++,i.next).call(i,g)}catch(g){return I(g)}o(e)}function d(g){var e;l=void 0;try{e=mf(t+" - runid: "+C+" - yield "+n++,i.throw).call(i,g)}catch(g){return I(g)}o(e)}function o(g){if(!sv(null==g?void 0:g.then))return g.done?e(g.value):(l=Promise.resolve(g.value)).then(A,d);g.then(o,I)}g=I,A(void 0)}));return n.cancel=mf(t+" - runid: "+C+" - cancel",(function(){try{l&&Df(l);var e=i.return(void 0),I=Promise.resolve(e.value);I.then(ov,ov),Df(I),g(new wf)}catch(e){g(e)}})),n};return C.isMobXFlow=!0,C}),Xf);function Df(g){sv(g.cancel)&&g.cancel()}function vf(g){return!0===(null==g?void 0:g.isMobXFlow)}function xf(g,e){return!!g&&(Ej(g)||!!g[fv]||Lv(g)||tf(g)||BO(g))}function Of(g){return"production"!==fg.env.NODE_ENV&&1!==arguments.length&&LD("isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property"),xf(g)}function ff(){if("production"!==fg.env.NODE_ENV){for(var g=!1,e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];"boolean"==typeof I[I.length-1]&&(g=I.pop());var C=jf(I);if(!C)return LD("'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly");C.isTracing_,mO.NONE,C.isTracing_=g?mO.BREAK:mO.LOG}}function jf(g){switch(g.length){case 0:return XO.trackingDerivation;case 1:return jj(g[0]);case 2:return jj(g[0],g[1])}}function Lf(g,e){void 0===e&&(e=void 0),vO();try{return g.apply(e)}finally{xO()}}function Pf(g){return g[fv]}zf.bound=zv(Kf);var _f={has:function(g,e){return"production"!==fg.env.NODE_ENV&&XO.trackingDerivation&&nv("detect new properties using the 'in' operator. Use 'has' from 'mobx' instead."),Pf(g).has_(e)},get:function(g,e){return Pf(g).get_(e)},set:function(g,e,I){var t;return!!av(e)&&("production"!==fg.env.NODE_ENV&&!Pf(g).values_.has(e)&&nv("add a new observable property through direct assignment. Use 'set' from 'mobx' instead."),null==(t=Pf(g).set_(e,I,!0))||t)},deleteProperty:function(g,e){var I;return"production"!==fg.env.NODE_ENV&&nv("delete properties from an observable object. Use 'remove' from 'mobx' instead."),!!av(e)&&(null==(I=Pf(g).delete_(e,!0))||I)},defineProperty:function(g,e,I){var t;return"production"!==fg.env.NODE_ENV&&nv("define property on an observable object. Use 'defineProperty' from 'mobx' instead."),null==(t=Pf(g).defineProperty_(e,I))||t},ownKeys:function(g){return"production"!==fg.env.NODE_ENV&&XO.trackingDerivation&&nv("iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead."),Pf(g).ownKeys_()},preventExtensions:function(g){LD(13)}};function qf(g,e){var I,t;return lv(),null!=(t=(I=(g=Qj(g,e))[fv]).proxy_)?t:I.proxy_=new Proxy(g,_f)}function $f(g){return void 0!==g.interceptors_&&g.interceptors_.length>0}function gj(g,e){var I=g.interceptors_||(g.interceptors_=[]);return I.push(e),dv((function(){var g=I.indexOf(e);-1!==g&&I.splice(g,1)}))}function ej(g,e){var I=MO();try{for(var t=[].concat(g.interceptors_||[]),C=0,i=t.length;C<i&&((e=t[C](e))&&!e.type&&LD(14),e);C++);return e}finally{YO(I)}}function Ij(g){return void 0!==g.changeListeners_&&g.changeListeners_.length>0}function tj(g,e){var I=g.changeListeners_||(g.changeListeners_=[]);return I.push(e),dv((function(){var g=I.indexOf(e);-1!==g&&I.splice(g,1)}))}function Cj(g,e){var I=MO(),t=g.changeListeners_;if(t){for(var C=0,i=(t=t.slice()).length;C<i;C++)t[C](e);YO(I)}}var ij=Symbol("mobx-keys");function lj(g,e,I){return"production"!==fg.env.NODE_ENV&&(!cv(g)&&!cv(Object.getPrototypeOf(g))&&LD("'makeAutoObservable' can only be used for classes that don't have a superclass"),Ej(g)&&LD("makeAutoObservable can only be used on objects not already made observable")),cv(g)?Yf(g,g,e,I):(_j((function(){var t=Qj(g,I)[fv];if(!g[ij]){var C=Object.getPrototypeOf(g),i=new Set([].concat(Nv(g),Nv(C)));i.delete("constructor"),i.delete(fv),hv(C,ij,i)}g[ij].forEach((function(g){return t.make_(g,!e||!(g in e)||e[g])}))})),g)}var nj="splice",Aj="update",dj=1e4,oj={get:function(g,e){var I=g[fv];return e===fv?I:"length"===e?I.getArrayLength_():"string"!=typeof e||isNaN(e)?bv(Vj,e)?Vj[e]:g[e]:I.get_(parseInt(e))},set:function(g,e,I){var t=g[fv];return"length"===e&&t.setArrayLength_(I),"symbol"==typeof e||isNaN(e)?g[e]=I:t.set_(parseInt(e),I),!0},preventExtensions:function(){LD(15)}},sj=function(){function g(g,e,I,t){void 0===g&&(g="production"!==fg.env.NODE_ENV?"ObservableArray@"+Av():"ObservableArray"),this.owned_=void 0,this.legacyMode_=void 0,this.atom_=void 0,this.values_=[],this.interceptors_=void 0,this.changeListeners_=void 0,this.enhancer_=void 0,this.dehancer=void 0,this.proxy_=void 0,this.lastKnownLength_=0,this.owned_=I,this.legacyMode_=t,this.atom_=new jv(g),this.enhancer_=function(I,t){return e(I,t,"production"!==fg.env.NODE_ENV?g+"[..]":"ObservableArray[..]")}}var e=g.prototype;return e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.dehanceValues_=function(g){return void 0!==this.dehancer&&g.length>0?g.map(this.dehancer):g},e.intercept_=function(g){return gj(this,g)},e.observe_=function(g,e){return void 0===e&&(e=!1),e&&g({observableKind:"array",object:this.proxy_,debugObjectName:this.atom_.name_,type:"splice",index:0,added:this.values_.slice(),addedCount:this.values_.length,removed:[],removedCount:0}),tj(this,g)},e.getArrayLength_=function(){return this.atom_.reportObserved(),this.values_.length},e.setArrayLength_=function(g){("number"!=typeof g||isNaN(g)||g<0)&&LD("Out of range: "+g);var e=this.values_.length;if(g!==e)if(g>e){for(var I=new Array(g-e),t=0;t<g-e;t++)I[t]=void 0;this.spliceWithArray_(e,0,I)}else this.spliceWithArray_(g,e-g)},e.updateArrayLength_=function(g,e){g!==this.lastKnownLength_&&LD(16),this.lastKnownLength_+=e,this.legacyMode_&&e>0&&Oj(g+e+1)},e.spliceWithArray_=function(g,e,I){var t=this;SO(this.atom_);var C=this.values_.length;if(void 0===g?g=0:g>C?g=C:g<0&&(g=Math.max(0,C+g)),e=1===arguments.length?C-g:null==e?0:Math.max(0,Math.min(e,C-g)),void 0===I&&(I=Iv),$f(this)){var i=ej(this,{object:this.proxy_,type:nj,index:g,removedCount:e,added:I});if(!i)return Iv;e=i.removedCount,I=i.added}if(I=0===I.length?I:I.map((function(g){return t.enhancer_(g,void 0)})),this.legacyMode_||"production"!==fg.env.NODE_ENV){var l=I.length-e;this.updateArrayLength_(C,l)}var n=this.spliceItemsIntoValues_(g,e,I);return(0!==e||0!==I.length)&&this.notifyArraySplice_(g,I,n),this.dehanceValues_(n)},e.spliceItemsIntoValues_=function(g,e,I){var t;if(I.length<dj)return(t=this.values_).splice.apply(t,[g,e].concat(I));var C=this.values_.slice(g,g+e),i=this.values_.slice(g+e);this.values_.length+=I.length-e;for(var l=0;l<I.length;l++)this.values_[g+l]=I[l];for(var n=0;n<i.length;n++)this.values_[g+I.length+n]=i[n];return C},e.notifyArrayChildUpdate_=function(g,e,I){var t=!this.owned_&&Cf(),C=Ij(this),i=C||t?{observableKind:"array",object:this.proxy_,type:Aj,debugObjectName:this.atom_.name_,index:g,newValue:e,oldValue:I}:null;"production"!==fg.env.NODE_ENV&&t&&nf(i),this.atom_.reportChanged(),C&&Cj(this,i),"production"!==fg.env.NODE_ENV&&t&&df()},e.notifyArraySplice_=function(g,e,I){var t=!this.owned_&&Cf(),C=Ij(this),i=C||t?{observableKind:"array",object:this.proxy_,debugObjectName:this.atom_.name_,type:nj,index:g,removed:I,added:e,removedCount:I.length,addedCount:e.length}:null;"production"!==fg.env.NODE_ENV&&t&&nf(i),this.atom_.reportChanged(),C&&Cj(this,i),"production"!==fg.env.NODE_ENV&&t&&df()},e.get_=function(g){if(!(this.legacyMode_&&g>=this.values_.length))return this.atom_.reportObserved(),this.dehanceValue_(this.values_[g])},e.set_=function(g,e){var I=this.values_;if(this.legacyMode_&&g>I.length&&LD(17,g,I.length),g<I.length){SO(this.atom_);var t=I[g];if($f(this)){var C=ej(this,{type:Aj,object:this.proxy_,index:g,newValue:e});if(!C)return;e=C.newValue}(e=this.enhancer_(e,t))!==t&&(I[g]=e,this.notifyArrayChildUpdate_(g,e,t))}else{for(var i=new Array(g+1-I.length),l=0;l<i.length-1;l++)i[l]=void 0;i[i.length-1]=e,this.spliceWithArray_(I.length,0,i)}},g}();function aj(g,e,I,t){return void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableArray@"+Av():"ObservableArray"),void 0===t&&(t=!1),lv(),_j((function(){var C=new sj(I,e,t,!1);Uv(C.values_,fv,C);var i=new Proxy(C.values_,oj);return C.proxy_=i,g&&g.length&&C.spliceWithArray_(0,0,g),i}))}var Vj={clear:function(){return this.splice(0)},replace:function(g){var e=this[fv];return e.spliceWithArray_(0,e.values_.length,g)},toJSON:function(){return this.slice()},splice:function(g,e){for(var I=arguments.length,t=new Array(I>2?I-2:0),C=2;C<I;C++)t[C-2]=arguments[C];var i=this[fv];switch(arguments.length){case 0:return[];case 1:return i.spliceWithArray_(g);case 2:return i.spliceWithArray_(g,e)}return i.spliceWithArray_(g,e,t)},spliceWithArray:function(g,e,I){return this[fv].spliceWithArray_(g,e,I)},push:function(){for(var g=this[fv],e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];return g.spliceWithArray_(g.values_.length,0,I),g.values_.length},pop:function(){return this.splice(Math.max(this[fv].values_.length-1,0),1)[0]},shift:function(){return this.splice(0,1)[0]},unshift:function(){for(var g=this[fv],e=arguments.length,I=new Array(e),t=0;t<e;t++)I[t]=arguments[t];return g.spliceWithArray_(0,0,I),g.values_.length},reverse:function(){return XO.trackingDerivation&&LD(37,"reverse"),this.replace(this.slice().reverse()),this},sort:function(){XO.trackingDerivation&&LD(37,"sort");var g=this.slice();return g.sort.apply(g,arguments),this.replace(g),this},remove:function(g){var e=this[fv],I=e.dehanceValues_(e.values_).indexOf(g);return I>-1&&(this.splice(I,1),!0)}};function cj(g,e){"function"==typeof Array.prototype[g]&&(Vj[g]=e(g))}function rj(g){return function(){var e=this[fv];e.atom_.reportObserved();var I=e.dehanceValues_(e.values_);return I[g].apply(I,arguments)}}function hj(g){return function(e,I){var t=this,C=this[fv];return C.atom_.reportObserved(),C.dehanceValues_(C.values_)[g]((function(g,C){return e.call(I,g,C,t)}))}}function Uj(g){return function(){var e=this,I=this[fv];I.atom_.reportObserved();var t=I.dehanceValues_(I.values_),C=arguments[0];return arguments[0]=function(g,I,t){return C(g,I,t,e)},t[g].apply(t,arguments)}}cj("at",rj),cj("concat",rj),cj("flat",rj),cj("includes",rj),cj("indexOf",rj),cj("join",rj),cj("lastIndexOf",rj),cj("slice",rj),cj("toString",rj),cj("toLocaleString",rj),cj("toSorted",rj),cj("toSpliced",rj),cj("with",rj),cj("every",hj),cj("filter",hj),cj("find",hj),cj("findIndex",hj),cj("findLast",hj),cj("findLastIndex",hj),cj("flatMap",hj),cj("forEach",hj),cj("map",hj),cj("some",hj),cj("toReversed",hj),cj("reduce",Uj),cj("reduceRight",Uj);var Zj=Zv("ObservableArrayAdministration",sj);function Rj(g){return Vv(g)&&Zj(g[fv])}var Fj={},mj="add",Bj="delete",Wj=function(){function g(g,e,I){var t=this;void 0===e&&(e=Ix),void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableMap@"+Av():"ObservableMap"),this.enhancer_=void 0,this.name_=void 0,this[fv]=Fj,this.data_=void 0,this.hasMap_=void 0,this.keysAtom_=void 0,this.interceptors_=void 0,this.changeListeners_=void 0,this.dehancer=void 0,this.enhancer_=e,this.name_=I,sv(Map)||LD(18),_j((function(){t.keysAtom_=Pv("production"!==fg.env.NODE_ENV?t.name_+".keys()":"ObservableMap.keys()"),t.data_=new Map,t.hasMap_=new Map,g&&t.merge(g)}))}var e=g.prototype;return e.has_=function(g){return this.data_.has(g)},e.has=function(g){var e=this;if(!XO.trackingDerivation)return this.has_(g);var I=this.hasMap_.get(g);if(!I){var t=I=new ZO(this.has_(g),Cx,"production"!==fg.env.NODE_ENV?this.name_+"."+pv(g)+"?":"ObservableMap.key?",!1);this.hasMap_.set(g,t),Qf(t,(function(){return e.hasMap_.delete(g)}))}return I.get()},e.set=function(g,e){var I=this.has_(g);if($f(this)){var t=ej(this,{type:I?Aj:mj,object:this,newValue:e,name:g});if(!t)return this;e=t.newValue}return I?this.updateValue_(g,e):this.addValue_(g,e),this},e.delete=function(g){var e=this;if(SO(this.keysAtom_),$f(this)&&!ej(this,{type:Bj,object:this,name:g}))return!1;if(this.has_(g)){var I=Cf(),t=Ij(this),C=t||I?{observableKind:"map",debugObjectName:this.name_,type:Bj,object:this,oldValue:this.data_.get(g).value_,name:g}:null;return"production"!==fg.env.NODE_ENV&&I&&nf(C),Lf((function(){var I;e.keysAtom_.reportChanged(),null==(I=e.hasMap_.get(g))||I.setNewValue_(!1),e.data_.get(g).setNewValue_(void 0),e.data_.delete(g)})),t&&Cj(this,C),"production"!==fg.env.NODE_ENV&&I&&df(),!0}return!1},e.updateValue_=function(g,e){var I=this.data_.get(g);if((e=I.prepareNewValue_(e))!==XO.UNCHANGED){var t=Cf(),C=Ij(this),i=C||t?{observableKind:"map",debugObjectName:this.name_,type:Aj,object:this,oldValue:I.value_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&t&&nf(i),I.setNewValue_(e),C&&Cj(this,i),"production"!==fg.env.NODE_ENV&&t&&df()}},e.addValue_=function(g,e){var I=this;SO(this.keysAtom_),Lf((function(){var t,C=new ZO(e,I.enhancer_,"production"!==fg.env.NODE_ENV?I.name_+"."+pv(g):"ObservableMap.key",!1);I.data_.set(g,C),e=C.value_,null==(t=I.hasMap_.get(g))||t.setNewValue_(!0),I.keysAtom_.reportChanged()}));var t=Cf(),C=Ij(this),i=C||t?{observableKind:"map",debugObjectName:this.name_,type:mj,object:this,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&t&&nf(i),C&&Cj(this,i),"production"!==fg.env.NODE_ENV&&t&&df()},e.get=function(g){return this.has(g)?this.dehanceValue_(this.data_.get(g).get()):this.dehanceValue_(void 0)},e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.keys=function(){return this.keysAtom_.reportObserved(),this.data_.keys()},e.values=function(){var g=this,e=this.keys();return IL({next:function(){var I=e.next(),t=I.done,C=I.value;return{done:t,value:t?void 0:g.get(C)}}})},e.entries=function(){var g=this,e=this.keys();return IL({next:function(){var I=e.next(),t=I.done,C=I.value;return{done:t,value:t?void 0:[C,g.get(C)]}}})},e[Symbol.iterator]=function(){return this.entries()},e.forEach=function(g,e){for(var I,t=Yv(this);!(I=t()).done;){var C=I.value,i=C[0],l=C[1];g.call(e,l,i,this)}},e.merge=function(g){var e=this;return Nj(g)&&(g=new Map(g)),Lf((function(){cv(g)?Wv(g).forEach((function(I){return e.set(I,g[I])})):Array.isArray(g)?g.forEach((function(g){var I=g[0],t=g[1];return e.set(I,t)})):Rv(g)?(Fv(g)||LD(19,g),g.forEach((function(g,I){return e.set(I,g)}))):null!=g&&LD(20,g)})),this},e.clear=function(){var g=this;Lf((function(){QO((function(){for(var e,I=Yv(g.keys());!(e=I()).done;){var t=e.value;g.delete(t)}}))}))},e.replace=function(g){var e=this;return Lf((function(){for(var I,t=pj(g),C=new Map,i=!1,l=Yv(e.data_.keys());!(I=l()).done;){var n=I.value;if(!t.has(n))if(e.delete(n))i=!0;else{var A=e.data_.get(n);C.set(n,A)}}for(var d,o=Yv(t.entries());!(d=o()).done;){var s=d.value,a=s[0],V=s[1],c=e.data_.has(a);if(e.set(a,V),e.data_.has(a)){var r=e.data_.get(a);C.set(a,r),c||(i=!0)}}if(!i)if(e.data_.size!==C.size)e.keysAtom_.reportChanged();else for(var h=e.data_.keys(),U=C.keys(),Z=h.next(),R=U.next();!Z.done;){if(Z.value!==R.value){e.keysAtom_.reportChanged();break}Z=h.next(),R=U.next()}e.data_=C})),this},e.toString=function(){return"[object ObservableMap]"},e.toJSON=function(){return Array.from(this)},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&LD("`observe` doesn't support fireImmediately=true in combination with maps."),tj(this,g)},e.intercept_=function(g){return gj(this,g)},Mv(g,[{key:"size",get:function(){return this.keysAtom_.reportObserved(),this.data_.size}},{key:Symbol.toStringTag,get:function(){return"Map"}}])}(),Nj=Zv("ObservableMap",Wj);function pj(g){if(Rv(g)||Nj(g))return g;if(Array.isArray(g))return new Map(g);if(cv(g)){var e=new Map;for(var I in g)e.set(I,g[I]);return e}return LD(21,g)}var Sj={},bj=function(){function g(g,e,I){var t=this;void 0===e&&(e=Ix),void 0===I&&(I="production"!==fg.env.NODE_ENV?"ObservableSet@"+Av():"ObservableSet"),this.name_=void 0,this[fv]=Sj,this.data_=new Set,this.atom_=void 0,this.changeListeners_=void 0,this.interceptors_=void 0,this.dehancer=void 0,this.enhancer_=void 0,this.name_=I,sv(Set)||LD(22),this.enhancer_=function(g,t){return e(g,t,I)},_j((function(){t.atom_=Pv(t.name_),g&&t.replace(g)}))}var e=g.prototype;return e.dehanceValue_=function(g){return void 0!==this.dehancer?this.dehancer(g):g},e.clear=function(){var g=this;Lf((function(){QO((function(){for(var e,I=Yv(g.data_.values());!(e=I()).done;){var t=e.value;g.delete(t)}}))}))},e.forEach=function(g,e){for(var I,t=Yv(this);!(I=t()).done;){var C=I.value;g.call(e,C,C,this)}},e.add=function(g){var e=this;if(SO(this.atom_),$f(this)&&!ej(this,{type:mj,object:this,newValue:g}))return this;if(!this.has(g)){Lf((function(){e.data_.add(e.enhancer_(g,void 0)),e.atom_.reportChanged()}));var I="production"!==fg.env.NODE_ENV&&Cf(),t=Ij(this),C=t||I?{observableKind:"set",debugObjectName:this.name_,type:mj,object:this,newValue:g}:null;I&&"production"!==fg.env.NODE_ENV&&nf(C),t&&Cj(this,C),I&&"production"!==fg.env.NODE_ENV&&df()}return this},e.delete=function(g){var e=this;if($f(this)&&!ej(this,{type:Bj,object:this,oldValue:g}))return!1;if(this.has(g)){var I="production"!==fg.env.NODE_ENV&&Cf(),t=Ij(this),C=t||I?{observableKind:"set",debugObjectName:this.name_,type:Bj,object:this,oldValue:g}:null;return I&&"production"!==fg.env.NODE_ENV&&nf(C),Lf((function(){e.atom_.reportChanged(),e.data_.delete(g)})),t&&Cj(this,C),I&&"production"!==fg.env.NODE_ENV&&df(),!0}return!1},e.has=function(g){return this.atom_.reportObserved(),this.data_.has(this.dehanceValue_(g))},e.entries=function(){var g=0,e=Array.from(this.keys()),I=Array.from(this.values());return IL({next:function(){var t=g;return g+=1,t<I.length?{value:[e[t],I[t]],done:!1}:{done:!0}}})},e.keys=function(){return this.values()},e.values=function(){this.atom_.reportObserved();var g=this,e=0,I=Array.from(this.data_.values());return IL({next:function(){return e<I.length?{value:g.dehanceValue_(I[e++]),done:!1}:{done:!0}}})},e.intersection=function(g){return mv(g)&&!uj(g)?g.intersection(this):new Set(this).intersection(g)},e.union=function(g){return mv(g)&&!uj(g)?g.union(this):new Set(this).union(g)},e.difference=function(g){return new Set(this).difference(g)},e.symmetricDifference=function(g){return mv(g)&&!uj(g)?g.symmetricDifference(this):new Set(this).symmetricDifference(g)},e.isSubsetOf=function(g){return new Set(this).isSubsetOf(g)},e.isSupersetOf=function(g){return new Set(this).isSupersetOf(g)},e.isDisjointFrom=function(g){return mv(g)&&!uj(g)?g.isDisjointFrom(this):new Set(this).isDisjointFrom(g)},e.replace=function(g){var e=this;return uj(g)&&(g=new Set(g)),Lf((function(){Array.isArray(g)||mv(g)?(e.clear(),g.forEach((function(g){return e.add(g)}))):null!=g&&LD("Cannot initialize set from "+g)})),this},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&LD("`observe` doesn't support fireImmediately=true in combination with sets."),tj(this,g)},e.intercept_=function(g){return gj(this,g)},e.toJSON=function(){return Array.from(this)},e.toString=function(){return"[object ObservableSet]"},e[Symbol.iterator]=function(){return this.values()},Mv(g,[{key:"size",get:function(){return this.atom_.reportObserved(),this.data_.size}},{key:Symbol.toStringTag,get:function(){return"Set"}}])}(),uj=Zv("ObservableSet",bj),Tj=Object.create(null),Gj="remove",kj=function(){function g(g,e,I,t){void 0===e&&(e=new Map),void 0===t&&(t=kx),this.target_=void 0,this.values_=void 0,this.name_=void 0,this.defaultAnnotation_=void 0,this.keysAtom_=void 0,this.changeListeners_=void 0,this.interceptors_=void 0,this.proxy_=void 0,this.isPlainObject_=void 0,this.appliedAnnotations_=void 0,this.pendingKeys_=void 0,this.target_=g,this.values_=e,this.name_=I,this.defaultAnnotation_=t,this.keysAtom_=new jv("production"!==fg.env.NODE_ENV?this.name_+".keys":"ObservableObject.keys"),this.isPlainObject_=cv(this.target_),"production"!==fg.env.NODE_ENV&&!CL(this.defaultAnnotation_)&&LD("defaultAnnotation must be valid annotation"),"production"!==fg.env.NODE_ENV&&(this.appliedAnnotations_={})}var e=g.prototype;return e.getObservablePropValue_=function(g){return this.values_.get(g).get()},e.setObservablePropValue_=function(g,e){var I=this.values_.get(g);if(I instanceof RO)return I.set(e),!0;if($f(this)){var t=ej(this,{type:Aj,object:this.proxy_||this.target_,name:g,newValue:e});if(!t)return null;e=t.newValue}if((e=I.prepareNewValue_(e))!==XO.UNCHANGED){var C=Ij(this),i="production"!==fg.env.NODE_ENV&&Cf(),l=C||i?{type:Aj,observableKind:"object",debugObjectName:this.name_,object:this.proxy_||this.target_,oldValue:I.value_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&i&&nf(l),I.setNewValue_(e),C&&Cj(this,l),"production"!==fg.env.NODE_ENV&&i&&df()}return!0},e.get_=function(g){return XO.trackingDerivation&&!bv(this.target_,g)&&this.has_(g),this.target_[g]},e.set_=function(g,e,I){return void 0===I&&(I=!1),bv(this.target_,g)?this.values_.has(g)?this.setObservablePropValue_(g,e):I?Reflect.set(this.target_,g,e):(this.target_[g]=e,!0):this.extend_(g,{value:e,enumerable:!0,writable:!0,configurable:!0},this.defaultAnnotation_,I)},e.has_=function(g){if(!XO.trackingDerivation)return g in this.target_;this.pendingKeys_||(this.pendingKeys_=new Map);var e=this.pendingKeys_.get(g);return e||(e=new ZO(g in this.target_,Cx,"production"!==fg.env.NODE_ENV?this.name_+"."+pv(g)+"?":"ObservableObject.key?",!1),this.pendingKeys_.set(g,e)),e.get()},e.make_=function(g,e){if(!0===e&&(e=this.defaultAnnotation_),!1!==e){if(Jj(this,e,g),!(g in this.target_)){var I;if(null!=(I=this.target_[Kv])&&I[g])return;LD(1,e.annotationType_,this.name_+"."+g.toString())}for(var t=this.target_;t&&t!==ev;){var C=$D(t,g);if(C){var i=e.make_(this,g,C,t);if(0===i)return;if(1===i)break}t=Object.getPrototypeOf(t)}yj(this,e,g)}},e.extend_=function(g,e,I,t){if(void 0===t&&(t=!1),!0===I&&(I=this.defaultAnnotation_),!1===I)return this.defineProperty_(g,e,t);Jj(this,I,g);var C=I.extend_(this,g,e,t);return C&&yj(this,I,g),C},e.defineProperty_=function(g,e,I){void 0===I&&(I=!1),SO(this.keysAtom_);try{vO();var t=this.delete_(g);if(!t)return t;if($f(this)){var C=ej(this,{object:this.proxy_||this.target_,name:g,type:mj,newValue:e.value});if(!C)return null;var i=C.newValue;e.value!==i&&(e=Ev({},e,{value:i}))}if(I){if(!Reflect.defineProperty(this.target_,g,e))return!1}else gv(this.target_,g,e);this.notifyPropertyAddition_(g,e.value)}finally{xO()}return!0},e.defineObservableProperty_=function(g,e,I,t){void 0===t&&(t=!1),SO(this.keysAtom_);try{vO();var C=this.delete_(g);if(!C)return C;if($f(this)){var i=ej(this,{object:this.proxy_||this.target_,name:g,type:mj,newValue:e});if(!i)return null;e=i.newValue}var l=Yj(g),n={configurable:!XO.safeDescriptors||this.isPlainObject_,enumerable:!0,get:l.get,set:l.set};if(t){if(!Reflect.defineProperty(this.target_,g,n))return!1}else gv(this.target_,g,n);var A=new ZO(e,I,"production"!==fg.env.NODE_ENV?this.name_+"."+g.toString():"ObservableObject.key",!1);this.values_.set(g,A),this.notifyPropertyAddition_(g,A.value_)}finally{xO()}return!0},e.defineComputedProperty_=function(g,e,I){void 0===I&&(I=!1),SO(this.keysAtom_);try{vO();var t=this.delete_(g);if(!t)return t;if($f(this)&&!ej(this,{object:this.proxy_||this.target_,name:g,type:mj,newValue:void 0}))return null;e.name||(e.name="production"!==fg.env.NODE_ENV?this.name_+"."+g.toString():"ObservableObject.key"),e.context=this.proxy_||this.target_;var C=Yj(g),i={configurable:!XO.safeDescriptors||this.isPlainObject_,enumerable:!1,get:C.get,set:C.set};if(I){if(!Reflect.defineProperty(this.target_,g,i))return!1}else gv(this.target_,g,i);this.values_.set(g,new RO(e)),this.notifyPropertyAddition_(g,void 0)}finally{xO()}return!0},e.delete_=function(g,e){if(void 0===e&&(e=!1),SO(this.keysAtom_),!bv(this.target_,g))return!0;if($f(this)&&!ej(this,{object:this.proxy_||this.target_,name:g,type:Gj}))return null;try{var I;vO();var t,C=Ij(this),i="production"!==fg.env.NODE_ENV&&Cf(),l=this.values_.get(g),n=void 0;if(l||!C&&!i||(n=null==(t=$D(this.target_,g))?void 0:t.value),e){if(!Reflect.deleteProperty(this.target_,g))return!1}else delete this.target_[g];if("production"!==fg.env.NODE_ENV&&delete this.appliedAnnotations_[g],l&&(this.values_.delete(g),l instanceof ZO&&(n=l.value_),fO(l)),this.keysAtom_.reportChanged(),null==(I=this.pendingKeys_)||null==(I=I.get(g))||I.set(g in this.target_),C||i){var A={type:Gj,observableKind:"object",object:this.proxy_||this.target_,debugObjectName:this.name_,oldValue:n,name:g};"production"!==fg.env.NODE_ENV&&i&&nf(A),C&&Cj(this,A),"production"!==fg.env.NODE_ENV&&i&&df()}}finally{xO()}return!0},e.observe_=function(g,e){return"production"!==fg.env.NODE_ENV&&!0===e&&LD("`observe` doesn't support the fire immediately property for observable objects."),tj(this,g)},e.intercept_=function(g){return gj(this,g)},e.notifyPropertyAddition_=function(g,e){var I,t=Ij(this),C="production"!==fg.env.NODE_ENV&&Cf();if(t||C){var i=t||C?{type:mj,observableKind:"object",debugObjectName:this.name_,object:this.proxy_||this.target_,name:g,newValue:e}:null;"production"!==fg.env.NODE_ENV&&C&&nf(i),t&&Cj(this,i),"production"!==fg.env.NODE_ENV&&C&&df()}null==(I=this.pendingKeys_)||null==(I=I.get(g))||I.set(!0),this.keysAtom_.reportChanged()},e.ownKeys_=function(){return this.keysAtom_.reportObserved(),Nv(this.target_)},e.keys_=function(){return this.keysAtom_.reportObserved(),Object.keys(this.target_)},g}();function Qj(g,e){var I;if("production"!==fg.env.NODE_ENV&&e&&Ej(g)&&LD("Options can't be provided for already observable objects."),bv(g,fv))return"production"!==fg.env.NODE_ENV&&!(Lj(g)instanceof kj)&&LD("Cannot convert '"+Pj(g)+"' into observable object:\nThe target is already observable of different type.\nExtending builtins is not supported."),g;"production"!==fg.env.NODE_ENV&&!Object.isExtensible(g)&&LD("Cannot make the designated object observable; it is not extensible");var t=null!=(I=null==e?void 0:e.name)?I:"production"!==fg.env.NODE_ENV?(cv(g)?"ObservableObject":g.constructor.name)+"@"+Av():"ObservableObject",C=new kj(g,new Map,String(t),jx(e));return hv(g,fv,C),g}var Mj=Zv("ObservableObjectAdministration",kj);function Yj(g){return Tj[g]||(Tj[g]={get:function(){return this[fv].getObservablePropValue_(g)},set:function(e){return this[fv].setObservablePropValue_(g,e)}})}function Ej(g){return!!Vv(g)&&Mj(g[fv])}function yj(g,e,I){var t;"production"!==fg.env.NODE_ENV&&(g.appliedAnnotations_[I]=e),null==(t=g.target_[Kv])||delete t[I]}function Jj(g,e,I){if("production"!==fg.env.NODE_ENV&&!CL(e)&&LD("Cannot annotate '"+g.name_+"."+I.toString()+"': Invalid annotation."),"production"!==fg.env.NODE_ENV&&!nx(e)&&bv(g.appliedAnnotations_,I)){var t=g.name_+"."+I.toString(),C=g.appliedAnnotations_[I].annotationType_;LD("Cannot apply '"+e.annotationType_+"' to '"+t+"':\nThe field is already annotated with '"+C+"'.\nRe-annotating fields is not allowed.\nUse 'override' annotation for methods overridden by subclass.")}}var Hj=vj(0),wj=function(){var g=!1,e={};return Object.defineProperty(e,"0",{set:function(){g=!0}}),Object.create(e)[0]=1,!1===g}(),Xj=0,Kj=function(){};function zj(g,e){Object.setPrototypeOf?Object.setPrototypeOf(g.prototype,e):void 0!==g.prototype.__proto__?g.prototype.__proto__=e:g.prototype=e}zj(Kj,Array.prototype);var Dj=function(g){function e(e,I,t,C){var i;return void 0===t&&(t="production"!==fg.env.NODE_ENV?"ObservableArray@"+Av():"ObservableArray"),void 0===C&&(C=!1),i=g.call(this)||this,_j((function(){var g=new sj(t,I,C,!0);g.proxy_=i,Uv(i,fv,g),e&&e.length&&i.spliceWithArray(0,0,e),wj&&Object.defineProperty(i,"0",Hj)})),i}yv(e,g);var I=e.prototype;return I.concat=function(){this[fv].atom_.reportObserved();for(var g=arguments.length,e=new Array(g),I=0;I<g;I++)e[I]=arguments[I];return Array.prototype.concat.apply(this.slice(),e.map((function(g){return Rj(g)?g.slice():g})))},I[Symbol.iterator]=function(){var g=this,e=0;return IL({next:function(){return e<g.length?{value:g[e++],done:!1}:{done:!0,value:void 0}}})},Mv(e,[{key:"length",get:function(){return this[fv].getArrayLength_()},set:function(g){this[fv].setArrayLength_(g)}},{key:Symbol.toStringTag,get:function(){return"Array"}}])}(Kj);function vj(g){return{enumerable:!1,configurable:!0,get:function(){return this[fv].get_(g)},set:function(e){this[fv].set_(g,e)}}}function xj(g){gv(Dj.prototype,""+g,vj(g))}function Oj(g){if(g>Xj){for(var e=Xj;e<g+100;e++)xj(e);Xj=g}}function fj(g,e,I){return new Dj(g,e,I)}function jj(g,e){if("object"==typeof g&&null!==g){if(Rj(g))return void 0!==e&&LD(23),g[fv].atom_;if(uj(g))return g.atom_;if(Nj(g)){if(void 0===e)return g.keysAtom_;var I=g.data_.get(e)||g.hasMap_.get(e);return I||LD(25,e,Pj(g)),I}if(Ej(g)){if(!e)return LD(26);var t=g[fv].values_.get(e);return t||LD(27,e,Pj(g)),t}if(Lv(g)||BO(g)||tf(g))return g}else if(sv(g)&&tf(g[fv]))return g[fv];LD(28)}function Lj(g,e){return g||LD(29),Lv(g)||BO(g)||tf(g)||Nj(g)||uj(g)?g:g[fv]?g[fv]:void LD(24,g)}function Pj(g,e){var I;if(void 0!==e)I=jj(g,e);else{if(Wf(g))return g.name;I=Ej(g)||Nj(g)||uj(g)?Lj(g):jj(g)}return I.name_}function _j(g){var e=MO(),I=rO(!0);vO();try{return g()}finally{xO(),hO(I),YO(e)}}Object.entries(Vj).forEach((function(g){var e=g[0],I=g[1];"concat"!==e&&hv(Dj.prototype,e,I)})),Oj(1e3);var qj=ev.toString;function $j(g,e,I){return void 0===I&&(I=-1),gL(g,e,I)}function gL(g,e,I,t,C){if(g===e)return 0!==g||1/g==1/e;if(null==g||null==e)return!1;if(g!=g)return e!=e;var i=typeof g;if("function"!==i&&"object"!==i&&"object"!=typeof e)return!1;var l=qj.call(g);if(l!==qj.call(e))return!1;switch(l){case"[object RegExp]":case"[object String]":return""+g==""+e;case"[object Number]":return+g!=+g?+e!=+e:0==+g?1/+g==1/e:+g==+e;case"[object Date]":case"[object Boolean]":return+g==+e;case"[object Symbol]":return typeof Symbol<"u"&&Symbol.valueOf.call(g)===Symbol.valueOf.call(e);case"[object Map]":case"[object Set]":I>=0&&I++}g=eL(g),e=eL(e);var n="[object Array]"===l;if(!n){if("object"!=typeof g||"object"!=typeof e)return!1;var A=g.constructor,d=e.constructor;if(A!==d&&!(sv(A)&&A instanceof A&&sv(d)&&d instanceof d)&&"constructor"in g&&"constructor"in e)return!1}if(0===I)return!1;I<0&&(I=-1),C=C||[];for(var o=(t=t||[]).length;o--;)if(t[o]===g)return C[o]===e;if(t.push(g),C.push(e),n){if((o=g.length)!==e.length)return!1;for(;o--;)if(!gL(g[o],e[o],I-1,t,C))return!1}else{var s,a=Object.keys(g);if(o=a.length,Object.keys(e).length!==o)return!1;for(;o--;)if(!bv(e,s=a[o])||!gL(g[s],e[s],I-1,t,C))return!1}return t.pop(),C.pop(),!0}function eL(g){return Rj(g)?g.slice():Rv(g)||Nj(g)||mv(g)||uj(g)?Array.from(g.entries()):g}function IL(g){return g[Symbol.iterator]=tL,g}function tL(){return this}function CL(g){return g instanceof Object&&"string"==typeof g.annotationType_&&sv(g.make_)&&sv(g.extend_)}function iL(g){return"object"==typeof g&&"object"==typeof Object.values(g)[0]&&"path"in Object.values(g)[0]}function lL(g){if(iL(g))return g;if("string"==typeof g){const e=II.atou(g);return lL(JSON.parse(e))}return AL(g)}["Symbol","Map","Set"].forEach((function(g){typeof _D()[g]>"u"&&LD("MobX requires global '"+g+"' to be available or polyfilled")})),"object"==typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__&&__MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({spy:of,extras:{getDebugName:Pj},$mobx:fv});const nL={fromAttribute(g){let e=g;try{e=JSON.parse(g)}catch{}return lL(e)},toAttribute:g=>JSON.stringify(g)};function AL(g){return Object.keys(g).reduce(((e,I)=>({...e,[I]:{path:I,content:g[I]}})),{})}class dL{constructor(g){this.isBusy=!1,this.clientMsgPort=null,this.readOnly=!1,this.vmVersion="",this.fetchGnoVersion=zf((function*(){try{const g=yield this.getWorker().getGnoVersion();this.vmVersion=g}catch(g){}})),this._worker=g,lj(this),this.fetchGnoVersion()}getWorker(){let g=this._worker??window.gnoWorker;return g||(this._worker=g=MD(),window.gnoWorker=g),g}gnorun(g,e){const I=this.newChannel({readOnly:!0});return this.isBusy=!0,this.getWorker().gnorun({files:g,stdioPort:I,expr:e}).finally((()=>{this.isBusy=!1}))}gnorepl(g){const e=this.newChannel({readOnly:!1});return this.isBusy=!0,this.getWorker().gnorepl({files:g,stdioPort:e}).finally((()=>{this.isBusy=!1}))}gnotest(g){this.isBusy=!0;const e=this.newChannel({readOnly:!0});return this.getWorker().gnotest({files:g,stdioPort:e}).finally((()=>{this.isBusy=!1}))}reset(){this.clientMsgPort=null}newChannel({readOnly:g}={}){const{port1:e,port2:I}=new MessageChannel;return this.clientMsgPort=e,this.readOnly=g??!1,I}}class oL{constructor(g){this.files={},this.path="",this.theme="light",this.runExpression="main()",this.playgroundUrl="https://play.gno.land",this.workerCtrl=new dL(g),lj(this)}static make(g){const e=new oL(g.worker);return e.updateProps(g),e}get tabs(){return Object.keys(this.files??{})}updateProps(g){g.files&&this.setFiles(lL(g.files)),g.path&&this.setPath(g.path),g.theme&&this.setTheme(g.theme)}setTheme(g){this.theme=g}setPath(g){this.path=g}setFile(g,e){this.files[g]={path:g,content:e}}setFiles(g){this.files=g,this.path=Object.keys(g)[0]}getFile(g){return this.files[g]}gnorun(g){const e=JSON.parse(JSON.stringify(this.files));this.workerCtrl.gnorun(e,g??this.runExpression).catch(console.error)}gnotest(){const g=JSON.parse(JSON.stringify(this.files));this.workerCtrl.gnotest(g).catch(console.error)}}const sL=Symbol("playground"),aL=':host{--gno-radius: .25rem;--gno-content-height: unset;--gno-terminal-height: unset}:host{--gno-foreground: #020817;--gno-background: #fff;--gno-border: #e2e8f0;--gno-link: #000;--gno-muted: #f1f5f9;--gno-muted-foreground: #64748b;--gno-accent: #f1f5f9;--gno-accent-foreground: #0f172a;--gno-secondary: #f0f0f0;--gno-secondary-foreground: #000;--gno-primary: #18181b;--gno-primary-foreground: #fafafa}:host([theme="dark"]){--gno-foreground: #f8fafc;--gno-background: #020817;--gno-border: #27272a;--gno-link: #f8fafc;--gno-muted: #27272a;--gno-muted-foreground: #a1a1aa;--gno-accent: #1e293b;--gno-accent-foreground: #94a3b8;--gno-secondary: #27272a;--gno-secondary-foreground: #fafafa;--gno-primary: #fafafa;--gno-primary-foreground: #18181b}';var VL=Object.defineProperty,cL=Object.getOwnPropertyDescriptor,rL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?cL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&VL(e,I,i),i};let hL=class extends Rg{render(){return eg`<slot></slot>`}firstUpdated(g){this.context=oL.make({theme:this.theme,worker:this.worker,files:this.files,path:this.path}),bf((()=>this.context.workerCtrl.clientMsgPort),(g=>this.dispatchEvent(new CustomEvent("port-changed",{detail:g}))))}updated(g){if(g.has("theme")){if("system"===this.theme){const g=window.matchMedia("(prefers-color-scheme: dark)").matches;return void(this.theme=g?"dark":"light")}this.context.updateProps({theme:this.theme})}g.has("files")&&this.context.updateProps({files:this.files})}};hL.styles=r(aL),rL([pg({type:Object,converter:nL})],hL.prototype,"files",2),rL([pg({type:String,reflect:!0})],hL.prototype,"path",2),rL([pg({type:Worker})],hL.prototype,"worker",2),rL([pg({type:String,reflect:!0})],hL.prototype,"theme",2),rL([A({context:sL})],hL.prototype,"context",2),hL=rL([Bg("gno-playground-provider")],hL);var UL=Object.defineProperty,ZL=Object.getOwnPropertyDescriptor,RL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?ZL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&UL(e,I,i),i};let FL=class extends Rg{constructor(){super(...arguments),this.content="",this.theme="light",this.lineNumbers=!1}handleCodeChange(g){this.context&&this.context.setFile(this.path,g),this.content=g,this.dispatchEvent(new CustomEvent("change",{detail:{path:this.path,content:g}}))}render(){return eg`<div id="code-editor"></div>`}firstUpdated(){this.editor=new _z({onChange:g=>this.handleCodeChange(g.toString()),theme:this.theme,showLineNumbers:this.lineNumbers}),this.editor.mount(this.wrapper),this.context&&(this.disposer=bf((()=>{var g,e;return[null==(g=this.context)?void 0:g.theme,null==(e=this.context)?void 0:e.path]}),(()=>{var g,e,I,t;this.path=null==(g=this.context)?void 0:g.path,this.content=null==(I=null==(e=this.context)?void 0:e.getFile(this.path))?void 0:I.content,null!=(t=this.context)&&t.theme&&(this.theme=this.context.theme)}),{fireImmediately:!0}))}disconnectedCallback(){var g;super.disconnectedCallback(),this.editor.unmount(),null==(g=this.disposer)||g.call(this)}update(g){super.update(g),g.has("path")&&this.editor.updateProps({value:{path:this.path,content:this.content}}),g.has("theme")&&setTimeout((()=>this.editor.updateProps({theme:this.theme})),0)}};FL.styles=h`
    #code-editor {
      overflow: auto;
      height: 100%;
    }

    .cm-editor {
      height: 100%;
      max-height: var(--gno-editor-max-height, 100%);
      font-size: var(--gno-editor-font-size, 14.5px);
    }

    .cm-scroller {
      /* Necessary to display the floating menu entirely */
      min-height: 180px;
    }
  `,RL([d({context:sL,subscribe:!0})],FL.prototype,"context",2),RL([pg({type:String})],FL.prototype,"path",2),RL([pg({type:String,reflect:!0})],FL.prototype,"content",2),RL([pg({type:String})],FL.prototype,"theme",2),RL([pg({type:Boolean,attribute:"line-numbers"})],FL.prototype,"lineNumbers",2),RL([ug("#code-editor")],FL.prototype,"wrapper",2),FL=RL([Bg("gno-code-editor")],FL);const mL='/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n * @license MIT\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author\'s permission):\n *   Fabrice Bellard\'s javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */.xterm{cursor:text;position:relative;user-select:none;-ms-user-select:none;-webkit-user-select:none}.xterm.focus,.xterm:focus{outline:none}.xterm .xterm-helpers{position:absolute;top:0;z-index:5}.xterm .xterm-helper-textarea{padding:0;border:0;margin:0;position:absolute;opacity:0;left:-9999em;top:0;width:0;height:0;z-index:-5;white-space:nowrap;overflow:hidden;resize:none}.xterm .composition-view{background:#000;color:#fff;display:none;position:absolute;white-space:nowrap;z-index:1}.xterm .composition-view.active{display:block}.xterm .xterm-viewport{background-color:#000;overflow-y:scroll;cursor:default;position:absolute;right:0;left:0;top:0;bottom:0}.xterm .xterm-screen{position:relative}.xterm .xterm-screen canvas{position:absolute;left:0;top:0}.xterm .xterm-scroll-area{visibility:hidden}.xterm-char-measure-element{display:inline-block;visibility:hidden;position:absolute;top:0;left:-9999em;line-height:normal}.xterm.enable-mouse-events{cursor:default}.xterm.xterm-cursor-pointer,.xterm .xterm-cursor-pointer{cursor:pointer}.xterm.column-select.focus{cursor:crosshair}.xterm .xterm-accessibility:not(.debug),.xterm .xterm-message{position:absolute;left:0;top:0;bottom:0;right:0;z-index:10;color:transparent;pointer-events:none}.xterm .xterm-accessibility-tree:not(.debug) *::selection{color:transparent}.xterm .xterm-accessibility-tree{-webkit-user-select:text;user-select:text;white-space:pre}.xterm .live-region{position:absolute;left:-9999px;width:1px;height:1px;overflow:hidden}.xterm-dim{opacity:1!important}.xterm-underline-1{text-decoration:underline}.xterm-underline-2{text-decoration:double underline}.xterm-underline-3{text-decoration:wavy underline}.xterm-underline-4{text-decoration:dotted underline}.xterm-underline-5{text-decoration:dashed underline}.xterm-overline{text-decoration:overline}.xterm-overline.xterm-underline-1{text-decoration:overline underline}.xterm-overline.xterm-underline-2{text-decoration:overline double underline}.xterm-overline.xterm-underline-3{text-decoration:overline wavy underline}.xterm-overline.xterm-underline-4{text-decoration:overline dotted underline}.xterm-overline.xterm-underline-5{text-decoration:overline dashed underline}.xterm-strikethrough{text-decoration:line-through}.xterm-screen .xterm-decoration-container .xterm-decoration{z-index:6;position:absolute}.xterm-screen .xterm-decoration-container .xterm-decoration.xterm-decoration-top-layer{z-index:7}.xterm-decoration-overview-ruler{z-index:8;position:absolute;top:0;right:0;pointer-events:none}.xterm-decoration-top{z-index:2;position:relative}';var BL=Object.defineProperty,WL=Object.getOwnPropertyDescriptor,NL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?WL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&BL(e,I,i),i};let pL=class extends Rg{constructor(){super(),this.port=null,this.readOnly=!0,this.store=new OD}handleClose(){this.context&&this.context.workerCtrl.reset(),this.port=null,this.dispatchEvent(new CustomEvent("close"))}fit(){this.store.fit()}render(){return eg`
      <div style="display: ${this.port?"block":"none"}">
        <div id="terminal" part="xterm"></div>
        <button part="close" title="Close" @click=${this.handleClose}>
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 256 256">
            <path
              d="M208.49,191.51a12,12,0,0,1-17,17L128,145,64.49,208.49a12,12,0,0,1-17-17L111,128,47.51,64.49a12,12,0,0,1,17-17L128,111l63.51-63.52a12,12,0,0,1,17,17L145,128Z"
            ></path>
          </svg>
        </button>
      </div>
    `}firstUpdated(){this.store.mount(this.wrapper),this.context&&bf((()=>this.context.workerCtrl.clientMsgPort),(g=>this.port=g))}updated(g){g.has("port")&&this.port&&(this.store.clear(),this.store.fit(),this.store.attachToMessagePort(this.port,this.readOnly).catch(console.error))}disconnectedCallback(){this.store.unmount(),super.disconnectedCallback()}};pL.styles=[r(mL),h`
      :host {
        position: relative;
      }

      .xterm {
        height: 100%;
      }

      .xterm-viewport {
        background-color: var(--gno-muted) !important;
      }

      .xterm-rows {
        color: var(--gno-muted-foreground) !important;
        transition: color 0.3s ease;
      }

      .xterm-cursor .xterm-cursor-outline {
        outline-color: var(--gno-muted-foreground) !important;
      }

      .xterm-cursor .xterm-cursor-block {
        background-color: var(--gno-muted-foreground) !important;
      }

      .xterm-selection {
        top: 10px !important;
        left: 10px !important;
      }

      .xterm-selection div {
        background-color: transparent !important;
      }

      .xterm-decoration-top {
        background-color: var(--gno-primary) !important;
        color: var(--gno-primary-foreground) !important;
      }

      .xterm-cursor.xterm-cursor-outline {
        outline-color: var(--gno-muted-foreground) !important;
      }

      .xterm-cursor.xterm-cursor-blink {
        box-shadow: 1px 0 0 0 var(--gno-muted-foreground) inset !important;
      }

      [part='close'] {
        all: unset;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        padding: 0.5rem;
        position: absolute;
        top: 0.2rem;
        right: 1.2rem;
        z-index: 1;
        color: var(--gno-muted-foreground);
        background-color: var(--gno-muted);
      }
    `],NL([d({context:sL,subscribe:!0})],pL.prototype,"context",2),NL([ug("#terminal")],pL.prototype,"wrapper",2),NL([pg({type:MessagePort,reflect:!0})],pL.prototype,"port",2),NL([pg({type:Boolean,attribute:"readonly"})],pL.prototype,"readOnly",2),pL=NL([Bg("gno-terminal")],pL);const SL=g=>g??tg;function bL(g,e,I){return g?e(g):null==I?void 0:I(g)}const uL={check:"M232.49,80.49l-128,128a12,12,0,0,1-17,0l-56-56a12,12,0,1,1,17-17L96,183,215.51,63.51a12,12,0,0,1,17,17Z",test:"M168,92a12,12,0,1,1-12-12A12,12,0,0,1,168,92ZM100,80a12,12,0,1,0,12,12A12,12,0,0,0,100,80Zm116,64A87.76,87.76,0,0,1,213,167l22.24,9.72A8,8,0,0,1,232,192a7.89,7.89,0,0,1-3.2-.67L207.38,182a88,88,0,0,1-158.76,0L27.2,191.33A7.89,7.89,0,0,1,24,192a8,8,0,0,1-3.2-15.33L43,167A87.76,87.76,0,0,1,40,144v-8H16a8,8,0,0,1,0-16H40v-8a87.76,87.76,0,0,1,3-23L20.8,79.33a8,8,0,1,1,6.4-14.66L48.62,74a88,88,0,0,1,158.76,0l21.42-9.36a8,8,0,0,1,6.4,14.66L213,89.05a87.76,87.76,0,0,1,3,23v8h24a8,8,0,0,1,0,16H216Zm-80,0a8,8,0,0,0-16,0v64a8,8,0,0,0,16,0Zm64-32a72,72,0,0,0-144,0v8H200Z",copy:"M192,72V216a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V72a8,8,0,0,1,8-8H184A8,8,0,0,1,192,72Zm24-40H72a8,8,0,0,0,0,16H208V184a8,8,0,0,0,16,0V40A8,8,0,0,0,216,32Z",run:"M240,128a15.74,15.74,0,0,1-7.6,13.51L88.32,229.65a16,16,0,0,1-16.2.3A15.86,15.86,0,0,1,64,216.13V39.87a15.86,15.86,0,0,1,8.12-13.82,16,16,0,0,1,16.2.3L232.4,114.49A15.74,15.74,0,0,1,240,128Z"};function TL(g){return eg`<svg viewBox="0 0 256 256" width="1em" height="1em" fill="currentColor">
    <path d=${uL[g]} />
  </svg>`}function GL(g){navigator.clipboard&&navigator.clipboard.writeText(g).catch(console.error);const e=document.createElement("textarea");e.value=g,e.style.position="fixed",e.style.opacity="0",document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e)}var kL=Object.defineProperty,QL=Object.getOwnPropertyDescriptor,ML=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?QL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&kL(e,I,i),i};let YL=class extends Rg{constructor(){super(...arguments),this.content="",this.showTest=!1,this.showRun=!1,this.isOpen=!1,this.isCopied=!1,this.handleOutsideClick=g=>{this.contains(g.target)||(this.isOpen=!1,document.removeEventListener("click",this.handleOutsideClick))},this.handleKeyDown=g=>{"Escape"===g.key&&this.isOpen&&(this.isOpen=!1,document.removeEventListener("click",this.handleOutsideClick))},this.handleCopy=()=>{GL(this.context.getFile(this.context.path).content),this.isCopied=!0,setTimeout((()=>{this.isCopied=!1}),1e3)}}connectedCallback(){super.connectedCallback(),document.addEventListener("keydown",this.handleKeyDown)}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener("keydown",this.handleKeyDown),document.removeEventListener("click",this.handleOutsideClick)}render(){return eg`
      <div class="floating-menu">
        <button class="floating-menu-button" @click=${this.toggleDropdown}>
          <slot name="icon">
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M4 8l16 0" />
              <path d="M4 16l16 0" />
            </svg>
          </slot>
        </button>

        <div class="floating-menu-dropdown" data-open=${this.isOpen}>
          <button
            title="Copy"
            part="action copy"
            class="floating-menu-dropdown-item"
            @click=${g=>this.handleAction(g,"copy")}
          >
            ${TL(this.isCopied?"check":"copy")} ${this.isCopied?"Copied!":"Copy"}
          </button>

          ${bL(this.showTest,(()=>eg`
              <button
                title="Test"
                part="action test"
                class="floating-menu-dropdown-item"
                @click=${g=>this.handleAction(g,"test")}
              >
                ${TL("test")} Test
              </button>
            `))}
          ${bL(this.showRun,(()=>eg`
              <button
                title="Run"
                part="action run"
                class="floating-menu-dropdown-item"
                @click=${g=>this.handleAction(g,"run")}
              >
                ${TL("run")} Run
              </button>
            `))}
        </div>
      </div>
    `}toggleDropdown(){this.isOpen=!this.isOpen,this.isOpen?setTimeout((()=>{document.addEventListener("click",this.handleOutsideClick)}),0):document.removeEventListener("click",this.handleOutsideClick)}handleAction(g,e){if("copy"===e)return g.stopPropagation(),void this.handleCopy();"test"===e?this.context.gnotest():"run"===e&&this.context.gnorun(),this.isOpen=!1}};YL.styles=h`
    .floating-menu-button {
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      bottom: 1.3rem;
      right: 1.3rem;
      appearance: none;
      color: inherit;
      cursor: pointer;
      border: none;
      border-radius: 9999px;
      width: 30px;
      height: 30px;
      box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.1);
      border: 1px solid var(--gno-border);
      background-color: var(--gno-muted);
      color: var(--gno-muted-foreground);
      z-index: 1000;
    }

    .floating-menu-dropdown {
      position: absolute;
      bottom: 0.5rem;
      right: 0.5rem;
      overflow: hidden;
      box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.1);
      border-radius: var(--gno-radius);
      border: 1px solid var(--gno-border);
      background-color: var(--gno-background);
      width: 100%;
      max-width: 60px;
      display: none;
      z-index: 1001;
    }

    .floating-menu-dropdown[data-open='true'] {
      display: block;
    }

    .floating-menu-dropdown-item {
      appearance: none;
      border: none;
      background: none;
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 2px;
      align-items: center;
      padding: 8px 0;
      cursor: pointer;
      color: var(--gno-foreground);
      transition: background-color 0.2s ease-in-out;
    }

    .floating-menu-dropdown-item:hover {
      background-color: var(--gno-accent);
      color: var(--gno-accent-foreground);
    }

    .floating-menu-dropdown-item svg {
      font-size: 1.25rem;
    }
  `,ML([d({context:sL,subscribe:!0})],YL.prototype,"context",2),ML([pg({type:String})],YL.prototype,"content",2),ML([pg({type:Boolean,attribute:"show-test"})],YL.prototype,"showTest",2),ML([pg({type:Boolean,attribute:"show-run"})],YL.prototype,"showRun",2),ML([Sg()],YL.prototype,"isOpen",2),ML([Sg()],YL.prototype,"isCopied",2),YL=ML([Bg("gno-floating-menu")],YL);var EL=Object.defineProperty,yL=Object.getOwnPropertyDescriptor,JL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?yL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&EL(e,I,i),i};let HL=class extends Rg{constructor(){super(...arguments),this.label="Open in Playground",this.baseUrl="https://play.gno.land"}getUrl(){const g=new URL(this.context.playgroundUrl??this.baseUrl),e=Object.values(this.context.files),I=btoa(unescape(encodeURIComponent(JSON.stringify(e))));return g.hash=I,g.toString()}handleClick(){window.open(this.getUrl(),"_blank","noopener,noreferrer")}render(){return eg`
      <button class="open-in-playground" @click=${this.handleClick}>
        ${this.label}
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 256 256">
          <path
            d="M200,64V168a8,8,0,0,1-16,0V83.31L69.66,197.66a8,8,0,0,1-11.32-11.32L172.69,72H88a8,8,0,0,1,0-16H192A8,8,0,0,1,200,64Z"
          ></path>
        </svg>
      </button>
    `}};HL.styles=h`
    .open-in-playground {
      all: unset;
      display: inline-flex;
      align-items: center;
      gap: 0.2rem;
      text-decoration: underline;
      overflow-wrap: break-word;
      cursor: pointer;
      color: var(--gno-link, inherit);
      font-size: 0.8125rem;
    }
  `,JL([d({context:sL,subscribe:!0})],HL.prototype,"context",2),JL([pg({type:String})],HL.prototype,"label",2),JL([pg({type:String,attribute:"base-url"})],HL.prototype,"baseUrl",2),HL=JL([Bg("gno-open-in-play")],HL);var wL=Object.defineProperty,XL=Object.getOwnPropertyDescriptor,KL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?XL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&wL(e,I,i),i};let zL=class extends Rg{constructor(){super(...arguments),this.min=0,this.max=100,this.defaultSize=50,this.orientation="vertical",this.size=this.defaultSize,this.disabled=!1,this.offset=0,this.dragging=!1,this.onMove=g=>{g.preventDefault(),this.dragging=!0,this.size=this.calcSize(g.clientX,g.clientY)},this.startDragging=()=>{this.dragging=!0,window.addEventListener("mousemove",this.onMove),window.addEventListener("mouseup",this.stopDragging)},this.stopDragging=()=>{this.dragging=!1,window.removeEventListener("mousemove",this.onMove),window.removeEventListener("mouseup",this.stopDragging),this.dispatchEvent(new CustomEvent("resize",{detail:{size:this.size}}))}}render(){return eg`
      <div class="splitter" part="root" ?data-disabled=${SL(this.disabled)}>
        <slot part="start" class="start"></slot>
        ${this.hasEndSlot()?eg`
              <button
                part="divider"
                role="separator"
                tabindex="0"
                class="divider"
                aria-label="Resize"
                aria-orientation="${this.orientation}"
                aria-valuemin=${this.min}
                aria-valuemax=${this.max}
                aria-valuenow="${this.size}"
                style="touch-action: none;user-select: none;"
                ?hidden=${SL(this.disabled)}
                @mousedown=${this.startDragging}
                @touchstart=${this.startDragging}
              ></button>
            `:null}
        <slot part="end" name="end" class="end" @slotchange=${this.onSlotChange}></slot>
      </div>
    `}updated(g){g.has("size")&&this.updateContainerStyle()}updateContainerStyle(){if(this.disabled)return;let g="1fr";this.hasEndSlot()&&(g=`calc(${this.size}% - var(--divider-height)) var(--divider-height) calc(100% - var(--divider-height))`),this.containerEl.style.gridTemplateRows=g}hasEndSlot(){return null!==this.querySelector('[slot="end"]')}calcSize(g,e){const I=this.containerEl.getBoundingClientRect(),t="vertical"===this.orientation?I.height:I.width,C=(("vertical"===this.orientation?e:g)-I.top)/t*100;return Math.min(Math.max(C,this.min),this.max)}onSlotChange(){this.requestUpdate(),this.updateContainerStyle()}};zL.styles=h`
    :host {
      --divider-height: 2px;
      position: relative;
    }

    [part='root']:not([data-disabled]) {
      display: grid;
      width: 100%;
      overflow: hidden;
    }

    .start::slotted(*),
    .end::slotted(*) {
      overflow: hidden;
    }

    [part='divider'] {
      all: unset;
      height: var(--divider-height);
      width: 100%;
      background-color: var(--gno-border);
      cursor: row-resize;
      display: flex;
      align-items: stretch;
      justify-content: stretch;
      outline: none;
      z-index: 1;
    }

    [hidden] {
      display: none;
    }
  `,KL([pg({type:Number})],zL.prototype,"min",2),KL([pg({type:Number})],zL.prototype,"max",2),KL([pg({type:Number})],zL.prototype,"defaultSize",2),KL([pg()],zL.prototype,"orientation",2),KL([pg({reflect:!0,type:Number})],zL.prototype,"size",2),KL([pg({type:Boolean})],zL.prototype,"disabled",2),KL([Sg()],zL.prototype,"offset",2),KL([Sg()],zL.prototype,"dragging",2),KL([ug(".splitter")],zL.prototype,"containerEl",2),KL([ug(".divider")],zL.prototype,"dividerEl",2),zL=KL([Bg("gno-panel-splitter")],zL);var DL=Object.defineProperty,vL=Object.getOwnPropertyDescriptor,xL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?vL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&DL(e,I,i),i};let OL=class extends Rg{constructor(){super(...arguments),this.showCopy=!1,this.showRun=!1,this.showTest=!1,this.isRunning=!1}handleRun(){this.dispatchEvent(new CustomEvent("run")),this.context.gnorun()}handleTest(){this.dispatchEvent(new CustomEvent("test")),this.context.gnotest()}handleCopy(){this.dispatchEvent(new CustomEvent("copy")),GL(this.context.getFile(this.context.path))}render(){return eg`
      ${bL(this.showCopy,(()=>eg`<button title="Copy" part="action copy" class="action-btn" @click=${this.handleCopy}>
            ${TL("copy")}
          </button>`))}
      ${bL(this.showRun,(()=>eg`<button part="action run" class="action-btn" @click=${this.handleRun}>
            ${null!=this&&this.isRunning?"Working":eg`<span>${TL("run")}</span> Run`}
          </button>`))}
      ${bL(this.showTest,(()=>eg`<button part="action test" class="action-btn" @click=${this.handleTest}>
            <span>${TL("check")}</span> Test
          </button>`))}
    `}firstUpdated(){this.disposer=bf((()=>this.context.workerCtrl.isBusy),(g=>this.isRunning=!!g))}disconnectedCallback(){this.disposer()}};OL.styles=h`
    :host {
      display: flex;
      align-items: stretch;
    }

    .action-btn {
      appearance: none;
      display: flex;
      align-items: center;
      gap: 0.25rem;
      color: inherit;
      cursor: pointer;
      border: none;
      border-left: 1px solid var(--gno-border);
      color: var(--gno-foreground);
      background-color: var(--gno-secondary);
      color: var(--gno-secondary-foreground);
      height: 100%;
      padding-inline: 0.6rem;
    }

    .action-btn:hover {
      background-color: var(--gno-accent);
      color: var(--gno-accent-foreground);
    }

    .action-btn svg {
      font-size: 0.875rem;
      vertical-align: top;
    }
  `,xL([d({context:sL,subscribe:!0})],OL.prototype,"context",2),xL([pg({type:Boolean,attribute:"show-copy"})],OL.prototype,"showCopy",2),xL([pg({type:Boolean,attribute:"show-run"})],OL.prototype,"showRun",2),xL([pg({type:Boolean,attribute:"show-test"})],OL.prototype,"showTest",2),xL([pg({type:Boolean,attribute:"is-running"})],OL.prototype,"isRunning",2),OL=xL([Bg("gno-quick-actions")],OL);var fL=Object.defineProperty,jL=Object.getOwnPropertyDescriptor,LL=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?jL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&fL(e,I,i),i};let PL=class extends Rg{handleTabClick(g){const e=g.target.dataset.value;this.dispatchEvent(new CustomEvent("change",{detail:{path:e}})),this.context.setPath(e),this.requestUpdate()}render(){return eg`<div id="file-tabs" class="file-tabs" role="tablist" aria-orientation="horizontal">
      ${this.context.tabs.map((g=>eg`<button
            part=${this.context.path===g?"tab active":"tab"}
            role="tab"
            type="button"
            data-value=${g}
            aria-selected=${this.context.path===g}
            @click=${this.handleTabClick}
          >
            ${g}
          </button>`))}
    </div>`}};PL.styles=h`
    .file-tabs {
      display: flex;
    }

    .file-tabs [role='tab'] {
      border: none;
      border-inline: 1px solid var(--gno-border);
      font-size: 0.875rem;
      padding: 0.4rem 0.875rem;
      background-color: var(--gno-background);
      color: var(--gno-foreground);
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s ease-in-out;
    }

    .file-tabs [role='tab'][aria-selected='true'] {
      background-color: var(--gno-accent);
      color: var(--gno-accent-foreground);
    }

    .file-tabs [role='tab']:hover {
      background-color: var(--gno-accent);
      color: var(--gno-accent-foreground);
    }

    .file-tabs [role='tab']:focus {
      outline: none;
    }

    .file-tabs [role='tab']:first-child {
      border-left: none;
    }

    .file-tabs [role='tab'] + [role='tab'] {
      border-left: none;
    }
  `,LL([d({context:sL,subscribe:!0})],PL.prototype,"context",2),PL=LL([Bg("gno-tab-bar")],PL);var _L=Object.defineProperty,qL=Object.getOwnPropertyDescriptor,$L=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?qL(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&_L(e,I,i),i};let gP=class extends Rg{render(){return eg`<slot></slot>`}};gP.styles=h`
    :host {
      display: flex;
      justify-content: space-between;
      border-bottom: 1px solid var(--gno-border);
    }
  `,gP=$L([Bg("gno-toolbar")],gP);var eP=Object.defineProperty,IP=(g,e,I,t)=>{for(var C,i=void 0,l=g.length-1;l>=0;l--)(C=g[l])&&(i=C(e,I,i)||i);return i&&eP(e,I,i),i};const tP=class extends Rg{render(){return bL(this.context.workerCtrl.vmVersion,(()=>eg`<span class="vm-version">GnoVM ${this.context.workerCtrl.vmVersion}</span>`))}firstUpdated(){this.disposer=bf((()=>this.context.workerCtrl.vmVersion),(()=>{this.requestUpdate()}))}disconnectedCallback(){this.disposer()}};tP.styles=h`
    .vm-version {
      font-size: 12px;
      color: var(--gno-color-text-secondary);
    }
  `;let CP=tP;IP([d({context:sL,subscribe:!0})],CP.prototype,"context");var iP=Object.defineProperty,lP=Object.getOwnPropertyDescriptor,nP=(g,e,I,t)=>{for(var C,i=t>1?void 0:t?lP(e,I):e,l=g.length-1;l>=0;l--)(C=g[l])&&(i=(t?C(e,I,i):C(i))||i);return t&&i&&iP(e,I,i),i};let AP=class extends Rg{constructor(){super(),this.dependencies={"gno-floating-menu":YL,"gno-open-in-play":HL,"gno-panel-splitter":zL,"gno-tab-bar":PL,"gno-toolbar":gP,"gno-vm-version":CP},this.fixedLayout=!1,this.playgroundUrl="https://play.gno.land",this.theme="system",this.runExpression="main()",this.terminalPort=null,Object.entries(this.dependencies).forEach((([g,e])=>{customElements.get(g)||customElements.define(g,e)}))}handlePanelResize(){var g;null==(g=this.terminal)||g.fit()}handlePortChanged(g){this.terminalPort=g.detail}hasTestFiles(){const g=lL(this.files??{});return Object.keys(g).some((g=>g.endsWith("_test.gno")))}hasPackageDeclaration(){const g=lL(this.files??{});return Object.values(g).some((g=>/package\s+\w+/.test(g.content)))}renderTerminal(){return bL(this.terminalPort,(()=>eg`<gno-terminal slot="end" part="terminal" .port=${this.terminalPort}></gno-terminal>`))}render(){const g=this.hasTestFiles(),e=this.hasPackageDeclaration();return eg`
      <gno-playground-provider
        .files=${this.files}
        .path=${this.path}
        .playground-url=${this.playgroundUrl}
        .worker=${this.worker}
        theme=${this.theme}
        @port-changed=${this.handlePortChanged}
      >
        <div id="playground" part="root" data-fixed-layout=${this.fixedLayout}>
          ${bL(e,(()=>eg` <gno-toolbar part="toolbar">
                <gno-tab-bar part="tab-bar"></gno-tab-bar>

                <slot name="toolbar-actions"></slot>
              </gno-toolbar>`))}

          <gno-panel-splitter part="panel-splitter" ?disabled=${!this.fixedLayout} @resize=${this.handlePanelResize}>
            <div class="editor-container" style="position: relative;">
              <gno-code-editor part="editor" ?line-numbers=${SL(e)}></gno-code-editor>

              <slot name="editor-actions">
                <gno-floating-menu ?show-test=${g} ?show-run=${e}></gno-floating-menu>
              </slot>
            </div>

            ${this.renderTerminal()}
          </gno-panel-splitter>

          ${bL(e,(()=>eg`
              <footer part="footer">
                <slot name="open-in-playground">
                  <gno-open-in-play></gno-open-in-play>
                </slot>

                <gno-vm-version></gno-vm-version>
              </footer>
            `))}
        </div>
      </gno-playground-provider>
    `}};AP.styles=[h`
      :host {
        display: block;
        height: 100%;
        width: 100%;
        position: relative;
      }

      [part='root'] {
        background-color: var(--gno-background);
        border-radius: var(--gno-radius);
        overflow: hidden;
        border: 1px solid var(--gno-border);
      }

      [part='terminal']::part(xterm) {
        border-top: 1px solid var(--gno-border);
      }

      [part='footer'] {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.2rem 0.4rem;
        border-top: 1px solid var(--gno-border);
        background-color: var(--gno-muted);
        color: var(--gno-muted-foreground);
      }

      [data-fixed-layout='true'] [part='panel-splitter']::part(root) {
        height: var(--gno-content-height, 260px);
      }

      [data-fixed-layout='false'] [part='terminal']::part(xterm) {
        height: var(--gno-terminal-height, 200px);
      }
    `],nP([pg()],AP.prototype,"worker",2),nP([pg({type:Object,converter:nL})],AP.prototype,"files",2),nP([pg({type:String})],AP.prototype,"path",2),nP([pg({type:Boolean,attribute:"fixed-layout"})],AP.prototype,"fixedLayout",2),nP([pg({type:String})],AP.prototype,"playgroundUrl",2),nP([pg({type:String})],AP.prototype,"theme",2),nP([pg({type:String})],AP.prototype,"runExpression",2),nP([pg({type:Object})],AP.prototype,"terminalPort",2),nP([ug("gno-terminal")],AP.prototype,"terminal",2),AP=nP([Bg("gno-embed-playground")],AP);export{FL as GnoCodeEditor,AP as GnoEmbedPlayground,hL as GnoPlaygroundProvider,pL as GnoTerminal,oL as PlaygroundContext,sL as playgroundContext};